[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://https://github.com/AY2223S2-CS2103T-W10-4/tp/actions/)","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-W10-4/tp/branch/master/graph/badge.svg?token\u003dQRARKR82W7)](https://codecov.io/gh/AY2223S2-CS2103T-W10-4/tp)","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"# tutee managing system (TMS)","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"Tutee managing system (TMS) is a **desktop application designed for private tutors managing students, optimized for","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"TMS utilizes your fast typing ability to execute your management tasks faster than traditional GUI apps.","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"## Target User","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"- Has a need to manage a significant number of tutees","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"- Prefer desktop apps over other types","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"- Can type fast","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"- Prefers typing to mouse interactions","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"- Is reasonably comfortable using CLI apps","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"## Value Proposition","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"Manage tutees faster than a typical mouse/GUI driven app.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"## Acknowledgements:","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"jugsliao":21,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"leeyi45":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"### TRUONG MINH DUONG","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"\u003cimg src\u003d\"images/zhongli5712.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"[[github](https://github.com/Zhongli5712)]","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"[[portfolio](team/zhongli5712.md)]","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"* Role: Developer","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"* Responsibilities: new courses","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"### LEE YI","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"\u003cimg src\u003d\"images/leeyi45.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"[[github](https://github.com/leeyi45)]","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"[[portfolio](team/leeyi45.md)]","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"* Responsibilities: display and storage","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"### LIAO ZE LI, JACQUES","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Zhongli5712"},"content":"\u003cimg src\u003d\"images/jugsliao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"[[github](https://github.com/jugsliao)]","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"[[portfolio](team/jugsliao.md)]","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"* Responsibilities: add tutors","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Zhongli5712"},"content":"### JETHRO SIM SHENG YANG","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Zhongli5712"},"content":"\u003cimg src\u003d\"images/gekhro.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Zhongli5712"},"content":"[[github](https://github.com/gekhro)]","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Zhongli5712"},"content":"[[portfolio](team/gekhro.md)]","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Zhongli5712"},"content":"* Responsibilities: add students","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Zhongli5712":21,"-":29}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"jugsliao"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a tutee).","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"leeyi45"},"content":"### Field Validation","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"leeyi45"},"content":"Each `Tutee` has various fields (i.e. name, phone...). Validation from user input is done at the `Parser` level, but","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"leeyi45"},"content":"when loading from a JSON file field validation is performed differently.\\","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"leeyi45"},"content":"The automatic validation of a tutee field requires the following three elements to be defined,","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"leeyi45"},"content":"an example implementation of a tutee field is shown below:","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"leeyi45"},"content":"```java","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"leeyi45"},"content":"public class Phone {","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"leeyi45"},"content":"   // Need at least one constructor with this signature","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"leeyi45"},"content":"   public Phone(String value) {","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"leeyi45"},"content":"      // ...","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"leeyi45"},"content":"   }","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"leeyi45"},"content":"   // Message to display to the user if the stored JSON data is invalid for the given field","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"jugsliao"},"content":"   public static final String MESSAGE_CONSTRAINT \u003d \"Invalid phone number!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"leeyi45"},"content":"   // Validation method that will return true if the value is valid for the field, false otherwise","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"leeyi45"},"content":"   // If your field is named differently this method is named differently too, e.g. isValidRemark","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"leeyi45"},"content":"   public static boolean isValidPhone(String value) {","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"leeyi45"},"content":"      // ... details","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"leeyi45"},"content":"   }","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"leeyi45"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"leeyi45"},"content":"This automatic validation relies on Java reflection and will raise `RuntimeExceptions` if the automatic validation fails","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"leeyi45"},"content":"for reasons other than the user input being invalid. The process is as follows:","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"leeyi45"},"content":"1. The JSON file is read","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"leeyi45"},"content":"1. The `isValid` method is called with the given input","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"leeyi45"},"content":"1. If `isValid` returns false, the `MESSAGE_CONSTRAINT` is displayed to the user","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"leeyi45"},"content":"1. Otherwise, the input is passed to the constructor to create an instance of the field","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"leeyi45"},"content":"### Attendance Management","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"leeyi45"},"content":"#### The Attendance Field","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"leeyi45"},"content":"The `Attendance` field uses a hashset internally to store all the dates on which the tutee was present. The field is designed to be","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"leeyi45"},"content":"immutable, which means updating a tutee\u0027s absence or presence will create a new attendance field instance.","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"leeyi45"},"content":"#### Mark and Unmark Command","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"leeyi45"},"content":"The mark and unmark commands are implemented similarly: both follow the format of `\u003cmark|unmark\u003e \u003cindex\u003e [date]`. The","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"leeyi45"},"content":"user\u0027s input is parsed by its respective parser (`MarkCommandParser` and `UnmarkCommandParser`) and then those arguments","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"leeyi45"},"content":"are passed to the command.\\","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"leeyi45"},"content":"If the user does not specify a date, then the command will use the default value as returned by `LocalDate.now()`.\\","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"leeyi45"},"content":"If the command executes successfully, the specified tutee\u0027s `attendance` field will be updated accordingly. `mark` will add that","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"leeyi45"},"content":"date to the attendance field, thereby marking them as present on that date. Unmark will remove it, thereby marking them as absent on that date.\\","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"leeyi45"},"content":"If tutee has already been marked present or absent on the specified date, the commands will have no effect.","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"leeyi45"},"content":"#### Query Command","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"leeyi45"},"content":"The date is represented as an `Optional\u003cLocalDate\u003e`. When the command is executed, if this optional is empty, then the command will return all the dates in which the tutee was present. Otherwise, the command will return whether the tutee was present by calling the","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"leeyi45"},"content":"`didAttend()` method on the attendance field.","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Zhongli5712"},"content":"### Learn\\Unlearn feature","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"Zhongli5712"},"content":"The learn\\unlearn mechanism is storing the `lessons` in a `Set`, adding\\removing a `lesson` is editing this `Set`. It implements the following classes and operations:","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"Zhongli5712"},"content":"* `Lesson`  —  Representing lesson fields, containting a `Set` of lessons .","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"Zhongli5712"},"content":"* `Lesson#learn()`  —  Adds the new lesson to the Set.","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"Zhongli5712"},"content":"* `Lesson#unlearn()` —  Removes a lesson from the Set.","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"Zhongli5712"},"content":"* `LearnCommand`  —  Adds new lesson to the Index specified Tutee.","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"Zhongli5712"},"content":"* `UnlearnCommand`  —  Removes lesson from the Index specified Tutee.","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"Zhongli5712"},"content":"[//]: # (The following sequence diagram shows how the undo operation works:)","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"Zhongli5712"},"content":"[//]: # ()","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"Zhongli5712"},"content":"[//]: # (![UndoSequenceDiagram]\u0026#40;images/UndoSequenceDiagram.png\u0026#41;)","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"Zhongli5712"},"content":"[//]: # ()","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"Zhongli5712"},"content":"[//]: # (\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker \u0026#40;X\u0026#41; but due to a limitation of PlantUML, the lifeline reaches the end of diagram.)","lastModifiedDate":"2023-03-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"Zhongli5712"},"content":"[//]: # ()","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"Zhongli5712"},"content":"[//]: # (\u003c/div\u003e)","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"Zhongli5712"},"content":"[//]: # ()","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"Zhongli5712"},"content":"[//]: # (The following activity diagram summarizes what happens when a user executes a new command:)","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"Zhongli5712"},"content":"[//]: # ()","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"Zhongli5712"},"content":"[//]: # (\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e)","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"Zhongli5712"},"content":"**Aspect: How learn \u0026 unlearn executes:**","lastModifiedDate":"2023-03-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"Zhongli5712"},"content":"* **Alternative 1 (current choice):** add/remove lesson to the `Set`.","lastModifiedDate":"2023-03-24"},{"lineNumber":239,"author":{"gitId":"Zhongli5712"},"content":"  * Pros: Easy to implement, don\u0027t allow duplicates.","lastModifiedDate":"2023-03-24"},{"lineNumber":240,"author":{"gitId":"Zhongli5712"},"content":"  * Cons: Does not show the learning order.","lastModifiedDate":"2023-03-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"Zhongli5712"},"content":"* **Alternative 2:** Combine Attendance and Learning.","lastModifiedDate":"2023-03-24"},{"lineNumber":243,"author":{"gitId":"Zhongli5712"},"content":"  * Pros: Easier for user to keep track of time and lesson.","lastModifiedDate":"2023-03-24"},{"lineNumber":244,"author":{"gitId":"Zhongli5712"},"content":"  * Cons: Harder to implement.","lastModifiedDate":"2023-03-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"jugsliao"},"content":"### Filter feature","lastModifiedDate":"2023-03-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":255,"author":{"gitId":"jugsliao"},"content":"#### Filter Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"jugsliao"},"content":"The logic of the filter implementation is found in `FilterCommand` class. The constructor of `FilterCommand` takes in ","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"jugsliao"},"content":"a `FilterTuteeDescription` object and creates a `FieldContainsKeywordPredicate` based on the variables that are set in ","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"jugsliao"},"content":"`FilterTuteeDescription`.  ","lastModifiedDate":"2023-03-30"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":261,"author":{"gitId":"jugsliao"},"content":"`FilterTuteeDescription` encapsulates the fields of a tutee that the user wants to filter. ","lastModifiedDate":"2023-03-30"},{"lineNumber":262,"author":{"gitId":"jugsliao"},"content":"The class contains all the fields of a tutee including: `name`, `phone`, `email`, `address`, `subject`, `schedule`, `start time`, `end time`, `tag`of a tutee. ","lastModifiedDate":"2023-03-30"},{"lineNumber":263,"author":{"gitId":"jugsliao"},"content":"By default, `name`, `address`, `tags` are empty lists while the rest of the fields are empty strings. ","lastModifiedDate":"2023-03-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":265,"author":{"gitId":"jugsliao"},"content":"`FilterCommandParser` will set the appropriate fields in `FilterTuteeDescription` for the","lastModifiedDate":"2023-03-30"},{"lineNumber":266,"author":{"gitId":"jugsliao"},"content":"fields that are to be filtered in.  Once `FilterTuteeDescription` has its fields set (e.g. nameToFilter \u003d \"alex\"), ","lastModifiedDate":"2023-03-30"},{"lineNumber":267,"author":{"gitId":"jugsliao"},"content":"`FieldContainsKeywordPredicate` will take in all the variables in `FilterTuteeDescription` and return a `FieldContainsKeywordPredicate` object.","lastModifiedDate":"2023-03-30"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":269,"author":{"gitId":"jugsliao"},"content":"`FieldContainsKeywordPredicate` implements `Predicate` and it overrides the `test` method. It returns true if the ","lastModifiedDate":"2023-03-29"},{"lineNumber":270,"author":{"gitId":"jugsliao"},"content":"given field is empty (default) or when the tutee has the field equal to the field provided by the user when using the filter","lastModifiedDate":"2023-03-24"},{"lineNumber":271,"author":{"gitId":"jugsliao"},"content":"command. ","lastModifiedDate":"2023-03-24"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":273,"author":{"gitId":"jugsliao"},"content":"Finally, `FilterCommand` will execute which will call the method `model.updateFilteredTuteeList(predicate)` using the ","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"jugsliao"},"content":"`FieldContainsKeywordPredicate` object as the predicate. The feature will filter and display the tutees which have fields ","lastModifiedDate":"2023-03-24"},{"lineNumber":275,"author":{"gitId":"jugsliao"},"content":"that are equal to what the user has provided. ","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"jugsliao"},"content":"#### Design considerations","lastModifiedDate":"2023-03-30"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":279,"author":{"gitId":"jugsliao"},"content":"#### How filter executes","lastModifiedDate":"2023-03-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":281,"author":{"gitId":"jugsliao"},"content":"- Alternative 1 (current choice): Use prefix to filter what to search for.","lastModifiedDate":"2023-03-30"},{"lineNumber":282,"author":{"gitId":"jugsliao"},"content":"  - Pros: More precise when filtering time (e.g. `filter st/10:30` will only return tutees whose lesson starting time is at","lastModifiedDate":"2023-03-30"},{"lineNumber":283,"author":{"gitId":"jugsliao"},"content":"  10:30)","lastModifiedDate":"2023-03-30"},{"lineNumber":284,"author":{"gitId":"jugsliao"},"content":"  - Cons: Harder to implement.","lastModifiedDate":"2023-03-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":286,"author":{"gitId":"jugsliao"},"content":"- Alternative 2: Extend find feature and filter any field without specifying prefix.","lastModifiedDate":"2023-03-30"},{"lineNumber":287,"author":{"gitId":"jugsliao"},"content":"  - Pros: Easier to implement.","lastModifiedDate":"2023-03-30"},{"lineNumber":288,"author":{"gitId":"jugsliao"},"content":"  - Cons: Could cause confusion when filtering time (e.g. `filter 10:30` will return all tutees whose lesson start time and","lastModifiedDate":"2023-03-30"},{"lineNumber":289,"author":{"gitId":"jugsliao"},"content":"  end time are at 10:30)","lastModifiedDate":"2023-03-30"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":291,"author":{"gitId":"gekhro"},"content":"### Copy feature","lastModifiedDate":"2023-03-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"gekhro"},"content":"#### Copy Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":294,"author":{"gitId":"gekhro"},"content":"The copy feature is facilitated by `CopyCommand`. It extends `Command`. The constructor of `CopyCommand` takes in","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"gekhro"},"content":"an `index and an EditPersonDescripter` object and creates a `tutee` based on the variables that are set in","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"gekhro"},"content":"`EditPersonDescripter`. The `CopyCommand` class makes use of the `EditPersonDescripter`in the `EditCommand` class which contains all the fields of a tutee including:","lastModifiedDate":"2023-03-24"},{"lineNumber":297,"author":{"gitId":"gekhro"},"content":"`subject`, `schedule`, `start time`, `end time` of a tutee.","lastModifiedDate":"2023-03-24"},{"lineNumber":298,"author":{"gitId":"gekhro"},"content":"All of the fields are required to be filled in order for the command to make a copy of a tutee with a different lesson and schedule.","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":300,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"Zhongli5712"},"content":"* has a need to manage a significant number of tutees","lastModifiedDate":"2023-03-13"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":322,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"Zhongli5712"},"content":"**Value proposition**: manage tutees faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-03-13"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                            | So that I can…​                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"Zhongli5712"},"content":"|----------|--------------------------------------------|-----------------------------------------|---------------------------------------------------------|","lastModifiedDate":"2023-03-13"},{"lineNumber":333,"author":{"gitId":"Zhongli5712"},"content":"| `* * *`  | tutor user managing students               | add students                            | add students that I am tutoring                         |","lastModifiedDate":"2023-03-13"},{"lineNumber":334,"author":{"gitId":"Zhongli5712"},"content":"| `* * *`  | tutor user  managing students              | delete students                         | remove students that I no longer tutor                  |","lastModifiedDate":"2023-03-13"},{"lineNumber":335,"author":{"gitId":"Zhongli5712"},"content":"| `* * *`  | tutor user managing students               | list students                           | display all students that are tutored by me             |","lastModifiedDate":"2023-03-13"},{"lineNumber":336,"author":{"gitId":"Zhongli5712"},"content":"| `* * *`  | user                                       | save my work locally                    | come back to view or edit it in the future              |","lastModifiedDate":"2023-03-13"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"Zhongli5712"},"content":"(For all use cases below, the **System** is the `TMS` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-13"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"Zhongli5712"},"content":"**Use case: Add a student**","lastModifiedDate":"2023-03-13"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"Zhongli5712"},"content":"**MSS:**","lastModifiedDate":"2023-03-13"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"Zhongli5712"},"content":"1. User is prompted to enter student’s details.","lastModifiedDate":"2023-03-13"},{"lineNumber":349,"author":{"gitId":"Zhongli5712"},"content":"2. Student is added to the list of students.","lastModifiedDate":"2023-03-13"},{"lineNumber":350,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"Zhongli5712"},"content":"**Use case: Delete a student**","lastModifiedDate":"2023-03-13"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"Zhongli5712"},"content":"**MSS:**","lastModifiedDate":"2023-03-13"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"Zhongli5712"},"content":"1. User requests to list students.","lastModifiedDate":"2023-03-13"},{"lineNumber":357,"author":{"gitId":"Zhongli5712"},"content":"2. System shows a list of students.","lastModifiedDate":"2023-03-13"},{"lineNumber":358,"author":{"gitId":"Zhongli5712"},"content":"3. User requests to edit a specific student in the list.","lastModifiedDate":"2023-03-13"},{"lineNumber":359,"author":{"gitId":"Zhongli5712"},"content":"4. System prompts the user to choose an attribute to edit.","lastModifiedDate":"2023-03-13"},{"lineNumber":360,"author":{"gitId":"Zhongli5712"},"content":"5. User chooses an attribute to edit and inputs new information about the student.","lastModifiedDate":"2023-03-13"},{"lineNumber":361,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"Zhongli5712"},"content":"**Extensions:**","lastModifiedDate":"2023-03-13"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":365,"author":{"gitId":"Zhongli5712"},"content":"Extensions:","lastModifiedDate":"2023-03-13"},{"lineNumber":366,"author":{"gitId":"Zhongli5712"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-13"},{"lineNumber":367,"author":{"gitId":"Zhongli5712"},"content":"  Use case ends.","lastModifiedDate":"2023-03-13"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"Zhongli5712"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2023-03-13"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"Zhongli5712"},"content":"1. Should be standalone on Windows, Linux, and OS-X platforms, requiring only Java \u002711\u0027 or above to be installed.","lastModifiedDate":"2023-03-13"},{"lineNumber":379,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"Zhongli5712"},"content":"4. Should be usable without an installer.","lastModifiedDate":"2023-03-13"},{"lineNumber":382,"author":{"gitId":"Zhongli5712"},"content":"5. GUI Should work well (i.e., should not cause any resolution-related inconveniences to the user) for","lastModifiedDate":"2023-03-13"},{"lineNumber":383,"author":{"gitId":"Zhongli5712"},"content":"   1. standard screen resolutions 1920x1080 and higher, and,","lastModifiedDate":"2023-03-13"},{"lineNumber":384,"author":{"gitId":"Zhongli5712"},"content":"   2. for screen scales 100% and 125%.","lastModifiedDate":"2023-03-13"},{"lineNumber":385,"author":{"gitId":"Zhongli5712"},"content":"6. GUI should be usable (i.e., all functions can be used even if the user experience is not optimal) for","lastModifiedDate":"2023-03-13"},{"lineNumber":386,"author":{"gitId":"Zhongli5712"},"content":"   1. resolutions 1280x720 and higher, and,","lastModifiedDate":"2023-03-13"},{"lineNumber":387,"author":{"gitId":"Zhongli5712"},"content":"   2. for screen scales 150%.","lastModifiedDate":"2023-03-13"},{"lineNumber":388,"author":{"gitId":"Zhongli5712"},"content":"7. The application should be packed into a JAR file or include jar file and other files into one zip file.","lastModifiedDate":"2023-03-13"},{"lineNumber":389,"author":{"gitId":"Zhongli5712"},"content":"8. The product size should not exceed 100MB.","lastModifiedDate":"2023-03-13"},{"lineNumber":390,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"Zhongli5712"},"content":"* **TMS**: Tutee managing system.","lastModifiedDate":"2023-03-13"},{"lineNumber":397,"author":{"gitId":"Zhongli5712"},"content":"* **CLI**: command line interface.","lastModifiedDate":"2023-03-13"},{"lineNumber":398,"author":{"gitId":"Zhongli5712"},"content":"* **GUI**: graphical user interface.","lastModifiedDate":"2023-03-13"},{"lineNumber":399,"author":{"gitId":"Zhongli5712"},"content":"* **JAR**: Java ARchive.","lastModifiedDate":"2023-03-13"},{"lineNumber":400,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"jugsliao"},"content":"### Deleting a tutee","lastModifiedDate":"2023-03-14"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"jugsliao"},"content":"1. Deleting a tutee while all tutees are being shown","lastModifiedDate":"2023-03-14"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"jugsliao"},"content":"   1. Prerequisites: List all tutees using the `list` command. Multiple tutees in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"jugsliao"},"content":"      Expected: No tutee is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-14"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jugsliao":33,"Zhongli5712":65,"gekhro":7,"-":303,"leeyi45":45}},{"path":"docs/UserGuide(old).md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"---","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"layout: page","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"title: User Guide","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"---","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"Tuition center admin managing system (TCAMS) is a **desktop application designed for admins working at tuition center managing courses, tutors and students, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). TCAMS utilizes your fast typing ability to execute your management tasks faster than traditional GUI apps.","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"* Table of Contents","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"{:toc}","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"## Quick start","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"1. Download the latest `addressbook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"## Features","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"gekhro"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"gekhro"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"gekhro"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"gekhro"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"gekhro"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"gekhro"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"gekhro"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"gekhro"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"gekhro"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"gekhro"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"gekhro"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"gekhro"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"gekhro"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"gekhro"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"gekhro"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"gekhro"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"gekhro"},"content":"Format: `help`","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"### Adding a tutee: `add`","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"Adds a tutee to the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"gekhro"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"gekhro"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"jugsliao"},"content":"A tutee can have any number of tags (including 0)","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"gekhro"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"gekhro"},"content":"Examples:","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"gekhro"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"gekhro"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"jugsliao"},"content":"### Listing all tutees : `list`","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"jugsliao"},"content":"Shows a list of all tutees in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"gekhro"},"content":"Format: `list`","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"jugsliao"},"content":"### Editing a tutee : `edit`","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"jugsliao"},"content":"Edits an existing tutee in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"gekhro"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"jugsliao"},"content":"* Edits the tutee at the specified `INDEX`. The index refers to the index number shown in the displayed tutee list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"gekhro"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"gekhro"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"jugsliao"},"content":"* When editing tags, the existing tags of the tutee will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"jugsliao"},"content":"* You can remove all the tutee’s tags by typing `t/` without","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"gekhro"},"content":"    specifying any tags after it.","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"gekhro"},"content":"Examples:","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"jugsliao"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st tutee to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"jugsliao"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd tutee to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"jugsliao"},"content":"### Locating tutees by name: `find`","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"jugsliao"},"content":"Finds tutees whose names contain any of the given keywords.","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"gekhro"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"gekhro"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"gekhro"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"gekhro"},"content":"* Only the name is searched.","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"gekhro"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"gekhro"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"gekhro"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"gekhro"},"content":"Examples:","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"gekhro"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"gekhro"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"gekhro"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"jugsliao"},"content":"### Deleting a tutee : `delete`","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"jugsliao"},"content":"Deletes the specified tutee from the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"gekhro"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"jugsliao"},"content":"* Deletes the tutee at the specified `INDEX`.","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"jugsliao"},"content":"* The index refers to the index number shown in the displayed tutee list.","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"gekhro"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"gekhro"},"content":"Examples:","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"jugsliao"},"content":"* `list` followed by `delete 2` deletes the 2nd tutee in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"jugsliao"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st tutee in the results of the `find` command.","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"gekhro"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"gekhro"},"content":"Clears all entries from the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"gekhro"},"content":"Format: `clear`","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"gekhro"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"gekhro"},"content":"Exits the program.","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"gekhro"},"content":"Format: `exit`","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"gekhro"},"content":"### Saving the data","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"gekhro"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"gekhro"},"content":"### Editing the data file","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"gekhro"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"gekhro"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"gekhro"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"gekhro"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"gekhro"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"gekhro"},"content":"_Details coming soon ..._","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"gekhro"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"gekhro"},"content":"## FAQ","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"gekhro"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":179,"author":{"gitId":"gekhro"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"gekhro"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"gekhro"},"content":"## Command summary","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"gekhro"},"content":"Action | Format, Examples","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"gekhro"},"content":"--------|------------------","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"gekhro"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"gekhro"},"content":"**Clear** | `clear`","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"gekhro"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"gekhro"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"gekhro"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"gekhro"},"content":"**List** | `list`","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"gekhro"},"content":"**Help** | `help`","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"jugsliao":20,"gekhro":173}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"## [TABLE OF CONTENTS](#table-of-content)","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"* [Introduction](#introduction)","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"* [Quick start](#quickstart)","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"* [Features](#features)","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"    1. [Viewing help](#help)","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"    2. [Add student](#add)","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"    3. [Delete student](#delete)","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"    4. [List student](#list)","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"    5. [Filter student](#filter)","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"    6. [Add a lesson](#learn)","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"    7. [Remove a lesson](#unlearn)","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"    8. [Local save](#save)","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"    9. [Local load](#load)","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"    10. [Exit program](#exit)","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"* [FAQ](#faq)","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"* [Command summary](#command-summary)","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"## INTRODUCTION \u003ca name\u003d\"introduction\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"It is hard for private tutor such as yourself to keep track of the students\u0027 information and their progress. Tutee managing system (TMS) is a **desktop application designed for private tutors managing students, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). TMS utilizes your fast typing ability to execute your management tasks faster than traditional GUI apps.","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"## Quick start \u003ca name\u003d\"quickstart\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"1. Download the latest `TMS.jar` from [here](https://github.com/AY2223S2-CS2103T-W10-4/tp/releases).","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Tutee Managing System.","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar TMS.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"   A UI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"   * `list` : Lists all students.","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 s/Math sch/monday st/09:30 et/11:30` : Adds a student named `John Doe` to the Managing system.","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"   * `delete 3` : Deletes the 3rd student shown in the current list.","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"gekhro"},"content":"   * `clear` : Deletes all students.","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"gekhro"},"content":"## FEATURES \u003ca name\u003d\"features\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"gekhro"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"Zhongli5712"},"content":"### Viewing help \u003ca name\u003d\"help\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"Zhongli5712"},"content":"### Adding student \u003ca name\u003d\"add\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"Zhongli5712"},"content":"Adds a student to the managing system.","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"jugsliao"},"content":"Format: ```add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS s/SUBJECT sch/SCHEDULE st/START TIME et/END TIME```","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Zhongli5712"},"content":"Subject supported: {`Math`, `Physics`, `English`}","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"Zhongli5712"},"content":"Schedule supported: {`monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`, `sunday`}","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"gekhro"},"content":"Examples:","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"jugsliao"},"content":"* ```add n/John Doe p/98765432 e/johnd@example.com a/block 224 s/Math sch/monday st/09:30 et/11:30```","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Zhongli5712"},"content":"### Deleting student \u003ca name\u003d\"delete\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"Zhongli5712"},"content":"Removes a student from the managing system.","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"Zhongli5712"},"content":"Format: ```delete INDEX```","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"Zhongli5712"},"content":"* ```delete 1```","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"Zhongli5712"},"content":"### Listing students \u003ca name\u003d\"list\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"Zhongli5712"},"content":"Lists students in the managing system.","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"Zhongli5712"},"content":"Format: ```list```","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"gekhro"},"content":"Examples:","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"Zhongli5712"},"content":"* ```list``` ","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":130,"author":{"gitId":"Zhongli5712"},"content":"### Editing a student : `edit`","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2023-03-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-03-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-03-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2023-03-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2023-03-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"Zhongli5712"},"content":"### Locating students by name: `find`","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2023-03-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":165,"author":{"gitId":"Zhongli5712"},"content":"### Filtering students by any fields \u003ca name\u003d\u0027filter\u0027\u003e\u003c/a\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"jugsliao"},"content":"Filter and list students whose fields contain any of the given keywords.","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"jugsliao"},"content":"Format: ```filter [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [s/SUBJECT] [sch/SCHEDULE] [st/START TIME] [et/END TIME] [t/TAG]```","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"jugsliao"},"content":"- Filter is case-insensitive. e.g `n/yeoh` will match `Yeoh`","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"jugsliao"},"content":"- Only `NAME`, `ADDRESS`, `TAG` can include more than 1 word.","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"jugsliao"},"content":"- At least one of the fields must be provided.","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"jugsliao"},"content":"- The order of the keywords does not matter. e.g. `n/Yeoh Alex` will match `Alex Yeoh`","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"jugsliao"},"content":"- All fields can be searched and filtered.","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"jugsliao"},"content":"- Only full words will be matched e.g. `n/Yeo` will not match `Yeoh`","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"jugsliao"},"content":"- When only one field is specified, tutees matching at least one keyword will be returned(i.e. `OR` search). e.g. `a/blk street` will return `Blk 313`, `street 29`","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"jugsliao"},"content":"- When more than one field is specified, only tutees whose keywords matching all fields provided will be returned","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"jugsliao"},"content":"e.g. `filter s/math sch/monday` will only return tutees whose lessons are on `monday` AND subject `math`","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"jugsliao"},"content":"- `filter sch/tuesday` returns tutees whose lessons are on tuesday.","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"jugsliao"},"content":"- `filter a/clementi s/math` returns tutees whose address are in `clementi` and being tutored `math` subject.","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"jugsliao"},"content":"![img.png](images/filterExampleResult.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"Zhongli5712"},"content":"### Adding a new lesson \u003ca name\u003d\"learn\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":188,"author":{"gitId":"Zhongli5712"},"content":"You can add a lesson taught to a student.","lastModifiedDate":"2023-04-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":190,"author":{"gitId":"Zhongli5712"},"content":"Format: ```learn [INDEX] [l/LESSON]```","lastModifiedDate":"2023-03-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":192,"author":{"gitId":"Zhongli5712"},"content":"Example:","lastModifiedDate":"2023-04-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":194,"author":{"gitId":"Zhongli5712"},"content":"* ```learn 1 l/Rational number```","lastModifiedDate":"2023-03-31"},{"lineNumber":195,"author":{"gitId":"Zhongli5712"},"content":"![learn.png](images/learnExample.PNG)","lastModifiedDate":"2023-03-31"},{"lineNumber":196,"author":{"gitId":"Zhongli5712"},"content":"  * The command adds the lesson `Rational number` to student 1 (Alex Yeoh) and display successful message `Edit Alex Yeoh learn Rational Number`.","lastModifiedDate":"2023-04-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":198,"author":{"gitId":"Zhongli5712"},"content":"### Removing a lesson \u003ca name\u003d\"unlearn\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":200,"author":{"gitId":"Zhongli5712"},"content":"You can remove a lesson taught to a student.","lastModifiedDate":"2023-04-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":202,"author":{"gitId":"Zhongli5712"},"content":"Format: ```unlearn [INDEX] [l/LESSON]```","lastModifiedDate":"2023-03-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":204,"author":{"gitId":"Zhongli5712"},"content":"Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":206,"author":{"gitId":"Zhongli5712"},"content":"* ```unlearn 1 l/Rational number```","lastModifiedDate":"2023-03-31"},{"lineNumber":207,"author":{"gitId":"Zhongli5712"},"content":"  ![unlearn.png](images/unlearnExample.PNG)","lastModifiedDate":"2023-03-31"},{"lineNumber":208,"author":{"gitId":"Zhongli5712"},"content":"  * The command removes the lesson `Rational number` to student 1 (Alex Yeoh) and display successful message `Edit Alex Yeoh have not learned Rational Number`.","lastModifiedDate":"2023-04-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":211,"author":{"gitId":"Zhongli5712"},"content":"### Marking/Unmarking attendance","lastModifiedDate":"2023-04-07"},{"lineNumber":212,"author":{"gitId":"Zhongli5712"},"content":"Use `mark` to indicate that the tutee was present on the given dates, `unmark` to indicate that","lastModifiedDate":"2023-04-07"},{"lineNumber":213,"author":{"gitId":"Zhongli5712"},"content":"they were absent. If a date is not specified, the current date is used.\\","lastModifiedDate":"2023-04-07"},{"lineNumber":214,"author":{"gitId":"Zhongli5712"},"content":"If the tutee was already absent or present, the command will have no effect.","lastModifiedDate":"2023-04-07"},{"lineNumber":215,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":216,"author":{"gitId":"Zhongli5712"},"content":"Format: `mark/unmark \u003cindex\u003e [date...]`","lastModifiedDate":"2023-04-07"},{"lineNumber":217,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":218,"author":{"gitId":"Zhongli5712"},"content":"### Querying attendance","lastModifiedDate":"2023-04-07"},{"lineNumber":219,"author":{"gitId":"Zhongli5712"},"content":"Use this command to check the tutee\u0027s attendance. If no date is given, all of the dates that tutee was present on.\\","lastModifiedDate":"2023-04-07"},{"lineNumber":220,"author":{"gitId":"Zhongli5712"},"content":"Otherwise, the command will return if the tutee was present on the given date.","lastModifiedDate":"2023-04-07"},{"lineNumber":221,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":222,"author":{"gitId":"Zhongli5712"},"content":"Format: `query \u003cindex\u003e [date]`","lastModifiedDate":"2023-04-07"},{"lineNumber":223,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":224,"author":{"gitId":"Zhongli5712"},"content":"### Saving locally \u003ca name\u003d\"save\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"gekhro"},"content":"Saves the current state of the program on the hard disk upon exit.","lastModifiedDate":"2023-03-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"gekhro"},"content":"Done automatically.","lastModifiedDate":"2023-03-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"Zhongli5712"},"content":"### Loading locally \u003ca name\u003d\"load\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"gekhro"},"content":"Loads the saved state of the program (if there is any) on the hard disk.","lastModifiedDate":"2023-03-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"gekhro"},"content":"Creates an empty file if there is none.","lastModifiedDate":"2023-03-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":236,"author":{"gitId":"gekhro"},"content":"Done automatically.","lastModifiedDate":"2023-03-06"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":238,"author":{"gitId":"gekhro"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2023-03-31"},{"lineNumber":239,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":240,"author":{"gitId":"gekhro"},"content":"Clears all entries from the address book.","lastModifiedDate":"2023-03-31"},{"lineNumber":241,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":242,"author":{"gitId":"gekhro"},"content":"Format: `clear`","lastModifiedDate":"2023-03-31"},{"lineNumber":243,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":244,"author":{"gitId":"Zhongli5712"},"content":"### Exiting program \u003ca name\u003d\"exit\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"gekhro"},"content":"Exit the program.","lastModifiedDate":"2023-03-06"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"Zhongli5712"},"content":"Format: ```exit```","lastModifiedDate":"2023-03-13"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2023-04-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":254,"author":{"gitId":"Zhongli5712"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":255,"author":{"gitId":"Zhongli5712"},"content":"**A**: Follow [quick start](#quickstart) on the new computer and overwrite the empty data file it creates with the file that contains the data of your previous data file.","lastModifiedDate":"2023-04-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2023-04-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":261,"author":{"gitId":"Zhongli5712"},"content":"| Action | Format and Examples                 |","lastModifiedDate":"2023-04-07"},{"lineNumber":262,"author":{"gitId":"Zhongli5712"},"content":"|------|-------------------------------------|","lastModifiedDate":"2023-04-07"},{"lineNumber":263,"author":{"gitId":"Zhongli5712"},"content":"| **Add Student** |                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":264,"author":{"gitId":"Zhongli5712"},"content":"| **Delete Student** | `delete INDEX`\u003cbr\u003e e.g., `delete 1` |","lastModifiedDate":"2023-04-07"},{"lineNumber":265,"author":{"gitId":"Zhongli5712"},"content":"| **Clear** | `clear`                             |","lastModifiedDate":"2023-04-07"},{"lineNumber":266,"author":{"gitId":"Zhongli5712"},"content":"| **** |                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":267,"author":{"gitId":"Zhongli5712"},"content":"| **Edit** |                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":268,"author":{"gitId":"Zhongli5712"},"content":"| **Find** |                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":269,"author":{"gitId":"Zhongli5712"},"content":"| **Filter** |                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":270,"author":{"gitId":"Zhongli5712"},"content":"| **List Students** | `list`                              |","lastModifiedDate":"2023-04-07"},{"lineNumber":271,"author":{"gitId":"Zhongli5712"},"content":"| **** |                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":272,"author":{"gitId":"Zhongli5712"},"content":"| **** |                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":273,"author":{"gitId":"Zhongli5712"},"content":"| **** |                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":274,"author":{"gitId":"Zhongli5712"},"content":"| **** |                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":275,"author":{"gitId":"Zhongli5712"},"content":"| **** |                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":276,"author":{"gitId":"Zhongli5712"},"content":"| **** |                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":277,"author":{"gitId":"Zhongli5712"},"content":"| **** |                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":278,"author":{"gitId":"Zhongli5712"},"content":"| **** |                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":279,"author":{"gitId":"Zhongli5712"},"content":"| **Help** | `help`                              |","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"jugsliao":18,"Zhongli5712":81,"gekhro":35,"-":145}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(tuteeManagingSystem)","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jugsliao":1,"-":37}},{"path":"docs/images/FilterSequencyDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"@startuml","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"autonumber","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"Alice -\u003e Bob: Authentication Request","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"Bob --\u003e Alice: Authentication Response","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"Alice -\u003e Bob: Another authentication Request","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"Alice \u003c-- Bob: another authentication Response","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"@enduml","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"jugsliao":11}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"title: Tutee Managing System","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"**Tutee Managing System is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"* If you are interested in using Tutee Managing System, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"gekhro":4,"-":14}},{"path":"docs/team/gekhro.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"---","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"layout: page","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"title: JETHRO SIM SHENG YANG Project Portfolio Page","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"---","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"### Project: tuition center admin managing system (TCAMS)","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"Tuition center admin managing system (TCAMS) is a desktop application designed for admins working at tuition center managing courses, tutors and students, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). TCAMS utilizes your fast typing ability to execute your management tasks faster than traditional GUI apps.","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"\u003c!-- * **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}* --\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"* **New Feature**: add, delete tutor feature (to be added)","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"* **Code contributed**: [link](https://github.com/AY2223S2-CS2103T-W10-4/tp)","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"* **Project management**:","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"  * to be added","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"  * to be added","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"  * Readme.md","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"* **Community**:","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"  * to be added","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Zhongli5712"},"content":"* **Tools**:","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"  * to be added","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Zhongli5712":35}},{"path":"docs/team/jugsliao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"---","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"layout: page","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"title: Jacques Liao Project Portfolio Page","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"---","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"### Project: tuition center admin managing system (TCAMS)","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"Tuition center admin managing system (TCAMS) is a desktop application designed for admins working at tuition center managing courses, tutors and students, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). TCAMS utilizes your fast typing ability to execute your management tasks faster than traditional GUI apps.","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"* **New Feature**: Added the ability to filter fields,","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"  * What it does: allows the user to filter and display tutees by specifying fields and their prefix. (name, phone, email, address, subject, schedule, start time, end time, tags)","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"  * Justification: This feature improves the product significantly because a user is able to quickly locate and display tutees and their relevant information when a certain field is given.","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"  * Highlights: The implementation of `filterCommand` was inspired from `editCommand` as it required users to specify a prefix of the field together with an input. The `fieldContainsKeywordPredicate` was also inspired from the `nameContainsKeywordPredicate` that findCommand uses except that it accepts every field instead of just the name of the tutee.","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"* **Code contributed**: [link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003djugsliao\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"* **Project management**:","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"  * To be added","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"  * Added subject, schedule, start time, end time and remark field to a tutee.","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"  * Modified add, edit and filter command to accept these new fields.","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":" ","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"  * Readme.md","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"  * UserGuide.md","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"    * Added documentation for the `filter` feature.","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"    * Added documentation for the new `subject`, `schedule`, `start time`, `end time` and remark field.","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"  * DeveloperGuide.md","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"    * Added implementation detail of the `filter` feature","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"* **Community**:","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"  * Reported bugs for other teams during PE-Dry run","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"* **Tools**:","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"  * to be added","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"jugsliao":38}},{"path":"docs/team/leeyi45.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"---","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"layout: page","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"title: LEE YI Project Portfolio Page","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"---","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"### Project: tuition center admin managing system (TCAMS)","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"Tuition center admin managing system (TCAMS) is a desktop application designed for admins working at tuition center managing courses, tutors and students, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). TCAMS utilizes your fast typing ability to execute your management tasks faster than traditional GUI apps.","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"\u003c!-- * **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}* --\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"* **New Features**: ","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"  * Added attendance tracking","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"      * Added attendance field to Tutee","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"      * Added attendance commands (mark, unmark, query)","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"* **Code contributed**: [link](https://github.com/leeyi45/tp)","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"* **Project management**:","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"  * to be added","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"  * Made field validation on loading more robust and modular","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"  * Made command parsing more modular","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"  * Several bug fixes","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"  * Updated documentation for the attendance commands (mark, unmark, query)","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"* **Community**:","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"  * to be added","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Zhongli5712"},"content":"* **Tools**:","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"  * to be added","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Zhongli5712":31,"leeyi45":9}},{"path":"docs/team/zhongli5712.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"---","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"layout: page","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"title: Truong Minh Duong Project Portfolio Page","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"---","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"### Project: Tutee managing system (TMS)","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"Tutee managing system (TMS) is a desktop application designed for admins working at tuition center managing courses, tutors and students, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). TMS utilizes your fast typing ability to execute your management tasks faster than traditional GUI apps.","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"* **New Feature**: Added the ability to add/remove new lesson learned.","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"  * What it does: allows the user to add a lesson to one student, and remove one currently exists.","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"  * Justification: This feature improves the product significantly because a user can keeping track of lesson taught easily.","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"  * Highlights: This enhancement create a new field to the tutee.","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"  \u003c!--* Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}* --\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"* **Code contributed**: [link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dzhongli5712\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"* **Project management**:","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"  * Set up milestones, issues.","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"  * Wrap up milestones.","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"  * Change icon and product name of UI.","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"  * Readme.md","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"  * UserGuide.md","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"    * Fixed wording, font size and structure.","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"    * Write clickable table of content.","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"    * Added documentation for the `learn/unlearn` feature.","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"Zhongli5712"},"content":"  * DeveloperGuide.md","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"    * Added implementation detail of the `learn/unlearn` feature.","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"    * Added user stories, glossary, NFRS, use cases.","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"  * AboutUs.md","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Zhongli5712"},"content":"* **Community**:","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"  * Reported bugs for other teams during PE-Dry run","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Zhongli5712"},"content":"* **Tools**:","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Zhongli5712"},"content":"  * to be added","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Zhongli5712":43}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":" * Changes the remark of an existing tutee in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"            + \": Edits the remark of the tutee identified \"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"            + \"by the index number used in the last tutee listing. \"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"jugsliao"},"content":"     * @param index of the tutee in the filtered tutee list to edit the remark","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jugsliao"},"content":"     * @param remark of the tutee to be updated to","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"jugsliao"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of tutee data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the tutee’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a tutee.","lastModifiedDate":"2023-03-14"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"jugsliao"},"content":"Create a new `Remark` in `seedu.address.model.tutee`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"jugsliao"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each tutee.","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"jugsliao"},"content":"public PersonCard(Person tutee, int displayedIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"jugsliao"},"content":"    remark.setText(tutee.getRemark().value);","lastModifiedDate":"2023-03-14"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"jugsliao"},"content":"        Person tuteeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":347,"author":{"gitId":"jugsliao"},"content":"        Person editedTutee \u003d new Person(","lastModifiedDate":"2023-03-14"},{"lineNumber":348,"author":{"gitId":"jugsliao"},"content":"                tuteeToEdit.getName(), tuteeToEdit.getPhone(), tuteeToEdit.getEmail(),","lastModifiedDate":"2023-03-14"},{"lineNumber":349,"author":{"gitId":"jugsliao"},"content":"                tuteeToEdit.getAddress(), remark, tuteeToEdit.getTags());","lastModifiedDate":"2023-03-14"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"jugsliao"},"content":"        model.setPerson(tuteeToEdit, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"jugsliao"},"content":"        return new CommandResult(generateSuccessMessage(editedTutee));","lastModifiedDate":"2023-03-14"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"jugsliao"},"content":"     * {@code tuteeToEdit}.","lastModifiedDate":"2023-03-14"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"jugsliao"},"content":"    private String generateSuccessMessage(Person tuteeToEdit) {","lastModifiedDate":"2023-03-14"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"jugsliao"},"content":"        return String.format(message, tuteeToEdit);","lastModifiedDate":"2023-03-14"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"jugsliao":19,"-":382}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.tutee.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jugsliao"},"content":"  \"tutees\": [ {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jugsliao":2,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"jugsliao"},"content":"       Person tuteeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"jugsliao"},"content":"       Person editedTutee \u003d createEditedPerson(tuteeToEdit, editPersonDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"jugsliao"},"content":"       if (!tuteeToEdit.isSamePerson(editedTutee) \u0026\u0026 model.hasPerson(editedTutee)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"jugsliao"},"content":"       model.setPerson(tuteeToEdit, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"jugsliao"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedTutee));","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"jugsliao"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the tutee data.","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"jugsliao"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ tutees.\u003cbr\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"jugsliao"},"content":"     FYI, The \u0027filtered list\u0027 is the list of tutees resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the tutees so that the user can see the edited tutee along with all other tutees. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"jugsliao"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of tutees is being tracked.","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"jugsliao"},"content":"        tutees.addAll(","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jugsliao":10,"-":291}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.ReadOnlyTuteeManagingSystem;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing TuteeManagingSystem ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getTuteeManagingSystemPath());","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"        Optional\u003cReadOnlyTuteeManagingSystem\u003e addressBookOptional;","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"        ReadOnlyTuteeManagingSystem initialData;","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TuteeManagingSystem\");","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TuteeManagingSystem\");","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"            initialData \u003d new TuteeManagingSystem();","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"jugsliao"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TuteeManagingSystem\");","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"jugsliao"},"content":"            initialData \u003d new TuteeManagingSystem();","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"jugsliao"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TuteeManagingSystem\");","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"jugsliao"},"content":"        logger.info(\"Starting TuteeManagingSystem \" + MainApp.VERSION);","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"Zhongli5712"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping TMS ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jugsliao":12,"Zhongli5712":1,"-":169,"leeyi45":1}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":" *   file reaches 5MB big, up tomaximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jugsliao":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"public class","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"Messages {","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The tutee index provided is invalid\";","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jugsliao":3,"-":11}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.ReadOnlyTuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"     * Returns the TuteeManagingSystem.","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"     * @see seedu.address.model.Model#getTuteeManagingSystem()","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"    ReadOnlyTuteeManagingSystem getAddressBook();","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"    ObservableList\u003cTutee\u003e getFilteredPersonList();","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jugsliao":6,"-":44}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"import seedu.address.logic.parser.TuteeManagingSystemParser;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.ReadOnlyTuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"    private final TuteeManagingSystemParser tuteeManagingSystemParser;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"        tuteeManagingSystemParser \u003d new TuteeManagingSystemParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"        Command command \u003d tuteeManagingSystemParser.parseCommand(commandText);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"            storage.saveAddressBook(model.getTuteeManagingSystem());","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"    public ReadOnlyTuteeManagingSystem getAddressBook() {","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"        return model.getTuteeManagingSystem();","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"    public ObservableList\u003cTutee\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"        return model.getFilteredTuteeList();","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"        return model.getTuteeManagingSystemPath();","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jugsliao":12,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":" * Adds a tutee to the address book.","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a tutee information to the system. \"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_SUBJECT + \"SUBJECT \"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_SCHEDULE + \"SCHEDULE \"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_STARTTIME + \"STARTTIME \"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_ENDTIME + \"ENDTIME \"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"Zhongli5712"},"content":"            + PREFIX_SUBJECT + \"Math \"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Zhongli5712"},"content":"            + PREFIX_SCHEDULE + \"monday \"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_STARTTIME + \"08:30 \"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_ENDTIME + \"10:30 \"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New tutee added: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This tutee already exists in the address book\";","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"    private final Tutee toAdd;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"     * Creates an AddCommand to add the specified {@code Tutee}","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"    public AddCommand(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"        toAdd \u003d tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"        if (model.hasTutee(toAdd)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"        model.addTutee(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jugsliao":19,"Zhongli5712":3,"-":55,"leeyi45":2}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"        model.setTuteeManagingSystem(new TuteeManagingSystem());","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jugsliao":1,"-":21,"leeyi45":1}},{"path":"src/main/java/seedu/address/logic/commands/CopyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import static seedu.address.logic.commands.EditCommand.createEditedPerson;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"public class CopyCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"    public static final String COMMAND_WORD \u003d \"copy\";","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an existing tutee to the system. \"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"            + \"Parameters: INDEX (must be a positive integer)\"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"            + PREFIX_SUBJECT + \"SUBJECT \"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"            + PREFIX_SCHEDULE + \"SCHEDULE \"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"            + PREFIX_STARTTIME + \"STARTTIME \"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"            + PREFIX_ENDTIME + \"ENDTIME \\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"            + PREFIX_SUBJECT + \"English \"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"            + PREFIX_SCHEDULE + \"monday \"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"            + PREFIX_STARTTIME + \"08:30 \"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"            + PREFIX_ENDTIME + \"10:30 \";","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New lessons for tutee added: %1$s\";","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This tutee already has such lessons in the address book\";","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"    private final EditCommand.EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"     * Creates a CopyCommand to copy the specified {@code Tutee}","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"    public CopyCommand(Index targetIndex, EditCommand.EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"gekhro"},"content":"        this.editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"gekhro"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"gekhro"},"content":"    public CommandResult execute(Model model) throws CommandException{","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"gekhro"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"gekhro"},"content":"        List\u003cTutee\u003e lastShownList \u003d model.getFilteredTuteeList();","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"gekhro"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"gekhro"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"gekhro"},"content":"        Tutee tuteeToCopy \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"gekhro"},"content":"        Tutee copiedTutee \u003d createEditedPerson(tuteeToCopy, editPersonDescriptor);","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"gekhro"},"content":"        model.addTutee(copiedTutee);","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"gekhro"},"content":"        model.updateFilteredTuteeList(Model.PREDICATE_SHOW_ALL_TUTEES);","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"gekhro"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, copiedTutee));","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"gekhro"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"gekhro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"gekhro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"gekhro"},"content":"                || (other instanceof CopyCommand // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"gekhro"},"content":"                \u0026\u0026 targetIndex.equals(((CopyCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"gekhro":78}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":" * Deletes a tutee identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"            + \": Deletes the tutee identified by the index number used in the displayed tutee list.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Tutee: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"        List\u003cTutee\u003e lastShownList \u003d model.getFilteredTuteeList();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"        Tutee tuteeToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"        model.deleteTutee(tuteeToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, tuteeToDelete));","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jugsliao":8,"-":45}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TUTEES;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.TuteeBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.EndTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Schedule;","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.StartTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Subject;","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":" * Edits the details of an existing tutee in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the tutee identified \"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"            + \"by the index number used in the displayed tutee list. \"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"            + \"[\" + PREFIX_SCHEDULE + \"SCHEDULE] \"","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"            + \"[\" + PREFIX_SUBJECT + \"SUBJECT] \"","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"            + \"[\" + PREFIX_STARTTIME + \"STARTTIME] \"","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"            + \"[\" + PREFIX_ENDTIME + \"ENDTIME] \"","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Tutee: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This tutee already exists in the address book.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_END_TIME_CONSTRAINT \u003d \"Please also include start time when editing end time with prefix st/ .\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"            \"The start time can remain unchanged.\";","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"     * @param index of the tutee in the filtered tutee list to edit","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"     * @param editPersonDescriptor details to edit the tutee with","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"        List\u003cTutee\u003e lastShownList \u003d model.getFilteredTuteeList();","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"jugsliao"},"content":"        Tutee tuteeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"jugsliao"},"content":"        Tutee editedTutee \u003d createEditedPerson(tuteeToEdit, editPersonDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"jugsliao"},"content":"        if (!tuteeToEdit.isSamePerson(editedTutee) \u0026\u0026 model.hasTutee(editedTutee)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"jugsliao"},"content":"        model.setTutee(tuteeToEdit, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"jugsliao"},"content":"        model.updateFilteredTuteeList(PREDICATE_SHOW_ALL_TUTEES);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"jugsliao"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedTutee));","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"jugsliao"},"content":"     * Creates and returns a {@code Tutee} with the details of {@code tuteeToEdit}","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"gekhro"},"content":"    static Tutee createEditedPerson(Tutee tuteeToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"jugsliao"},"content":"        assert tuteeToEdit !\u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"leeyi45"},"content":"        TuteeBuilder builder \u003d new TuteeBuilder(tuteeToEdit);","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"leeyi45"},"content":"        editPersonDescriptor.getName().ifPresent(builder::withName);","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"leeyi45"},"content":"        editPersonDescriptor.getPhone().ifPresent(builder::withPhone);","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"leeyi45"},"content":"        editPersonDescriptor.getEmail().ifPresent(builder::withEmail);","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"leeyi45"},"content":"        editPersonDescriptor.getAddress().ifPresent(builder::withAddress);","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"leeyi45"},"content":"        editPersonDescriptor.getSubject().ifPresent(builder::withSubject);","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"leeyi45"},"content":"        editPersonDescriptor.getSchedule().ifPresent(builder::withSchedule);","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"leeyi45"},"content":"        editPersonDescriptor.getStartTime().ifPresent(builder::withStartTime);","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"leeyi45"},"content":"        editPersonDescriptor.getEndTime().ifPresent(builder::withEndTime);","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"leeyi45"},"content":"        editPersonDescriptor.getTags().ifPresent(builder::withTags);","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"leeyi45"},"content":"        return builder.build();","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"jugsliao"},"content":"     * Stores the details to edit the tutee with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"jugsliao"},"content":"     * corresponding field value of the tutee.","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"jugsliao"},"content":"        private Subject subject;","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"jugsliao"},"content":"        private Schedule schedule;","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"jugsliao"},"content":"        private StartTime startTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"jugsliao"},"content":"        private EndTime endTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"jugsliao"},"content":"            setSubject(toCopy.subject);","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"jugsliao"},"content":"            setSchedule(toCopy.schedule);","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"jugsliao"},"content":"            setStartTime(toCopy.startTime);","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"jugsliao"},"content":"            setEndTime(toCopy.endTime);","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"gekhro"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, subject, schedule, startTime, endTime,","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"gekhro"},"content":"                    tags);","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"leeyi45"},"content":"        public void setSubject(Subject subject) {","lastModifiedDate":"2023-03-20"},{"lineNumber":217,"author":{"gitId":"leeyi45"},"content":"            this.subject \u003d subject;","lastModifiedDate":"2023-03-20"},{"lineNumber":218,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":219,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"leeyi45"},"content":"        public Optional\u003cSubject\u003e getSubject() {","lastModifiedDate":"2023-03-20"},{"lineNumber":221,"author":{"gitId":"leeyi45"},"content":"            return Optional.ofNullable(subject);","lastModifiedDate":"2023-03-20"},{"lineNumber":222,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"leeyi45"},"content":"        public void setSchedule(Schedule schedule) {","lastModifiedDate":"2023-03-20"},{"lineNumber":225,"author":{"gitId":"leeyi45"},"content":"            this.schedule \u003d schedule;","lastModifiedDate":"2023-03-20"},{"lineNumber":226,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":227,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":228,"author":{"gitId":"leeyi45"},"content":"        public Optional\u003cSchedule\u003e getSchedule() {","lastModifiedDate":"2023-03-20"},{"lineNumber":229,"author":{"gitId":"leeyi45"},"content":"            return Optional.ofNullable(schedule);","lastModifiedDate":"2023-03-20"},{"lineNumber":230,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":231,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"leeyi45"},"content":"        public void setStartTime(StartTime startTime) {","lastModifiedDate":"2023-03-20"},{"lineNumber":233,"author":{"gitId":"leeyi45"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":234,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":235,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":236,"author":{"gitId":"leeyi45"},"content":"        public Optional\u003cStartTime\u003e getStartTime() {","lastModifiedDate":"2023-03-20"},{"lineNumber":237,"author":{"gitId":"leeyi45"},"content":"            return Optional.ofNullable(startTime);","lastModifiedDate":"2023-03-20"},{"lineNumber":238,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":239,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":240,"author":{"gitId":"leeyi45"},"content":"        public void setEndTime(EndTime endTime) {","lastModifiedDate":"2023-03-20"},{"lineNumber":241,"author":{"gitId":"leeyi45"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":242,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":243,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":244,"author":{"gitId":"leeyi45"},"content":"        public Optional\u003cEndTime\u003e getEndTime() {","lastModifiedDate":"2023-03-20"},{"lineNumber":245,"author":{"gitId":"leeyi45"},"content":"            return Optional.ofNullable(endTime);","lastModifiedDate":"2023-03-20"},{"lineNumber":246,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":247,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"jugsliao"},"content":"         * Sets {@code tags} EndTime this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-18"},{"lineNumber":250,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":284,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 getSubject().equals(e.getSubject())","lastModifiedDate":"2023-03-14"},{"lineNumber":285,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 getSchedule().equals(e.getSchedule())","lastModifiedDate":"2023-03-18"},{"lineNumber":286,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 getStartTime().equals(e.getStartTime())","lastModifiedDate":"2023-03-18"},{"lineNumber":287,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 getEndTime().equals(e.getEndTime())","lastModifiedDate":"2023-03-18"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jugsliao":43,"gekhro":3,"-":192,"leeyi45":53}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.fields.FieldContainsKeywordsPredicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":" * Filters and lists all tutees in address book whose field matches","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":" * any of the argument keywords. Keyword matching is case insensitive.","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"// Solution adapted from https://github.com/AY2223S2-CS2103T-W10-3/tp/blob/master/src/main/java/seedu/address/logic/commands/FilterCommand.java","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters through all persons in the tutee managing system, \"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"            + \"showing only the tutees that matches the parameters that have been provided\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_SUBJECT + \"SUBJECT \"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_SCHEDULE + \"SCHEDULE \"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_STARTTIME + \"START TIME \"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_ENDTIME + \"END TIME \"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_TAG + \"TAG \\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_NAME + \"John \"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_PHONE + \"98765432\"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_ADDRESS + \"311, Clementi \"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_SUBJECT + \"Math \"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_SCHEDULE + \"monday \"","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_STARTTIME + \"08:30 \"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_ENDTIME + \"10:30 \"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"            + PREFIX_TAG + \"friends \";","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_NOT_FILTERED \u003d \"At least one field to filter must be provided.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"    private final FieldContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"    private final FilterTuteeDescription filterTuteeDescription;","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"    public FilterCommand(FilterTuteeDescription filterTuteeDescription) {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"        this.filterTuteeDescription \u003d filterTuteeDescription;","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"        this.predicate \u003d new FieldContainsKeywordsPredicate(filterTuteeDescription.getNameToFilter(),","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"                filterTuteeDescription.getPhoneToFilter(), filterTuteeDescription.getEmailToFilter(),","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"                filterTuteeDescription.getAddressToFilter(), filterTuteeDescription.getSubjectToFilter(),","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"                filterTuteeDescription.getScheduleToFilter(), filterTuteeDescription.getStartTimeToFilter(),","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"                filterTuteeDescription.getEndTimeToFilter(), filterTuteeDescription.getTagToFilter());","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"        model.updateFilteredTuteeList(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredTuteeList().size()));","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"jugsliao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 filterTuteeDescription.equals(((FilterCommand) other).filterTuteeDescription)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"jugsliao"},"content":"     * Stores the details to filter the tutee with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"jugsliao"},"content":"     * corresponding field value of the tutee.","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"    public static class FilterTuteeDescription {","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"        public List\u003cString\u003e nameToFilter;","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"jugsliao"},"content":"        public String phoneToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"jugsliao"},"content":"        public String emailToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"jugsliao"},"content":"        public List\u003cString\u003e addressToFilter;","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"jugsliao"},"content":"        public String subjectToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"jugsliao"},"content":"        public String scheduleToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"jugsliao"},"content":"        public String startTimeToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"jugsliao"},"content":"        public String endTimeToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"jugsliao"},"content":"        public List\u003cString\u003e tagToFilter;","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"jugsliao"},"content":"        /**","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"jugsliao"},"content":"         * FilterTuteeDescription constructor.","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"jugsliao"},"content":"         */","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"jugsliao"},"content":"        public FilterTuteeDescription() {","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"jugsliao"},"content":"            this.nameToFilter \u003d Collections.emptyList();","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"jugsliao"},"content":"            this.phoneToFilter \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"jugsliao"},"content":"            this.emailToFilter \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"jugsliao"},"content":"            this.addressToFilter \u003d Collections.emptyList();","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"jugsliao"},"content":"            this.subjectToFilter \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"jugsliao"},"content":"            this.scheduleToFilter \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"jugsliao"},"content":"            this.startTimeToFilter \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"jugsliao"},"content":"            this.endTimeToFilter \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"jugsliao"},"content":"            this.tagToFilter \u003d Collections.emptyList();","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"jugsliao"},"content":"        /**","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"jugsliao"},"content":"         * Returns true if at least one field is filtered.","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"jugsliao"},"content":"         */","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"jugsliao"},"content":"        public boolean isAllFieldEmpty() {","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"jugsliao"},"content":"            return nameToFilter.isEmpty() \u0026\u0026 phoneToFilter.isEmpty()","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 emailToFilter.isEmpty() \u0026\u0026 addressToFilter.isEmpty()","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 subjectToFilter.isEmpty() \u0026\u0026 scheduleToFilter.isEmpty()","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 startTimeToFilter.isEmpty() \u0026\u0026 endTimeToFilter.isEmpty()","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 tagToFilter.isEmpty();","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"jugsliao"},"content":"        public void setNameToFilter(List\u003cString\u003e name) {","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"jugsliao"},"content":"            nameToFilter \u003d name;","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"jugsliao"},"content":"        public List\u003cString\u003e getNameToFilter() {","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"jugsliao"},"content":"            return nameToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"jugsliao"},"content":"        public void setPhoneToFilter(String phone) {","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"jugsliao"},"content":"            phoneToFilter \u003d phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"jugsliao"},"content":"        public String getPhoneToFilter() {","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"jugsliao"},"content":"            return phoneToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"jugsliao"},"content":"        public void setEmailToFilter(String email) {","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"jugsliao"},"content":"            emailToFilter \u003d email;","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"jugsliao"},"content":"        public String getEmailToFilter() {","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"jugsliao"},"content":"            return emailToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"jugsliao"},"content":"        public void setAddressToFilter(List\u003cString\u003e address) {","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"jugsliao"},"content":"            addressToFilter \u003d address;","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":151,"author":{"gitId":"jugsliao"},"content":"        public List\u003cString\u003e getAddressToFilter() {","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"jugsliao"},"content":"            return addressToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"jugsliao"},"content":"        public void setSubjectToFilter(String subject) {","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"jugsliao"},"content":"            subjectToFilter \u003d subject;","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"jugsliao"},"content":"        public String getSubjectToFilter() {","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"jugsliao"},"content":"            return subjectToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"jugsliao"},"content":"        public void setScheduleToFilter(String schedule) {","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"jugsliao"},"content":"            scheduleToFilter \u003d schedule;","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"jugsliao"},"content":"        public String getScheduleToFilter() {","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"jugsliao"},"content":"            return scheduleToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"jugsliao"},"content":"        public void setStartTimeToFilter(String startTime) {","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"jugsliao"},"content":"            startTimeToFilter \u003d startTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"jugsliao"},"content":"        public String getStartTimeToFilter() {","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"jugsliao"},"content":"            return startTimeToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"jugsliao"},"content":"        public void setEndTimeToFilter(String endTime) {","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"jugsliao"},"content":"            endTimeToFilter \u003d endTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"jugsliao"},"content":"        public String getEndTimeToFilter() {","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"jugsliao"},"content":"            return endTimeToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"jugsliao"},"content":"        public void setTagToFilter(List\u003cString\u003e tag) {","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"jugsliao"},"content":"            tagToFilter \u003d tag;","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"jugsliao"},"content":"        public List\u003cString\u003e getTagToFilter() {","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"jugsliao"},"content":"            return tagToFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"jugsliao"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"jugsliao"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"jugsliao"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"jugsliao"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"jugsliao"},"content":"                return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"jugsliao"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"jugsliao"},"content":"            if (!(other instanceof FilterTuteeDescription)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"jugsliao"},"content":"                return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"jugsliao"},"content":"            // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"jugsliao"},"content":"            FilterTuteeDescription f \u003d (FilterTuteeDescription) other;","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"jugsliao"},"content":"            return getNameToFilter().equals(f.getNameToFilter())","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 getPhoneToFilter().equals(f.getPhoneToFilter())","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 getEmailToFilter().equals(f.getEmailToFilter())","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 getAddressToFilter().equals(f.getAddressToFilter())","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 getSubjectToFilter().equals(f.getSubjectToFilter())","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 getScheduleToFilter().equals(f.getScheduleToFilter())","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 getStartTimeToFilter().equals(f.getStartTimeToFilter())","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 getEndTimeToFilter().equals(f.getEndTimeToFilter())","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"jugsliao"},"content":"                    \u0026\u0026 getTagToFilter().equals(f.getTagToFilter());","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jugsliao":221}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"        model.updateFilteredTuteeList(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredTuteeList().size()));","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jugsliao":2,"-":39,"leeyi45":1}},{"path":"src/main/java/seedu/address/logic/commands/LearnCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.model.tutee.TuteeBuilder;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.model.tutee.fields.Lesson;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":" * Add new lesson to a tutee","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"public class LearnCommand extends Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"    public static final String COMMAND_WORD \u003d \"learn\";","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits learning process of the tutee identified \"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"                + \"by the index number used in the last tutee listing.\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"                + \"Example: \" + COMMAND_WORD + \" 1 l/Rational Number\";","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"    private final Index index;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"    private final String lesson;","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"     * Creates a LearnCommand for the tutee.","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"    public LearnCommand(Index tuteeIndex, String lesson) {","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"        requireNonNull(tuteeIndex);","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"        this.index \u003d tuteeIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"        this.lesson \u003d lesson;","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Zhongli5712"},"content":"        List\u003cTutee\u003e lastShownList \u003d model.getFilteredTuteeList();","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Zhongli5712"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Zhongli5712"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Zhongli5712"},"content":"        Tutee tuteeToEducate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Zhongli5712"},"content":"        TuteeBuilder builder \u003d new TuteeBuilder(tuteeToEducate);","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Zhongli5712"},"content":"        Lesson lessons \u003d tuteeToEducate.getLessons();","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Zhongli5712"},"content":"        Lesson newLessons \u003d lessons.learn(lesson);","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Zhongli5712"},"content":"        builder.withLessons(newLessons);","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Zhongli5712"},"content":"        model.setTutee(tuteeToEducate, builder.build());","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Zhongli5712"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"Zhongli5712"},"content":"            String.format(\"Edit %s learn %s\", tuteeToEducate.getName(), lesson));","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Zhongli5712":55}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TUTEES;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"        model.updateFilteredTuteeList(PREDICATE_SHOW_ALL_TUTEES);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jugsliao":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.TuteeBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":" * Mark a tutee as present on a given date","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"    public static final String EXPECTED_DATE_FORMAT \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks the tutee identified \"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"                + \"by the index number used in the last tutee listing as present on a given date.\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"                + \"If no date is provided for this command, then the current date will be used\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"                + \"Example: \" + COMMAND_WORD + \" 1 2020-01-02\";","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"    private final Index index;","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"    private final List\u003cLocalDate\u003e dates;","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"     * Creates a MarkCommand for the tutee at the specified index and date.","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    public MarkCommand(Index tuteeIndex, List\u003cLocalDate\u003e date) {","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        requireNonNull(tuteeIndex);","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        this.index \u003d tuteeIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        this.dates \u003d date;","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        List\u003cTutee\u003e lastShownList \u003d model.getFilteredTuteeList();","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        Tutee toMarkAttendance \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"        TuteeBuilder modified \u003d new TuteeBuilder(toMarkAttendance);","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"        Attendance attendance \u003d toMarkAttendance.getAttendance();","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"        for (LocalDate date : dates) {","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"            attendance \u003d attendance.markAttendance(date);","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"        modified.withAttendance(attendance);","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        model.setTutee(toMarkAttendance, modified.build());","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(EXPECTED_DATE_FORMAT);","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"            dates.stream()","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"                .map(formatter::format)","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"                .collect(Collectors.joining(","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"                    \", \",","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"                    String.format(","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"                        \"Marked %s\u0027s attendance as present for the following dates: \",","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"                        toMarkAttendance.getName()","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"                    ),","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"                    \"\"","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"                )","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"            )","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"leeyi45":75}},{"path":"src/main/java/seedu/address/logic/commands/QueryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":" * Command for displaying the attendance data of a student","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"public class QueryCommand extends Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    public static final String COMMAND_WORD \u003d \"query\";","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    public static final String EXPECTED_DATE_FORMAT \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    private final Optional\u003cLocalDate\u003e searchDate;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    private final Index index;","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"     * The command will return whether the tutee at the given index was","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"     * present on the given date","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"    public QueryCommand(Index index, LocalDate date) {","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        this.searchDate \u003d Optional.of(date);","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"     * The command will list all of the tutee\u0027s attendance information","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    public QueryCommand(Index index) {","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        this.searchDate \u003d Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"        List\u003cTutee\u003e lastShownList \u003d model.getFilteredTuteeList();","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        Tutee tutee \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(EXPECTED_DATE_FORMAT);","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        String output;","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"        if (searchDate.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"            output \u003d tutee.getAttendance()","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"                .stream()","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"                .sorted()","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"                .map(formatter::format)","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"                .collect(Collectors.joining(","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"                    \", \",","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"                    String.format(\"%s was present on the following dates: \", tutee.getName().toString()),","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"                    \"\"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"                ));","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"            LocalDate date \u003d searchDate.get();","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"            output \u003d String.format(","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"                \"%s was %ssent on %s\",","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"                tutee.getName().toString(),","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"                tutee.getAttendance().didAttend(date) ? \"pre\" : \"ab\",","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"                formatter.format(date)","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"            );","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"        return new CommandResult(output);","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"leeyi45":79}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TUTEES;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.TuteeBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Remark;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":" * Changes the remark of an existing tutee in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark EndTime Tutee: %1$s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark StartTime Tutee: %1$s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"            + \": Edits the remark of the tutee identified \"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"            + \"by the index number used in the last tutee listing. \"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"            + \"r/ Likes EndTime swim.\";","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"    private final Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"     * @param index of the tutee in the filtered tutee list EndTime edit the remark","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"     * @param remark of the tutee EndTime be updated EndTime","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"        List\u003cTutee\u003e lastShownList \u003d model.getFilteredTuteeList();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"        Tutee tuteeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        TuteeBuilder builder \u003d new TuteeBuilder(tuteeToEdit);","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"        Tutee editedTutee \u003d builder.withRemark(remark).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"        model.setTutee(tuteeToEdit, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"        model.updateFilteredTuteeList(PREDICATE_SHOW_ALL_TUTEES);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"        return new CommandResult(generateSuccessMessage(editedTutee));","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"     * {@code tuteeToEdit}.","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"    private String generateSuccessMessage(Tutee tuteeToEdit) {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"        String message \u003d !remark.toString().isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"        return String.format(message, tuteeToEdit);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"jugsliao"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"jugsliao"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"jugsliao"},"content":"        // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"jugsliao"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"jugsliao"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"jugsliao":87,"leeyi45":7}},{"path":"src/main/java/seedu/address/logic/commands/UnlearnCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.model.tutee.TuteeBuilder;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.model.tutee.fields.Attendance;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.model.tutee.fields.Lesson;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":" * Marks a tutee as absent on a given date","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"public class UnlearnCommand extends Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"    public static final String COMMAND_WORD \u003d \"unlearn\";","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits learning process of the tutee identified \"","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"            + \"by the index number used in the last tutee listing.\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 l/Rational Number\";","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"    private final Index index;","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"    private final String lesson;","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"     * Create an unlearn command for the tutee","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Zhongli5712"},"content":"    public UnlearnCommand (Index tuteeIndex, String lesson) {","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"        requireNonNull(tuteeIndex);","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"        this.index \u003d tuteeIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"        this.lesson \u003d lesson;","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Zhongli5712"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Zhongli5712"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Zhongli5712"},"content":"        List\u003cTutee\u003e lastShownList \u003d model.getFilteredTuteeList();","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Zhongli5712"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Zhongli5712"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Zhongli5712"},"content":"        Tutee tuteeToEducate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Zhongli5712"},"content":"        TuteeBuilder builder \u003d new TuteeBuilder(tuteeToEducate);","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Zhongli5712"},"content":"        Lesson lessons \u003d tuteeToEducate.getLessons();","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"Zhongli5712"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Zhongli5712"},"content":"            Lesson newLessons \u003d lessons.unlearn(lesson);","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Zhongli5712"},"content":"            builder.withLessons(newLessons);","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Zhongli5712"},"content":"            model.setTutee(tuteeToEducate, builder.build());","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Zhongli5712"},"content":"            return new CommandResult(","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Zhongli5712"},"content":"                    String.format(\"Edit %s have not learned %s\", tuteeToEducate.getName(), lesson));","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Zhongli5712"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"Zhongli5712"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Zhongli5712"},"content":"                \"%s have not learned %s!\",","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Zhongli5712"},"content":"                tuteeToEducate.getName(),","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Zhongli5712"},"content":"                lesson));","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Zhongli5712":65}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.TuteeBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":" * Marks a tutee as absent on a given date","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    private final Index index;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    private final List\u003cLocalDate\u003e dates;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"     * Create an unmark command for the tutee and the specified index and date","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    public UnmarkCommand(Index index, List\u003cLocalDate\u003e dates) {","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        requireNonNull(dates);","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        this.dates \u003d dates;","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        Tutee toMarkAttendance \u003d model.getFilteredTuteeList().get(index.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"        TuteeBuilder modified \u003d new TuteeBuilder(toMarkAttendance);","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        Attendance attendance \u003d toMarkAttendance.getAttendance();","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(MarkCommand.EXPECTED_DATE_FORMAT);","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"        List\u003cLocalDate\u003e invalidDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"        List\u003cLocalDate\u003e validDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        for (LocalDate date : dates) {","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"            try {","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"                attendance \u003d attendance.unmarkAttendance(date);","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"                validDates.add(date);","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"                invalidDates.add(date);","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        modified.withAttendance(attendance);","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"        model.setTutee(toMarkAttendance, modified.build());","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"        StringJoiner joiner \u003d new StringJoiner(\"\\n\");","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"        if (validDates.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"            joiner.add(validDates.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"                .map(formatter::format)","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"                .collect(Collectors.joining(","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"                    \", \",","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"                    String.format(\"Marked %s as absent for the following dates: \", toMarkAttendance.getName()),","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"                    \"\"","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"                )));","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"        if (invalidDates.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"            joiner.add(invalidDates.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"                .map(formatter::format)","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"                .collect(Collectors.joining(","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"                    \", \",","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"                    String.format(\"%s was already marked absent for the following dates: \", toMarkAttendance.getName()),","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"                    \"\"","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"                )));","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"        return new CommandResult(joiner.toString());","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"leeyi45":85}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.TuteeBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Lesson;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Remark;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"                    PREFIX_SUBJECT, PREFIX_SCHEDULE, PREFIX_STARTTIME, PREFIX_ENDTIME, PREFIX_TAG);","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SUBJECT,","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"                PREFIX_SCHEDULE, PREFIX_STARTTIME, PREFIX_ENDTIME)","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"        TuteeBuilder builder \u003d new TuteeBuilder();","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"        builder.withName(","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"            ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get())","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"        )","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        .withPhone(","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"            ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get())","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"        )","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"        .withEmail(","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"            ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get())","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"        )","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"        .withAddress(","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"            ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get())","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"        )","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        // add command does not allow adding remarks straight away","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"        .withRemark(new Remark(\"\"))","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"        .withSubject(","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"            ParserUtil.parseSubject(argMultimap.getValue(PREFIX_SUBJECT).get())","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"        )","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"        .withSchedule(","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"            ParserUtil.parseSchedule(argMultimap.getValue(PREFIX_SCHEDULE).get())","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"        )","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"        .withStartTime(","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"            ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_STARTTIME).get())","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"        )","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"        .withEndTime(","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"            ParserUtil.parseEndTime(","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"                argMultimap.getValue(PREFIX_ENDTIME).get(),","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"                argMultimap.getValue(PREFIX_STARTTIME).get()","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"            )","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"        )","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"        .withTags(","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"            ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG))","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"        ).withAttendance(new Attendance())","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"        .withLessons(new Lesson());","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"        Tutee tutee \u003d builder.build();","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"        return new AddCommand(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jugsliao":4,"-":44,"leeyi45":45}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"import seedu.address.logic.commands.*;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":66,"author":{"gitId":"gekhro"},"content":"        case CopyCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"gekhro"},"content":"            return new CopyCommandParser().parse(arguments);","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jugsliao":3,"gekhro":4,"-":67}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"    public static final Prefix PREFIX_SUBJECT \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"    public static final Prefix PREFIX_SCHEDULE \u003d new Prefix(\"sch/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"    public static final Prefix PREFIX_STARTTIME \u003d new Prefix(\"st/\");","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"    public static final Prefix PREFIX_ENDTIME \u003d new Prefix(\"et/\");","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"    public static final Prefix PREFIX_COPY \u003d new Prefix(\"cp/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"    public static final Prefix PREFIX_LEARN \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jugsliao":5,"Zhongli5712":1,"gekhro":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/CommandSupplier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":" * Represents a method that takes in a string to parse for arguments,","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":" * and returns a {@link Command}","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"@FunctionalInterface","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"public interface CommandSupplier {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    public Command parse(String args) throws ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"leeyi45":13}},{"path":"src/main/java/seedu/address/logic/parser/CopyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gekhro"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"gekhro"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"gekhro"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"gekhro"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"gekhro"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"gekhro"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"gekhro"},"content":"import seedu.address.model.tutee.*;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"gekhro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"gekhro"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"gekhro"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":" * Parses input arguments and creates a new CopyCommand object","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"public class CopyCommandParser implements Parser\u003cCopyCommand\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"gekhro"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"gekhro"},"content":"    public CopyCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"gekhro"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"gekhro"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SUBJECT, PREFIX_SCHEDULE,","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"gekhro"},"content":"                        PREFIX_STARTTIME, PREFIX_ENDTIME);","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"gekhro"},"content":"        if (!arePrefixesPresent(argMultimap,  PREFIX_SUBJECT, PREFIX_SCHEDULE, PREFIX_STARTTIME, PREFIX_ENDTIME)","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"gekhro"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"gekhro"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CopyCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"        Index index;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"        if (argMultimap.getValue(PREFIX_SUBJECT).isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"            editPersonDescriptor.setSubject(ParserUtil.parseSubject(argMultimap.getValue(PREFIX_SUBJECT).get()));","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"gekhro"},"content":"        if (argMultimap.getValue(PREFIX_SCHEDULE).isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"            editPersonDescriptor.setSchedule(ParserUtil.parseSchedule(argMultimap.getValue(PREFIX_SCHEDULE).get()));","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"gekhro"},"content":"        if (argMultimap.getValue(PREFIX_STARTTIME).isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"gekhro"},"content":"            editPersonDescriptor.setStartTime(ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_STARTTIME).get()));","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"gekhro"},"content":"        if (argMultimap.getValue(PREFIX_ENDTIME).isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"gekhro"},"content":"            editPersonDescriptor.setEndTime(ParserUtil.parseEndTime(argMultimap.getValue(PREFIX_ENDTIME).get(),","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"gekhro"},"content":"                    argMultimap.getValue(PREFIX_STARTTIME).get()));","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"gekhro"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"gekhro"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"gekhro"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"gekhro"},"content":"        return new CopyCommand(index, editPersonDescriptor);","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"gekhro"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"gekhro"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"gekhro"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"gekhro"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"gekhro"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"gekhro":76}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import java.util.*;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_SUBJECT,","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"                        PREFIX_SCHEDULE, PREFIX_STARTTIME, PREFIX_ENDTIME, PREFIX_TAG);","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"Zhongli5712"},"content":"        if (argMultimap.getValue(PREFIX_SUBJECT).isPresent()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"Zhongli5712"},"content":"            editPersonDescriptor.setSubject(ParserUtil.parseSubject(argMultimap.getValue(PREFIX_SUBJECT).get()));","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Zhongli5712"},"content":"        if (argMultimap.getValue(PREFIX_SCHEDULE).isPresent()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"Zhongli5712"},"content":"            editPersonDescriptor.setSchedule(ParserUtil.parseSchedule(argMultimap.getValue(PREFIX_SCHEDULE).get()));","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"        if (argMultimap.getValue(PREFIX_STARTTIME).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"            editPersonDescriptor.setStartTime(ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_STARTTIME).get()));","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"        if (argMultimap.getValue(PREFIX_ENDTIME).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"            try {","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"                editPersonDescriptor.setEndTime(ParserUtil.parseEndTime(argMultimap.getValue(PREFIX_ENDTIME).get(),","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"                        argMultimap.getValue(PREFIX_STARTTIME).get()));","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"                throw new ParseException(EditCommand.MESSAGE_END_TIME_CONSTRAINT);","lastModifiedDate":"2023-04-03"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jugsliao":18,"Zhongli5712":6,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"import seedu.address.logic.commands.FilterCommand.FilterTuteeDescription;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e  {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_SUBJECT,","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"                        PREFIX_SCHEDULE, PREFIX_STARTTIME, PREFIX_ENDTIME, PREFIX_TAG);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"        FilterTuteeDescription filterTuteeDescription \u003d new FilterTuteeDescription();","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"            String trimmedArgs \u003d argMultimap.getValue(PREFIX_NAME).get().trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"            if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"                throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"            String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"            filterTuteeDescription.setNameToFilter(Arrays.asList(nameKeywords));","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"            filterTuteeDescription.setPhoneToFilter(requireNonNull(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"            filterTuteeDescription.setEmailToFilter(requireNonNull(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"            String trimmedArgs \u003d argMultimap.getValue(PREFIX_ADDRESS).get().trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"            if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"                throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"            String[] addressKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"            filterTuteeDescription.setAddressToFilter(Arrays.asList(addressKeywords));","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"        if (argMultimap.getValue(PREFIX_SUBJECT).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"            filterTuteeDescription.setSubjectToFilter(requireNonNull(argMultimap.getValue(PREFIX_SUBJECT).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"        if (argMultimap.getValue(PREFIX_SCHEDULE).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"            filterTuteeDescription.setScheduleToFilter(requireNonNull(argMultimap.getValue(PREFIX_SCHEDULE).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"        if (argMultimap.getValue(PREFIX_STARTTIME).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"            filterTuteeDescription.setStartTimeToFilter(requireNonNull(argMultimap.getValue(PREFIX_STARTTIME).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"        if (argMultimap.getValue(PREFIX_ENDTIME).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"            filterTuteeDescription.setEndTimeToFilter(requireNonNull(argMultimap.getValue(PREFIX_ENDTIME).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"jugsliao"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"            String trimmedArgs \u003d argMultimap.getValue(PREFIX_TAG).get().trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"            if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"                throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"            String[] tagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"jugsliao"},"content":"            filterTuteeDescription.setTagToFilter(Arrays.asList(tagKeywords));","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"        if (filterTuteeDescription.isAllFieldEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"            throw new ParseException(FilterCommand.MESSAGE_NOT_FILTERED);","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"jugsliao"},"content":"        return new FilterCommand(filterTuteeDescription);","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jugsliao":93}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":32,"leeyi45":1}},{"path":"src/main/java/seedu/address/logic/parser/LearnCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEARN;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.logic.commands.LearnCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":" * Parser for the {@link LearnCommand} command","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"public class LearnCommandParser implements Parser\u003cLearnCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"    public LearnCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LEARN);","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"        Index index;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LearnCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"        String lesson \u003d argMultimap.getValue(PREFIX_LEARN).orElse(\"\");","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"        return new LearnCommand(index, lesson);","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Zhongli5712":32}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":" * Parser for the {@link MarkCommand} command","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    public MarkCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        String[] args \u003d userInput.split(\" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"            // No index specified","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"            throw new ParseException(String.format(\"%s needs an index!\", MarkCommand.COMMAND_WORD));","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        Index index;","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"            index \u003d ParserUtil.parseIndex(args[1]);","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        List\u003cLocalDate\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        if (args.length \u003d\u003d 2) {","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"            dates.add(LocalDate.now());","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"            // User provided an index and possibly a date","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"            for (int i \u003d 2; i \u003c args.length; i++) {","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"                try {","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"                    dates.add(LocalDate.parse(args[i], DateTimeFormatter.ofPattern(MarkCommand.EXPECTED_DATE_FORMAT)));","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"                    throw new ParseException(String.format(\"%s expects the date in the following format: %s\",","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"                        MarkCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"                        MarkCommand.EXPECTED_DATE_FORMAT","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"                    ));","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        return new MarkCommand(index, dates);","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"leeyi45":55}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"public interface Parser\u003cT extends Command\u003e extends CommandSupplier {","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":15,"leeyi45":2}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.EndTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Schedule;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.StartTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Subject;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jugsliao"},"content":"     * Parses a {@code String subject} into an {@code Subject}.","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"jugsliao"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"jugsliao"},"content":"     * @throws ParseException if the given {@code subject} is invalid.","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"jugsliao"},"content":"    public static Subject parseSubject(String subject) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(subject);","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"jugsliao"},"content":"        String trimmedSubject \u003d subject.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"jugsliao"},"content":"        if (!Subject.isValidSubject(trimmedSubject)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"jugsliao"},"content":"            throw new ParseException(Subject.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"jugsliao"},"content":"        return new Subject(trimmedSubject);","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"jugsliao"},"content":"     * Parses a {@code String schedule} into an {@code schedule}.","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"jugsliao"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"jugsliao"},"content":"     * @throws ParseException if the given {@code schedule} is invalid.","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"jugsliao"},"content":"    public static Schedule parseSchedule(String schedule) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"jugsliao"},"content":"        String trimmedSchedule \u003d schedule.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"jugsliao"},"content":"        if (!Schedule.isValidSchedule(trimmedSchedule)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"gekhro"},"content":"            System.out.println(trimmedSchedule);","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"jugsliao"},"content":"            throw new ParseException(Schedule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"jugsliao"},"content":"        return new Schedule(trimmedSchedule);","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"jugsliao"},"content":"     * Parses a {@code String startTime} into an {@code StartTime}.","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"jugsliao"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"jugsliao"},"content":"     * @param startTime A valid start time in the format of HH:mm.","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"jugsliao"},"content":"     * @return A new {@code StartTime} object representing the parsed start time.","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"jugsliao"},"content":"     * @throws ParseException If the given {@code startTime} is invalid.","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"jugsliao"},"content":"    public static StartTime parseStartTime(String startTime) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"jugsliao"},"content":"        String trimmedStartTime \u003d startTime.trim();","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"jugsliao"},"content":"        if (!StartTime.isValidStartTime(trimmedStartTime)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"jugsliao"},"content":"            throw new ParseException(StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"jugsliao"},"content":"        return new StartTime(trimmedStartTime);","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"jugsliao"},"content":"     * Parses a {@code String endTime} into an {@code EndTime}.","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"jugsliao"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"jugsliao"},"content":"     * @param endTime A valid end time in the format of HH:mm.","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"jugsliao"},"content":"     * @param startTime The start time to compare against.","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"jugsliao"},"content":"     * @return A new {@code EndTime} object representing the parsed end time.","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"jugsliao"},"content":"     * @throws ParseException If the given {@code endTime} is invalid or before the start time.","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"jugsliao"},"content":"    public static EndTime parseEndTime(String endTime, String startTime) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(endTime);","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"jugsliao"},"content":"        String trimmedEndTime \u003d endTime.trim();","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"jugsliao"},"content":"        if (!EndTime.isValidEndTime(trimmedEndTime)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"jugsliao"},"content":"            throw new ParseException(EndTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"leeyi45"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"leeyi45"},"content":"        LocalTime parsedEndTime \u003d LocalTime.parse(endTime, timeFormatter);","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"leeyi45"},"content":"        LocalTime parsedStartTime \u003d LocalTime.parse(startTime, timeFormatter);","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"jugsliao"},"content":"        if (parsedEndTime.isBefore(parsedStartTime)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"jugsliao"},"content":"            throw new ParseException(EndTime.MESSAGE_CONSTRAINTS_AFTER_START_TIME);","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"jugsliao"},"content":"        return new EndTime(trimmedEndTime);","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jugsliao":73,"gekhro":1,"-":120,"leeyi45":11}},{"path":"src/main/java/seedu/address/logic/parser/QueryCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.commands.QueryCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":" * Parser for the {@link QueryCommand}","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"public class QueryCommandParser implements Parser\u003cQueryCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    public QueryCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        String[] args \u003d userInput.split(\" \");","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"            // No index specified","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"            throw new ParseException(String.format(\"%s needs an index!\", QueryCommand.COMMAND_WORD));","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        Index index;","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"            index \u003d ParserUtil.parseIndex(args[1]);","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        if (args.length \u003d\u003d 2) {","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"            // No date specified","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"            return new QueryCommand(index);","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"            LocalDate date \u003d LocalDate.parse(args[2], DateTimeFormatter.ofPattern(QueryCommand.EXPECTED_DATE_FORMAT));","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"            return new QueryCommand(index, date);","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"            throw new ParseException(String.format(\"%s expects the date in the following format: %s\",","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"                QueryCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"                QueryCommand.EXPECTED_DATE_FORMAT","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"            ));","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"leeyi45":50}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Remark;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"        Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"jugsliao":36,"leeyi45":1}},{"path":"src/main/java/seedu/address/logic/parser/TuteeManagingSystemParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import seedu.address.logic.commands.*;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"public class TuteeManagingSystemParser {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"    private static final Map\u003cString, CommandSupplier\u003e commandMap \u003d Map.ofEntries(","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        Map.entry(AddCommand.COMMAND_WORD, new AddCommandParser()),","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"        Map.entry(ClearCommand.COMMAND_WORD, args -\u003e new ClearCommand()),","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"        Map.entry(DeleteCommand.COMMAND_WORD, new DeleteCommandParser()),","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        Map.entry(EditCommand.COMMAND_WORD, new EditCommandParser()),","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"        Map.entry(FilterCommand.COMMAND_WORD, new FilterCommandParser()),","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        Map.entry(FindCommand.COMMAND_WORD, new FindCommandParser()),","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        Map.entry(ExitCommand.COMMAND_WORD, args -\u003e new ExitCommand()),","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        Map.entry(HelpCommand.COMMAND_WORD, args -\u003e new HelpCommand()),","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        Map.entry(ListCommand.COMMAND_WORD, args -\u003e new ListCommand()),","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        Map.entry(MarkCommand.COMMAND_WORD, new MarkCommandParser()),","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        Map.entry(QueryCommand.COMMAND_WORD, new QueryCommandParser()),","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        Map.entry(RemarkCommand.COMMAND_WORD, new RemarkCommandParser()),","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"        Map.entry(CopyCommand.COMMAND_WORD, new CopyCommandParser()),","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"            Map.entry(LearnCommand.COMMAND_WORD, new LearnCommandParser()),","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"            Map.entry(UnlearnCommand.COMMAND_WORD, new UnlearnCommandParser()),","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"        Map.entry(UnmarkCommand.COMMAND_WORD, new UnmarkCommandParser())","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"    );","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        if (commandMap.containsKey(commandWord)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"            return commandMap.get(commandWord).parse(arguments);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jugsliao":3,"Zhongli5712":2,"gekhro":1,"-":40,"leeyi45":19}},{"path":"src/main/java/seedu/address/logic/parser/UnlearnCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEARN;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.logic.commands.UnlearnCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":" * Parser for the {@link UnlearnCommand} command","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"public class UnlearnCommandParser implements Parser\u003cUnlearnCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"    public UnlearnCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LEARN);","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"        Index index;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnlearnCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"        String lesson \u003d argMultimap.getValue(PREFIX_LEARN).orElse(\"\");","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"        return new UnlearnCommand(index, lesson);","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Zhongli5712":32}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import java.util.List;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":" * Parser for the {@link UnmarkCommand}","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"public class UnmarkCommandParser implements Parser\u003cUnmarkCommand\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    public UnmarkCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"      String[] args \u003d userInput.split(\" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"            // No index specified","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            throw new ParseException(String.format(\"%s needs an index!\", UnmarkCommand.COMMAND_WORD));","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        Index index;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"            index \u003d ParserUtil.parseIndex(args[1]);","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        List\u003cLocalDate\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(MarkCommand.EXPECTED_DATE_FORMAT);","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"        if (args.length \u003d\u003d 2) {","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"            dates.add(LocalDate.now());","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"            // User provided an index and possibly a date","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"            for (int i \u003d 2; i \u003c args.length; i++) {","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"                try {","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"                    dates.add(LocalDate.parse(args[i], formatter));","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"                    throw new ParseException(String.format(\"%s expects the date in the following format: %s\",","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"                        UnmarkCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"                        MarkCommand.EXPECTED_DATE_FORMAT","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"                    ));","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"        return new UnmarkCommand(index, dates);","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"leeyi45":57}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"    /** {@code Predicate} that always evaluate toue */","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"    Predicate\u003cTutee\u003e PREDICATE_SHOW_ALL_TUTEES \u003d unused -\u003e true;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"    Path getTuteeManagingSystemPath();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"    void setTuteeManagingSystemPath(Path tuteeManagingSystemPath);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"    void setTuteeManagingSystem(ReadOnlyTuteeManagingSystem tuteeManagingSystem);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"    /** Returns the TuteeManagingSystem */","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"    ReadOnlyTuteeManagingSystem getTuteeManagingSystem();","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"     * Returns true if a tutee with the same identity as {@code tutee} exists in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"    boolean hasTutee(Tutee tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"     * Deletes the given tutee.","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"     * The tutee must exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"    void deleteTutee(Tutee target);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"     * Adds the given tutee.","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"     * {@code tutee} must not already exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"    void addTutee(Tutee tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"     * Replaces the given tutee {@code target} with {@code editedTutee}.","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"     * The tutee identity of {@code editedTutee} must not be the same as another existing tutee in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"    void setTutee(Tutee target, Tutee editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"    /** Returns an unmodifiable view of the filtered tutee list */","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"    ObservableList\u003cTutee\u003e getFilteredTuteeList();","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"jugsliao"},"content":"     * Updates the filter of the filtered tutee list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"    void updateFilteredTuteeList(Predicate\u003cTutee\u003e predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jugsliao":23,"-":64}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    private final TuteeManagingSystem tuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"    private final FilteredList\u003cTutee\u003e filteredTutees;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"     * Initializes a ModelManager with the given tuteeManagingSystem and userPrefs.","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"    public ModelManager(ReadOnlyTuteeManagingSystem tuteeManagingSystem, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"        requireAllNonNull(tuteeManagingSystem, userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"        logger.fine(\"Initializing with address book: \" + tuteeManagingSystem + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"        this.tuteeManagingSystem \u003d new TuteeManagingSystem(tuteeManagingSystem);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"        filteredTutees \u003d new FilteredList\u003c\u003e(this.tuteeManagingSystem.getPersonList());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"        this(new TuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"    public Path getTuteeManagingSystemPath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"        return userPrefs.getTuteeManagingSystemPath();","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"    public void setTuteeManagingSystemPath(Path tuteeManagingSystemPath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(tuteeManagingSystemPath);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"        userPrefs.setAddressBookFilePath(tuteeManagingSystemPath);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TuteeManagingSystem \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"    public void setTuteeManagingSystem(ReadOnlyTuteeManagingSystem tuteeManagingSystem) {","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"        this.tuteeManagingSystem.resetData(tuteeManagingSystem);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"    public ReadOnlyTuteeManagingSystem getTuteeManagingSystem() {","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"        return tuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"jugsliao"},"content":"    public boolean hasTutee(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"jugsliao"},"content":"        return tuteeManagingSystem.hasPerson(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"jugsliao"},"content":"    public void deleteTutee(Tutee target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"jugsliao"},"content":"        tuteeManagingSystem.removePerson(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"jugsliao"},"content":"    public void addTutee(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"jugsliao"},"content":"        tuteeManagingSystem.addPerson(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jugsliao"},"content":"        updateFilteredTuteeList(PREDICATE_SHOW_ALL_TUTEES);","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"jugsliao"},"content":"    public void setTutee(Tutee target, Tutee editedTutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"jugsliao"},"content":"        requireAllNonNull(target, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"jugsliao"},"content":"        tuteeManagingSystem.setPerson(target, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"jugsliao"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Tutee List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"jugsliao"},"content":"     * Returns an unmodifiable view of the list of {@code Tutee} backed by the internal list of","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"jugsliao"},"content":"    public ObservableList\u003cTutee\u003e getFilteredTuteeList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"jugsliao"},"content":"        return filteredTutees;","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"jugsliao"},"content":"    public void updateFilteredTuteeList(Predicate\u003cTutee\u003e predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"jugsliao"},"content":"        filteredTutees.setPredicate(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"jugsliao"},"content":"        return tuteeManagingSystem.equals(other.tuteeManagingSystem)","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 filteredTutees.equals(other.filteredTutees);","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jugsliao":39,"-":111}},{"path":"src/main/java/seedu/address/model/ReadOnlyTuteeManagingSystem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"public interface ReadOnlyTuteeManagingSystem {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"    ObservableList\u003cTutee\u003e getPersonList();","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jugsliao":3,"-":14}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"    Path getTuteeManagingSystemPath();","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jugsliao":1,"-":15}},{"path":"src/main/java/seedu/address/model/TuteeManagingSystem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.UniquePersonList;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"public class TuteeManagingSystem implements ReadOnlyTuteeManagingSystem {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways EndTime avoid duplication","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"    {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"    public TuteeManagingSystem() {}","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"     * Creates an TuteeManagingSystem using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"    public TuteeManagingSystem(ReadOnlyTuteeManagingSystem toBeCopied) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"        this();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"     * Replaces the contents of the tutee list with {@code tutees}.","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"     * {@code tutees} must not contain duplicate tutees.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"    public void setPersons(List\u003cTutee\u003e tutees) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"        this.persons.setPersons(tutees);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"     * Resets the existing data of this {@code TuteeManagingSystem} with {@code newData}.","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"    public void resetData(ReadOnlyTuteeManagingSystem newData) {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"    //// tutee-level operations","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"     * Returns true if a tutee with the same identity as {@code tutee} exists in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"    public boolean hasPerson(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"        return persons.contains(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"     * Adds a tutee to the address book.","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"     * The tutee must not already exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"    public void addPerson(Tutee p) {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"        persons.add(p);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"     * Replaces the given tutee {@code target} in the list with {@code editedTutee}.","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"     * The tutee identity of {@code editedTutee} must not be the same as another existing tutee in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"    public void setPerson(Tutee target, Tutee editedTutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jugsliao"},"content":"        persons.setPerson(target, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"jugsliao"},"content":"     * Removes {@code key} StartTime this {@code TuteeManagingSystem}.","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"jugsliao"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jugsliao"},"content":"    public void removePerson(Tutee key) {","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"jugsliao"},"content":"        persons.remove(key);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"jugsliao"},"content":"    //// util methods","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"jugsliao"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"jugsliao"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"jugsliao"},"content":"        // TODO: refine later","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jugsliao"},"content":"    public ObservableList\u003cTutee\u003e getPersonList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"jugsliao"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"jugsliao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"jugsliao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"jugsliao"},"content":"                || (other instanceof TuteeManagingSystem // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 persons.equals(((TuteeManagingSystem) other).persons));","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"jugsliao"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"jugsliao"},"content":"        return persons.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jugsliao":120}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"        setAddressBookFilePath(newUserPrefs.getTuteeManagingSystemPath());","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"    public Path getTuteeManagingSystemPath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jugsliao":2,"-":85}},{"path":"src/main/java/seedu/address/model/tutee/Tutee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model.tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.EndTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.model.tutee.fields.Lesson;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Remark;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Schedule;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.StartTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Subject;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":" * Represents a Tutee in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"public class Tutee {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    private final Attendance attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"    private final Subject subject;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"    private final Schedule schedule;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"    private final StartTime startTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"    private final EndTime endTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"Zhongli5712"},"content":"    private final Lesson lessons;","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"    public Tutee(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        Attendance attendance, Remark remark, Subject subject, Schedule schedule,","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Zhongli5712"},"content":"        StartTime startTime, EndTime endTime, Set\u003cTag\u003e tags, Lesson lessons","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"    ) {","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Zhongli5712"},"content":"        requireAllNonNull(name, phone, email, attendance, address, remark, subject, schedule, startTime, endTime, tags, lessons);","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"Zhongli5712"},"content":"        this.lessons \u003d lessons;","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"    public Attendance getAttendance() {","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"        return attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"        return remark;","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"    public Subject getSubject() {","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"        return subject;","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"    public Schedule getSchedule() {","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"        return schedule;","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"leeyi45"},"content":"    public StartTime getStartTime() {","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"leeyi45"},"content":"        return startTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"leeyi45"},"content":"    public EndTime getEndTime() {","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"leeyi45"},"content":"        return endTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"Zhongli5712"},"content":"    public Lesson getLessons() {","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"Zhongli5712"},"content":"        return lessons;","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":113,"author":{"gitId":"leeyi45"},"content":"     * Returns an immutable tag set, which throws {@link UnsupportedOperationException}","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *     if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *     This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"jugsliao"},"content":"    public boolean isSamePerson(Tutee otherTutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"jugsliao"},"content":"        if (otherTutee \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"jugsliao"},"content":"        return otherTutee !\u003d null","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 otherTutee.getName().equals(getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     *     This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"jugsliao"},"content":"        if (!(other instanceof Tutee)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"jugsliao"},"content":"        Tutee otherTutee \u003d (Tutee) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"jugsliao"},"content":"        return otherTutee.getName().equals(getName())","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 otherTutee.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 otherTutee.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 otherTutee.getAddress().equals(getAddress())","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 otherTutee.getSubject().equals(getSubject())","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"Zhongli5712"},"content":"                \u0026\u0026 otherTutee.getLessons().equals(getLessons())","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"leeyi45"},"content":"                \u0026\u0026 otherTutee.getTags().equals(getTags());","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"jugsliao"},"content":"        return Objects.hash(name, phone, email, address, subject, schedule, startTime, endTime, tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":172,"author":{"gitId":"jugsliao"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"jugsliao"},"content":"                .append(\"; Subject: \")","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"jugsliao"},"content":"                .append(getSubject())","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"jugsliao"},"content":"                .append(\"; Schedule: \")","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"jugsliao"},"content":"                .append(getSchedule())","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"jugsliao"},"content":"                .append(\"; StartTime: \")","lastModifiedDate":"2023-03-19"},{"lineNumber":178,"author":{"gitId":"jugsliao"},"content":"                .append(getStartTime())","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"jugsliao"},"content":"                .append(\"; EndTime: \")","lastModifiedDate":"2023-03-19"},{"lineNumber":180,"author":{"gitId":"jugsliao"},"content":"                .append(getEndTime())","lastModifiedDate":"2023-03-19"},{"lineNumber":181,"author":{"gitId":"jugsliao"},"content":"                .append(\" Remark: \")","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"Zhongli5712"},"content":"                .append(getRemark())","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"Zhongli5712"},"content":"                .append(\" Lessons: \")","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"Zhongli5712"},"content":"                .append(getLessons());","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jugsliao":41,"Zhongli5712":13,"-":104,"leeyi45":36}},{"path":"src/main/java/seedu/address/model/tutee/TuteeBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.model.tutee;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.lang.reflect.Field;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.EndTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.model.tutee.fields.Lesson;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Remark;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Schedule;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.StartTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Subject;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":" * Builder class for {@link Tutee}","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"public class TuteeBuilder {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    // Identity fields","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    private Name name;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    private Phone phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    private Email email;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"    // Data fields","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"    private Address address;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"    private Attendance attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"    private Remark remark;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"    private Subject subject;","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    private Schedule schedule;","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    private StartTime startTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    private EndTime endTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"    private Lesson lessons;","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder() {}","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"     * Create a TuteeBuilder instance and populate it with the fields of","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"     * an existing Tutee","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder(Tutee existing) {","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"        this.name \u003d existing.getName();","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"        this.phone \u003d existing.getPhone();","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        this.email \u003d existing.getEmail();","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        this.address \u003d existing.getAddress();","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"        this.attendance \u003d existing.getAttendance();","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"        this.remark \u003d existing.getRemark();","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        this.subject \u003d existing.getSubject();","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"        this.schedule \u003d existing.getSchedule();","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"        this.startTime \u003d existing.getStartTime();","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        this.endTime \u003d existing.getEndTime();","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"Zhongli5712"},"content":"        this.lessons \u003d existing.getLessons();","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        // Need to copy, otherwise modifications to 1 tutee\u0027s tags","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"        // could affect the another\u0027s","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"        this.tags \u003d Set.copyOf(existing.getTags());","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"     * Change the stored email in the builder","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder withEmail(Email email) {","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"     * Change the stored phone in the builder","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder withPhone(Phone phone) {","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"     * Change the stored name in the builder","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder withName(Name name) {","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"     * Change the stored address in the builder","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder withAddress(Address address) {","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"     * Change the stored remark in the builder","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder withRemark(Remark remark) {","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"leeyi45"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"leeyi45"},"content":"     * Change the stored subject in the builder","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder withSubject(Subject subject) {","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"leeyi45"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"leeyi45"},"content":"     * Change the stored schedule in the builder","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder withSchedule(Schedule schedule) {","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"leeyi45"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"leeyi45"},"content":"     * Change the stored StartTime in the builder","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder withStartTime(StartTime startTime) {","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"leeyi45"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"leeyi45"},"content":"     * Change the stored EndTime in the builder","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder withEndTime(EndTime endTime) {","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"leeyi45"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"leeyi45"},"content":"     * Change the stored tags in the builder","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder withTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"leeyi45"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"leeyi45"},"content":"     * Change the stored tags in the builder","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder withTags(Tag ...tags) {","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"leeyi45"},"content":"        this.tags \u003d Set.of(tags);","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"leeyi45"},"content":"     * Change the stored attendance in the builder","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"leeyi45"},"content":"    public TuteeBuilder withAttendance(Attendance attendance) {","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"leeyi45"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"Zhongli5712"},"content":"     * Change the stored lessons in the builder","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"Zhongli5712"},"content":"    public TuteeBuilder withLessons(Lesson lessons) {","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"Zhongli5712"},"content":"        this.lessons \u003d lessons;","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"Zhongli5712"},"content":"        return this;","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"leeyi45"},"content":"     * Build the new {@link Tutee} instance. If any one of the fields is missing, a","lastModifiedDate":"2023-03-20"},{"lineNumber":169,"author":{"gitId":"leeyi45"},"content":"     * {@link NullPointerException} will be thrown","lastModifiedDate":"2023-03-20"},{"lineNumber":170,"author":{"gitId":"leeyi45"},"content":"     * @return A new tutee instance with the given fields","lastModifiedDate":"2023-03-20"},{"lineNumber":171,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":172,"author":{"gitId":"leeyi45"},"content":"    public Tutee build() {","lastModifiedDate":"2023-03-20"},{"lineNumber":173,"author":{"gitId":"leeyi45"},"content":"        // Use reflection to make sure that all the fields within the builder have been set","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"leeyi45"},"content":"        // to some non null value","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"leeyi45"},"content":"        for (Field field : this.getClass().getDeclaredFields()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"leeyi45"},"content":"            try {","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"leeyi45"},"content":"                if (field.get(this) \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"leeyi45"},"content":"                    throw new NullPointerException(String.format(\"%s was null!\", field.getName()));","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"leeyi45"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"leeyi45"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"leeyi45"},"content":"                throw new RuntimeException(\"Failed to validate fields in TuteeBuilder\", e);","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"leeyi45"},"content":"        } ","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"Zhongli5712"},"content":"        return new Tutee(name, phone, email, address, attendance, remark, subject, schedule, startTime, endTime, tags, lessons);","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":187,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Zhongli5712":12,"leeyi45":175}},{"path":"src/main/java/seedu/address/model/tutee/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model.tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":" * A tutee is considered unique by comparing using {@code Tutee#isSamePerson(Tutee)}. As such, adding and updating of","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":" * persons uses Tutee#isSamePerson(Tutee) for equality so as to ensure that the tutee being added or updated is","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a tutee uses Tutee#equals(Object) so","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":" * as to ensure that the tutee with exactly the same fields will be removed.","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":" * @see Tutee#isSamePerson(Tutee)","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"public class UniquePersonList implements Iterable\u003cTutee\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    private final ObservableList\u003cTutee\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    private final ObservableList\u003cTutee\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"     * Returns true if the list contains an equivalent tutee as the given argument.","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"    public boolean contains(Tutee toCheck) {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"    public boolean containsExactly(Tutee toCheck) {","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"gekhro"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"     * Adds a tutee to the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"     * The tutee must not already exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"    public void add(Tutee toAdd) {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"gekhro"},"content":"        if (containsExactly(toAdd)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"     * Replaces the tutee {@code target} in the list with {@code editedTutee}.","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"     * The tutee identity of {@code editedTutee} must not be the same as another existing tutee in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"    public void setPerson(Tutee target, Tutee editedTutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"        requireAllNonNull(target, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"        if (!target.isSamePerson(editedTutee) \u0026\u0026 contains(editedTutee)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"gekhro"},"content":"            System.out.println(2);","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"        internalList.set(index, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"     * Removes the equivalent tutee from the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"     * The tutee must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"    public void remove(Tutee toRemove) {","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jugsliao"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jugsliao"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jugsliao"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"jugsliao"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"jugsliao"},"content":"     * Replaces the contents of this list with {@code tutees}.","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"jugsliao"},"content":"     * {@code tutees} must not contain duplicate tutees.","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"jugsliao"},"content":"    public void setPersons(List\u003cTutee\u003e tutees) {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"jugsliao"},"content":"        requireAllNonNull(tutees);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"jugsliao"},"content":"        if (!personsAreUnique(tutees)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"gekhro"},"content":"            System.out.println(3);","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"jugsliao"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jugsliao"},"content":"        internalList.setAll(tutees);","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"jugsliao"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"jugsliao"},"content":"    public ObservableList\u003cTutee\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"jugsliao"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"jugsliao"},"content":"    public Iterator\u003cTutee\u003e iterator() {","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"jugsliao"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"jugsliao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"jugsliao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"jugsliao"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"jugsliao"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"jugsliao"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"jugsliao"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"jugsliao"},"content":"     * Returns true if {@code tutees} contains only unique tutees.","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"jugsliao"},"content":"    private boolean personsAreUnique(List\u003cTutee\u003e tutees) {","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"jugsliao"},"content":"        for (int i \u003d 0; i \u003c tutees.size() - 1; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"jugsliao"},"content":"            for (int j \u003d i + 1; j \u003c tutees.size(); j++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"jugsliao"},"content":"                if (tutees.get(i).isSamePerson(tutees.get(j))) {","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"jugsliao"},"content":"                    return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"jugsliao"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"jugsliao"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"jugsliao"},"content":"        return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jugsliao":136,"gekhro":8}},{"path":"src/main/java/seedu/address/model/tutee/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model.tutee.exceptions;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jugsliao":1,"-":10}},{"path":"src/main/java/seedu/address/model/tutee/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model.tutee.exceptions;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":" * Signals that the operation is unable to find the specified tutee.","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jugsliao":6}},{"path":"src/main/java/seedu/address/model/tutee/fields/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.model.tutee.fields;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":" * Represents a Tutee\u0027s address in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jugsliao":1,"-":55,"leeyi45":1}},{"path":"src/main/java/seedu/address/model/tutee/fields/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.model.tutee.fields;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":" * Immutable field representing the dates where the tutee was present","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"public class Attendance implements Iterable\u003cLocalDate\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"    private final Set\u003cLocalDate\u003e attendances;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"    public Attendance(Set\u003cLocalDate\u003e attendances) {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"        this.attendances \u003d new HashSet\u003c\u003e(attendances);","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"    public Attendance() {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        this(new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"     * Mark the tutee as present on the given date.","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"     * @param date Date of the tutee\u0027s presence","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"     * @return A new Attendance instance with the new date marked","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"    public Attendance markAttendance(LocalDate date) {","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        Set\u003cLocalDate\u003e copy \u003d new HashSet\u003c\u003e(attendances);","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        copy.add(date);","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        return new Attendance(copy);","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"     * Mark the tutee as absent on the given date.","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"     * @param date Date of the tutee\u0027s absence","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"     * @return A new Attendance instance with the new date marked","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"     * @throws NoSuchElementException If the student not present on the","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"     *     given date, marking them as absent again will throw a {@link NoSuchElementException}","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"    public Attendance unmarkAttendance(LocalDate date) {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"        Set\u003cLocalDate\u003e copy \u003d new HashSet\u003c\u003e(attendances);","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"        if (!copy.remove(date)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"            throw new NoSuchElementException();","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        return new Attendance(copy);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"     * Check whether the tutee was present or absent on the given date","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"     * @param date","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"     * @return True if the tutee was present, false otherwise","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"    public boolean didAttend(LocalDate date) {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"        return attendances.contains(date);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"        final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"YYYY-MM-DD\");","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"        return attendances.stream()","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"            .map(formatter::format)","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"            .collect(Collectors.joining(\",\", \"{\", \"}\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"        if (!(other instanceof Attendance)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"            return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"        Attendance o \u003d (Attendance) other;","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"        return o.attendances.equals(this.attendances);","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"        return attendances.hashCode();","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"    public Iterator\u003cLocalDate\u003e iterator() {","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"        return attendances.iterator();","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"    public Stream\u003cLocalDate\u003e stream() {","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"        return attendances.stream();","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"leeyi45":98}},{"path":"src/main/java/seedu/address/model/tutee/fields/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.model.tutee.fields;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":" * Represents a Tutee\u0027s email in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jugsliao":1,"-":69,"leeyi45":1}},{"path":"src/main/java/seedu/address/model/tutee/fields/EndTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.model.tutee.fields;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":" * Represents the end time of a tuition session.","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEndTime(String)}","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"public class EndTime {","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"            \"End time should be a valid time in the format of HH:mm.\";","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_CONSTRAINTS_AFTER_START_TIME \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"            \"End time should be after Start time.\";","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    private final LocalTime time;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"    public String endTime;","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"     * Constructs an {@code EndTime} with the specified end time.","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"     * @param endTime A valid end time in the format of HH:mm.","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"    public EndTime(String endTime) {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(endTime);","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"        checkArgument(isValidEndTime(endTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"        this.time \u003d LocalTime.parse(endTime, TIME_FORMATTER);","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"     * Returns true if a given string is a valid end time.","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"    public static boolean isValidEndTime(String test) {","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"            LocalTime.parse(test, TIME_FORMATTER);","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"            return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"            return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"    public String toString() {","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"        return time.format(TIME_FORMATTER);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"                || (other instanceof EndTime","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 time.equals(((EndTime) other).time));","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"        return time.hashCode();","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"jugsliao":64,"leeyi45":5}},{"path":"src/main/java/seedu/address/model/tutee/fields/FieldContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model.tutee.fields;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":" * Tests that a {@code Tutee}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"// Solution adapted from https://github.com/AY2223S2-CS2103T-W10-3/tp/blob/master/src/main/java/seedu/address/model/person/FieldContainsPartialKeywordsPredicate.java","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"public class FieldContainsKeywordsPredicate implements Predicate\u003cTutee\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"    private final List\u003cString\u003e nameKeywords;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"    private final String phoneKeyword;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"    private final String emailKeyword;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"    private final List\u003cString\u003e addressKeywords;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    private final String subjectKeyword;","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"    private final String scheduleKeyword;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"    private final String startTimeKeyword;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    private final String endTimeKeyword;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    private final List\u003cString\u003e tagKeywords;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"    public FieldContainsKeywordsPredicate(List\u003cString\u003e nameKeywords, String phoneKeyword, String emailKeyword,","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"                                          List\u003cString\u003e addressKeywords, String subjectKeyword,String scheduleKeyword,","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"                                          String startTimeKeyword, String endTimeKeyword, List\u003cString\u003e tagKeywords) {","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"        this.nameKeywords \u003d nameKeywords;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"        this.phoneKeyword \u003d phoneKeyword;","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"        this.emailKeyword \u003d emailKeyword;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"        this.addressKeywords \u003d addressKeywords;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"        this.subjectKeyword \u003d subjectKeyword;","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"        this.scheduleKeyword \u003d scheduleKeyword;","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"        this.startTimeKeyword \u003d startTimeKeyword;","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"        this.endTimeKeyword \u003d endTimeKeyword;","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"        this.tagKeywords \u003d tagKeywords;","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"    public boolean test(Tutee tutee) {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"        boolean containsName \u003d nameKeywords.isEmpty() ||","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"                nameKeywords.stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"                        .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tutee.getName().toString(), keyword));","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"        boolean containsPhone \u003d phoneKeyword.isEmpty() ||","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"                StringUtil.containsWordIgnoreCase(tutee.getPhone().value, phoneKeyword);","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"        boolean containsEmail \u003d emailKeyword.isEmpty() ||","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"                StringUtil.containsWordIgnoreCase(tutee.getEmail().value, emailKeyword);","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"        boolean containsAddress \u003d addressKeywords.isEmpty() ||","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"                addressKeywords.stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"                        .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tutee.getAddress().toString(), keyword));","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"        boolean containsSubject \u003d subjectKeyword.isEmpty() ||","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"                StringUtil.containsWordIgnoreCase(tutee.getSubject().subject, subjectKeyword);","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"        boolean containsSchedule \u003d scheduleKeyword.isEmpty() ||","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"                StringUtil.containsWordIgnoreCase(tutee.getSchedule().schedule, scheduleKeyword);","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"        boolean containsStartTime \u003d startTimeKeyword.isEmpty() ||","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"                StringUtil.containsWordIgnoreCase(tutee.getStartTime().startTime, startTimeKeyword);","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"        boolean containsEndTime \u003d endTimeKeyword.isEmpty() ||","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"                StringUtil.containsWordIgnoreCase(tutee.getEndTime().endTime, endTimeKeyword);","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"        boolean containsTag \u003d tagKeywords.isEmpty() ||","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"                tutee.getTags().stream().anyMatch(tag -\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"                        tagKeywords.stream().anyMatch(tagKeyword -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, tagKeyword)));","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"        return containsName \u0026\u0026 containsPhone \u0026\u0026 containsEmail \u0026\u0026 containsAddress \u0026\u0026 containsSubject \u0026\u0026 containsSchedule","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 containsStartTime \u0026\u0026 containsEndTime \u0026\u0026 containsTag;","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"                || (other instanceof FieldContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 nameKeywords.equals(((FieldContainsKeywordsPredicate) other).nameKeywords)) // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 phoneKeyword.equals(((FieldContainsKeywordsPredicate) other).phoneKeyword)","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 emailKeyword.equals(((FieldContainsKeywordsPredicate) other).emailKeyword)","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 addressKeywords.equals(((FieldContainsKeywordsPredicate) other).addressKeywords)","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 subjectKeyword.equals(((FieldContainsKeywordsPredicate) other).subjectKeyword)","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 scheduleKeyword.equals(((FieldContainsKeywordsPredicate) other).scheduleKeyword)","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 startTimeKeyword.equals(((FieldContainsKeywordsPredicate) other).startTimeKeyword)","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 endTimeKeyword.equals(((FieldContainsKeywordsPredicate) other).endTimeKeyword)","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 tagKeywords.equals(((FieldContainsKeywordsPredicate) other).tagKeywords);","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"jugsliao":81}},{"path":"src/main/java/seedu/address/model/tutee/fields/Lesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package seedu.address.model.tutee.fields;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":" * Immutable field representing the lessons where the tutee was present","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"public class Lesson implements Iterable\u003cString\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"    private final Set\u003cString\u003e lessons;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"    public Lesson(Set\u003cString\u003e lessons) {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"        this.lessons \u003d lessons;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"    public Lesson() {","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"        this.lessons \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"        lessons.add(\"Meet Tutor\");","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"     * Add new lesson to the lesson list of the tutee.","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"     * @param lesson Lesson the tutee learned.","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"     * @return A new Lesson list including the new lesson.","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"    public Lesson learn(String lesson) {","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"        lessons.add(lesson);","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Zhongli5712"},"content":"        return this;","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"     * Remove lesson to the lesson list of the tutee.","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Zhongli5712"},"content":"     * @param lesson Lesson the tutee learned.","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"     * @return A new Lesson list not including the new lesson.","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Zhongli5712"},"content":"     * @throws NoSuchElementException If the lesson have not been learned","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Zhongli5712"},"content":"     *     remove it will throw a {@link NoSuchElementException}","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Zhongli5712"},"content":"    public Lesson unlearn(String lesson) {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Zhongli5712"},"content":"        if (!lessons.remove(lesson)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Zhongli5712"},"content":"            throw new NoSuchElementException();","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Zhongli5712"},"content":"        return this;","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Zhongli5712"},"content":"     * Check whether the tutee learn this lesson","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Zhongli5712"},"content":"     * @param lesson","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Zhongli5712"},"content":"     * @return True if the tutee learned, false otherwise","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Zhongli5712"},"content":"    public boolean didAttend(String lesson) {","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Zhongli5712"},"content":"        return lessons.contains(lesson);","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Zhongli5712"},"content":"    public String toString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Zhongli5712"},"content":"        return lessons.stream()","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Zhongli5712"},"content":"            .collect(Collectors.joining(\",\", \"{\", \"}\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"Zhongli5712"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"Zhongli5712"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"Zhongli5712"},"content":"            return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"Zhongli5712"},"content":"        if (!(other instanceof Lesson)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"Zhongli5712"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"Zhongli5712"},"content":"        Lesson o \u003d (Lesson) other;","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"Zhongli5712"},"content":"        return o.lessons.equals(this.lessons);","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"Zhongli5712"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"Zhongli5712"},"content":"        return lessons.hashCode();","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"Zhongli5712"},"content":"    public Iterator\u003cString\u003e iterator() {","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"Zhongli5712"},"content":"        return lessons.iterator();","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"Zhongli5712"},"content":"    public List\u003cString\u003e list() {","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"Zhongli5712"},"content":"        return new ArrayList\u003c\u003e(lessons);","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"Zhongli5712"},"content":"    public Stream\u003cString\u003e stream() {","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"Zhongli5712"},"content":"        return lessons.stream();","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Zhongli5712":99}},{"path":"src/main/java/seedu/address/model/tutee/fields/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.model.tutee.fields;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":" * Represents a Tutee\u0027s name in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jugsliao":1,"-":57,"leeyi45":1}},{"path":"src/main/java/seedu/address/model/tutee/fields/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.model.tutee.fields;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":" * Tests that a {@code Tutee}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cTutee\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"    public boolean test(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tutee.getName().toString(), keyword));","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jugsliao":3,"-":26,"leeyi45":3}},{"path":"src/main/java/seedu/address/model/tutee/fields/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.model.tutee.fields;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":" * Represents a Tutee\u0027s phone number in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jugsliao":1,"-":49,"leeyi45":1}},{"path":"src/main/java/seedu/address/model/tutee/fields/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.model.tutee.fields;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":" * Represents a Tutee\u0027s remark in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"public class Remark {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"\";","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"    private final String value;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"     * Create a {@link Remark} with the given string value","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"        value \u003d remark;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"    public static boolean isValidRemark(String str) {","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"        return value;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"jugsliao":31,"Zhongli5712":1,"leeyi45":11}},{"path":"src/main/java/seedu/address/model/tutee/fields/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.model.tutee.fields;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":" * Represents a Tutee\u0027s schedule in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSchedule(String)}","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"public class Schedule {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"            \"Schedule should only be: \" + weekBuilder() + \"(case insensitive)\";","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    public static final DateTimeFormatter SCHED_FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        .appendOptional(DateTimeFormatter.ofPattern(\"EEEE\"))","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"        .appendOptional(DateTimeFormatter.ofPattern(\"E\"))","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        .toFormatter();","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"    public final String schedule;","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"     * Constructs a {@code Schedule}.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"     * @param schedule A valid day of the week.","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"    public Schedule(String schedule) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"        checkArgument(isValidSchedule(schedule), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"    private static String toUpperFirst(String str) {","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"        char first \u003d Character.toUpperCase(str.charAt(0));","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"        return String.format(\"%s%s\", first, str.substring(1).toLowerCase());","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"     * Helper method used for creating the MESSAGE_CONSTRAINTS variable","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"    private static String weekBuilder() {","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        return Arrays.stream(DayOfWeek.values())","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"            .map(x -\u003e {","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"                String str \u003d x.toString();","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"                return toUpperFirst(str);","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"            }).collect(Collectors.joining(\", \"));","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"     * Returns true if a given string is a valid day of the week.","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"    public static boolean isValidSchedule(String test) {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"            SCHED_FORMATTER.parse(toUpperFirst(test));","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"            return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"        return schedule;","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"                || (other instanceof Schedule // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 schedule.equals(((Schedule) other).schedule)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jugsliao"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"        return schedule.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jugsliao":53,"leeyi45":36}},{"path":"src/main/java/seedu/address/model/tutee/fields/StartTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.model.tutee.fields;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":" * Represents the start time of a tuition session.","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStartTime(String)}","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"public class StartTime {","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"            \"Start time should be a valid time in the format of HH:mm.\";","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    private final LocalTime time;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    public String startTime;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"     * Constructs a {@code StartTime} with the specified start time.","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"     * @param startTime A valid start time in the format of HH:mm.","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    public StartTime(String startTime) {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"        checkArgument(isValidStartTime(startTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"        this.time \u003d LocalTime.parse(startTime, TIME_FORMATTER);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"     * Returns true if a given string is a valid start time.","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"    public static boolean isValidStartTime(String test) {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"            LocalTime.parse(test, TIME_FORMATTER);","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"            return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"            return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"    public String toString() {","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"        return time.format(TIME_FORMATTER);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"                || (other instanceof StartTime","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 time.equals(((StartTime) other).time));","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"        return time.hashCode();","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"jugsliao":60,"leeyi45":5}},{"path":"src/main/java/seedu/address/model/tutee/fields/Subject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.model.tutee.fields;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":" * Represents a Tutee\u0027s name in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSubject(String)}","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"public class Subject {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"    private static enum ValidSubjects {","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"        MATH,","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"        PHYSICS,","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"        ENGLISH","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"            \"Subjects should only be: \" + subjectsBuilder().collect(Collectors.joining(\", \"));","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"    public final String subject;","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"     * Constructs a {@code Subject}.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"     * @param subject A valid subject.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"    public Subject(String subject) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"        requireNonNull(subject);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"        checkArgument(isValidSubject(subject), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"     * Helper method for creating the MESSAGE_CONSTRAINTS message","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"    private static Stream\u003cString\u003e subjectsBuilder() {","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"        return Arrays.stream(ValidSubjects.values())","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"            .map(value -\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"                String str \u003d value.toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"                char first \u003d str.charAt(0);","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"                return String.format(\"%s%s\", first, str.substring(1).toLowerCase());","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"            });","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"    public static boolean isValidSubject(String test) {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"            ValidSubjects.valueOf(test.toUpperCase());","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"            return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"        return subject;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jugsliao"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"                || (other instanceof Subject // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 subject.equals(((Subject) other).subject)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jugsliao"},"content":"        return subject.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jugsliao":53,"leeyi45":33}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.ReadOnlyTuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.EndTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.model.tutee.fields.Lesson;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Remark;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Schedule;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.StartTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Subject;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":" * Contains utility methods for populating {@code TuteeManagingSystem} with sample data.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"    public static Tutee[] getSamplePersons() {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"        return new Tutee[] {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"            new Tutee(","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"                new Name(\"Alex Yeoh\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"                new Phone(\"87438807\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"                new Attendance(),","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"                new Subject(\"Math\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"                new Schedule(\"monday\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"                new StartTime(\"08:30\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"                new EndTime(\"09:30\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"Zhongli5712"},"content":"                getTagSet(\"friends\"),","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Zhongli5712"},"content":"                new Lesson()","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"            ),","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"            new Tutee(","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"                new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"                new Phone(\"99272758\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"                new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"                new Attendance(),","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"                new Subject(\"Math\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"                new Schedule(\"monday\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"                new StartTime(\"08:30\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"                new EndTime(\"11:30\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"Zhongli5712"},"content":"                getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Zhongli5712"},"content":"                new Lesson()","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"            ),","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"            new Tutee(","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"                new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"                new Phone(\"93210283\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"                new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"                new Attendance(),","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"                new Subject(\"Math\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"                new Schedule(\"friday\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"                new StartTime(\"08:00\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"                new EndTime(\"10:30\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"Zhongli5712"},"content":"                getTagSet(\"neighbours\"),","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Zhongli5712"},"content":"                new Lesson()","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"            ),","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"            new Tutee(","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"                new Name(\"David Li\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"                new Phone(\"91031282\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"                new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"                new Attendance(),","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"                new Subject(\"Math\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"                new Schedule(\"thursday\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"                new StartTime(\"08:00\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"                new EndTime(\"09:30\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"Zhongli5712"},"content":"                getTagSet(\"family\"),","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"Zhongli5712"},"content":"                new Lesson()","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"            ),","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"            new Tutee(","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"                new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"                new Phone(\"92492021\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"                new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"                new Attendance(),","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"                new Subject(\"Math\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"                new Schedule(\"wednesday\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"                new StartTime(\"09:30\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"                new EndTime(\"11:30\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"Zhongli5712"},"content":"                getTagSet(\"classmates\"),","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"Zhongli5712"},"content":"                new Lesson()","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"leeyi45"},"content":"            ),","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"leeyi45"},"content":"            new Tutee(","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"leeyi45"},"content":"                new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"leeyi45"},"content":"                new Phone(\"92624417\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"leeyi45"},"content":"                new Email(\"royb@example.com\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"leeyi45"},"content":"                new Attendance(),","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"leeyi45"},"content":"                EMPTY_REMARK,","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"leeyi45"},"content":"                new Subject(\"Math\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"leeyi45"},"content":"                new Schedule(\"tuesday\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"leeyi45"},"content":"                new StartTime(\"10:30\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"leeyi45"},"content":"                new EndTime(\"12:30\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"Zhongli5712"},"content":"                getTagSet(\"colleagues\"),","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"Zhongli5712"},"content":"                new Lesson())","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":118,"author":{"gitId":"jugsliao"},"content":"    public static ReadOnlyTuteeManagingSystem getSampleAddressBook() {","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"jugsliao"},"content":"        TuteeManagingSystem sampleAb \u003d new TuteeManagingSystem();","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"jugsliao"},"content":"        for (Tutee sampleTutee : getSamplePersons()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"jugsliao"},"content":"            sampleAb.addPerson(sampleTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jugsliao":13,"Zhongli5712":13,"-":34,"leeyi45":75}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.ReadOnlyTuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":" * Represents a storage for {@link TuteeManagingSystem}.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"     * Returns TuteeManagingSystem data as a {@link ReadOnlyTuteeManagingSystem}.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    Optional\u003cReadOnlyTuteeManagingSystem\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"    Optional\u003cReadOnlyTuteeManagingSystem\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"     * Saves the given {@link ReadOnlyTuteeManagingSystem} to the storage.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"    void saveAddressBook(ReadOnlyTuteeManagingSystem addressBook) throws IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"     * @see #saveAddressBook(ReadOnlyTuteeManagingSystem)","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"    void saveAddressBook(ReadOnlyTuteeManagingSystem addressBook, Path filePath) throws IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jugsliao":10,"-":36}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.TuteeBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.EndTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"import seedu.address.model.tutee.fields.Lesson;","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Remark;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Schedule;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.StartTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Subject;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":" * Jackson-friendly version of {@link Tutee}.","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Tutee\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"    private final String address;","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"    private final String email;","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    private final String endTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"    private final String remark;","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    private final String schedule;","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"    private final String startTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"    private final String subject;","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"    private final List\u003cLocalDate\u003e attendanceDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Zhongli5712"},"content":"    private final List\u003cString\u003e lessons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given tutee details.","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"    public JsonAdaptedPerson(","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"        @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"        @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"        @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"        @JsonProperty(\"subject\") String subject,","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"        @JsonProperty(\"schedule\") String schedule,","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"        @JsonProperty(\"startTime\") String startTime,","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"        @JsonProperty(\"endTime\") String endTime,","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"        @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Zhongli5712"},"content":"        @JsonProperty(\"attendances\") List\u003cLocalDate\u003e attendances,","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Zhongli5712"},"content":"        @JsonProperty(\"lessons\") List\u003cString\u003e lessons","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"    ) {","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"        if (attendances !\u003d null) {","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"            this.attendanceDates.addAll(attendances);","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"Zhongli5712"},"content":"        if (lessons !\u003d null) {","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"Zhongli5712"},"content":"            this.lessons.addAll(lessons);","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"     * Converts a given {@code Tutee} into this class for Jackson use.","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"    public JsonAdaptedPerson(Tutee source) {","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"        name \u003d source.getName().toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"        phone \u003d source.getPhone().toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"        email \u003d source.getEmail().toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"        address \u003d source.getAddress().toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"        remark \u003d source.getRemark().toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"        subject \u003d source.getSubject().toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"        schedule \u003d source.getSchedule().toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"        startTime \u003d source.getStartTime().toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"leeyi45"},"content":"        endTime \u003d source.getEndTime().toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"leeyi45"},"content":"        attendanceDates.forEach(attendanceDates::add);","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"Zhongli5712"},"content":"        lessons.addAll(source.getLessons().list());","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"leeyi45"},"content":"     * Call this method to parse the field from its string value. If the field has an","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"leeyi45"},"content":"     * invalid value determined by its `isValid` * check, then a","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"leeyi45"},"content":"     * {@link IllegalValueException} will be thrown.","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"leeyi45"},"content":"     * A {@link RuntimeException} may be thrown if the provided class does not have the requisite","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"leeyi45"},"content":"     * validation method, constraint message and constructor. If this is the case, you should modify your class","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"leeyi45"},"content":"     * appropriately. This exception should never be thrown when in production.","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"leeyi45"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"leeyi45"},"content":"     * @param \u003cT\u003e Type of the field. Its class must have a public string constant named MESSAGE_CONSTRAINTS and","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"leeyi45"},"content":"     *     a public static method called isValid + the name of the class, i.e. `isValidName(String arg)`","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"leeyi45"},"content":"     *     and takes in 1 string parameter, returning a boolean. It must also have a constructor that takes a","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"leeyi45"},"content":"     *     single string as a parameter.","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"leeyi45"},"content":"     * @param value String value to parse","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"leeyi45"},"content":"     * @param clazz Class of the field","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"leeyi45"},"content":"     *     false is returned","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"leeyi45"},"content":"     * @return Parsed field value","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"leeyi45"},"content":"     * @throws IllegalValueException","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"leeyi45"},"content":"    private static \u003cT\u003e T validateField(String value, Class\u003cT\u003e clazz) throws IllegalValueException {","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"leeyi45"},"content":"        String simpleName \u003d clazz.getSimpleName();","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"leeyi45"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"leeyi45"},"content":"            if (value \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"leeyi45"},"content":"                throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, simpleName));","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"leeyi45"},"content":"            String constraintsMessage \u003d (String) clazz.getField(\"MESSAGE_CONSTRAINTS\").get(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"leeyi45"},"content":"            boolean isValid \u003d (boolean) clazz.getMethod(\"isValid\" + simpleName, String.class).invoke(null, value);","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"leeyi45"},"content":"            if (!isValid) {","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"leeyi45"},"content":"                throw new IllegalValueException(constraintsMessage);","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"leeyi45"},"content":"            try {","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"leeyi45"},"content":"                return clazz.getConstructor(String.class).newInstance(value);","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"leeyi45"},"content":"            } catch (NoSuchMethodException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"leeyi45"},"content":"                throw new RuntimeException(String.format(","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"leeyi45"},"content":"                    \"Could not find a constructor of the signature %s(String value)\",","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"leeyi45"},"content":"                    simpleName","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"leeyi45"},"content":"                ));","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"leeyi45"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"leeyi45"},"content":"        } catch (final NoSuchFieldException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"leeyi45"},"content":"            throw new RuntimeException(String.format(","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"leeyi45"},"content":"                \"Class %s does not contain a field called MESSAGE_CONSTRAINTS\",","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"leeyi45"},"content":"                simpleName","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"leeyi45"},"content":"            ));","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"leeyi45"},"content":"        } catch (final NoSuchMethodException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"leeyi45"},"content":"            throw new RuntimeException(String.format(","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"leeyi45"},"content":"                \"Class %s does not contain a method called isValid%s\",","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"leeyi45"},"content":"                simpleName,","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"leeyi45"},"content":"                simpleName","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"leeyi45"},"content":"            ));","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"leeyi45"},"content":"        } catch (IllegalAccessException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"leeyi45"},"content":"            throw new RuntimeException(String.format(","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"leeyi45"},"content":"                \"Could not access the field MESSAGE_CONSTRAINTS or \"","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"leeyi45"},"content":"                    + \" the method isValid%s on class %s\",","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"leeyi45"},"content":"                simpleName,","lastModifiedDate":"2023-03-20"},{"lineNumber":163,"author":{"gitId":"leeyi45"},"content":"                simpleName","lastModifiedDate":"2023-03-20"},{"lineNumber":164,"author":{"gitId":"leeyi45"},"content":"            ));","lastModifiedDate":"2023-03-20"},{"lineNumber":165,"author":{"gitId":"leeyi45"},"content":"        } catch (final InvocationTargetException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":166,"author":{"gitId":"leeyi45"},"content":"            throw new RuntimeException(String.format(","lastModifiedDate":"2023-03-20"},{"lineNumber":167,"author":{"gitId":"leeyi45"},"content":"                \"MESSAGE_CONSTRAINTS and isValid%s must both be static\",","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"leeyi45"},"content":"                simpleName","lastModifiedDate":"2023-03-20"},{"lineNumber":169,"author":{"gitId":"leeyi45"},"content":"            ));","lastModifiedDate":"2023-03-20"},{"lineNumber":170,"author":{"gitId":"leeyi45"},"content":"        } catch (final InstantiationException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":171,"author":{"gitId":"leeyi45"},"content":"            throw new RuntimeException(String.format(","lastModifiedDate":"2023-03-20"},{"lineNumber":172,"author":{"gitId":"leeyi45"},"content":"                \"Could not find a constructor of the signature %s(String value)\",","lastModifiedDate":"2023-03-20"},{"lineNumber":173,"author":{"gitId":"leeyi45"},"content":"                simpleName","lastModifiedDate":"2023-03-20"},{"lineNumber":174,"author":{"gitId":"leeyi45"},"content":"            ));","lastModifiedDate":"2023-03-20"},{"lineNumber":175,"author":{"gitId":"leeyi45"},"content":"        } catch (final ClassCastException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":176,"author":{"gitId":"leeyi45"},"content":"            throw new RuntimeException(String.format(","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"leeyi45"},"content":"                \"Class %s: MESSAGE_CONSTRAINTS must be of type String, and isValid%s must return a boolean\",","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"leeyi45"},"content":"                simpleName","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"leeyi45"},"content":"            ));","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":184,"author":{"gitId":"jugsliao"},"content":"     * Converts this Jackson-friendly adapted tutee object into the model\u0027s {@code Tutee} object.","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":186,"author":{"gitId":"jugsliao"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tutee.","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":188,"author":{"gitId":"jugsliao"},"content":"    public Tutee toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":195,"author":{"gitId":"leeyi45"},"content":"        TuteeBuilder builder \u003d new TuteeBuilder();","lastModifiedDate":"2023-03-20"},{"lineNumber":196,"author":{"gitId":"leeyi45"},"content":"        builder.withName(validateField(name, Name.class))","lastModifiedDate":"2023-03-20"},{"lineNumber":197,"author":{"gitId":"leeyi45"},"content":"            .withPhone(validateField(phone, Phone.class))","lastModifiedDate":"2023-03-20"},{"lineNumber":198,"author":{"gitId":"leeyi45"},"content":"            .withEmail(validateField(email, Email.class))","lastModifiedDate":"2023-03-20"},{"lineNumber":199,"author":{"gitId":"leeyi45"},"content":"            .withAddress(validateField(address, Address.class))","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"leeyi45"},"content":"            .withAttendance(new Attendance(new HashSet\u003c\u003e(attendanceDates)))","lastModifiedDate":"2023-03-20"},{"lineNumber":201,"author":{"gitId":"leeyi45"},"content":"            .withRemark(validateField(remark, Remark.class))","lastModifiedDate":"2023-03-20"},{"lineNumber":202,"author":{"gitId":"leeyi45"},"content":"            .withSubject(validateField(subject, Subject.class))","lastModifiedDate":"2023-03-20"},{"lineNumber":203,"author":{"gitId":"leeyi45"},"content":"            .withSchedule(validateField(schedule, Schedule.class))","lastModifiedDate":"2023-03-20"},{"lineNumber":204,"author":{"gitId":"leeyi45"},"content":"            .withStartTime(validateField(startTime, StartTime.class))","lastModifiedDate":"2023-03-20"},{"lineNumber":205,"author":{"gitId":"leeyi45"},"content":"            .withEndTime(validateField(endTime, EndTime.class))","lastModifiedDate":"2023-03-20"},{"lineNumber":206,"author":{"gitId":"Zhongli5712"},"content":"            .withTags(modelTags)","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"Zhongli5712"},"content":"            .withLessons(new Lesson(new HashSet\u003c\u003e(lessons)));","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":209,"author":{"gitId":"leeyi45"},"content":"        return builder.build();","lastModifiedDate":"2023-03-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jugsliao":5,"Zhongli5712":10,"-":60,"leeyi45":136}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.ReadOnlyTuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":" * A class to access TuteeManagingSystem data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"    public Optional\u003cReadOnlyTuteeManagingSystem\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"    public Optional\u003cReadOnlyTuteeManagingSystem\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"    public void saveAddressBook(ReadOnlyTuteeManagingSystem addressBook) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyTuteeManagingSystem)}.","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"    public void saveAddressBook(ReadOnlyTuteeManagingSystem addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jugsliao":7,"-":73}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.ReadOnlyTuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":" * An Immutable TuteeManagingSystem that is serializable to JSON format.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate tutee(s).\";","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"     * Converts a given {@code ReadOnlyTuteeManagingSystem} into this class for Jackson use.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"    public JsonSerializableAddressBook(ReadOnlyTuteeManagingSystem source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"     * Converts this address book into the model\u0027s {@code TuteeManagingSystem} object.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"    public TuteeManagingSystem toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"        TuteeManagingSystem tuteeManagingSystem \u003d new TuteeManagingSystem();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"            Tutee tutee \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"            if (tuteeManagingSystem.hasPerson(tutee)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"            tuteeManagingSystem.addPerson(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"        return tuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jugsliao":14,"-":46}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.ReadOnlyTuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    Optional\u003cReadOnlyTuteeManagingSystem\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"    void saveAddressBook(ReadOnlyTuteeManagingSystem addressBook) throws IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jugsliao":3,"-":29}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.ReadOnlyTuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":" * Manages storage of TuteeManagingSystem data in local storage.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TuteeManagingSystem methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"    public Optional\u003cReadOnlyTuteeManagingSystem\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"    public Optional\u003cReadOnlyTuteeManagingSystem\u003e readAddressBook(Path filePath)","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"    public void saveAddressBook(ReadOnlyTuteeManagingSystem addressBook) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"    public void saveAddressBook(ReadOnlyTuteeManagingSystem addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jugsliao":6,"-":71,"leeyi45":2}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":" * An UI component that displays information of a {@code Tutee}.","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"     * TuteeManagingSystem level 4\u003c/a\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    public final Tutee tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"Zhongli5712"},"content":"    private Label subject;","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Zhongli5712"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Zhongli5712"},"content":"    private Label schedule;","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Zhongli5712"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"    private Label startTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"    private Label endTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"    private Label remark;","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":54,"author":{"gitId":"Zhongli5712"},"content":"    @FXML","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Zhongli5712"},"content":"    private FlowPane lessons;","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"     * Creates a {@code PersonCode} with the given {@code Tutee} and index to display.","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"    public PersonCard(Tutee tutee, int displayedIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"        this.tutee \u003d tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"        name.setText(\"Name: \" + tutee.getName().toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"        phone.setText(\"Phone: \" + tutee.getPhone().toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"        address.setText(\"Address: \" + tutee.getAddress().toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"        email.setText(\"Email: \" + tutee.getEmail().toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"        subject.setText(\"Subject: \" + tutee.getSubject().toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"        schedule.setText(\"Schedule: \" + tutee.getSchedule().toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"        startTime.setText(\"Start time: \" + tutee.getStartTime().toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"        endTime.setText(\"End time: \" + tutee.getEndTime().toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"        remark.setText(\"Remark: \" + tutee.getRemark().toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"        tutee.getTags().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":76,"author":{"gitId":"Zhongli5712"},"content":"        lessons.getChildren().add(new Label(\"Lessons: \"));","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"Zhongli5712"},"content":"        tutee.getLessons().stream()","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"Zhongli5712"},"content":"                .forEach(lesson -\u003e lessons.getChildren().add(new Label(lesson)));","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"Zhongli5712"},"content":"        lessons.setHgap(10);","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"Zhongli5712"},"content":"        lessons.setVgap(10);","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"jugsliao"},"content":"                \u0026\u0026 tutee.equals(card.tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jugsliao":23,"Zhongli5712":11,"-":64,"leeyi45":2}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"    private ListView\u003cTutee\u003e personListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"    public PersonListPanel(ObservableList\u003cTutee\u003e tuteeList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"        personListView.setItems(tuteeList);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Tutee} using a {@code PersonCard}.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"    class PersonListViewCell extends ListCell\u003cTutee\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"        protected void updateItem(Tutee tutee, boolean empty) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"            super.updateItem(tutee, empty);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"            if (empty || tutee \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"                setGraphic(new PersonCard(tutee, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jugsliao":10,"-":39}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/tms2.png\";","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Zhongli5712":1,"-":87}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"         title\u003d\"Tutee managing system\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"    \u003cImage url\u003d\"@/images/tms2.png\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"        \u003cVBox fx:id\u003d\"tuteeList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jugsliao":1,"Zhongli5712":2,"-":57}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"      \u003cFlowPane fx:id\u003d\"lessons\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"      \u003cLabel fx:id\u003d\"subject\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$subject\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"      \u003cLabel fx:id\u003d\"schedule\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$schedule\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"      \u003cLabel fx:id\u003d\"startTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$schedule\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"      \u003cLabel fx:id\u003d\"endTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endTime\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jugsliao":3,"Zhongli5712":3,"-":36}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"        // convert from zero-based index EndTime one-based index","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jugsliao":1,"-":59}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"        assertNotNull(AppUtil.getImage(\"/images/tms2.png\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Zhongli5712":1,"-":35}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"jugsliao"},"content":"     * The test method below tries EndTime verify all above with a reasonably low number of test cases.","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jugsliao":1,"-":142}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ENDTIME_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SCHEDULE_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STARTTIME_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SUBJECT_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.ReadOnlyTuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"import seedu.address.testutil.TuteeTestBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"                + ADDRESS_DESC_AMY + SUBJECT_DESC_AMY + SCHEDULE_DESC_AMY + STARTTIME_DESC_AMY + ENDTIME_DESC_AMY;","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"        Tutee expectedTutee \u003d new TuteeTestBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"jugsliao"},"content":"        expectedModel.addTutee(expectedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"jugsliao"},"content":"     * - the feedback message is equal EndTime {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"jugsliao"},"content":"        Model expectedModel \u003d new ModelManager(model.getTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"jugsliao"},"content":"     * - the resulting error message is equal EndTime {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"jugsliao"},"content":"     * A stub class EndTime throw an {@code IOException} when the save method is called.","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"jugsliao"},"content":"        public void saveAddressBook(ReadOnlyTuteeManagingSystem addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jugsliao":9,"-":150,"leeyi45":6}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTuteeManagingSystem;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.TuteeBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"        model \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"        Tutee validTutee \u003d new TuteeBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"        Model expectedModel \u003d new ModelManager(model.getTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"        expectedModel.addTutee(validTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"        assertCommandSuccess(new AddCommand(validTutee), model,","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validTutee), expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"        Tutee tuteeInList \u003d model.getTuteeManagingSystem().getPersonList().get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"        assertCommandFailure(new AddCommand(tuteeInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jugsliao":9,"-":34,"leeyi45":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"gekhro"},"content":"import seedu.address.model.ReadOnlyTuteeManagingSystem;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"gekhro"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"import seedu.address.testutil.TuteeTestBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        Tutee validTutee \u003d new TuteeTestBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"        CommandResult commandResult \u003d new AddCommand(validTutee).execute(modelStub);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validTutee), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"        assertEquals(Arrays.asList(validTutee), modelStub.personsAdded);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"        Tutee validTutee \u003d new TuteeTestBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"        AddCommand addCommand \u003d new AddCommand(validTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"        Tutee alice \u003d new TuteeTestBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        Tutee bob \u003d new TuteeTestBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"        // different tutee -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"gekhro"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"jugsliao"},"content":"        public Path getTuteeManagingSystemPath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"jugsliao"},"content":"        public void setTuteeManagingSystemPath(Path tuteeManagingSystemPath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"jugsliao"},"content":"        public void addTutee(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"jugsliao"},"content":"        public void setTuteeManagingSystem(ReadOnlyTuteeManagingSystem tuteeManagingSystem) {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"jugsliao"},"content":"        public ReadOnlyTuteeManagingSystem getTuteeManagingSystem() {","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"jugsliao"},"content":"        public boolean hasTutee(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"jugsliao"},"content":"        public void deleteTutee(Tutee target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"jugsliao"},"content":"        public void setTutee(Tutee target, Tutee editedTutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"jugsliao"},"content":"        public ObservableList\u003cTutee\u003e getFilteredTuteeList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"jugsliao"},"content":"        public void updateFilteredTuteeList(Predicate\u003cTutee\u003e predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"jugsliao"},"content":"     * A Model stub that contains a single tutee.","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":156,"author":{"gitId":"jugsliao"},"content":"        private final Tutee tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":158,"author":{"gitId":"jugsliao"},"content":"        ModelStubWithPerson(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"jugsliao"},"content":"            requireNonNull(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"jugsliao"},"content":"            this.tutee \u003d tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"jugsliao"},"content":"        public boolean hasTutee(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"jugsliao"},"content":"            requireNonNull(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"jugsliao"},"content":"            return this.tutee.isSamePerson(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"jugsliao"},"content":"     * A Model stub that always accept the tutee being added.","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"jugsliao"},"content":"        final ArrayList\u003cTutee\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"jugsliao"},"content":"        public boolean hasTutee(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"jugsliao"},"content":"            requireNonNull(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"jugsliao"},"content":"            return personsAdded.stream().anyMatch(tutee::isSamePerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"jugsliao"},"content":"        public void addTutee(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"jugsliao"},"content":"            requireNonNull(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"jugsliao"},"content":"            personsAdded.add(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"jugsliao"},"content":"        public ReadOnlyTuteeManagingSystem getTuteeManagingSystem() {","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"jugsliao"},"content":"            return new TuteeManagingSystem();","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jugsliao":35,"gekhro":3,"-":151,"leeyi45":5}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTuteeManagingSystem;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"        Model model \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"        expectedModel.setTuteeManagingSystem(new TuteeManagingSystem());","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jugsliao":4,"gekhro":1,"-":27}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"gekhro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"gekhro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Likes to work\";","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Likes to build\";","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"gekhro"},"content":"    public static final String VALID_SUBJECT_AMY \u003d \"Math\";","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"    public static final String VALID_SUBJECT_BOB \u003d \"English\";","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"    public static final String VALID_SCHEDULE_AMY \u003d \"friday\";","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"gekhro"},"content":"    public static final String VALID_SCHEDULE_BOB \u003d \"friday\";","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"    public static final String VALID_STARTTIME_AMY \u003d \"10:30\";","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"    public static final String VALID_STARTTIME_BOB \u003d \"14:00\";","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"    public static final String VALID_ENDTIME_AMY \u003d \"12:30\";","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"    public static final String VALID_ENDTIME_BOB \u003d \"16:00\";","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"gekhro"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"gekhro"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"gekhro"},"content":"    public static final String SUBJECT_DESC_AMY \u003d \" \" + PREFIX_SUBJECT + VALID_SUBJECT_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"Zhongli5712"},"content":"    public static final String SUBJECT_DESC_BOB \u003d \" \" + PREFIX_SUBJECT + VALID_SUBJECT_BOB;","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"gekhro"},"content":"    public static final String SCHEDULE_DESC_AMY \u003d \" \" + PREFIX_SCHEDULE + VALID_SCHEDULE_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"gekhro"},"content":"    public static final String SCHEDULE_DESC_BOB \u003d \" \" + PREFIX_SCHEDULE + VALID_SCHEDULE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"    public static final String STARTTIME_DESC_AMY \u003d \" \" + PREFIX_STARTTIME + VALID_STARTTIME_AMY;","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"    public static final String STARTTIME_DESC_BOB \u003d \" \" + PREFIX_STARTTIME + VALID_STARTTIME_BOB;","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"    public static final String ENDTIME_DESC_AMY \u003d \" \" + PREFIX_ENDTIME + VALID_ENDTIME_AMY;","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"    public static final String ENDTIME_DESC_BOB \u003d \" \" + PREFIX_ENDTIME + VALID_ENDTIME_BOB;","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"gekhro"},"content":"    public static final String INVALID_SUBJECT_DESC \u003d \" \" + PREFIX_SUBJECT; // empty subject not allowed for students","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"    public static final String INVALID_SCHEDULE_DESC \u003d \" \"","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"            + PREFIX_SUBJECT + \"mon\"; // short form for the day not allowed","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"jugsliao"},"content":"    public static final String INVALID_STARTTIME_DESC \u003d \" \" + PREFIX_STARTTIME + \"two\"; // must be in HH:MM format","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"jugsliao"},"content":"    public static final String INVALID_ENDTIME_DESC \u003d \" \" + PREFIX_ENDTIME; // empty end time not allowed for students","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"gekhro"},"content":"                .withSubject(VALID_SUBJECT_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"jugsliao"},"content":"     * Convenience wrapper EndTime {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"jugsliao"},"content":"     * - the address book, filtered tutee list and selected tutee in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"jugsliao"},"content":"        // we are unable EndTime defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"jugsliao"},"content":"        TuteeManagingSystem expectedTuteeManagingSystem \u003d new TuteeManagingSystem(actualModel.getTuteeManagingSystem());","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"jugsliao"},"content":"        List\u003cTutee\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTuteeList());","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":141,"author":{"gitId":"jugsliao"},"content":"        assertEquals(expectedTuteeManagingSystem, actualModel.getTuteeManagingSystem());","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"jugsliao"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredTuteeList());","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"jugsliao"},"content":"     * Updates {@code model}\u0027s filtered list EndTime show only the tutee at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"jugsliao"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTuteeList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"jugsliao"},"content":"        Tutee tutee \u003d model.getFilteredTuteeList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"leeyi45"},"content":"        final String[] splitName \u003d tutee.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"jugsliao"},"content":"        model.updateFilteredTuteeList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"jugsliao"},"content":"        assertEquals(1, model.getFilteredTuteeList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jugsliao":26,"Zhongli5712":1,"gekhro":14,"-":111,"leeyi45":6}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTuteeManagingSystem;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    private Model model \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"        Tutee tuteeToDelete \u003d model.getFilteredTuteeList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, tuteeToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"        expectedModel.deleteTutee(tuteeToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTuteeList().size() + 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"        Tutee tuteeToDelete \u003d model.getFilteredTuteeList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, tuteeToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"        Model expectedModel \u003d new ModelManager(model.getTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"        expectedModel.deleteTutee(tuteeToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTuteeManagingSystem().getPersonList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"jugsliao"},"content":"        // different tutee -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"jugsliao"},"content":"        model.updateFilteredTuteeList(p -\u003e false);","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"jugsliao"},"content":"        assertTrue(model.getFilteredTuteeList().isEmpty());","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jugsliao":16,"-":93}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTuteeManagingSystem;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"gekhro"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"import seedu.address.testutil.TuteeTestBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"    private Model model \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"        Tutee editedTutee \u003d new TuteeTestBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedTutee).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"gekhro"},"content":"        Model expectedModel \u003d new ModelManager(new TuteeManagingSystem(model.getTuteeManagingSystem()),","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"gekhro"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"        expectedModel.setTutee(model.getFilteredTuteeList().get(0), editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredTuteeList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"        Tutee lastTutee \u003d model.getFilteredTuteeList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"        TuteeTestBuilder personInList \u003d new TuteeTestBuilder(lastTutee);","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"        Tutee editedTutee \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"gekhro"},"content":"        Model expectedModel \u003d new ModelManager(new TuteeManagingSystem(model.getTuteeManagingSystem()),","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"gekhro"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"        expectedModel.setTutee(lastTutee, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"        Tutee editedTutee \u003d model.getFilteredTuteeList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"gekhro"},"content":"        Model expectedModel \u003d new ModelManager(new TuteeManagingSystem(model.getTuteeManagingSystem()),","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"gekhro"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"jugsliao"},"content":"        Tutee tuteeInFilteredList \u003d model.getFilteredTuteeList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"        Tutee editedTutee \u003d new TuteeTestBuilder(tuteeInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"jugsliao"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"gekhro"},"content":"        Model expectedModel \u003d new ModelManager(new TuteeManagingSystem(model.getTuteeManagingSystem()),","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"gekhro"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"jugsliao"},"content":"        expectedModel.setTutee(model.getFilteredTuteeList().get(0), editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"jugsliao"},"content":"        Tutee firstTutee \u003d model.getFilteredTuteeList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"jugsliao"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstTutee).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"jugsliao"},"content":"        // edit tutee in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"jugsliao"},"content":"        Tutee tuteeInList \u003d model.getTuteeManagingSystem().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"jugsliao"},"content":"                new EditPersonDescriptorBuilder(tuteeInList).build());","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"jugsliao"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTuteeList().size() + 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"jugsliao"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTuteeManagingSystem().getPersonList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jugsliao":23,"gekhro":9,"-":141,"leeyi45":4}},{"path":"src/test/java/seedu/address/logic/commands/EditTuteeDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"public class EditTuteeDescriptorTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jugsliao":1,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTuteeManagingSystem;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"import seedu.address.logic.commands.FilterCommand.FilterTuteeDescription;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterCommand}.","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"class FilterCommandTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"    public void equals() {","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"        FilterTuteeDescription firstFilterTuteeDescription \u003d new FilterCommand.FilterTuteeDescription();","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"        firstFilterTuteeDescription.setSubjectToFilter(\"math\");","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"        FilterTuteeDescription secondFilterTuteeDescription \u003d new FilterCommand.FilterTuteeDescription();","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"        secondFilterTuteeDescription.setSubjectToFilter(\"english\");","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstFilterTuteeDescription);","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondFilterTuteeDescription);","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterCommand(firstFilterTuteeDescription);","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"        // different tutee -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"jugsliao":46}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTuteeManagingSystem;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    private Model model \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"        // different tutee -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"        expectedModel.updateFilteredTuteeList(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTuteeList());","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"        expectedModel.updateFilteredTuteeList(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredTuteeList());","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jugsliao":8,"-":74,"leeyi45":1}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTuteeManagingSystem;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"        model \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"        expectedModel \u003d new ModelManager(model.getTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jugsliao":3,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTuteeManagingSystem;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.parser.MarkCommandParser;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"import seedu.address.testutil.TuteeTestBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"class MarkCommandParserTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    public void execute_withGivenDate() throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"        Tutee amy \u003d new TuteeTestBuilder(AMY)","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"            .withAttendance(new Attendance(Set.of(LocalDate.of(2020, 03, 04))))","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"            .build();","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"        Model model \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        expectedModel.addTutee(amy);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"        MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        MarkCommand cmd \u003d parser.parse(\"0 2020-03-04\");","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        assertCommandSuccess(","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"            cmd,","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"            model,","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"            \"Marked\" + AMY.getName() + \"\u0027s attendance for 2020-03-04 as present\",","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"            expectedModel","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"    // TODO Add this test that needs LocalDate.now() to be mocked","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"    // @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"    // public void execute_withoutGivenDate() throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"    //     Tutee amy \u003d new TuteeTestBuilder(AMY)","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"    //         .withAttendance(new Attendance(Set.of(LocalDate.of(2020, 03, 04))))","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"    //         .build();","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"    //     Model model \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"    //     Model expectedModel \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"    //     expectedModel.addTutee(amy);","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"    //     MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"    //     MarkCommand cmd \u003d parser.parse(\"0\");","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"    //     assertCommandSuccess(","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"    //         cmd,","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"    //         model,","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"    //         \"Expected attendance for \" + amy.getName() + \" to have been marked as present for 2020-03-04\",","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"    //         expectedModel","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"    //     );","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"    // }","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"jugsliao":5,"leeyi45":60}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTuteeManagingSystem;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"gekhro"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Remark;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"import seedu.address.testutil.TuteeTestBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"class RemarkCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"    private Model model \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"        Tutee firstTutee \u003d model.getFilteredTuteeList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"        Tutee editedTutee \u003d new TuteeTestBuilder(firstTutee).withRemark(\"\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"                new Remark(editedTutee.getRemark().toString()));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"gekhro"},"content":"        Model expectedModel \u003d new ModelManager(new TuteeManagingSystem(model.getTuteeManagingSystem()),","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"gekhro"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"        expectedModel.setTutee(firstTutee, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"        Tutee firstTutee \u003d model.getFilteredTuteeList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        Tutee editedTutee \u003d new TuteeTestBuilder(model.getFilteredTuteeList()","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"            INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"            new Remark(","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"                editedTutee.getRemark()","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"                    .toString()","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"            )","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"gekhro"},"content":"        Model expectedModel \u003d new ModelManager(new TuteeManagingSystem(model.getTuteeManagingSystem()),","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"gekhro"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"        expectedModel.setTutee(firstTutee, editedTutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTuteeList().size() + 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"jugsliao"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"jugsliao"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"jugsliao"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"jugsliao"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTuteeManagingSystem().getPersonList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"jugsliao"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"jugsliao"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"jugsliao":76,"gekhro":5,"leeyi45":13}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTuteeManagingSystem;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.parser.UnmarkCommandParser;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import seedu.address.testutil.TuteeTestBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    public void execute_withGivenDate() throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        expectedModel.addTutee(AMY);","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"        Tutee amy \u003d new TuteeTestBuilder(AMY)","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"            .withAttendance(new Attendance(Set.of(LocalDate.of(2020, 03, 04))))","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"            .build();","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"        Model model \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"        model.addTutee(amy);","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"        UnmarkCommandParser parser \u003d new UnmarkCommandParser();","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        UnmarkCommand cmd \u003d parser.parse(\"0 2020-03-04\");","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"        assertCommandSuccess(","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"            cmd,","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"            model,","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"            \"Marked\" + AMY.getName() + \"\u0027s attendance for 2020-03-04 as absent\",","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"            expectedModel","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"    public void execute_withGivenDateAndTuteeAlreadyAbsent() throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        expectedModel.addTutee(AMY);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"        Model model \u003d new ModelManager(getTypicalTuteeManagingSystem(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"        model.addTutee(AMY);","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"        UnmarkCommandParser parser \u003d new UnmarkCommandParser();","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        UnmarkCommand cmd \u003d parser.parse(\"0 2020-03-04\");","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        assertCommandSuccess(","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"            cmd,","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"            model,","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"            AMY.getName() + \"was not present on 2020-03-04!\",","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"            expectedModel","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"    public void execute_withInvalidDateFormat() throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"        UnmarkCommandParser parser \u003d new UnmarkCommandParser();","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"0 2020/03/04\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"jugsliao":5,"leeyi45":66}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ENDTIME_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ENDTIME_DESC_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SCHEDULE_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SCHEDULE_DESC_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STARTTIME_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STARTTIME_DESC_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SUBJECT_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SUBJECT_DESC_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"import seedu.address.testutil.TuteeTestBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        Tutee expectedTutee \u003d new TuteeTestBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"                + ADDRESS_DESC_BOB + SUBJECT_DESC_BOB + SCHEDULE_DESC_BOB","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"                + STARTTIME_DESC_BOB + ENDTIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTutee));","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"                + ADDRESS_DESC_BOB + SUBJECT_DESC_BOB + SCHEDULE_DESC_BOB","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"                + STARTTIME_DESC_BOB + ENDTIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTutee));","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"                + ADDRESS_DESC_BOB + SUBJECT_DESC_BOB + SCHEDULE_DESC_BOB","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"                + STARTTIME_DESC_BOB + ENDTIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTutee));","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"                + ADDRESS_DESC_BOB + SUBJECT_DESC_BOB + SCHEDULE_DESC_BOB","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"jugsliao"},"content":"                + STARTTIME_DESC_BOB + ENDTIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTutee));","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"                + ADDRESS_DESC_BOB + SUBJECT_DESC_BOB + SCHEDULE_DESC_BOB","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"                + STARTTIME_DESC_BOB + ENDTIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTutee));","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"        Tutee expectedTuteeMultipleTags \u003d new TuteeTestBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"                + SUBJECT_DESC_BOB + SCHEDULE_DESC_BOB + STARTTIME_DESC_BOB + ENDTIME_DESC_BOB","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"jugsliao"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedTuteeMultipleTags));","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"        Tutee expectedTutee \u003d new TuteeTestBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"jugsliao"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + SUBJECT_DESC_AMY","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"jugsliao"},"content":"                        + SCHEDULE_DESC_AMY + STARTTIME_DESC_AMY + ENDTIME_DESC_AMY,","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"jugsliao"},"content":"                new AddCommand(expectedTutee));","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"jugsliao"},"content":"                + SUBJECT_DESC_BOB + SCHEDULE_DESC_BOB + STARTTIME_DESC_BOB + ENDTIME_DESC_BOB","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"jugsliao"},"content":"                + SUBJECT_DESC_BOB + SCHEDULE_DESC_BOB + STARTTIME_DESC_BOB + ENDTIME_DESC_BOB","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"jugsliao"},"content":"                + SUBJECT_DESC_BOB + SCHEDULE_DESC_BOB + STARTTIME_DESC_BOB + ENDTIME_DESC_BOB","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"jugsliao"},"content":"                + SUBJECT_DESC_BOB + SCHEDULE_DESC_BOB + STARTTIME_DESC_BOB + ENDTIME_DESC_BOB","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"jugsliao"},"content":"                + SUBJECT_DESC_BOB + SCHEDULE_DESC_BOB + STARTTIME_DESC_BOB + ENDTIME_DESC_BOB","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"Zhongli5712"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-03-19"},{"lineNumber":154,"author":{"gitId":"jugsliao"},"content":"                        + SUBJECT_DESC_BOB + SCHEDULE_DESC_BOB + STARTTIME_DESC_BOB + ENDTIME_DESC_BOB,","lastModifiedDate":"2023-03-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"jugsliao"},"content":"                + ADDRESS_DESC_BOB + SUBJECT_DESC_BOB + SCHEDULE_DESC_BOB + STARTTIME_DESC_BOB + ENDTIME_DESC_BOB","lastModifiedDate":"2023-03-19"},{"lineNumber":160,"author":{"gitId":"jugsliao"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jugsliao":24,"Zhongli5712":1,"-":122,"leeyi45":16}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"jugsliao"},"content":"        // Reuse tokenizer on an empty string EndTime ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"jugsliao"},"content":"        // Prefixes not previously given EndTime the tokenizer should not return any values","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"jugsliao":2,"-":148}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"jugsliao"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Tutee} being edited,","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jugsliao":1,"-":206,"leeyi45":4}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":33,"leeyi45":1}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":192,"leeyi45":4}},{"path":"src/test/java/seedu/address/logic/parser/TuteeManagingSystemParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"import seedu.address.testutil.TuteeTestBuilder;","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"public class TuteeManagingSystemParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"    private final TuteeManagingSystemParser parser \u003d new TuteeManagingSystemParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        Tutee tutee \u003d new TuteeTestBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(tutee));","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"        assertEquals(new AddCommand(tutee), command);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        Tutee tutee \u003d new TuteeTestBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(tutee).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jugsliao":6,"-":91,"leeyi45":4}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TUTEES;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"        assertEquals(new TuteeManagingSystem(), new TuteeManagingSystem(modelManager.getTuteeManagingSystem()));","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTuteeManagingSystemPath(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"        modelManager.setTuteeManagingSystemPath(path);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"        assertEquals(path, modelManager.getTuteeManagingSystemPath());","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTutee(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"        assertFalse(modelManager.hasTutee(ALICE));","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"        modelManager.addTutee(ALICE);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jugsliao"},"content":"        assertTrue(modelManager.hasTutee(ALICE));","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"jugsliao"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTuteeList().remove(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"jugsliao"},"content":"        TuteeManagingSystem tuteeManagingSystem \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"jugsliao"},"content":"        TuteeManagingSystem differentTuteeManagingSystem \u003d new TuteeManagingSystem();","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"jugsliao"},"content":"        modelManager \u003d new ModelManager(tuteeManagingSystem, userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jugsliao"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(tuteeManagingSystem, userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"jugsliao"},"content":"        // different tuteeManagingSystem -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"jugsliao"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentTuteeManagingSystem, userPrefs)));","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"leeyi45"},"content":"        String[] keywords \u003d ALICE.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"jugsliao"},"content":"        modelManager.updateFilteredTuteeList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"jugsliao"},"content":"        assertFalse(modelManager.equals(new ModelManager(tuteeManagingSystem, userPrefs)));","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"jugsliao"},"content":"        // resets modelManager EndTime initial state for upcoming tests","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"jugsliao"},"content":"        modelManager.updateFilteredTuteeList(PREDICATE_SHOW_ALL_TUTEES);","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"jugsliao"},"content":"        assertFalse(modelManager.equals(new ModelManager(tuteeManagingSystem, differentUserPrefs)));","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jugsliao":21,"-":109,"leeyi45":2}},{"path":"src/test/java/seedu/address/model/TuteeManagingSystemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTuteeManagingSystem;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jugsliao"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jugsliao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"import seedu.address.testutil.TuteeTestBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jugsliao"},"content":"public class TuteeManagingSystemTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"    private final TuteeManagingSystem tuteeManagingSystem \u003d new TuteeManagingSystem();","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"    public void constructor() {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"        assertEquals(Collections.emptyList(), tuteeManagingSystem.getPersonList());","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"        assertThrows(NullPointerException.class, () -\u003e tuteeManagingSystem.resetData(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"        TuteeManagingSystem newData \u003d getTypicalTuteeManagingSystem();","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"jugsliao"},"content":"        tuteeManagingSystem.resetData(newData);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"        assertEquals(newData, tuteeManagingSystem);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jugsliao"},"content":"        // Two tutees with the same identity fields","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        Tutee editedAlice \u003d new TuteeTestBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"                .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jugsliao"},"content":"        List\u003cTutee\u003e newTutees \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"        TuteeManagingSystemStub newData \u003d new TuteeManagingSystemStub(newTutees);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jugsliao"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e tuteeManagingSystem.resetData(newData));","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jugsliao"},"content":"        assertThrows(NullPointerException.class, () -\u003e tuteeManagingSystem.hasPerson(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"        assertFalse(tuteeManagingSystem.hasPerson(ALICE));","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jugsliao"},"content":"        tuteeManagingSystem.addPerson(ALICE);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jugsliao"},"content":"        assertTrue(tuteeManagingSystem.hasPerson(ALICE));","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jugsliao"},"content":"        tuteeManagingSystem.addPerson(ALICE);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"        Tutee editedAlice \u003d new TuteeTestBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"jugsliao"},"content":"                .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jugsliao"},"content":"        assertTrue(tuteeManagingSystem.hasPerson(editedAlice));","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jugsliao"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jugsliao"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e tuteeManagingSystem.getPersonList().remove(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jugsliao"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"     * A stub ReadOnlyTuteeManagingSystem whose tutees list can violate interface constraints.","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jugsliao"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"jugsliao"},"content":"    private static class TuteeManagingSystemStub implements ReadOnlyTuteeManagingSystem {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"jugsliao"},"content":"        private final ObservableList\u003cTutee\u003e tutees \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jugsliao"},"content":"        TuteeManagingSystemStub(Collection\u003cTutee\u003e tutees) {","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"jugsliao"},"content":"            this.tutees.setAll(tutees);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"jugsliao"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"jugsliao"},"content":"        public ObservableList\u003cTutee\u003e getPersonList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"jugsliao"},"content":"            return tutees;","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"jugsliao"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"jugsliao"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"jugsliao"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"jugsliao"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jugsliao":99,"leeyi45":3}},{"path":"src/test/java/seedu/address/model/tutee/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model.tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jugsliao":1,"-":35,"leeyi45":2}},{"path":"src/test/java/seedu/address/model/tutee/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model.tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jugsliao":1,"-":67,"leeyi45":2}},{"path":"src/test/java/seedu/address/model/tutee/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model.tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.testutil.TuteeTestBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"        // different tutee -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"        assertTrue(predicate.test(new TuteeTestBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        assertTrue(predicate.test(new TuteeTestBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"        assertTrue(predicate.test(new TuteeTestBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        assertTrue(predicate.test(new TuteeTestBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"        assertFalse(predicate.test(new TuteeTestBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"        assertFalse(predicate.test(new TuteeTestBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"        assertFalse(predicate.test(new TuteeTestBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jugsliao":2,"-":65,"leeyi45":9}},{"path":"src/test/java/seedu/address/model/tutee/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model.tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jugsliao":1,"-":39,"leeyi45":2}},{"path":"src/test/java/seedu/address/model/tutee/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model.tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jugsliao":1,"-":39,"leeyi45":2}},{"path":"src/test/java/seedu/address/model/tutee/TuteeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model.tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import seedu.address.testutil.TuteeTestBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"public class TuteeTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"        Tutee tutee \u003d new TuteeTestBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e tutee.getTags().remove(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"        Tutee editedAlice \u003d new TuteeTestBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        editedAlice \u003d new TuteeTestBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        Tutee editedBob \u003d new TuteeTestBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        editedBob \u003d new TuteeTestBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        Tutee aliceCopy \u003d new TuteeTestBuilder(ALICE).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"        // different tutee -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"        Tutee editedAlice \u003d new TuteeTestBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"        editedAlice \u003d new TuteeTestBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"        editedAlice \u003d new TuteeTestBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"        editedAlice \u003d new TuteeTestBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"        editedAlice \u003d new TuteeTestBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jugsliao":4,"-":75,"leeyi45":12}},{"path":"src/test/java/seedu/address/model/tutee/UniqueTuteeListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugsliao"},"content":"package seedu.address.model.tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"import seedu.address.testutil.TuteeTestBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"public class UniqueTuteeListTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"        Tutee editedAlice \u003d new TuteeTestBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"        Tutee editedAlice \u003d new TuteeTestBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"jugsliao"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cTutee\u003e) null));","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"jugsliao"},"content":"        List\u003cTutee\u003e tuteeList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"jugsliao"},"content":"        uniquePersonList.setPersons(tuteeList);","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"jugsliao"},"content":"        List\u003cTutee\u003e listWithDuplicateTutees \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"jugsliao"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicateTutees));","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jugsliao":9,"-":158,"leeyi45":3}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTuteeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":"public class JsonAdaptedTuteeTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"gekhro"},"content":"    private static final String INVALID_SUBJECT \u003d \" \";","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    private static final String INVALID_SCHEDULE \u003d \" \";","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"    private static final String INVALID_STARTTIME \u003d \"two thirty\";","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":"    private static final String INVALID_ENDTIME \u003d \"4.30\";","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"gekhro"},"content":"    private static final String VALID_SUBJECT \u003d BENSON.getSubject().toString();","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"gekhro"},"content":"    private static final String VALID_SCHEDULE \u003d BENSON.getSchedule().toString();","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"    private static final String VALID_STARTTIME \u003d BENSON.getStartTime().toString();","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"    private static final String VALID_ENDTIME \u003d BENSON.getEndTime().toString();","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"    private static final List\u003cLocalDate\u003e VALID_ATTENDANCE \u003d BENSON.getAttendance()","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"        .stream()","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"gekhro"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"                        VALID_SUBJECT, VALID_SCHEDULE, VALID_STARTTIME, VALID_ENDTIME, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"jugsliao"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"gekhro"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"                        VALID_SUBJECT, VALID_SCHEDULE, VALID_STARTTIME, VALID_ENDTIME, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"gekhro"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"                        VALID_SUBJECT, VALID_SCHEDULE, VALID_STARTTIME, VALID_ENDTIME, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"jugsliao"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"gekhro"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"                        VALID_SUBJECT, VALID_SCHEDULE, VALID_STARTTIME, VALID_ENDTIME, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"gekhro"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"                        VALID_SUBJECT, VALID_SCHEDULE, VALID_STARTTIME, VALID_ENDTIME, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"jugsliao"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"gekhro"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"leeyi45"},"content":"                        VALID_SUBJECT, VALID_SCHEDULE, VALID_STARTTIME, VALID_ENDTIME, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"gekhro"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"leeyi45"},"content":"                        VALID_SUBJECT, VALID_SCHEDULE, VALID_STARTTIME, VALID_ENDTIME, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"jugsliao"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"gekhro"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_REMARK,","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"leeyi45"},"content":"                        VALID_SUBJECT, VALID_SCHEDULE, VALID_STARTTIME, VALID_ENDTIME, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"gekhro"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"leeyi45"},"content":"                        VALID_SUBJECT, VALID_SCHEDULE, VALID_STARTTIME, VALID_ENDTIME, invalidTags, VALID_ATTENDANCE);","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jugsliao":11,"gekhro":14,"-":96,"leeyi45":17}},{"path":"src/test/java/seedu/address/storage/JsonSerializableTuteeManagingSystemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"public class JsonSerializableTuteeManagingSystemTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"gekhro"},"content":"            \"JsonSerializableTuteeManagingSystemTest\");","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"        TEST_DATA_FOLDER.resolve(\"typicalPersonsTuteeManagingSystem.json\");","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":"    private static final Path INVALID_PERSON_FILE \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"        TEST_DATA_FOLDER.resolve(\"invalidPersonTuteeManagingSystem.json\");","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"        TEST_DATA_FOLDER.resolve(\"duplicatePersonTuteeManagingSystem.json\");","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"        TuteeManagingSystem tuteeManagingSystemFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jugsliao"},"content":"        TuteeManagingSystem typicalPersonsTuteeManagingSystem \u003d TypicalPersons.getTypicalTuteeManagingSystem();","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"        assertEquals(tuteeManagingSystemFromFile, typicalPersonsTuteeManagingSystem);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jugsliao":5,"gekhro":2,"-":38,"leeyi45":8}},{"path":"src/test/java/seedu/address/storage/JsonTuteeManagingSystemStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTuteeManagingSystem;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.ReadOnlyTuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"jugsliao"},"content":"public class JsonTuteeManagingSystemStorageTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTuteeManagingSystemStorageTest\");","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"    private java.util.Optional\u003cReadOnlyTuteeManagingSystem\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"Zhongli5712"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatTuteeManagingSystem.json\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"Zhongli5712"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonTuteeManagingSystem.json\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"            \"invalidAndValidPersonTuteeManagingSystem.json\"","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"        ));","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":68,"author":{"gitId":"jugsliao"},"content":"        TuteeManagingSystem original \u003d getTypicalTuteeManagingSystem();","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"jugsliao"},"content":"        ReadOnlyTuteeManagingSystem readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jugsliao"},"content":"        assertEquals(original, new TuteeManagingSystem(readBack));","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"jugsliao"},"content":"        assertEquals(original, new TuteeManagingSystem(readBack));","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"jugsliao"},"content":"        assertEquals(original, new TuteeManagingSystem(readBack));","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"jugsliao"},"content":"    private void saveAddressBook(ReadOnlyTuteeManagingSystem addressBook, String filePath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"jugsliao"},"content":"            throw new AssertionError(\"There should not be an error writing EndTime the file.\", ioe);","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"jugsliao"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new TuteeManagingSystem(), null));","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jugsliao":14,"Zhongli5712":2,"-":93,"leeyi45":3}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"jugsliao"},"content":"            throw new AssertionError(\"There should not be an error writing EndTime the file\", ioe);","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jugsliao":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalTuteeManagingSystem;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.ReadOnlyTuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired EndTime the","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired EndTime the","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"gekhro"},"content":"         * More extensive testing of UserPref saving/reading is done in","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"gekhro"},"content":"         * {@link JsonTuteeManagingSystemStorageTest} class.","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"jugsliao"},"content":"        TuteeManagingSystem original \u003d getTypicalTuteeManagingSystem();","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"        ReadOnlyTuteeManagingSystem retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"        assertEquals(original, new TuteeManagingSystem(retrieved));","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jugsliao":8,"gekhro":2,"-":59}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"jugsliao"},"content":" * A utility class EndTime help with building Addressbook objects.","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":" *     {@code TuteeManagingSystem ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"jugsliao"},"content":"    private TuteeManagingSystem tuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"        tuteeManagingSystem \u003d new TuteeManagingSystem();","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"jugsliao"},"content":"    public AddressBookBuilder(TuteeManagingSystem tuteeManagingSystem) {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jugsliao"},"content":"        this.tuteeManagingSystem \u003d tuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"jugsliao"},"content":"     * Adds a new {@code Tutee} EndTime the {@code TuteeManagingSystem} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"    public AddressBookBuilder withPerson(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"        tuteeManagingSystem.addPerson(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"jugsliao"},"content":"    public TuteeManagingSystem build() {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jugsliao"},"content":"        return tuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jugsliao":13,"-":21}},{"path":"src/test/java/seedu/address/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-07-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)},","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"     * EndTime maintain consistency with our custom","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"     * {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"-":32,"leeyi45":3}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Schedule;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Subject;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"jugsliao"},"content":" * A utility class EndTime help with building EditPersonDescriptor objects.","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code tutee}\u0027s details","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"    public EditPersonDescriptorBuilder(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"        descriptor.setName(tutee.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jugsliao"},"content":"        descriptor.setPhone(tutee.getPhone());","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"        descriptor.setEmail(tutee.getEmail());","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jugsliao"},"content":"        descriptor.setAddress(tutee.getAddress());","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"gekhro"},"content":"        descriptor.setSubject(tutee.getSubject());","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"gekhro"},"content":"        descriptor.setSchedule(tutee.getSchedule());","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"        descriptor.setTags(tutee.getTags());","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"gekhro"},"content":"     * Sets the {@code Subject} of the {@code Tutee} that we are building.","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"gekhro"},"content":"    public EditPersonDescriptorBuilder withSubject(String subject) {","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"gekhro"},"content":"        descriptor.setSubject(new Subject(subject));","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"gekhro"},"content":"        return this;","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"gekhro"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"gekhro"},"content":"     * Sets the {@code Schedule} of the {@code Tutee} that we are building.","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"gekhro"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"gekhro"},"content":"    public EditPersonDescriptorBuilder withSchedule(String schedule) {","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"gekhro"},"content":"        descriptor.setSchedule(new Schedule(schedule));","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"gekhro"},"content":"        return this;","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"gekhro"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"gekhro"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"jugsliao"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it EndTime the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jugsliao":10,"gekhro":17,"-":74,"leeyi45":6}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"gekhro"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"jugsliao"},"content":" * A utility class for Tutee.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"     * Returns an add command string for adding the {@code tutee}.","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"jugsliao"},"content":"    public static String getAddCommand(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jugsliao"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"jugsliao"},"content":"     * Returns the part of command string for the given {@code tutee}\u0027s details.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"jugsliao"},"content":"    public static String getPersonDetails(Tutee tutee) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"        sb.append(PREFIX_NAME + tutee.getName().toString() + \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"        sb.append(PREFIX_PHONE + tutee.getPhone().toString() + \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"        sb.append(PREFIX_EMAIL + tutee.getEmail().toString() + \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        sb.append(PREFIX_ADDRESS + tutee.getAddress().toString() + \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        sb.append(PREFIX_SUBJECT + tutee.getSubject().toString() + \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"        sb.append(PREFIX_SCHEDULE + tutee.getSchedule().toString() + \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"        sb.append(PREFIX_STARTTIME + tutee.getStartTime().toString() + \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"        sb.append(PREFIX_ENDTIME + tutee.getEndTime().toString() + \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"jugsliao"},"content":"        tutee.getTags().stream().forEach(","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.toString()));","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.toString()));","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.toString()));","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.toString()));","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"        descriptor.getSubject().ifPresent(subject -\u003e sb.append(PREFIX_SUBJECT).append(subject.toString()));","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"        descriptor.getSchedule().ifPresent(schedule -\u003e sb.append(PREFIX_SCHEDULE).append(schedule.toString()));","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"        descriptor.getStartTime().ifPresent(startTime -\u003e sb.append(PREFIX_STARTTIME).append(startTime.toString()));","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"        descriptor.getEndTime().ifPresent(endTime -\u003e sb.append(PREFIX_ENDTIME).append(endTime.toString()));","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"jugsliao":8,"Zhongli5712":1,"gekhro":1,"-":46,"leeyi45":18}},{"path":"src/test/java/seedu/address/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"jugsliao"},"content":" * A class used EndTime test serialization and deserialization","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jugsliao":1,"-":71}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"jugsliao"},"content":"     * Appends {@code fileName} EndTime the sandbox folder path and returns the resulting path.","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"jugsliao"},"content":"     * Returns the middle index of the tutee in the {@code model}\u0027s tutee list.","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"        return Index.fromOneBased(model.getFilteredTuteeList().size() / 2);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"     * Returns the last index of the tutee in the {@code model}\u0027s tutee list.","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"        return Index.fromOneBased(model.getFilteredTuteeList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"     * Returns the tutee in the {@code model}\u0027s tutee list at {@code index}.","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"    public static Tutee getPerson(Model model, Index index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"        return model.getFilteredTuteeList().get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jugsliao":9,"-":46}},{"path":"src/test/java/seedu/address/testutil/TuteeTestBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyi45"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"leeyi45"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"leeyi45"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"leeyi45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.TuteeBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Attendance;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.EndTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Remark;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Schedule;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.StartTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"leeyi45"},"content":"import seedu.address.model.tutee.fields.Subject;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"leeyi45"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"leeyi45"},"content":" * Wrapper around {@link TuteeBuilder} used for testing.","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"leeyi45"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"leeyi45"},"content":"public class TuteeTestBuilder {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"leeyi45"},"content":"    private final TuteeBuilder builder;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder() {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"leeyi45"},"content":"        builder \u003d new TuteeBuilder();","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder(Tutee tutee) {","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"leeyi45"},"content":"        builder \u003d new TuteeBuilder(tutee);","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"leeyi45"},"content":"     * Change the stored value of the tutee\u0027s email field","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"leeyi45"},"content":"     * to the given value","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder withEmail(String email) {","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"leeyi45"},"content":"        builder.withEmail(new Email(email));","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"     * Change the stored value of the tutee\u0027s phone field","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"leeyi45"},"content":"     * to the given value","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"leeyi45"},"content":"        builder.withPhone(new Phone(phone));","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"     * Change the stored value of the tutee\u0027s name field","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"leeyi45"},"content":"     * to the given value","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder withName(String name) {","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"leeyi45"},"content":"        builder.withName(new Name(name));","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"leeyi45"},"content":"     * Change the stored value of the tutee\u0027s address field","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"leeyi45"},"content":"     * to the given value","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder withAddress(String address) {","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"        builder.withAddress(new Address(address));","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"     * Change the stored value of the tutee\u0027s remark field","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"     * to the given value","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder withRemark(String remark) {","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"        builder.withRemark(new Remark(remark));","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"     * Change the stored value of the tutee\u0027s subject field","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"     * to the given value","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder withSubject(String subject) {","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"        builder.withSubject(new Subject(subject));","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"leeyi45"},"content":"     * Change the stored value of the tutee\u0027s schedule field","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"leeyi45"},"content":"     * to the given value","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder withSchedule(String schedule) {","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"leeyi45"},"content":"        builder.withSchedule(new Schedule(schedule));","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"leeyi45"},"content":"     * Change the stored value of the tutee\u0027s StartTime field","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"leeyi45"},"content":"     * to the given value","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder withStartTime(String startTime) {","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"leeyi45"},"content":"        builder.withStartTime(new StartTime(startTime));","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"leeyi45"},"content":"     * Change the stored value of the tutee\u0027s EndTime field","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"leeyi45"},"content":"     * to the given value","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder withEndTime(String endTime) {","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"leeyi45"},"content":"        builder.withEndTime(new EndTime(endTime));","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"leeyi45"},"content":"     * Change the stored value of the tutee\u0027s tags field","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"leeyi45"},"content":"     * to the given value","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder withTags(Set\u003cString\u003e tags) {","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"leeyi45"},"content":"        builder.withTags(","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"leeyi45"},"content":"            tags.stream()","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"leeyi45"},"content":"            .map(Tag::new)","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"leeyi45"},"content":"            .collect(Collectors.toSet())","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"leeyi45"},"content":"        );","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"leeyi45"},"content":"     * Change the stored value of the tutee\u0027s tags field","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"leeyi45"},"content":"     * to the given value","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder withTags(String ...tags) {","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"leeyi45"},"content":"        builder.withTags(Arrays.stream(tags).map(Tag::new).collect(Collectors.toSet()));","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"leeyi45"},"content":"     * Change the stored value of the tutee\u0027s attendance field","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"leeyi45"},"content":"     * to the given value","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"leeyi45"},"content":"    public TuteeTestBuilder withAttendance(Attendance attendance) {","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"leeyi45"},"content":"        builder.withAttendance(attendance);","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"leeyi45"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"leeyi45"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"leeyi45"},"content":"     * Build the new {@link Tutee} instance. If any one of the fields is missing, a","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"leeyi45"},"content":"     * {@link NullPointerException} will be thrown","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"leeyi45"},"content":"     * @return A new tutee instance with the given fields","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"leeyi45"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"leeyi45"},"content":"    public Tutee build() {","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"leeyi45"},"content":"        return builder.build();","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"leeyi45"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"leeyi45"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"leeyi45":155}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"jugsliao"},"content":" * A utility class containing a list of {@code Index} objects EndTime be used in tests.","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"jugsliao":1,"-":11}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ENDTIME_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ENDTIME_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SCHEDULE_AMY;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SCHEDULE_BOB;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STARTTIME_AMY;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jugsliao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STARTTIME_BOB;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SUBJECT_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"leeyi45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SUBJECT_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.TuteeManagingSystem;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jugsliao"},"content":"import seedu.address.model.tutee.Tutee;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"jugsliao"},"content":" * A utility class containing a list of {@code Tutee} objects EndTime be used in tests.","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"leeyi45"},"content":"    public static final Tutee ALICE \u003d new TuteeTestBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"            .withPhone(\"94351253\").withSubject(\"Math\").withSchedule(\"friday\").withRemark(\"\")","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"jugsliao"},"content":"            .withStartTime(\"10:30\").withEndTime(\"12:30\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"leeyi45"},"content":"    public static final Tutee BENSON \u003d new TuteeTestBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"jugsliao"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withRemark(\"He can\u0027t take beer!\")","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withSubject(\"Math\").withSchedule(\"friday\")","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"jugsliao"},"content":"            .withStartTime(\"12:30\").withEndTime(\"14:30\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"leeyi45"},"content":"    public static final Tutee CARL \u003d new TuteeTestBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"jugsliao"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withSubject(\"Math\").withSchedule(\"friday\")","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"jugsliao"},"content":"            .withStartTime(\"14:30\").withEndTime(\"16:30\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"leeyi45"},"content":"    public static final Tutee DANIEL \u003d new TuteeTestBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"jugsliao"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jugsliao"},"content":"            .withStartTime(\"16:30\").withEndTime(\"18:30\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"leeyi45"},"content":"    public static final Tutee ELLE \u003d new TuteeTestBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"jugsliao"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withSubject(\"Math\").withSchedule(\"friday\")","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jugsliao"},"content":"            .withStartTime(\"18:30\").withEndTime(\"20:30\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"leeyi45"},"content":"    public static final Tutee FIONA \u003d new TuteeTestBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"jugsliao"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withSubject(\"Math\").withSchedule(\"friday\")","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"jugsliao"},"content":"            .withStartTime(\"20:30\").withEndTime(\"22:30\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"leeyi45"},"content":"    public static final Tutee GEORGE \u003d new TuteeTestBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"jugsliao"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withSubject(\"Math\").withSchedule(\"friday\")","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jugsliao"},"content":"            .withStartTime(\"08:30\").withEndTime(\"10:30\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"leeyi45"},"content":"    public static final Tutee HOON \u003d new TuteeTestBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"jugsliao"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withSubject(\"Math\").withSchedule(\"friday\")","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"jugsliao"},"content":"            .withStartTime(\"15:30\").withEndTime(\"16:30\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"leeyi45"},"content":"    public static final Tutee IDA \u003d new TuteeTestBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"jugsliao"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withSubject(\"Math\").withSchedule(\"friday\")","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"jugsliao"},"content":"            .withStartTime(\"10:00\").withEndTime(\"12:00\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":66,"author":{"gitId":"jugsliao"},"content":"    // Manually added - Tutee\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"leeyi45"},"content":"    public static final Tutee AMY \u003d new TuteeTestBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"leeyi45"},"content":"        .withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"leeyi45"},"content":"        .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"leeyi45"},"content":"        .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"leeyi45"},"content":"        .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"leeyi45"},"content":"        .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"leeyi45"},"content":"        .withSubject(VALID_SUBJECT_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"leeyi45"},"content":"        .withSchedule(VALID_SCHEDULE_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"leeyi45"},"content":"        .withStartTime(VALID_STARTTIME_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"leeyi45"},"content":"        .withEndTime(VALID_ENDTIME_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"leeyi45"},"content":"        .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"leeyi45"},"content":"        .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"leeyi45"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"leeyi45"},"content":"    public static final Tutee BOB \u003d new TuteeTestBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"leeyi45"},"content":"        .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"leeyi45"},"content":"        .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"leeyi45"},"content":"        .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"leeyi45"},"content":"        .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"leeyi45"},"content":"        .withSubject(VALID_SUBJECT_BOB)","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"leeyi45"},"content":"        .withSchedule(VALID_SCHEDULE_BOB)","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"leeyi45"},"content":"        .withStartTime(VALID_STARTTIME_BOB)","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"leeyi45"},"content":"        .withEndTime(VALID_ENDTIME_BOB)","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"leeyi45"},"content":"        .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"jugsliao"},"content":"     * Returns an {@code TuteeManagingSystem} with all the typical persons.","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"jugsliao"},"content":"    public static TuteeManagingSystem getTypicalTuteeManagingSystem() {","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"jugsliao"},"content":"        TuteeManagingSystem ab \u003d new TuteeManagingSystem();","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"jugsliao"},"content":"        for (Tutee tutee : getTypicalPersons()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"jugsliao"},"content":"            ab.addPerson(tutee);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":107,"author":{"gitId":"jugsliao"},"content":"    public static List\u003cTutee\u003e getTypicalPersons() {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jugsliao":29,"Zhongli5712":4,"-":41,"leeyi45":36}}]
