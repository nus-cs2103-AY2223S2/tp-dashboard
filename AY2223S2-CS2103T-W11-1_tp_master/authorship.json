[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W11-1/tp.git)","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"* Wingman is a modal manager for managing airplanes, pilots, crews, flights, and locations. It seeks to provide a highly efficient way of resource management for airline managers, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"* For the detailed documentation of this project, see our [User Guide](https://github.com/AY2223S2-CS2103T-W11-1/tp/blob/master/docs/UserGuide.md) and [Developer Guide](https://github.com/AY2223S2-CS2103T-W11-1/tp/blob/master/docs/DeveloperGuide.md).","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"tangyuantyy":4,"-":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"mainClassName \u003d \u0027wingman.Main\u0027","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"run {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    testImplementation \"org.mockito:mockito-core:3.+\"","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    testImplementation \u0027org.mockito:mockito-junit-jupiter:3.+\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    archiveFileName \u003d \u0027wingman.jar\u0027","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cetigerlily":4,"wxxedu":5,"-":70}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2019-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2017-01-16"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":363,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":409,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":419,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":428,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":434,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":435,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":1,"-":434}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"# About Us","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"We are a team based in","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"You can reach us at the","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"email [support@parkourlabs.io](mailto:support@parkourlabs.io)","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"### Ai Bo","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"\u003cimg src\u003d\"images/boai01.png\" width\u003d\"200\" height\u003d\"200\"\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"[[webpage](https://albertboai.com/)]","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"[[github](https://github.com/BoAi01)]","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"[[portfolio](team/boai01.md)]","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"* Role: Team Lead","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"### Celeste Cheah","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/cetigerlily.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"[[github](https://github.com/cetigerlily)]","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"[[portfolio](team/cetigerlily.md)]","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"* Role: Developer","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"### Jishnu","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/jishnu28.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"[[github](https://github.com/jishnu28)]","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"[[portfolio](team/jishnu28.md)]","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"* Responsibilities: Deliverables and deadlines \u0026 Scheduling and tracking","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"### Xiuxuan","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/wxxedu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"[[github](https://github.com/wxxedu)]","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"[[portfolio](team/wxxedu.md)]","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"tangyuantyy"},"content":"* Responsibilities: Testing + Integration","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"tangyuantyy"},"content":"### Yuanyuan","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/tangyuantyy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"tangyuantyy"},"content":"[[github](http://github.com/tangyuantyy)]","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"tangyuantyy"},"content":"[[portfolio](team/tangyuantyy.md)]","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"BoAi01":2,"jishnu28":4,"tangyuantyy":23,"wxxedu":4,"-":28}},{"path":"docs/CheckList.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"# Check List","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"Here are some of the problems that we will need to look through.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"- [ ] The equality comparison of `ModelManager`","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"wxxedu":5}},{"path":"docs/Configuration.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-06-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Configuration guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"Certain properties of the application can be controlled (e.g user","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"preferences file location, logging level) through the configuration file","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"(default: `config.json`).","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"wxxedu":3,"-":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"## Table of Contents","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"- **[Acknowledgements](#acknowledgements)**","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"- **[Setting up, getting started](#setting-up-getting-started)**","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"- **[Architecture](#architecture)**","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"    * [UI Component](#ui-component)","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"    * [Logic Component](#logic-component)","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"    * [Model Component](#model-component)","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"    * [Storage Component](#storage-component)","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"- **[Implementation](#implementation)**","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    1. [Adding XYZ](#1-adding-xyz)","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"    2. [Deleting XYZ](#2-deleting-xyz)","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    3. [Linking XYZ to a flight](#3-linking-xyz-to-a-flight)","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    4. [Unlinking XYZ from a flight](#4-unlinking-xyz-from-a-flight)","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    5. [Displaying flights across all modes](#5-displaying-flights-across-all-modes)","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"- **[Appendix: Requirements](#appendix--requirements)**","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"## Acknowledgements","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"Wingman was built atop the codebase for AB3. Hence, it retains the 4 layers of UI, Logic, Model, and Storage,","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"albeit involving different implementations and classes.","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"## Setting up, Getting started","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"Coming soon","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"## Architecture","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/WingmanArchitectureDiagram.png\" width\u003d\"276\" alt\u003d\"Architecture diagram\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"The Architecture Diagram above explains the high-level design of Wingman which is similar to AB-3.","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"Main components of the architecture:","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"Main has two classes called Main and MainApp. It is responsible for,","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"  Commons represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"* UI: The UI of the App.","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"* Logic: The command executor.","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"* Model: Holds the data of the App in memory and defines the different entities.","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"* Storage: Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"### UI Component","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"The **API** of this component is specified","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"in [`Ui.java`](https://github.com/AY2223S2-CS2103T-W11-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/WingmanUiClassDiagram.png\" width\u003d\"1021\" alt\u003d\"UI Class diagram\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"The UI consists of a `MainWindow` that is made up of parts","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"e.g.`CommandBox`, `ResultDisplay`, `FlightListPanel`, `StatusBarFooter` etc.","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"The `UI` component uses the JavaFx UI framework.","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder.","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"cetigerlily"},"content":"For example, the layout of","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"cetigerlily"},"content":"the [`FlightListPanel`](https://github.com/AY2223S2-CS2103T-W11-1/tp/blob/master/src/main/java/seedu/address/ui/FlightListPanel.java)","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"cetigerlily"},"content":"is specified","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"cetigerlily"},"content":"in [`FlightListPanel.fxml`](https://github.com/AY2223S2-CS2103T-W11-1/tp/blob/master/src/main/resources/view/FlightListPanel.fxml)","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"The `UI` component,","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"### Logic Component","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"jishnu28"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/WingmanLogicClassDiagram.png\" width\u003d\"608\" alt\u003d\"UI Class diagram\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"jishnu28"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"Description coming soon - to be updated after adjusting for code duplication","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"jishnu28"},"content":"### Model Component","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"cetigerlily"},"content":"**API","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"cetigerlily"},"content":"** : [`Model.java`](https://github.com/AY2223S2-CS2103T-W11-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"jishnu28"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/WingmanModelClassDiagram.png\" width\u003d\"478\" alt\u003d\"UI Class diagram\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"jishnu28"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"jishnu28"},"content":"The `Model` component,","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"jishnu28"},"content":"* stores Wingman data i.e., all `Item` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"    * `Item` here refers to `Flight`, `Pilot`, `Plane`, `Location` and `Crew`","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"* stores the currently \u0027selected\u0027 `Item` objects (e.g., results of a search query) as a separate _filtered_ list","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"  which is exposed to outsiders as an unmodifiable `ObservableList\u003cItem\u003e` that can be \u0027observed\u0027","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"  e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"jishnu28"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"jishnu28"},"content":"  This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"jishnu28"},"content":"* does not depend on any of the other three components","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"jishnu28"},"content":"  (as the `Model` represents data entities of the domain,","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"jishnu28"},"content":"  they should make sense on their own without depending on other components)","lastModifiedDate":"2023-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":122,"author":{"gitId":"jishnu28"},"content":"### Storage Component","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"jishnu28"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":125,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/WingmanStorageClassDiagram.png\" width\u003d\"616\" alt\u003d\"UI Class diagram\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"jishnu28"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"jishnu28"},"content":"The `Storage` component,","lastModifiedDate":"2023-03-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"jishnu28"},"content":"* can save both Wingman data and user preference data in json format,","lastModifiedDate":"2023-03-25"},{"lineNumber":131,"author":{"gitId":"jishnu28"},"content":"  and read them back into corresponding objects.","lastModifiedDate":"2023-03-25"},{"lineNumber":132,"author":{"gitId":"jishnu28"},"content":"* depends on some classes in the `Model` component","lastModifiedDate":"2023-03-25"},{"lineNumber":133,"author":{"gitId":"jishnu28"},"content":"  (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2023-03-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"jishnu28"},"content":"### Overall Sequence","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"jishnu28"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":140,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/WingmanArchitectureSequenceDiagram.png\" width\u003d\"1005\" alt\u003d\"Architecture Sequence diagram\"\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"jishnu28"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"jishnu28"},"content":"This sequence diagram provides an overview of the different layers involved in executing an example command.","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"jishnu28"},"content":"The example used here is the command to add a plane of the following specifications - (Model: A380, Age: 12).","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"jishnu28"},"content":"This sequence is similar for most commands and the subsequent descriptions of Wingman\u0027s features include more detailed","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"jishnu28"},"content":"diagrams to depict the processes at each layer in greater detail.","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"jishnu28"},"content":"### Example Activity Diagram","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":152,"author":{"gitId":"jishnu28"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/WingmanLinkFlightActivity.png\" width\u003d\"231\" alt\u003d\"Link Flight activity diagram\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"jishnu28"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"jishnu28"},"content":"This activity diagram represents the path a user will take when trying to link a resource entity, XYZ","lastModifiedDate":"2023-03-25"},{"lineNumber":157,"author":{"gitId":"jishnu28"},"content":"to a flight. XYZ can be a `Flight`, `Plane`, `Location`, `Pilot` or `Crew` entity.","lastModifiedDate":"2023-03-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":160,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":162,"author":{"gitId":"jishnu28"},"content":"## Implementation","lastModifiedDate":"2023-03-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":164,"author":{"gitId":"jishnu28"},"content":"### 1. Adding XYZ","lastModifiedDate":"2023-03-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"BoAi01"},"content":"**How is this feature implemented?**","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"BoAi01"},"content":"In our app, we have entities `Flight`, `Plane`, `Location`, `Pilot`, `Crew`, and users can add new objects","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"BoAi01"},"content":"into the database via `add` command.","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"This feature is enabled by the following classes:","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":173,"author":{"gitId":"BoAi01"},"content":"* `LinkXYZCommand` - the command that can be executed and adds a new entity","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"  into the system","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"BoAi01"},"content":"* `LinkXYZCommandFactory` - The factory class that creates `LinkXYZCommand`","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"  object, which can be executed to complete the task","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"BoAi01"},"content":"When a user enters the command","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":180,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"add /XYZPrefix {} {XYZ identifier} [/OtherPrefixes {OtherAttributes}...]","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"BoAi01"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"cetigerlily"},"content":"Initially, when the input is received, it is processed by the UI layer, which calls the logic.execute(input) function","lastModifiedDate":"2023-04-04"},{"lineNumber":185,"author":{"gitId":"cetigerlily"},"content":"and transfers the control to the logic layer. The execute(input) function in the logic layer then utilizes the","lastModifiedDate":"2023-04-04"},{"lineNumber":186,"author":{"gitId":"cetigerlily"},"content":"WingmanParser to break down the input into tokens, determine the command\u0027s mode, such as Crew, Flight, Location, Pilot,","lastModifiedDate":"2023-04-04"},{"lineNumber":187,"author":{"gitId":"cetigerlily"},"content":"or Plane, and identify the command\u0027s nature.","lastModifiedDate":"2023-04-04"},{"lineNumber":188,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"cetigerlily"},"content":"The WingmanParser\u0027s primary goal is to recognize the command type based on the input and return the corresponding","lastModifiedDate":"2023-04-04"},{"lineNumber":190,"author":{"gitId":"cetigerlily"},"content":"command object. For instance, the AddXYZCommand object is returned with the {XYZ identifier} after analyzing the input\u0027s","lastModifiedDate":"2023-04-04"},{"lineNumber":191,"author":{"gitId":"cetigerlily"},"content":"tokens.","lastModifiedDate":"2023-04-04"},{"lineNumber":192,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"cetigerlily"},"content":"To execute the DeleteXYZCommand, the appropriate XYZManager is employed. Firstly, the getItem(id) function is used to","lastModifiedDate":"2023-04-04"},{"lineNumber":194,"author":{"gitId":"cetigerlily"},"content":"retrieve the corresponding XYZ that needs to be deleted. Next, the addXYZ(id) function is called, which removes the","lastModifiedDate":"2023-04-04"},{"lineNumber":195,"author":{"gitId":"cetigerlily"},"content":"desired XYZ from the Wingman app using the item.removeItem(id) method.","lastModifiedDate":"2023-04-04"},{"lineNumber":196,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"cetigerlily"},"content":"Finally, the CommandResult message, indicating a successful deletion, is returned to the user. GUI will display the","lastModifiedDate":"2023-04-04"},{"lineNumber":198,"author":{"gitId":"cetigerlily"},"content":"return message to the user.","lastModifiedDate":"2023-04-04"},{"lineNumber":199,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"BoAi01"},"content":"\u003cimg src\u003d\"images/WingmanAddCommandSequenceDiagram.png\" width\u003d\"966\" alt\u003d\"Sequence diagram for add command\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"BoAi01"},"content":"**Why was it implemented this way?**","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"cetigerlily"},"content":"Our app has different operation `mode`, e.g., location and pilot. We wish to share the common modules, but separate","lastModifiedDate":"2023-04-04"},{"lineNumber":205,"author":{"gitId":"cetigerlily"},"content":"different components. Here, we have a global logic manager that process the input string with a parser, which","lastModifiedDate":"2023-04-04"},{"lineNumber":206,"author":{"gitId":"cetigerlily"},"content":"instantiate the command object corresponded to the mode. To execute mode-specific command, we have a global manager that","lastModifiedDate":"2023-04-04"},{"lineNumber":207,"author":{"gitId":"cetigerlily"},"content":"routes commands to mode-specific managers all commands related to that mode. These abstractions allow us to naturally","lastModifiedDate":"2023-04-04"},{"lineNumber":208,"author":{"gitId":"cetigerlily"},"content":"group functionalities among different groups and efficiently coordinate different components.","lastModifiedDate":"2023-04-04"},{"lineNumber":209,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"BoAi01"},"content":"**Alternatives considered for adding XYZ**","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"cetigerlily"},"content":"One alternative approach could be to use a more direct approach to add the new entity without using a command pattern.","lastModifiedDate":"2023-04-04"},{"lineNumber":213,"author":{"gitId":"cetigerlily"},"content":"For instance, the UI layer could directly call the logic layer\u0027s addXYZ() function, which would handle the addition of","lastModifiedDate":"2023-04-04"},{"lineNumber":214,"author":{"gitId":"cetigerlily"},"content":"the new entity. This approach, however, could make it more challenging to manage the application\u0027s state, particularly","lastModifiedDate":"2023-04-04"},{"lineNumber":215,"author":{"gitId":"cetigerlily"},"content":"as the app grows more complex, and new features are added.","lastModifiedDate":"2023-04-04"},{"lineNumber":216,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"cetigerlily"},"content":"Another alternative is to use a different design pattern, such as the builder pattern. In this approach, a builder","lastModifiedDate":"2023-04-04"},{"lineNumber":218,"author":{"gitId":"cetigerlily"},"content":"object is responsible for constructing an object in stages, and the construction process can be further customized by","lastModifiedDate":"2023-04-04"},{"lineNumber":219,"author":{"gitId":"cetigerlily"},"content":"calling specific builder methods. This approach can be useful when the entity being constructed has several configurable","lastModifiedDate":"2023-04-04"},{"lineNumber":220,"author":{"gitId":"cetigerlily"},"content":"attributes that need to be set. However, in our case, the entities have fixed attributes, and the command pattern seems","lastModifiedDate":"2023-04-04"},{"lineNumber":221,"author":{"gitId":"cetigerlily"},"content":"to be a more natural fit.","lastModifiedDate":"2023-04-04"},{"lineNumber":222,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":224,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":225,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":226,"author":{"gitId":"jishnu28"},"content":"### 2. Deleting XYZ","lastModifiedDate":"2023-03-25"},{"lineNumber":227,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":228,"author":{"gitId":"cetigerlily"},"content":"**How is this feature implemented?**","lastModifiedDate":"2023-03-23"},{"lineNumber":229,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"cetigerlily"},"content":"The deleting feature is implemented in the same way for deleting crews, flights, locations, pilots, and planes from the","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"cetigerlily"},"content":"Wingman app. Hence, in this description, the general term XYZ is used instead to refer to all for simplicity.","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"cetigerlily"},"content":"This feature is enabled by the following classes in particular:","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":235,"author":{"gitId":"cetigerlily"},"content":"- `DeleteXYZCommand` - The command that deletes a XYZ from the Wingman app","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"cetigerlily"},"content":"- `DeleteXYZCommandFactory` - The factory class that creates a {@code DeleteXYZCommand}","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"cetigerlily"},"content":"When a user enters the command:","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":240,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":241,"author":{"gitId":"jishnu28"},"content":"delete {XYZ identifier}","lastModifiedDate":"2023-03-25"},{"lineNumber":242,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":243,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"cetigerlily"},"content":"the input goes through the UI layer where `logic.execute(input)` is called which passes control to the logic layer.","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"cetigerlily"},"content":"At the logic layer, `execute(input)` first parses the input using the WingmanParser\u0027s `parse` function. The aim of","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"cetigerlily"},"content":"parsing is to determine what type of command the user\u0027s input is and determine which mode - Crew, Flight, Location,","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"cetigerlily"},"content":"Pilot, or Plane - should handle the execution of said command.","lastModifiedDate":"2023-03-23"},{"lineNumber":249,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"cetigerlily"},"content":"The WingmanParser separates the input into tokens, determines what mode the command is from, and then returns the","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"cetigerlily"},"content":"desired command type. In this case, the input allows the WingmanParser to recognize it is a `DeleteXYZCommand` and as a","lastModifiedDate":"2023-03-23"},{"lineNumber":252,"author":{"gitId":"cetigerlily"},"content":"result, returns a new `DeleteXYZCommand` with the {XYZ identifier}.","lastModifiedDate":"2023-03-23"},{"lineNumber":253,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":254,"author":{"gitId":"cetigerlily"},"content":"The `DeleteXYZCommand` is executed using the corresponding `XYZManager`. Firstly, the `XYZManager` uses `getItem(id)`","lastModifiedDate":"2023-03-23"},{"lineNumber":255,"author":{"gitId":"cetigerlily"},"content":"to find the corresponding XYZ to be deleted. Secondly, the `XYZManager` calls the `deleteXYZ(id)` method. The","lastModifiedDate":"2023-03-23"},{"lineNumber":256,"author":{"gitId":"cetigerlily"},"content":"`deleteXYZ(id)` method uses the `item.removeItem(id)` method in order to remove the desired XYZ from the Wingman app.","lastModifiedDate":"2023-03-23"},{"lineNumber":257,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":258,"author":{"gitId":"cetigerlily"},"content":"Finally, the `CommandResult` is returned which is the message the user will see indicating a successful deletion.","lastModifiedDate":"2023-03-23"},{"lineNumber":259,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":260,"author":{"gitId":"cetigerlily"},"content":"\u003cimg src\u003d\"images/WingmanDeleteXYZSequenceDiagram.png\" width\u003d\"966\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"cetigerlily"},"content":"**Why was it implemented this way?**","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":264,"author":{"gitId":"cetigerlily"},"content":"For the parsing logic in the Wingman app, the commands were split based on their related \"mode.\" This implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"cetigerlily"},"content":"decision was made so that parsing would be more simple across the five modes. To elaborate, each mode would handle their","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"cetigerlily"},"content":"related commands only.","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"cetigerlily"},"content":"**Alternatives considered for deleting XYZ:**","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"cetigerlily"},"content":"Description coming soon","lastModifiedDate":"2023-03-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":273,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":275,"author":{"gitId":"jishnu28"},"content":"### 3. Linking XYZ to a flight","lastModifiedDate":"2023-03-25"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":277,"author":{"gitId":"wxxedu"},"content":"**Rationale**","lastModifiedDate":"2023-03-24"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":279,"author":{"gitId":"wxxedu"},"content":"The rationale behind creating a `Link` class is that only such affords us","lastModifiedDate":"2023-03-24"},{"lineNumber":280,"author":{"gitId":"wxxedu"},"content":"the ability to describe a relationship between two objects in away that\u0027s safe.","lastModifiedDate":"2023-03-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":282,"author":{"gitId":"wxxedu"},"content":"**How is this feature implemented?**","lastModifiedDate":"2023-03-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"wxxedu"},"content":"This linking feature is implemented in a similar way to the unlinking","lastModifiedDate":"2023-03-24"},{"lineNumber":285,"author":{"gitId":"wxxedu"},"content":"feature for crews, locations, pilots, and planes to flights.","lastModifiedDate":"2023-03-24"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":287,"author":{"gitId":"wxxedu"},"content":"Hence, in this description the general term XYZ is used instead.","lastModifiedDate":"2023-03-24"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":289,"author":{"gitId":"wxxedu"},"content":"This feature is enabled by the following classes in particular:","lastModifiedDate":"2023-03-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":291,"author":{"gitId":"wxxedu"},"content":"- `LinkXYZCommand` - The command that links a crew to a flight","lastModifiedDate":"2023-03-24"},{"lineNumber":292,"author":{"gitId":"wxxedu"},"content":"- `LinkXYZCommandFactory` - The factory class that creates an {@code","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"wxxedu"},"content":"  LinkCrewCommand}","lastModifiedDate":"2023-03-24"},{"lineNumber":294,"author":{"gitId":"wxxedu"},"content":"- `Link` - The class defining a link to a target","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"wxxedu"},"content":"- `Flight` - The class defining a flight object in Wingman","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":297,"author":{"gitId":"wxxedu"},"content":"- When a user enters the command:","lastModifiedDate":"2023-03-24"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":300,"author":{"gitId":"wxxedu"},"content":"link /XYZprefix {XYZ identifier} /fl {flight identifier}","lastModifiedDate":"2023-03-24"},{"lineNumber":301,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":303,"author":{"gitId":"wxxedu"},"content":"this command is passed from the UI layer to the logic layer similar to the","lastModifiedDate":"2023-03-24"},{"lineNumber":304,"author":{"gitId":"wxxedu"},"content":"way described above, in the \u0027Unlinking XYZ\u0027 section.","lastModifiedDate":"2023-03-24"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":306,"author":{"gitId":"wxxedu"},"content":"At the logic layer, while the sequence of method calls is similar to what is","lastModifiedDate":"2023-03-24"},{"lineNumber":307,"author":{"gitId":"wxxedu"},"content":"described in the \u0027Adding XYZ\u0027 section, the `LinkXYZCommand.execute(model)`","lastModifiedDate":"2023-03-24"},{"lineNumber":308,"author":{"gitId":"wxxedu"},"content":"method is called instead of the `UnlinkXYZCommand.execute(model)` method.","lastModifiedDate":"2023-03-24"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":310,"author":{"gitId":"wxxedu"},"content":"This method then calls the `flight.XYZLink.add(entry.getKey(), entry.getValue","lastModifiedDate":"2023-03-24"},{"lineNumber":311,"author":{"gitId":"wxxedu"},"content":"())` method where entry refers to one key-value pairing in a mapping of","lastModifiedDate":"2023-03-24"},{"lineNumber":312,"author":{"gitId":"wxxedu"},"content":"`FlightXYZType` keys to `XYZ` values. At this point, the process is at the","lastModifiedDate":"2023-03-24"},{"lineNumber":313,"author":{"gitId":"wxxedu"},"content":"model layer and continues with method calls similar to the ones described in","lastModifiedDate":"2023-03-24"},{"lineNumber":314,"author":{"gitId":"wxxedu"},"content":"the \u0027Unlinking XYZ from a flight\u0027 section until the control is passed back","lastModifiedDate":"2023-03-24"},{"lineNumber":315,"author":{"gitId":"wxxedu"},"content":"to the logic layer.","lastModifiedDate":"2023-03-24"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":317,"author":{"gitId":"wxxedu"},"content":"Subsequently, the control is passed to the storage layer through the","lastModifiedDate":"2023-03-24"},{"lineNumber":318,"author":{"gitId":"wxxedu"},"content":"`logicManager.save()` method.","lastModifiedDate":"2023-03-24"},{"lineNumber":319,"author":{"gitId":"wxxedu"},"content":"This method calls `storage.saveXYZManager(model.getXYZManager())` and","lastModifiedDate":"2023-03-24"},{"lineNumber":320,"author":{"gitId":"wxxedu"},"content":"`storage.saveFlightManager(model.getFlightManager())`;, to save the updated","lastModifiedDate":"2023-03-24"},{"lineNumber":321,"author":{"gitId":"wxxedu"},"content":"flight and XYZ objects in storage. Since","lastModifiedDate":"2023-03-24"},{"lineNumber":322,"author":{"gitId":"wxxedu"},"content":"these 2 method calls work in the same way, we shall focus on just the latter,","lastModifiedDate":"2023-03-24"},{"lineNumber":323,"author":{"gitId":"wxxedu"},"content":"to be succinct.","lastModifiedDate":"2023-03-24"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"wxxedu"},"content":"After `model.getFlightManager()` returns the model, the saveFlightManager","lastModifiedDate":"2023-03-24"},{"lineNumber":326,"author":{"gitId":"wxxedu"},"content":"method calls the `saveFlightManager(flightManager, flightStorage.getPath())`","lastModifiedDate":"2023-03-24"},{"lineNumber":327,"author":{"gitId":"wxxedu"},"content":"method in the same class. flightStorage is an ItemStorage\u003cFlight\u003e object","lastModifiedDate":"2023-03-24"},{"lineNumber":328,"author":{"gitId":"wxxedu"},"content":"and flightManager is an `ReadOnlyItemManager\u003cFlight\u003e` object. This method","lastModifiedDate":"2023-03-24"},{"lineNumber":329,"author":{"gitId":"wxxedu"},"content":"call uses the imported json package to store `JsonIdentifiableObject`","lastModifiedDate":"2023-03-24"},{"lineNumber":330,"author":{"gitId":"wxxedu"},"content":"versions of the flightManager which in turn contains the `JsonAdaptedFlights`,","lastModifiedDate":"2023-03-24"},{"lineNumber":331,"author":{"gitId":"wxxedu"},"content":"including the flight with the updated link represented as a","lastModifiedDate":"2023-03-24"},{"lineNumber":332,"author":{"gitId":"wxxedu"},"content":"`Map\u003cFlightXYZType, Deque\u003cString\u003e\u003e` object.","lastModifiedDate":"2023-03-24"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":334,"author":{"gitId":"wxxedu"},"content":"**Why this way?**","lastModifiedDate":"2023-03-24"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":336,"author":{"gitId":"wxxedu"},"content":"In this way, we are able to make the link feature work in a very similar way","lastModifiedDate":"2023-03-24"},{"lineNumber":337,"author":{"gitId":"wxxedu"},"content":"to the unlink feature, simply swapping","lastModifiedDate":"2023-03-24"},{"lineNumber":338,"author":{"gitId":"wxxedu"},"content":"some methods to perform the opposite operation (particularly the execute","lastModifiedDate":"2023-03-24"},{"lineNumber":339,"author":{"gitId":"wxxedu"},"content":"function of the LinkXYZCommand class).","lastModifiedDate":"2023-03-24"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":341,"author":{"gitId":"wxxedu"},"content":"**Alternatives that were considered:**","lastModifiedDate":"2023-03-24"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":343,"author":{"gitId":"wxxedu"},"content":"One alternative implementation that was considered was to set the link as an","lastModifiedDate":"2023-03-24"},{"lineNumber":344,"author":{"gitId":"wxxedu"},"content":"attribute in the flight class and update","lastModifiedDate":"2023-03-24"},{"lineNumber":345,"author":{"gitId":"wxxedu"},"content":"it directly with every change. However, this approach had a few limitations","lastModifiedDate":"2023-03-24"},{"lineNumber":346,"author":{"gitId":"wxxedu"},"content":"as discussed in the previous section.","lastModifiedDate":"2023-03-24"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":349,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":351,"author":{"gitId":"jishnu28"},"content":"### 4. Unlinking XYZ from a flight","lastModifiedDate":"2023-03-25"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":353,"author":{"gitId":"jishnu28"},"content":"**How is this feature implemented?**","lastModifiedDate":"2023-03-22"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":355,"author":{"gitId":"wxxedu"},"content":"This unlinking feature is implemented in the same way for unlinking crews,","lastModifiedDate":"2023-03-24"},{"lineNumber":356,"author":{"gitId":"wxxedu"},"content":"locations, pilots and planes from flights.","lastModifiedDate":"2023-03-24"},{"lineNumber":357,"author":{"gitId":"jishnu28"},"content":"Hence, in this description the general term XYZ is used instead.","lastModifiedDate":"2023-03-22"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":359,"author":{"gitId":"jishnu28"},"content":"This feature is enabled by the following classes in particular:","lastModifiedDate":"2023-03-22"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":361,"author":{"gitId":"jishnu28"},"content":"- `UnlinkXYZCommand` - The command that unlinks a crew from a flight","lastModifiedDate":"2023-03-22"},{"lineNumber":362,"author":{"gitId":"wxxedu"},"content":"- `UnlinkXYZCommandFactory` - The factory class that creates an {@code","lastModifiedDate":"2023-03-24"},{"lineNumber":363,"author":{"gitId":"wxxedu"},"content":"  UnlinkCrewCommand}","lastModifiedDate":"2023-03-24"},{"lineNumber":364,"author":{"gitId":"jishnu28"},"content":"- `Link` - The class defining a link to a target","lastModifiedDate":"2023-03-22"},{"lineNumber":365,"author":{"gitId":"jishnu28"},"content":"- `Flight` - The class defining a flight object in Wingman","lastModifiedDate":"2023-03-22"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":367,"author":{"gitId":"jishnu28"},"content":"When a user enters the command:","lastModifiedDate":"2023-03-22"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":369,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":370,"author":{"gitId":"jishnu28"},"content":"unlink /XYZprefix {XYZ identifier} /fl {flight identifier}","lastModifiedDate":"2023-03-25"},{"lineNumber":371,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":373,"author":{"gitId":"jishnu28"},"content":"this command is passed from the UI layer to the logic layer similar to the way described above, in the","lastModifiedDate":"2023-03-22"},{"lineNumber":374,"author":{"gitId":"jishnu28"},"content":"\u0027Adding XYZ\u0027 section.","lastModifiedDate":"2023-03-22"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":376,"author":{"gitId":"jishnu28"},"content":"At the logic layer, while the sequence of method calls is similar to what is described in the \u0027Deleting XYZ\u0027 section,","lastModifiedDate":"2023-03-22"},{"lineNumber":377,"author":{"gitId":"jishnu28"},"content":"the `UnlinkXYZCommand.execute(model)` method is called instead of the `DeleteXYZCommand.execute(model)` method.","lastModifiedDate":"2023-03-22"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":379,"author":{"gitId":"jishnu28"},"content":"This method then calls the `flight.XYZLink.delete(entry.getKey(), entry.getValue())` method where `entry` refers to","lastModifiedDate":"2023-03-22"},{"lineNumber":380,"author":{"gitId":"jishnu28"},"content":"one key-value pairing in a mapping of FlightXYZType keys to XYZ values.","lastModifiedDate":"2023-03-22"},{"lineNumber":381,"author":{"gitId":"jishnu28"},"content":"At this point, the process is at the model layer and continues with method calls similar to the ones described in the","lastModifiedDate":"2023-03-22"},{"lineNumber":382,"author":{"gitId":"jishnu28"},"content":"\u0027Linking XYZ to a flight\u0027 section until the control is passed back to the logic layer.","lastModifiedDate":"2023-03-22"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":384,"author":{"gitId":"jishnu28"},"content":"Subsequently, the control is passed to the storage layer through the `logicManager.save()` method.","lastModifiedDate":"2023-03-22"},{"lineNumber":385,"author":{"gitId":"jishnu28"},"content":"This method calls `storage.saveXYZManager(model.getXYZManager())` and","lastModifiedDate":"2023-03-22"},{"lineNumber":386,"author":{"gitId":"jishnu28"},"content":"`storage.saveFlightManager(model.getFlightManager());`, to save the updated flight and XYZ objects in storage. Since","lastModifiedDate":"2023-03-22"},{"lineNumber":387,"author":{"gitId":"jishnu28"},"content":"these 2 method calls work in the same way, we shall focus on just the latter, to be succinct.","lastModifiedDate":"2023-03-22"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":389,"author":{"gitId":"cetigerlily"},"content":"\u003cimg src\u003d\"images/WingmanUnlinkXYZSequenceDiagram.png\" width\u003d\"966\" alt\u003d\"Sequence diagram at Storage layer\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":391,"author":{"gitId":"jishnu28"},"content":"After `model.getFlightManager()` returns the model, the `saveFlightManager` method calls the","lastModifiedDate":"2023-03-22"},{"lineNumber":392,"author":{"gitId":"jishnu28"},"content":"`saveFlightManager(flightManager, flightStorage.getPath())` method in the same class.","lastModifiedDate":"2023-03-22"},{"lineNumber":393,"author":{"gitId":"jishnu28"},"content":"`flightStorage` is an `ItemStorage\u003cFlight\u003e` object and flightManager is an `ReadOnlyItemManager\u003cFlight\u003e` object.","lastModifiedDate":"2023-03-22"},{"lineNumber":394,"author":{"gitId":"jishnu28"},"content":"This method call uses the imported json package to store \u0027JsonIdentifiableObject\u0027 versions of the flightManager","lastModifiedDate":"2023-03-22"},{"lineNumber":395,"author":{"gitId":"jishnu28"},"content":"which in turn contains the JsonAdaptedFlights, including the flight with the updated link represented as a","lastModifiedDate":"2023-03-22"},{"lineNumber":396,"author":{"gitId":"jishnu28"},"content":"`Map\u003cFlightXYZType, Deque\u003cString\u003e\u003e` object.","lastModifiedDate":"2023-03-22"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":398,"author":{"gitId":"cetigerlily"},"content":"**Why was it implemented this way?**","lastModifiedDate":"2023-03-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":400,"author":{"gitId":"jishnu28"},"content":"In this way, we are able to make the unlink feature work in a very similar way to the link feature, simply swapping","lastModifiedDate":"2023-03-22"},{"lineNumber":401,"author":{"gitId":"jishnu28"},"content":"some methods to perform the opposite operation (particularly the `execute` function of the `UnlinkXYZCommand` class).","lastModifiedDate":"2023-03-22"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":403,"author":{"gitId":"cetigerlily"},"content":"**Alternatives considered for unlinking XYZ from a flight:**","lastModifiedDate":"2023-03-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":405,"author":{"gitId":"jishnu28"},"content":"One alternative implementation that was considered was to set the link as an attribute in the flight class and update","lastModifiedDate":"2023-03-22"},{"lineNumber":406,"author":{"gitId":"jishnu28"},"content":"it directly with every change. However, this approach had a few limitations as discussed in the previous section.","lastModifiedDate":"2023-03-22"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":409,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":411,"author":{"gitId":"jishnu28"},"content":"### 5. Displaying flights across all modes","lastModifiedDate":"2023-03-25"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":413,"author":{"gitId":"tangyuantyy"},"content":"Initially, there is only one `ItemListPanel` that displays an item list specific to each mode.","lastModifiedDate":"2023-03-23"},{"lineNumber":414,"author":{"gitId":"tangyuantyy"},"content":"However, in order to link an object (pilot/crew/location/plane) to a flight, a separate list panel displaying flights is","lastModifiedDate":"2023-03-23"},{"lineNumber":415,"author":{"gitId":"tangyuantyy"},"content":"necessary for ease of selecting and linking to a specific flight.","lastModifiedDate":"2023-03-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":417,"author":{"gitId":"tangyuantyy"},"content":"**Implementation of display of flight list**","lastModifiedDate":"2023-03-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":419,"author":{"gitId":"cetigerlily"},"content":"In the implementation as seen in the image below, the `MainWindow` can be filled by `ItemListPanel` as well","lastModifiedDate":"2023-04-04"},{"lineNumber":420,"author":{"gitId":"cetigerlily"},"content":"as `FlightListPanel`:","lastModifiedDate":"2023-04-04"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":422,"author":{"gitId":"tangyuantyy"},"content":"`ItemListPanel`: displays information about each `Item` using an `ItemCard` in a `ListView`.","lastModifiedDate":"2023-03-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":424,"author":{"gitId":"tangyuantyy"},"content":"`FlightListPanel`: displays information about each `Flight` using a `FlightCard` in a `ListView`.","lastModifiedDate":"2023-03-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":426,"author":{"gitId":"jishnu28"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":427,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/WingmanUI.png\" width\u003d\"600px\" alt\u003d\"Wingman UI\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":428,"author":{"gitId":"jishnu28"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":430,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":431,"author":{"gitId":"cetigerlily"},"content":"By having separate list panels, it will be easier to customise the display of different Item types if required by ui","lastModifiedDate":"2023-04-04"},{"lineNumber":432,"author":{"gitId":"cetigerlily"},"content":"improvements.","lastModifiedDate":"2023-04-04"},{"lineNumber":433,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":434,"author":{"gitId":"cetigerlily"},"content":"In each `ItemCard` as seen in the image below, the item’s name will be shown together with its id and respective","lastModifiedDate":"2023-04-04"},{"lineNumber":435,"author":{"gitId":"cetigerlily"},"content":"attributes.","lastModifiedDate":"2023-04-04"},{"lineNumber":436,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":437,"author":{"gitId":"tangyuantyy"},"content":"In each `FlightCard`, the structure is similar to that of `ItemCard` but specific to flight objects.","lastModifiedDate":"2023-03-23"},{"lineNumber":438,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":439,"author":{"gitId":"cetigerlily"},"content":"By modifying the layout and dividing into a left section which shows the resources, and a right section which shows the","lastModifiedDate":"2023-04-04"},{"lineNumber":440,"author":{"gitId":"cetigerlily"},"content":"flights,","lastModifiedDate":"2023-04-04"},{"lineNumber":441,"author":{"gitId":"tangyuantyy"},"content":"we can keep the information displayed organised and clear to the user.","lastModifiedDate":"2023-03-23"},{"lineNumber":442,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":443,"author":{"gitId":"tangyuantyy"},"content":"**Alternatives considered for display of flights:**","lastModifiedDate":"2023-03-23"},{"lineNumber":444,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":445,"author":{"gitId":"tangyuantyy"},"content":"* Alternative 1 (current choice): Has two panels to display items and flights in one display window","lastModifiedDate":"2023-03-23"},{"lineNumber":446,"author":{"gitId":"tangyuantyy"},"content":"* Pros: Easy to implement and can view all the information simultaneously after a command is executed.","lastModifiedDate":"2023-03-23"},{"lineNumber":447,"author":{"gitId":"tangyuantyy"},"content":"    * Cons: Too cramped, which may lead to information overload.","lastModifiedDate":"2023-03-23"},{"lineNumber":448,"author":{"gitId":"tangyuantyy"},"content":"* Alternative 2: Has one display window for items and a separate display window for flights","lastModifiedDate":"2023-03-23"},{"lineNumber":449,"author":{"gitId":"tangyuantyy"},"content":"    * Pros: More organised and visually pleasant.","lastModifiedDate":"2023-03-23"},{"lineNumber":450,"author":{"gitId":"tangyuantyy"},"content":"    * Cons: Hard to implement and unable to view 2 panels simultaneously without switching between windows","lastModifiedDate":"2023-03-23"},{"lineNumber":451,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":452,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":453,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":454,"author":{"gitId":"jishnu28"},"content":"## Appendix: Requirements","lastModifiedDate":"2023-03-22"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"BoAi01"},"content":"* has a need to manage a significant number of flights, pilots and crews","lastModifiedDate":"2023-02-26"},{"lineNumber":461,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":464,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"jishnu28"},"content":"**Value proposition**:","lastModifiedDate":"2023-03-25"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":468,"author":{"gitId":"jishnu28"},"content":"Airline managers will be able to take labor, welfare, and","lastModifiedDate":"2023-03-25"},{"lineNumber":469,"author":{"gitId":"wxxedu"},"content":"resource optimization","lastModifiedDate":"2023-02-28"},{"lineNumber":470,"author":{"gitId":"wxxedu"},"content":"into consideration such that they can assign tasks to the most appropriate crew","lastModifiedDate":"2023-02-28"},{"lineNumber":471,"author":{"gitId":"wxxedu"},"content":"based on their location","lastModifiedDate":"2023-02-28"},{"lineNumber":472,"author":{"gitId":"BoAi01"},"content":"and availability while optimizing their staff’s physical well-being.","lastModifiedDate":"2023-02-26"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"jishnu28"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":476,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"wxxedu"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (","lastModifiedDate":"2023-02-28"},{"lineNumber":479,"author":{"gitId":"wxxedu"},"content":"unlikely to have) - `*`","lastModifiedDate":"2023-02-28"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"| Priority | As a …​         | I want to …​                                                    | So that I can…​                                            |","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"jishnu28"},"content":"|----------|-----------------|-----------------------------------------------------------------|------------------------------------------------------------|","lastModifiedDate":"2023-03-25"},{"lineNumber":483,"author":{"gitId":"BoAi01"},"content":"| `* * *`  | airline manager | add new locations to the list of locations where we operate     | I can assign new departing locations and arrival locations |","lastModifiedDate":"2023-02-26"},{"lineNumber":484,"author":{"gitId":"BoAi01"},"content":"| `* * *`  | airline manager | list old locations from the locations where we were operating   | I can view all the locations                               |","lastModifiedDate":"2023-02-26"},{"lineNumber":485,"author":{"gitId":"BoAi01"},"content":"| `* * *`  | airline manager | remove old locations from the locations where we were operating | I can update departing locations and arrival locations     |","lastModifiedDate":"2023-02-26"},{"lineNumber":486,"author":{"gitId":"tangyuantyy"},"content":"| `* * *`  | airline manager | add crew to our workforce                                       | I can assign them to flights                               |","lastModifiedDate":"2023-02-27"},{"lineNumber":487,"author":{"gitId":"tangyuantyy"},"content":"| `* * *`  | airline manager | list crew from our workforce                                    | I can view all the crew                                    |","lastModifiedDate":"2023-02-27"},{"lineNumber":488,"author":{"gitId":"tangyuantyy"},"content":"| `* * *`  | airline manager | delete crew from our workforce                                  | I can remove them from flights                             |","lastModifiedDate":"2023-02-27"},{"lineNumber":489,"author":{"gitId":"cetigerlily"},"content":"| `* * *`  | airline manager | add new planes to our fleet                                     | I can assign them to flights                               |","lastModifiedDate":"2023-02-28"},{"lineNumber":490,"author":{"gitId":"cetigerlily"},"content":"| `* * *`  | airline manager | list planes from our fleet                                      | I can view all the planes in our fleet                     |","lastModifiedDate":"2023-02-28"},{"lineNumber":491,"author":{"gitId":"cetigerlily"},"content":"| `* * *`  | airline manager | remove old planes from our fleet                                | I can update planes which can be used for flights          |","lastModifiedDate":"2023-02-28"},{"lineNumber":492,"author":{"gitId":"wxxedu"},"content":"| `* * *`  | airline manager | add new pilots to the crew list                                 | I can assign flights to pilots                             |","lastModifiedDate":"2023-02-28"},{"lineNumber":493,"author":{"gitId":"wxxedu"},"content":"| `* * *`  | airline manager | remove pilots from the locations                                | I can retire some pilots                                   |","lastModifiedDate":"2023-02-28"},{"lineNumber":494,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | add a new flight to the scheduled flights                       | know what flights are upcoming                             |","lastModifiedDate":"2023-03-01"},{"lineNumber":495,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | remove a flight from the scheduled flights                      | know what flights are upcoming                             |","lastModifiedDate":"2023-03-01"},{"lineNumber":496,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | list the scheduled flights                                      | view all the upcoming flights                              |","lastModifiedDate":"2023-03-01"},{"lineNumber":497,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | link locations to flights                                       | know the departure and arrival locations for each flight   |","lastModifiedDate":"2023-03-25"},{"lineNumber":498,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | link planes to flights                                          | know what plane is assigned to what flight                 |","lastModifiedDate":"2023-03-25"},{"lineNumber":499,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | link pilots to flights                                          | know what pilots are flying which flights                  |","lastModifiedDate":"2023-03-25"},{"lineNumber":500,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | link crew to flights                                            | know which crew are assigned to which flight               |","lastModifiedDate":"2023-03-25"},{"lineNumber":501,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | unlink locations from flights                                   | change the departure and arrival locations for each flight |","lastModifiedDate":"2023-03-25"},{"lineNumber":502,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | unlink planes from flights                                      | change what plane is assigned to what flight               |","lastModifiedDate":"2023-03-25"},{"lineNumber":503,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | unlink pilots from flights                                      | change what pilots are flying which flights                |","lastModifiedDate":"2023-03-25"},{"lineNumber":504,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | unlink crew from flights                                        | change which crew are assigned to which flight             |","lastModifiedDate":"2023-03-25"},{"lineNumber":505,"author":{"gitId":"jishnu28"},"content":"| `* *`    | airline manager | link planes to locations                                        | know where each plane is located                           |","lastModifiedDate":"2023-03-25"},{"lineNumber":506,"author":{"gitId":"jishnu28"},"content":"| `* *`    | airline manager | link pilots to locations                                        | know where each pilot is located                           |","lastModifiedDate":"2023-03-25"},{"lineNumber":507,"author":{"gitId":"jishnu28"},"content":"| `* *`    | airline manager | link crew to locations                                          | know where each crew is located                            |","lastModifiedDate":"2023-03-25"},{"lineNumber":508,"author":{"gitId":"jishnu28"},"content":"| `* *`    | airline manager | unlink planes from locations                                    | change where a plane is located                            |","lastModifiedDate":"2023-03-25"},{"lineNumber":509,"author":{"gitId":"jishnu28"},"content":"| `* *`    | airline manager | unlink pilots from locations                                    | change where a pilot is located                            |","lastModifiedDate":"2023-03-25"},{"lineNumber":510,"author":{"gitId":"jishnu28"},"content":"| `* *`    | airline manager | unlink crew from locations                                      | change where a crew is located                             |","lastModifiedDate":"2023-03-25"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":512,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":515,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":516,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":517,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"wxxedu"},"content":"(For all use cases below, the **System** is the `Wingman` and the **Actor**","lastModifiedDate":"2023-02-28"},{"lineNumber":520,"author":{"gitId":"wxxedu"},"content":"is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-28"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"tangyuantyy"},"content":"**Use case: Delete a location**","lastModifiedDate":"2023-02-27"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"tangyuantyy"},"content":"1. User requests to list locations","lastModifiedDate":"2023-02-27"},{"lineNumber":527,"author":{"gitId":"tangyuantyy"},"content":"2. Wingman shows a list of locations","lastModifiedDate":"2023-02-27"},{"lineNumber":528,"author":{"gitId":"tangyuantyy"},"content":"3. User requests to delete a specific location in the list","lastModifiedDate":"2023-02-27"},{"lineNumber":529,"author":{"gitId":"tangyuantyy"},"content":"4. Wingman deletes the location","lastModifiedDate":"2023-02-27"},{"lineNumber":530,"author":{"gitId":"tangyuantyy"},"content":"5. User request to add a location","lastModifiedDate":"2023-02-27"},{"lineNumber":531,"author":{"gitId":"tangyuantyy"},"content":"6. Wingman adds the location","lastModifiedDate":"2023-02-27"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"tangyuantyy"},"content":"* 3a. The given location is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"tangyuantyy"},"content":"* 5b. The given location is a duplicate of an existing one","lastModifiedDate":"2023-02-27"},{"lineNumber":542,"author":{"gitId":"tangyuantyy"},"content":"    * 5b1. Wingman shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":543,"author":{"gitId":"tangyuantyy"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-02-27"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"tangyuantyy"},"content":"**Use case: Delete a crew**","lastModifiedDate":"2023-02-27"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"tangyuantyy"},"content":"**MSS**","lastModifiedDate":"2023-02-27"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"tangyuantyy"},"content":"1. User requests to list crew","lastModifiedDate":"2023-02-27"},{"lineNumber":550,"author":{"gitId":"tangyuantyy"},"content":"2. Wingman shows a list of crew","lastModifiedDate":"2023-02-27"},{"lineNumber":551,"author":{"gitId":"tangyuantyy"},"content":"3. User requests to delete a specific crew in the list","lastModifiedDate":"2023-02-27"},{"lineNumber":552,"author":{"gitId":"tangyuantyy"},"content":"4. Wingman deletes the crew","lastModifiedDate":"2023-02-27"},{"lineNumber":553,"author":{"gitId":"tangyuantyy"},"content":"5. User request to add a crew","lastModifiedDate":"2023-02-27"},{"lineNumber":554,"author":{"gitId":"tangyuantyy"},"content":"6. Wingman adds the crew","lastModifiedDate":"2023-02-27"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"tangyuantyy"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":557,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":558,"author":{"gitId":"tangyuantyy"},"content":"**Extensions**","lastModifiedDate":"2023-02-27"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"tangyuantyy"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-02-27"},{"lineNumber":561,"author":{"gitId":"tangyuantyy"},"content":"  Use case ends.","lastModifiedDate":"2023-02-27"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"tangyuantyy"},"content":"* 3a. The given crew is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":564,"author":{"gitId":"tangyuantyy"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":565,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-27"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"tangyuantyy"},"content":"* 5b. The given crew is a duplicate of an existing one","lastModifiedDate":"2023-02-27"},{"lineNumber":568,"author":{"gitId":"tangyuantyy"},"content":"    * 5b1. Wingman shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":569,"author":{"gitId":"tangyuantyy"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-02-27"},{"lineNumber":570,"author":{"gitId":"tangyuantyy"},"content":"    * 5b1. Wingman shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":571,"author":{"gitId":"tangyuantyy"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-03-01"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":573,"author":{"gitId":"cetigerlily"},"content":"**Use case: Delete a plane**","lastModifiedDate":"2023-02-28"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":575,"author":{"gitId":"cetigerlily"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":577,"author":{"gitId":"cetigerlily"},"content":"1. User requests to list planes","lastModifiedDate":"2023-02-28"},{"lineNumber":578,"author":{"gitId":"cetigerlily"},"content":"2. Wingman shows a list of planes","lastModifiedDate":"2023-02-28"},{"lineNumber":579,"author":{"gitId":"cetigerlily"},"content":"3. User requests to delete a specific plane in the list","lastModifiedDate":"2023-02-28"},{"lineNumber":580,"author":{"gitId":"cetigerlily"},"content":"4. Wingman deletes the plane","lastModifiedDate":"2023-02-28"},{"lineNumber":581,"author":{"gitId":"cetigerlily"},"content":"5. User request to add a plane","lastModifiedDate":"2023-02-28"},{"lineNumber":582,"author":{"gitId":"cetigerlily"},"content":"6. Wingman adds the plane","lastModifiedDate":"2023-02-28"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":584,"author":{"gitId":"cetigerlily"},"content":"   Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":585,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":586,"author":{"gitId":"cetigerlily"},"content":"**Extensions**","lastModifiedDate":"2023-02-28"},{"lineNumber":587,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":588,"author":{"gitId":"cetigerlily"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-02-28"},{"lineNumber":589,"author":{"gitId":"cetigerlily"},"content":"  Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":591,"author":{"gitId":"cetigerlily"},"content":"* 3a. The given plane is invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":592,"author":{"gitId":"cetigerlily"},"content":"    * 3a1. The AddressBook shows an error message. Use case resumes at step 2.","lastModifiedDate":"2023-02-28"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":594,"author":{"gitId":"cetigerlily"},"content":"* 5b. The given plane is a duplicate of an existing plane.","lastModifiedDate":"2023-02-28"},{"lineNumber":595,"author":{"gitId":"cetigerlily"},"content":"    * 5b1. Wingman shows an error message. Use case resumes at step 4.","lastModifiedDate":"2023-02-28"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":597,"author":{"gitId":"wxxedu"},"content":"**Use case: Add a pilot**","lastModifiedDate":"2023-02-28"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"wxxedu"},"content":"1. User requests to add a pilot","lastModifiedDate":"2023-02-28"},{"lineNumber":602,"author":{"gitId":"wxxedu"},"content":"2. User specifies the basic information of the pilot","lastModifiedDate":"2023-02-28"},{"lineNumber":603,"author":{"gitId":"wxxedu"},"content":"3. Wingman adds the pilot","lastModifiedDate":"2023-02-28"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"wxxedu"},"content":"* 2a. The given pilot is invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":610,"author":{"gitId":"wxxedu"},"content":"    * 2a1. Wingman shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":611,"author":{"gitId":"wxxedu"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-28"},{"lineNumber":612,"author":{"gitId":"wxxedu"},"content":"* 3a. The given pilot is a duplicate of an existing one","lastModifiedDate":"2023-02-28"},{"lineNumber":613,"author":{"gitId":"wxxedu"},"content":"    * 3a1. Wingman shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":614,"author":{"gitId":"wxxedu"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-28"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":616,"author":{"gitId":"wxxedu"},"content":"**Use case: Delete a pilot**","lastModifiedDate":"2023-02-28"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":618,"author":{"gitId":"wxxedu"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":620,"author":{"gitId":"wxxedu"},"content":"1. User requests to delete a specific pilot in the list","lastModifiedDate":"2023-02-28"},{"lineNumber":621,"author":{"gitId":"wxxedu"},"content":"2. Wingman deletes the pilot","lastModifiedDate":"2023-02-28"},{"lineNumber":622,"author":{"gitId":"wxxedu"},"content":"3. User request to add a pilot","lastModifiedDate":"2023-02-28"},{"lineNumber":623,"author":{"gitId":"wxxedu"},"content":"4. Wingman adds the pilot","lastModifiedDate":"2023-02-28"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":625,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"jishnu28"},"content":"**Use case: Add a flight**","lastModifiedDate":"2023-03-01"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":629,"author":{"gitId":"jishnu28"},"content":"**MSS:**","lastModifiedDate":"2023-03-01"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":631,"author":{"gitId":"jishnu28"},"content":"1. User chooses \u0027flight\u0027 mode","lastModifiedDate":"2023-03-01"},{"lineNumber":632,"author":{"gitId":"jishnu28"},"content":"2. Wingman shows a list of scheduled flights","lastModifiedDate":"2023-03-01"},{"lineNumber":633,"author":{"gitId":"jishnu28"},"content":"3. User enters details of the new flight to add to schedule","lastModifiedDate":"2023-03-01"},{"lineNumber":634,"author":{"gitId":"jishnu28"},"content":"4. Wingman adds the details of the new flight to list of scheduled flights","lastModifiedDate":"2023-03-01"},{"lineNumber":635,"author":{"gitId":"jishnu28"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":637,"author":{"gitId":"jishnu28"},"content":"**Extensions:**","lastModifiedDate":"2023-03-01"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":639,"author":{"gitId":"jishnu28"},"content":"* 3a. The given flight details are invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":641,"author":{"gitId":"jishnu28"},"content":"    * 3a1. Wingman shows an error message and an example of a correct command.","lastModifiedDate":"2023-03-01"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":643,"author":{"gitId":"jishnu28"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-01"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":645,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":648,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":650,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"tangyuantyy"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-02-27"},{"lineNumber":653,"author":{"gitId":"cetigerlily"},"content":"2. Should be able to hold up to 100 flights, crews, and pilots without a noticeable sluggishness in performance for","lastModifiedDate":"2023-04-04"},{"lineNumber":654,"author":{"gitId":"cetigerlily"},"content":"   typical usage.","lastModifiedDate":"2023-04-04"},{"lineNumber":655,"author":{"gitId":"cetigerlily"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2023-04-04"},{"lineNumber":656,"author":{"gitId":"cetigerlily"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-04-04"},{"lineNumber":657,"author":{"gitId":"tangyuantyy"},"content":"4. The system should respond within a second.","lastModifiedDate":"2023-02-27"},{"lineNumber":658,"author":{"gitId":"tangyuantyy"},"content":"5. The data should be stored locally and should be in a human editable text file.","lastModifiedDate":"2023-02-27"},{"lineNumber":659,"author":{"gitId":"jishnu28"},"content":"6. Should work without requiring an installer or a remote server","lastModifiedDate":"2023-03-01"},{"lineNumber":660,"author":{"gitId":"jishnu28"},"content":"7. Should be for a single user and should not have any shared file storage mechanism","lastModifiedDate":"2023-03-01"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"jishnu28"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":664,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"BoAi01"},"content":"* **Location**: A unit place that flights may depart from or arrive at.","lastModifiedDate":"2023-02-26"},{"lineNumber":667,"author":{"gitId":"tangyuantyy"},"content":"* **Crew**: A unit person who can be added to or deleted from a flight.","lastModifiedDate":"2023-03-01"},{"lineNumber":668,"author":{"gitId":"wxxedu"},"content":"* **Pilot**: Someone that is certified to fly an aircraft.","lastModifiedDate":"2023-02-28"},{"lineNumber":669,"author":{"gitId":"tangyuantyy"},"content":"* **Plane**: A unit plane which can be assigned to flights.","lastModifiedDate":"2023-03-01"},{"lineNumber":670,"author":{"gitId":"jishnu28"},"content":"* **Flight**: An activity with start and end locations, to which pilots, planes and crew can be assigned.","lastModifiedDate":"2023-03-01"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"BoAi01":31,"jishnu28":195,"cetigerlily":112,"wxxedu":83,"tangyuantyy":60,"-":190}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"   1. Run the `w11_1.wingman.Main` and try a few commands.","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"wxxedu":1,"-":54}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"### Wingman User Guide","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"Wingman is a resource management tool designed for airline managers that allows for efficient management of crew,","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"flights, locations, pilots, and planes via command lines. The functionalities include adding, deleting, checking, or associating these","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"airline-related resources. The program is highly optimized for fast typers, while having an intuitive graphical interface","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"for managers to monitor the status of airline-related resources. ","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"In this flight, we will guide you on how to use Wingman to efficiently manage the various aspects of airline operations,","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"such as flight scheduling and management of crew, pilot, plane and location.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"## Table of Contents","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"- **[How to use this guide?](#how-to-use-this-guide)**","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"- **[Getting Started](#getting-started)**","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"- **[Features](#features)**","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"  - **[Modal Editing](#modal-editing)**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"  - **[Shared Commands](#shared-commands)**","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"  - **[Mode-specific Commands](#mode-specific-commands)**","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"  - **[Application Commands](#application-commands)**","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"- **[Prefix Summary](#prefix-summary)**","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"- **[Command summary](#command-summary)**","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"- **[FAQ](#faq)**","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"- **[Glossary](#glossary)**","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"- **[Other information](#other-information)**","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"## How to use this guide?","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"This user guide provides an in-depth documentation on the multiple features that enable Wingman","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"to assist you in managing your resources.","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"If you are an experienced user trying to find a specific command, you can head over to","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"the [command summary](#command-summary) section where you can view all the commands at a glance.","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"If you are a first-time user, you can begin by reading the [Getting Started](#getting-started) section to learn how to","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"get started with Wingman in just a few simple steps!","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"To find an in depth description of Wingman\u0027s features, simply search for the feature in the","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"[table of contents](#table-of-contents) and head over to the relevant section.","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"Each section contains a detailed description of the feature, and it\u0027s command format ","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"along with some examples of possible uses and expected outputs.","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"For the description of commands, `{resource}_index` (e.g. `plane_index`) acts a placeholder in the command format where","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"a","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"plane\u0027s index would be inputted. The index of any resource can be found as the number next to it in the list. Please","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"refer to the image below for clarity.","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"## Getting Started","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"You can get started with Wingman in just 3 simple steps:","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"1. Ensure you have `JAVA 11` installed on your computer. If you are unsure how to check JAVA version on your computer,","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"please check out [FAQ](#faq). ","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"2. Click [here](https://github.com/AY2223S2-CS2103T-W11-1/tp/releases/tag/v1.3) to download the Wingman.jar file","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"3. Open a command terminal on your computing, and run the command to start the application:  `java -jar Wingman.jar`","lastModifiedDate":"2023-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"A GUI similar to the one below should appear in a few seconds.","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"border: 0px solid #ccc; background-color: #d9edff; color: darkblue; padding: 10px; margin-bottom: 10px;\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"Note how the app below contains some sample data. This may not be the case if it\u0027s your first time using Wingman.","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"tangyuantyy"},"content":"\u003cimg src \u003d \"images/UG-index-reference.png\" width\u003d\"2032\" alt\u003d\"Wingman home page\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"(If you encounter any issues during installation, please head over to our [FAQ](#faq) section to troubleshoot.)","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"Congratulations on successfully setting up Wingman!","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"Before you start using Wingman to manage your resources, do take a moment to read","lastModifiedDate":"2023-04-02"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"the following section on [Modal Editing](#modal-editing) to understand how Wingman\u0027s commands are structured.","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"### Modal Editing","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"Wingman offers 5 different modes through which you can manage your resources, with each mode","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"corresponding to one [resource](#glossary) that the app can manage:","lastModifiedDate":"2023-04-02"},{"lineNumber":76,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"- `crew` mode: to manage the crews that form your airline workforce","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"- `flight` mode: to manage the flights that your airline operates","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"- `location` mode: to manage the locations in which your airline operates","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"- `pilot` mode: to manage the pilots that form your airline workforce","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"- `plane` mode: to manage the planes that your airline operates","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"The different modes offer similar and intuitive commands, with optimisations to cater to the resource","lastModifiedDate":"2023-04-02"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"that the mode is managing. This means you do not have to worry about memorising complex commands and instead","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"can dive right into the management of your airline.","lastModifiedDate":"2023-04-02"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"To switch between different modes simply enter the following command:","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"jishnu28"},"content":"mode XYZ","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"jishnu28"},"content":"where XYZ can be any of the modes described above (i.e. `crew`, `flight`, `location`, `pilot`, `plane`).","lastModifiedDate":"2023-04-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/ModeCrewLanding.jpg\" width\u003d\"2032\" alt\u003d\"Switching to mode crew\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"jishnu28"},"content":"As shown in the image above, upon successfully switching to a mode, Wingman will","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"jishnu28"},"content":"display the current mode\u0027s name in the status bar in the bottom left corner of the window.","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"jishnu28"},"content":"The window also displays a list for each resource, to aid you in keeping track of links between resources.","lastModifiedDate":"2023-04-02"},{"lineNumber":100,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2023-04-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":106,"author":{"gitId":"jishnu28"},"content":"### Shared Commands","lastModifiedDate":"2023-03-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"jishnu28"},"content":"The commands in this section are available across ALL 5 modes.","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"#### 1. Adding a resource","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"Use this command when you wish to add a new resource entity (e.g. a new plane that has been added to your fleet)","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"to Wingman, for you to manage the resource.","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"jishnu28"},"content":"add /prefix_A value_A /prefix_B value_B","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"jishnu28"},"content":"This commands adds an entity of the current resource mode to Wingman\u0027s database. For example,","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"jishnu28"},"content":"if you are currently in the `plane` mode, then this command will add a new `plane` to the database.","lastModifiedDate":"2023-04-02"},{"lineNumber":121,"author":{"gitId":"jishnu28"},"content":"Each `/prefix` is an attribute of the resource entity, and you can specify the values","lastModifiedDate":"2023-04-02"},{"lineNumber":122,"author":{"gitId":"jishnu28"},"content":"for each attribute as shown in the following examples.","lastModifiedDate":"2023-04-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"border: 0px solid #ccc; background-color: #d9edff; color: darkblue; padding: 10px; margin-bottom: 10px;\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":125,"author":{"gitId":"jishnu28"},"content":"Note: The prefixes vary across different modes. Refer to the examples below for more clarity.","lastModifiedDate":"2023-04-02"},{"lineNumber":126,"author":{"gitId":"jishnu28"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"##### Crew mode: `add /n name /r rank`","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":132,"author":{"gitId":"jishnu28"},"content":"- `/n`: the name of the crew.","lastModifiedDate":"2023-03-25"},{"lineNumber":133,"author":{"gitId":"jishnu28"},"content":"- `/r`: the rank of the crew.","lastModifiedDate":"2023-03-25"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"    - `0`: Cabin Service Director,","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"    - `1`: Senior Flight Attendant,","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"    - `2`: Flight Attendant,","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"cetigerlily"},"content":"    - `3`: Trainee.","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"cetigerlily"},"content":"add /n John Smith /r 0","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"cetigerlily"},"content":"Added Cabin Service Director John Smith.","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"cetigerlily"},"content":"##### Flight mode: `add /c code`","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"cetigerlily"},"content":"Prefix:","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":153,"author":{"gitId":"jishnu28"},"content":"- `/c` : the code for the flight.","lastModifiedDate":"2023-03-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"add /c SQ230","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"Added flight SQ230.","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"##### Location mode: `add /n name`","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"cetigerlily"},"content":"Prefix:","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":169,"author":{"gitId":"jishnu28"},"content":"- `/n`: name of the location.","lastModifiedDate":"2023-03-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":173,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"cetigerlily"},"content":"add /n Tokyo","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"cetigerlily"},"content":"Added Tokyo.","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"cetigerlily"},"content":"##### Pilot mode: `add /n name /r rank /a age /g gender /fh flight_hours`","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":185,"author":{"gitId":"jishnu28"},"content":"- `/n`: the name of the pilot.","lastModifiedDate":"2023-03-25"},{"lineNumber":186,"author":{"gitId":"jishnu28"},"content":"- `/r`: the rank of the pilot. Possible values:","lastModifiedDate":"2023-03-25"},{"lineNumber":187,"author":{"gitId":"cetigerlily"},"content":"    - `0`: Training Captain,","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"cetigerlily"},"content":"    - `1`: Captain,","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"cetigerlily"},"content":"    - `2`: Senior First Officer,","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"cetigerlily"},"content":"    - `3`: First Officer,","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"cetigerlily"},"content":"    - `4`: Second Officer,","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"cetigerlily"},"content":"    - `5`: Cadet.","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"jishnu28"},"content":"- `/a`: the age of the captain.","lastModifiedDate":"2023-03-25"},{"lineNumber":194,"author":{"gitId":"jishnu28"},"content":"- `/g`: the gender of the pilot. Possible values:","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"jishnu28"},"content":"    - `0`: male","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"jishnu28"},"content":"    - `1`: female","lastModifiedDate":"2023-03-25"},{"lineNumber":197,"author":{"gitId":"jishnu28"},"content":"    - `2`: other","lastModifiedDate":"2023-03-25"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"- `/fh`: the flight hours of the pilot.","lastModifiedDate":"2023-02-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":202,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"cetigerlily"},"content":"add /n Amelia Earhart /r 5 /a 34 /g 1 /fh 1000","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"cetigerlily"},"content":"Added Cadet Amelia Earhart.","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"cetigerlily"},"content":"##### Plane mode: `add /m model /a age`","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":214,"author":{"gitId":"jishnu28"},"content":"- `/m`: model of the plane.","lastModifiedDate":"2023-03-25"},{"lineNumber":215,"author":{"gitId":"jishnu28"},"content":"- `/a`: age of the plane.","lastModifiedDate":"2023-03-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":219,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":221,"author":{"gitId":"cetigerlily"},"content":"add /m A380 /a 10","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":223,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":224,"author":{"gitId":"cetigerlily"},"content":"Added A380.","lastModifiedDate":"2023-03-28"},{"lineNumber":225,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"jishnu28"},"content":"If the command is valid, upon pressing enter, your application window will be updated as shown below.","lastModifiedDate":"2023-03-25"},{"lineNumber":228,"author":{"gitId":"jishnu28"},"content":"The response box describes the addition that was made and the new entity should be displayed in the left list.","lastModifiedDate":"2023-03-25"},{"lineNumber":229,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":230,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/AddSuccessPage.jpg\" width\u003d\"2032\" alt\u003d\"Successful plane addition page\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":231,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"jishnu28"},"content":"#### 2. Deleting a resource","lastModifiedDate":"2023-03-25"},{"lineNumber":236,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":237,"author":{"gitId":"jishnu28"},"content":"Use this command when you wish to remove a resource entity (e.g. a pilot that has retired)","lastModifiedDate":"2023-03-25"},{"lineNumber":238,"author":{"gitId":"cetigerlily"},"content":"from Wingman, to keep your database of resources up to date.","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":240,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":241,"author":{"gitId":"jishnu28"},"content":"delete index_number","lastModifiedDate":"2023-03-25"},{"lineNumber":242,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":243,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":244,"author":{"gitId":"jishnu28"},"content":"This commands deletes an entity of the current resource mode from Wingman\u0027s database. For example,","lastModifiedDate":"2023-03-25"},{"lineNumber":245,"author":{"gitId":"cetigerlily"},"content":"if you are currently in the `plane` mode, then this command will delete the specified `plane` from the database.","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":247,"author":{"gitId":"jishnu28"},"content":"This command has no variations across modes:","lastModifiedDate":"2023-03-25"},{"lineNumber":248,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":249,"author":{"gitId":"jishnu28"},"content":"##### All modes: `delete 3`","lastModifiedDate":"2023-03-25"},{"lineNumber":250,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":251,"author":{"gitId":"cetigerlily"},"content":"Prefix:","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":253,"author":{"gitId":"BoAi01"},"content":"- `index_number`: the index number of the resource entity you wish to delete. Note that the indexing starts from 1.","lastModifiedDate":"2023-04-01"},{"lineNumber":254,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":255,"author":{"gitId":"cetigerlily"},"content":"The index number of an entity can be obtained from its position in the displayed list.","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":257,"author":{"gitId":"cetigerlily"},"content":"Example (in `plane` mode):","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":259,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":261,"author":{"gitId":"BoAi01"},"content":"delete 1","lastModifiedDate":"2023-04-01"},{"lineNumber":262,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":263,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"cetigerlily"},"content":"Deleted A380.","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"jishnu28"},"content":"For instance, Flight Attendant Mary will have an index number of 1 in the image below.","lastModifiedDate":"2023-03-25"},{"lineNumber":268,"author":{"gitId":"jishnu28"},"content":"(The index number will be displayed in future updates)","lastModifiedDate":"2023-03-25"},{"lineNumber":269,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":270,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/ModeCrewLanding.jpg\" width\u003d\"2032\" alt\u003d\"Mode crew page\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":271,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":272,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"jishnu28"},"content":"### Mode-specific Commands","lastModifiedDate":"2023-03-25"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":276,"author":{"gitId":"jishnu28"},"content":"The commands in this section are only available in some modes.","lastModifiedDate":"2023-03-25"},{"lineNumber":277,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":278,"author":{"gitId":"jishnu28"},"content":"#### 1. Linking a resource to a location","lastModifiedDate":"2023-03-25"},{"lineNumber":279,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":280,"author":{"gitId":"jishnu28"},"content":"Use this command when you wish to link a resource entity to a location","lastModifiedDate":"2023-03-25"},{"lineNumber":281,"author":{"gitId":"jishnu28"},"content":"(e.g. a pilot that has just landed in Dubai can have his location set as Dubai, so you are able to identify","lastModifiedDate":"2023-03-25"},{"lineNumber":282,"author":{"gitId":"jishnu28"},"content":"the correct pilots when filtering the pilots by location).","lastModifiedDate":"2023-03-25"},{"lineNumber":283,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":284,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":285,"author":{"gitId":"cetigerlily"},"content":"linklocation /lo location_index /resource_prefix resource_index","lastModifiedDate":"2023-03-27"},{"lineNumber":286,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":287,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":288,"author":{"gitId":"jishnu28"},"content":"This command is ONLY available in the following modes: `crew`, `flight`, `pilot` and `plane`.","lastModifiedDate":"2023-03-25"},{"lineNumber":289,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":290,"author":{"gitId":"jishnu28"},"content":"This commands links an entity of the current resource mode to a specified location entity in Wingman\u0027s database.","lastModifiedDate":"2023-03-25"},{"lineNumber":291,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":292,"author":{"gitId":"cetigerlily"},"content":"For example, if you are currently in the `plane` mode, then this command will link a `plane` to a specified location ","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"jishnu28"},"content":"entity in the database.","lastModifiedDate":"2023-04-02"},{"lineNumber":294,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":295,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"border: 0px solid #ccc; background-color: #d9edff; color: darkblue; padding: 10px; margin-bottom: 10px;\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":296,"author":{"gitId":"jishnu28"},"content":"Note: The prefixes vary across different modes. Refer to the examples below for more clarity.","lastModifiedDate":"2023-04-02"},{"lineNumber":297,"author":{"gitId":"jishnu28"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":298,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":299,"author":{"gitId":"cetigerlily"},"content":"##### Crew mode: `linklocation /lo location_index /cr crew_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":300,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":301,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":303,"author":{"gitId":"cetigerlily"},"content":"- `/lo`: the index of the location to which the crew is to be linked to.","lastModifiedDate":"2023-03-27"},{"lineNumber":304,"author":{"gitId":"cetigerlily"},"content":"- `/cr`: the index of the crew to be linked.","lastModifiedDate":"2023-03-27"},{"lineNumber":305,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":306,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":308,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"BoAi01"},"content":"linklocation /lo 1 /cr 2","lastModifiedDate":"2023-04-01"},{"lineNumber":311,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":313,"author":{"gitId":"cetigerlily"},"content":"Linked Cabin Service Director John Smith to Tokyo.","lastModifiedDate":"2023-03-28"},{"lineNumber":314,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":315,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":316,"author":{"gitId":"cetigerlily"},"content":"##### Flight mode: `linklocation /fl flight_index /from location_index /to location_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":317,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":318,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":319,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":320,"author":{"gitId":"cetigerlily"},"content":"- `/fl`: the index of the flight to be linked.","lastModifiedDate":"2023-03-27"},{"lineNumber":321,"author":{"gitId":"jishnu28"},"content":"- `/from`: the index of the location to which the flight is to be linked as departing from.","lastModifiedDate":"2023-03-25"},{"lineNumber":322,"author":{"gitId":"jishnu28"},"content":"- `/to`: the index of the location to which the flight is to be linked as arriving at.","lastModifiedDate":"2023-03-25"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":324,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":326,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":327,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":328,"author":{"gitId":"BoAi01"},"content":"linklocation /fl 1 /from 1 /to 2","lastModifiedDate":"2023-04-01"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":330,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":331,"author":{"gitId":"cetigerlily"},"content":"Linked flight SQ230 departing from Tokyo, arriving in Paris.","lastModifiedDate":"2023-03-28"},{"lineNumber":332,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":334,"author":{"gitId":"cetigerlily"},"content":"##### Pilot mode: `linklocation /lo location_index /pi pilot_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":336,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":338,"author":{"gitId":"cetigerlily"},"content":"- `/lo`: the index of the location to which the pilot is to be linked to.","lastModifiedDate":"2023-03-27"},{"lineNumber":339,"author":{"gitId":"cetigerlily"},"content":"- `/pi`: the index of the pilot to be linked.","lastModifiedDate":"2023-03-27"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":341,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":343,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":344,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":345,"author":{"gitId":"BoAi01"},"content":"linklocation /lo 1 /pi 2","lastModifiedDate":"2023-04-01"},{"lineNumber":346,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":347,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":348,"author":{"gitId":"cetigerlily"},"content":"Linked Cadet Amelia Earhart to Tokyo.","lastModifiedDate":"2023-03-28"},{"lineNumber":349,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":350,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":351,"author":{"gitId":"cetigerlily"},"content":"##### Plane mode: `linklocation /lo location_index /pl plane_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":352,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":353,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":354,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":355,"author":{"gitId":"cetigerlily"},"content":"- `/lo`: the index of the location to which the plane is to be linked to.","lastModifiedDate":"2023-03-27"},{"lineNumber":356,"author":{"gitId":"jishnu28"},"content":"- `/pl`: the index of the plane to be linked.","lastModifiedDate":"2023-03-25"},{"lineNumber":357,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":358,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":359,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":360,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":361,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":362,"author":{"gitId":"BoAi01"},"content":"linklocation /lo 1 /pl 2","lastModifiedDate":"2023-04-01"},{"lineNumber":363,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":364,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":365,"author":{"gitId":"cetigerlily"},"content":"Linked A380 to Tokyo.","lastModifiedDate":"2023-03-28"},{"lineNumber":366,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":367,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":368,"author":{"gitId":"jishnu28"},"content":"If the command is valid, Wingman will return a response describing the link that has been made, as shown below:","lastModifiedDate":"2023-03-25"},{"lineNumber":369,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":370,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/LinkLocationSuccess.jpg\" width\u003d\"2032\" alt\u003d\"Successful link of plane to location\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":371,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":372,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":373,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":374,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":375,"author":{"gitId":"jishnu28"},"content":"#### 2. Unlinking a resource from a location","lastModifiedDate":"2023-03-25"},{"lineNumber":376,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":377,"author":{"gitId":"jishnu28"},"content":"Use this command when you wish to unlink a resource entity from a location","lastModifiedDate":"2023-03-25"},{"lineNumber":378,"author":{"gitId":"jishnu28"},"content":"(e.g. when a plane has departed from Milan, you can unlink it from Milan,","lastModifiedDate":"2023-03-25"},{"lineNumber":379,"author":{"gitId":"jishnu28"},"content":"so you get the correct information when filtering planes by location).","lastModifiedDate":"2023-03-25"},{"lineNumber":380,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":381,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":382,"author":{"gitId":"cetigerlily"},"content":"unlinklocation /lo location_index /resource_prefix resource_index","lastModifiedDate":"2023-03-27"},{"lineNumber":383,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":384,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":385,"author":{"gitId":"BoAi01"},"content":"Same as `linklocation` command, this command is ONLY available in the following modes: `crew`, `flight`, `pilot`","lastModifiedDate":"2023-03-28"},{"lineNumber":386,"author":{"gitId":"BoAi01"},"content":"and `plane`.","lastModifiedDate":"2023-03-28"},{"lineNumber":387,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":388,"author":{"gitId":"jishnu28"},"content":"This commands unlinks an entity of the current resource mode to a specified location entity in Wingman\u0027s database.","lastModifiedDate":"2023-03-25"},{"lineNumber":389,"author":{"gitId":"jishnu28"},"content":"For example, if you are currently in the `plane` mode, then this command will unlink a `plane`","lastModifiedDate":"2023-03-25"},{"lineNumber":390,"author":{"gitId":"jishnu28"},"content":"from the specified location entity in the database.","lastModifiedDate":"2023-04-02"},{"lineNumber":391,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":392,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"border: 0px solid #ccc; background-color: #d9edff; color: darkblue; padding: 10px; margin-bottom: 10px;\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":393,"author":{"gitId":"jishnu28"},"content":"Note: The prefixes vary across different modes. Refer to the examples below for more clarity.","lastModifiedDate":"2023-04-02"},{"lineNumber":394,"author":{"gitId":"jishnu28"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":395,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":396,"author":{"gitId":"cetigerlily"},"content":"##### Crew mode: `unlinklocation /lo location_index /cr crew_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":397,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":398,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":399,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":400,"author":{"gitId":"cetigerlily"},"content":"- `/lo`: the index of the location from which the crew is to be unlinked from.","lastModifiedDate":"2023-03-27"},{"lineNumber":401,"author":{"gitId":"cetigerlily"},"content":"- `/cr`: the index of the crew to be unlinked.","lastModifiedDate":"2023-03-27"},{"lineNumber":402,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":403,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":404,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":405,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":406,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":407,"author":{"gitId":"BoAi01"},"content":"unlinklocation /lo 1 /cr 2","lastModifiedDate":"2023-04-01"},{"lineNumber":408,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":409,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":410,"author":{"gitId":"cetigerlily"},"content":"Unlinked Cabin Service Director John Smith from Tokyo.","lastModifiedDate":"2023-03-28"},{"lineNumber":411,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":412,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":413,"author":{"gitId":"cetigerlily"},"content":"##### Flight mode: `unlinklocation /fl flight_index /from departure_index /to arrival_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":414,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":415,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":416,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":417,"author":{"gitId":"cetigerlily"},"content":"- `/fl`: the index of the flight to be unlinked.","lastModifiedDate":"2023-03-27"},{"lineNumber":418,"author":{"gitId":"jishnu28"},"content":"- `/from`: the index of the departure location from which the flight is to be unlinked.","lastModifiedDate":"2023-03-25"},{"lineNumber":419,"author":{"gitId":"jishnu28"},"content":"- `/to`: the index of the arrival location from which the flight is to be unlinked.","lastModifiedDate":"2023-03-25"},{"lineNumber":420,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":421,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":422,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":423,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":424,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":425,"author":{"gitId":"BoAi01"},"content":"unlinklocation /fl 1 /from 1 /to 2","lastModifiedDate":"2023-04-01"},{"lineNumber":426,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":427,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":428,"author":{"gitId":"cetigerlily"},"content":"Unlinked flight SQ230 from Tokyo and Paris.","lastModifiedDate":"2023-03-28"},{"lineNumber":429,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":430,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":431,"author":{"gitId":"cetigerlily"},"content":"##### Pilot mode: `unlinklocation /lo location_index /pi pilot_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":432,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":433,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":434,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":435,"author":{"gitId":"cetigerlily"},"content":"- `/lo`: the index of the location from which the pilot is to be unlinked from.","lastModifiedDate":"2023-03-27"},{"lineNumber":436,"author":{"gitId":"cetigerlily"},"content":"- `/pi`: the index of the pilot to be unlinked.","lastModifiedDate":"2023-03-27"},{"lineNumber":437,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":438,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":439,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":440,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":441,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":442,"author":{"gitId":"BoAi01"},"content":"unlinklocation /lo 1 /pi 2","lastModifiedDate":"2023-04-01"},{"lineNumber":443,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":444,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":445,"author":{"gitId":"cetigerlily"},"content":"Unlinked Cadet Amelia Earhart from Tokyo.","lastModifiedDate":"2023-03-28"},{"lineNumber":446,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":447,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":448,"author":{"gitId":"cetigerlily"},"content":"##### Plane mode: `unlinklocation /lo location_index /pl plane_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":449,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":450,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":451,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":452,"author":{"gitId":"cetigerlily"},"content":"- `/lo`: the index of the location from which the plane is to be unlinked from.","lastModifiedDate":"2023-03-27"},{"lineNumber":453,"author":{"gitId":"jishnu28"},"content":"- `/pl`: the index of the plane to be unlinked.","lastModifiedDate":"2023-03-25"},{"lineNumber":454,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":455,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":456,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":457,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":458,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":459,"author":{"gitId":"BoAi01"},"content":"unlinklocation /lo 1 /pl 2","lastModifiedDate":"2023-04-01"},{"lineNumber":460,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":461,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":462,"author":{"gitId":"cetigerlily"},"content":"Unlinked A380 from Tokyo.","lastModifiedDate":"2023-03-28"},{"lineNumber":463,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":464,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":465,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":466,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":467,"author":{"gitId":"jishnu28"},"content":"#### 3. Linking a resource to a flight","lastModifiedDate":"2023-03-25"},{"lineNumber":468,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":469,"author":{"gitId":"jishnu28"},"content":"Use this command when you wish to link a resource entity to a flight (e.g. when assigning pilots to flights,","lastModifiedDate":"2023-03-25"},{"lineNumber":470,"author":{"gitId":"jishnu28"},"content":"you can use this command to link each pilot to a flight).","lastModifiedDate":"2023-03-25"},{"lineNumber":471,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":472,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":473,"author":{"gitId":"cetigerlily"},"content":"linkflight /fl flight_index /resource_prefix resource_index","lastModifiedDate":"2023-03-27"},{"lineNumber":474,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":475,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":476,"author":{"gitId":"jishnu28"},"content":"This command is ONLY available in the following modes: `crew`, `pilot` and `plane`. ","lastModifiedDate":"2023-03-25"},{"lineNumber":477,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":478,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"border: 0px solid #ccc; background-color: #d9edff; color: darkblue; padding: 10px; margin-bottom: 10px;\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":479,"author":{"gitId":"jishnu28"},"content":"Note: Locations are linked to flights through the `flight` mode, using the `linklocation` command described above.","lastModifiedDate":"2023-04-02"},{"lineNumber":480,"author":{"gitId":"jishnu28"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":481,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":482,"author":{"gitId":"jishnu28"},"content":"This commands links an entity of the current resource mode to a specified flight in Wingman\u0027s database. For example,","lastModifiedDate":"2023-03-25"},{"lineNumber":483,"author":{"gitId":"cetigerlily"},"content":"if you are currently in the `plane` mode, then this command will link a `plane` to a specified flight in the database. ","lastModifiedDate":"2023-03-28"},{"lineNumber":484,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":485,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"border: 0px solid #ccc; background-color: #d9edff; color: darkblue; padding: 10px; margin-bottom: 10px;\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":486,"author":{"gitId":"jishnu28"},"content":"Note: The prefixes vary across different modes. Refer to the examples below for more clarity.","lastModifiedDate":"2023-04-02"},{"lineNumber":487,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":489,"author":{"gitId":"cetigerlily"},"content":"##### Crew mode:","lastModifiedDate":"2023-03-28"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":491,"author":{"gitId":"cetigerlily"},"content":"`linkflight /fl flight_index /csd crew_index /sfa crew_index /fa crew_index /tr crew_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":493,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":495,"author":{"gitId":"cetigerlily"},"content":"- `/fl`: the flight to which the specified crew is to be linked to.","lastModifiedDate":"2023-03-27"},{"lineNumber":496,"author":{"gitId":"cetigerlily"},"content":"- `/csd`: the index of the crew to be linked as Cabin Service Director (CSD) for this flight.","lastModifiedDate":"2023-03-28"},{"lineNumber":497,"author":{"gitId":"cetigerlily"},"content":"- `/sfa`: the index of the crew to be linked as Senior Flight Attendant (SFA) for this flight.","lastModifiedDate":"2023-03-28"},{"lineNumber":498,"author":{"gitId":"cetigerlily"},"content":"- `/fa`: the index of the crew to be linked as Flight Attendant (FA) for this flight.","lastModifiedDate":"2023-03-28"},{"lineNumber":499,"author":{"gitId":"cetigerlily"},"content":"- `/tr`: the index of the crew to be linked as Trainee (TR) for this flight.","lastModifiedDate":"2023-03-28"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":501,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"border: 0px solid #ccc; background-color: #d9edff; color: darkblue; padding: 10px; margin-bottom: 10px;\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":502,"author":{"gitId":"cetigerlily"},"content":"Note: In each `linkflight` command under crew mode, you only need to fill up **at least** 1 crew related prefix.","lastModifiedDate":"2023-03-28"},{"lineNumber":503,"author":{"gitId":"jishnu28"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":504,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":505,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":506,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":507,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":508,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":509,"author":{"gitId":"BoAi01"},"content":"linkflight /fl 1 /csd 2","lastModifiedDate":"2023-04-01"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":511,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":512,"author":{"gitId":"cetigerlily"},"content":"Linked Cabin Service Director John Smith to SQ230.","lastModifiedDate":"2023-03-28"},{"lineNumber":513,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":515,"author":{"gitId":"cetigerlily"},"content":"##### Pilot mode: `linkflight /fl flight_index /pf pilot_index /pm pilot_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":517,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":519,"author":{"gitId":"cetigerlily"},"content":"- `/fl`: the flight to which the specified pilots are to be linked to.","lastModifiedDate":"2023-03-27"},{"lineNumber":520,"author":{"gitId":"jishnu28"},"content":"- `/pf`: the index of the flying pilot to be linked to the flight.","lastModifiedDate":"2023-03-25"},{"lineNumber":521,"author":{"gitId":"jishnu28"},"content":"- `/pm`: the index of the monitoring pilot to be linked to the flight.","lastModifiedDate":"2023-03-25"},{"lineNumber":522,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":523,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"border: 0px solid #ccc; background-color: #d9edff; color: darkblue; padding: 10px; margin-bottom: 10px;\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":524,"author":{"gitId":"cetigerlily"},"content":"Note: In each `linkflight` command under pilot mode, you only need to fill up **at least** 1 pilot related prefix.","lastModifiedDate":"2023-03-28"},{"lineNumber":525,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":527,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":529,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":530,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":531,"author":{"gitId":"BoAi01"},"content":"linkflight /fl 1 /csd 2","lastModifiedDate":"2023-04-01"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":533,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":534,"author":{"gitId":"cetigerlily"},"content":"Linked Cadet Amelia Earhart to SQ230.","lastModifiedDate":"2023-03-28"},{"lineNumber":535,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":537,"author":{"gitId":"cetigerlily"},"content":"##### Plane mode: `linkflight /fl flight_index /pl plane_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":539,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":541,"author":{"gitId":"cetigerlily"},"content":"- `/fl`: the flight to which the specified plane is to be linked to.","lastModifiedDate":"2023-03-27"},{"lineNumber":542,"author":{"gitId":"cetigerlily"},"content":"- `/pl`: the index of the plane to be linked as being used for the flight.","lastModifiedDate":"2023-03-27"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":544,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":546,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":547,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":548,"author":{"gitId":"BoAi01"},"content":"linkflight /fl 1 /pl 2","lastModifiedDate":"2023-04-01"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":550,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":551,"author":{"gitId":"cetigerlily"},"content":"Linked A380 to SQ230.","lastModifiedDate":"2023-03-28"},{"lineNumber":552,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":554,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":556,"author":{"gitId":"jishnu28"},"content":"#### 4. Unlinking a resource from a flight","lastModifiedDate":"2023-03-25"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":558,"author":{"gitId":"jishnu28"},"content":"Use this command when you wish to unlink a resource entity from a flight (e.g. when a flight has been cancelled,","lastModifiedDate":"2023-03-25"},{"lineNumber":559,"author":{"gitId":"jishnu28"},"content":"you can use this command to unlink the crew members from the flight).","lastModifiedDate":"2023-03-25"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":561,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":562,"author":{"gitId":"cetigerlily"},"content":"unlinkflight /fl flight_index /resource_prefix resource_index ","lastModifiedDate":"2023-03-27"},{"lineNumber":563,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":565,"author":{"gitId":"jishnu28"},"content":"This command is **ONLY** available in the following modes: `crew`, `pilot` and `plane`.","lastModifiedDate":"2023-04-02"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":567,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"border: 0px solid #ccc; background-color: #d9edff; color: darkblue; padding: 10px; margin-bottom: 10px;\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":568,"author":{"gitId":"jishnu28"},"content":"Note: Locations are unlinked from flights through the `flight` mode, using the `unlinklocation` command","lastModifiedDate":"2023-04-02"},{"lineNumber":569,"author":{"gitId":"jishnu28"},"content":"described above.","lastModifiedDate":"2023-04-02"},{"lineNumber":570,"author":{"gitId":"jishnu28"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":572,"author":{"gitId":"cetigerlily"},"content":"This command unlinks an entity of the current resource mode from a specified flight in Wingman\u0027s database. For example,","lastModifiedDate":"2023-03-27"},{"lineNumber":573,"author":{"gitId":"cetigerlily"},"content":"if you are currently in the `plane` mode, then this command will unlink a `plane` from a specified flight in the ","lastModifiedDate":"2023-03-28"},{"lineNumber":574,"author":{"gitId":"jishnu28"},"content":"database.","lastModifiedDate":"2023-04-02"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":576,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"border: 0px solid #ccc; background-color: #d9edff; color: darkblue; padding: 10px; margin-bottom: 10px;\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":577,"author":{"gitId":"jishnu28"},"content":"Note: The prefixes vary across different modes. Refer to the examples below for more clarity.","lastModifiedDate":"2023-04-02"},{"lineNumber":578,"author":{"gitId":"jishnu28"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":580,"author":{"gitId":"cetigerlily"},"content":"##### Crew mode:","lastModifiedDate":"2023-03-28"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":582,"author":{"gitId":"cetigerlily"},"content":"`unlinkflight /fl flight_index /csd crew_index /sfa crew_index /fa crew_index /tr crew_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":584,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":586,"author":{"gitId":"cetigerlily"},"content":"- `/fl`: the flight from which the specified crew is to be unlinked from.","lastModifiedDate":"2023-03-27"},{"lineNumber":587,"author":{"gitId":"cetigerlily"},"content":"- `/csd`: the index of the crew to be unlinked as Cabin Service Director (CSD) for this flight.","lastModifiedDate":"2023-03-28"},{"lineNumber":588,"author":{"gitId":"cetigerlily"},"content":"- `/sfa`: the index of the crew to be unlinked as Senior Flight Attendant (SFA) for this flight.","lastModifiedDate":"2023-03-28"},{"lineNumber":589,"author":{"gitId":"cetigerlily"},"content":"- `/fa`: the index of the crew to be unlinked as Flight Attendant (FA) for this flight.","lastModifiedDate":"2023-03-28"},{"lineNumber":590,"author":{"gitId":"cetigerlily"},"content":"- `/tr`: the index of the crew to be unlinked as Trainee (TR) for this flight.","lastModifiedDate":"2023-03-28"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":592,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"border: 0px solid #ccc; background-color: #d9edff; color: darkblue; padding: 10px; margin-bottom: 10px;\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":593,"author":{"gitId":"cetigerlily"},"content":"Note: In each `unlinkflight` command in crew mode, you only need to fill up **at least** 1 crew related prefix.","lastModifiedDate":"2023-03-28"},{"lineNumber":594,"author":{"gitId":"jishnu28"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":596,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":598,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":599,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":600,"author":{"gitId":"BoAi01"},"content":"unlinkflight /fl 1 /csd 2","lastModifiedDate":"2023-04-01"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":602,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":603,"author":{"gitId":"cetigerlily"},"content":"Unlinked Cabin Service Director John Smith from SQ230.","lastModifiedDate":"2023-03-28"},{"lineNumber":604,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":606,"author":{"gitId":"cetigerlily"},"content":"##### Pilot mode: `unlinkflight /fl flight_index /pf pilot_index /pm pilot_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":608,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":610,"author":{"gitId":"cetigerlily"},"content":"- `/fl`: the flight from which the specified pilots are to be linked from.","lastModifiedDate":"2023-03-27"},{"lineNumber":611,"author":{"gitId":"jishnu28"},"content":"- `/pf`: the index of the flying pilot to be unlinked from the flight.","lastModifiedDate":"2023-03-25"},{"lineNumber":612,"author":{"gitId":"jishnu28"},"content":"- `/pm`: the index of the monitoring pilot to be unlinked from the flight.","lastModifiedDate":"2023-03-25"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":615,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"border: 0px solid #ccc; background-color: #d9edff; color: darkblue; padding: 10px; margin-bottom: 10px;\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":616,"author":{"gitId":"jishnu28"},"content":"Note: In each `unlinkflight` command in pilot mode, you only need to fill up **at least** 1 crew related prefix.","lastModifiedDate":"2023-04-02"},{"lineNumber":617,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":619,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":620,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":621,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":622,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":623,"author":{"gitId":"BoAi01"},"content":"unlinkflight /fl 1 /csd 2","lastModifiedDate":"2023-04-01"},{"lineNumber":624,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":625,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":626,"author":{"gitId":"cetigerlily"},"content":"Unlinked Cadet Amelia Earhart from SQ230.","lastModifiedDate":"2023-03-28"},{"lineNumber":627,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":628,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":629,"author":{"gitId":"cetigerlily"},"content":"##### Plane mode: `unlink /fl flight_index /pl plane_index`","lastModifiedDate":"2023-03-28"},{"lineNumber":630,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":631,"author":{"gitId":"cetigerlily"},"content":"Prefixes:","lastModifiedDate":"2023-03-28"},{"lineNumber":632,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":633,"author":{"gitId":"cetigerlily"},"content":"- `/fl`: the flight from which the specified plane is to be linked from.","lastModifiedDate":"2023-03-27"},{"lineNumber":634,"author":{"gitId":"cetigerlily"},"content":"- `/pl`: the index of the plane to be unlinked as being used for the flight.","lastModifiedDate":"2023-03-27"},{"lineNumber":635,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":636,"author":{"gitId":"cetigerlily"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":637,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":638,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":639,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":640,"author":{"gitId":"BoAi01"},"content":"unlinkflight /fl 1 /pl 2","lastModifiedDate":"2023-04-01"},{"lineNumber":641,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":642,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":643,"author":{"gitId":"cetigerlily"},"content":"Unlinked A380 from SQ230.","lastModifiedDate":"2023-03-28"},{"lineNumber":644,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":645,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":646,"author":{"gitId":"jishnu28"},"content":"If the command is valid, Wingman will return a response describing how the specified link has been removed.","lastModifiedDate":"2023-03-25"},{"lineNumber":647,"author":{"gitId":"jishnu28"},"content":"Wingman will also update the lists in your window, to remove the specified link.","lastModifiedDate":"2023-03-25"},{"lineNumber":648,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":649,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/UnlinkSuccessful.jpg\" width\u003d\"2032\" alt\u003d\"Successful link of plane to location\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":651,"author":{"gitId":"cetigerlily"},"content":"#### 5. Checking a resource\u0027s availability","lastModifiedDate":"2023-03-27"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":653,"author":{"gitId":"cetigerlily"},"content":"Use this command when you wish to check a resource\u0027s availability (i.e. when deciding to use a resource for flight, you","lastModifiedDate":"2023-03-27"},{"lineNumber":654,"author":{"gitId":"cetigerlily"},"content":"can use this command to check whether the resource is already currently linked to another flight).","lastModifiedDate":"2023-03-27"},{"lineNumber":655,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":656,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":657,"author":{"gitId":"cetigerlily"},"content":"check /id resource_index","lastModifiedDate":"2023-03-27"},{"lineNumber":658,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":659,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":660,"author":{"gitId":"cetigerlily"},"content":"This command is ONLY available in the following modes: `crew`, `pilot` and `plane`.","lastModifiedDate":"2023-03-27"},{"lineNumber":661,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":662,"author":{"gitId":"cetigerlily"},"content":"This command checks whether an entity of the current resource is currently linked to a flight in Wingman\u0027s database.","lastModifiedDate":"2023-03-27"},{"lineNumber":663,"author":{"gitId":"cetigerlily"},"content":"For example, if you are currently in `plane` mode, then this command will check whether the specified `plane` is linked","lastModifiedDate":"2023-03-27"},{"lineNumber":664,"author":{"gitId":"cetigerlily"},"content":"to any flights or not and indicate its availability.","lastModifiedDate":"2023-03-27"},{"lineNumber":665,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":666,"author":{"gitId":"cetigerlily"},"content":"This command is the same across `crew`, `pilot`, and `plane`.","lastModifiedDate":"2023-03-27"},{"lineNumber":667,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":668,"author":{"gitId":"cetigerlily"},"content":"Example (in `plane` mode):","lastModifiedDate":"2023-03-28"},{"lineNumber":669,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":670,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":671,"author":{"gitId":"cetigerlily"},"content":"Input:","lastModifiedDate":"2023-03-28"},{"lineNumber":672,"author":{"gitId":"BoAi01"},"content":"check /id 1","lastModifiedDate":"2023-04-01"},{"lineNumber":673,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":674,"author":{"gitId":"cetigerlily"},"content":"Output: ","lastModifiedDate":"2023-03-28"},{"lineNumber":675,"author":{"gitId":"cetigerlily"},"content":"A380 is available.","lastModifiedDate":"2023-03-28"},{"lineNumber":676,"author":{"gitId":"cetigerlily"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":677,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":678,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":680,"author":{"gitId":"tangyuantyy"},"content":"### Application Commands","lastModifiedDate":"2023-03-28"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"tangyuantyy"},"content":"#### 1. Exiting from Wingman","lastModifiedDate":"2023-03-28"},{"lineNumber":683,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":684,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":685,"author":{"gitId":"jishnu28"},"content":"exit","lastModifiedDate":"2023-03-25"},{"lineNumber":686,"author":{"gitId":"jishnu28"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":687,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":688,"author":{"gitId":"jishnu28"},"content":"This will close the application window and exit the program.","lastModifiedDate":"2023-03-25"},{"lineNumber":689,"author":{"gitId":"jishnu28"},"content":"All your changes to your resources will be saved for you to get back to when you reopen the application.","lastModifiedDate":"2023-03-25"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"cetigerlily"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":692,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":693,"author":{"gitId":"cetigerlily"},"content":"## Prefix Summary","lastModifiedDate":"2023-03-28"},{"lineNumber":694,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":695,"author":{"gitId":"cetigerlily"},"content":"| **Action** | **Meaning**               | **Followed by**                  |","lastModifiedDate":"2023-03-28"},{"lineNumber":696,"author":{"gitId":"cetigerlily"},"content":"|------------|---------------------------|----------------------------------|","lastModifiedDate":"2023-03-28"},{"lineNumber":697,"author":{"gitId":"cetigerlily"},"content":"| /n         | `name`                    | Name of crew, location, or pilot |","lastModifiedDate":"2023-03-28"},{"lineNumber":698,"author":{"gitId":"cetigerlily"},"content":"| /r         | `rank`                    | Rank of crew, or pilot           |","lastModifiedDate":"2023-03-28"},{"lineNumber":699,"author":{"gitId":"cetigerlily"},"content":"| /c         | `code`                    | Code of flight                   |","lastModifiedDate":"2023-03-28"},{"lineNumber":700,"author":{"gitId":"cetigerlily"},"content":"| /a         | `age`                     | Age of pilot, or plane           |","lastModifiedDate":"2023-03-28"},{"lineNumber":701,"author":{"gitId":"cetigerlily"},"content":"| /g         | `gender`                  | Gender of pilot                  |","lastModifiedDate":"2023-03-28"},{"lineNumber":702,"author":{"gitId":"cetigerlily"},"content":"| /fh        | `flight hour`             | Flight hours of pilot            |","lastModifiedDate":"2023-03-28"},{"lineNumber":703,"author":{"gitId":"cetigerlily"},"content":"| /m         | `model`                   | Model of plane                   |","lastModifiedDate":"2023-03-28"},{"lineNumber":704,"author":{"gitId":"cetigerlily"},"content":"| /cr        | `crew`                    |                                  |","lastModifiedDate":"2023-03-28"},{"lineNumber":705,"author":{"gitId":"cetigerlily"},"content":"| /fl        | `flight`                  |                                  |","lastModifiedDate":"2023-03-28"},{"lineNumber":706,"author":{"gitId":"cetigerlily"},"content":"| /lo        | `location`                |                                  |","lastModifiedDate":"2023-03-28"},{"lineNumber":707,"author":{"gitId":"cetigerlily"},"content":"| /pi        | `pilot`                   |                                  |","lastModifiedDate":"2023-03-28"},{"lineNumber":708,"author":{"gitId":"cetigerlily"},"content":"| /pl        | `plane`                   |                                  |","lastModifiedDate":"2023-03-28"},{"lineNumber":709,"author":{"gitId":"cetigerlily"},"content":"| /from      | `departure location`      | Index of departure location      |","lastModifiedDate":"2023-03-28"},{"lineNumber":710,"author":{"gitId":"cetigerlily"},"content":"| /to        | `arrival location`        | Index of arrival location        |","lastModifiedDate":"2023-03-28"},{"lineNumber":711,"author":{"gitId":"cetigerlily"},"content":"| /csd       | `cabin service director`  | Index of cabin service director  |","lastModifiedDate":"2023-03-28"},{"lineNumber":712,"author":{"gitId":"cetigerlily"},"content":"| /sfa       | `senior flight attendant` | Index of senior flight attendant |","lastModifiedDate":"2023-03-28"},{"lineNumber":713,"author":{"gitId":"cetigerlily"},"content":"| /fa        | `flight attendant`        | Index of flight attendant        |","lastModifiedDate":"2023-03-28"},{"lineNumber":714,"author":{"gitId":"cetigerlily"},"content":"| /tr        | `trainee`                 | Index of trainee                 |","lastModifiedDate":"2023-03-28"},{"lineNumber":715,"author":{"gitId":"cetigerlily"},"content":"| /pf        | `pilot flying`            | Index of pilot flying            |","lastModifiedDate":"2023-03-28"},{"lineNumber":716,"author":{"gitId":"cetigerlily"},"content":"| /pm        | `pilot monitoring`        | Index of pilot monitoring        |","lastModifiedDate":"2023-03-28"},{"lineNumber":717,"author":{"gitId":"cetigerlily"},"content":"| /id        | `index`                   | Index of an entity               |","lastModifiedDate":"2023-03-28"},{"lineNumber":718,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":719,"author":{"gitId":"cetigerlily"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":720,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":721,"author":{"gitId":"wxxedu"},"content":"## Command Summary","lastModifiedDate":"2023-02-19"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"wxxedu"},"content":"| **Action**      | **Format**                                                          | **Examples**                   |","lastModifiedDate":"2023-02-19"},{"lineNumber":724,"author":{"gitId":"cetigerlily"},"content":"|-----------------|---------------------------------------------------------------------|--------------------------------|","lastModifiedDate":"2023-04-04"},{"lineNumber":725,"author":{"gitId":"jishnu28"},"content":"| Add             | `add /prefix_A value_A /prefix_B value_B`                           | `add /n Bob /r 2`              |","lastModifiedDate":"2023-03-25"},{"lineNumber":726,"author":{"gitId":"jishnu28"},"content":"| Delete          | `delete resource_index`                                             | `delete 1`                     |","lastModifiedDate":"2023-03-25"},{"lineNumber":727,"author":{"gitId":"cetigerlily"},"content":"| Link location   | `linklocation /lo location_index /resource_prefix resource_index`   | `linklocation /lo 0 /cr 1`     |","lastModifiedDate":"2023-03-27"},{"lineNumber":728,"author":{"gitId":"cetigerlily"},"content":"| Unlink location | `unlinklocation /lo location_index /resource_prefix resource_index` | `unlinklocation /lo 0 /fl 1`   |","lastModifiedDate":"2023-03-27"},{"lineNumber":729,"author":{"gitId":"cetigerlily"},"content":"| Link flight     | `linkflight /fl flight_index /resource_prefix resource_index `      | `linkflight /fl 0 /pf 1 /pm 2` |","lastModifiedDate":"2023-03-27"},{"lineNumber":730,"author":{"gitId":"cetigerlily"},"content":"| Unlink flight   | `unlinkflight /fl flight_index /resource_prefix resource_index `    | `unlinkflight /fl 0 /pu 1`     |","lastModifiedDate":"2023-03-27"},{"lineNumber":731,"author":{"gitId":"cetigerlily"},"content":"| Check           | `check /id resource_index`                                          | `check /id 0`                  |","lastModifiedDate":"2023-03-27"},{"lineNumber":732,"author":{"gitId":"wxxedu"},"content":"| Exit            | `exit`                                                              | `exit`                         |","lastModifiedDate":"2023-02-19"},{"lineNumber":733,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":734,"author":{"gitId":"jishnu28"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":736,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2023-03-25"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":738,"author":{"gitId":"jishnu28"},"content":"### 1. Why is Wingman not opening when I run the `java -jar` command?","lastModifiedDate":"2023-03-25"},{"lineNumber":739,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":740,"author":{"gitId":"jishnu28"},"content":"- You might be running the command in the wrong directory.","lastModifiedDate":"2023-03-25"},{"lineNumber":741,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":742,"author":{"gitId":"jishnu28"},"content":"Navigate to the directory where you downloaded the application file and run the same command again. ","lastModifiedDate":"2023-03-25"},{"lineNumber":743,"author":{"gitId":"BoAi01"},"content":"- Verify that your java version is 11. See the following question.","lastModifiedDate":"2023-04-01"},{"lineNumber":744,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":745,"author":{"gitId":"BoAi01"},"content":"### 2. How to check my `JAVA` version?","lastModifiedDate":"2023-04-01"},{"lineNumber":746,"author":{"gitId":"BoAi01"},"content":"You may run `java -version` in your terminal to see your Java SDK version. ","lastModifiedDate":"2023-04-01"},{"lineNumber":747,"author":{"gitId":"BoAi01"},"content":"If you need to install Java 11, please follow this [guide](https://nus-cs2103-ay2223s2.github.io/website/admin/programmingLanguages.html#programming-language).","lastModifiedDate":"2023-03-28"},{"lineNumber":748,"author":{"gitId":"BoAi01"},"content":"Below is one example showing the correct version: ","lastModifiedDate":"2023-03-28"},{"lineNumber":749,"author":{"gitId":"BoAi01"},"content":"```agsl","lastModifiedDate":"2023-03-28"},{"lineNumber":750,"author":{"gitId":"cetigerlily"},"content":"openjdk version 11.0.18 2023-01-17 LTS","lastModifiedDate":"2023-04-04"},{"lineNumber":751,"author":{"gitId":"BoAi01"},"content":"OpenJDK Runtime Environment Zulu11.62+17-CA (build 11.0.18+10-LTS)","lastModifiedDate":"2023-03-28"},{"lineNumber":752,"author":{"gitId":"BoAi01"},"content":"OpenJDK 64-Bit Server VM Zulu11.62+17-CA (build 11.0.18+10-LTS, mixed mode)","lastModifiedDate":"2023-03-28"},{"lineNumber":753,"author":{"gitId":"BoAi01"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":755,"author":{"gitId":"jishnu28"},"content":"## Glossary","lastModifiedDate":"2023-04-02"},{"lineNumber":756,"author":{"gitId":"jishnu28"},"content":"| **Term**        | **Definition**                                                            |","lastModifiedDate":"2023-04-02"},{"lineNumber":757,"author":{"gitId":"jishnu28"},"content":"|-----------------|---------------------------------------------------------------------------|","lastModifiedDate":"2023-04-02"},{"lineNumber":758,"author":{"gitId":"jishnu28"},"content":"| Resource        | Crews, Pilots, Planes, Flights or Locations                               |","lastModifiedDate":"2023-04-02"},{"lineNumber":759,"author":{"gitId":"jishnu28"},"content":"| Resource Entity | An entity of any of the resource types specified above (e.g. Captain Bob) |","lastModifiedDate":"2023-04-02"},{"lineNumber":760,"author":{"gitId":"jishnu28"},"content":"| Prefix          | A placeholder term referring to an attribute name (e.g. /g for gender)    |","lastModifiedDate":"2023-04-02"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":762,"author":{"gitId":"jishnu28"},"content":"## Other information","lastModifiedDate":"2023-03-25"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":764,"author":{"gitId":"BoAi01"},"content":"This App is developed at the National University of Singapore.","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"BoAi01":41,"jishnu28":231,"cetigerlily":376,"tangyuantyy":10,"wxxedu":9,"-":97}},{"path":"docs/dev/Parsing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"# Parsing","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"## Overview","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"At its core, Wingman is a modal editor for managing planes, pilots, crew,","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"flights, and locations. To achieve this modal approach,","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"Wingman adopts a 2-level parsing strategy. The top level is managed inside a","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"class called `WingmanParser`. Inside this class, it does two types of parsing:","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"1. Top-level command parsing: parses the commands that do not follow any","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"   logical grouping. For example, since Wingman is a `modal` editor, the","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"   change of mode does not belong to any logical grouping, therefore it","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"   should be parsed at the top level.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"2. Grouped command parsing: delegates the parsing of the commands that","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"   belong to a certain logical grouping to the `CommandGroup` class of that","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"   logical grouping.","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"The second level of parsing happens inside the `CommandGroup` class. This","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"class does a parsing of the commands similar to the 1. above. Because the","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"features are similar, a base class `FactoryParser` is created to reduce code","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"duplication.","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"In designing the parsing logic, composition is preferred over inheritance,","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"as inheritance makes the code less readable, increases the coupling between","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"different classes, and makes it harder to test.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"## Parsing Logic","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"### Step 1: Tokenization","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"The first step in the parsing process is to \"tokenize\" the input string into","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"a list of tokens. Here, since our parsing logic is simple, we do the","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"tokenization simply by splitting the input string by white spaces.","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"We use a `Deque` structure to store the tokens. The benefit of this is that","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"we can easily pop the first token from the list, and this would take $O(1)$","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"time as compared to $O(n)$ time for a `List`.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"The tokenization process is done in the `WingmanParser` class, inside the","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"private method `tokenize`.","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"### Step 2: Delegating to the `CommandGroup` class","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"If we ignore the top-level commands, the next step in the parsing process is","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"to delegate the parsing logic to the `CommandGroup` class. This is done","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"based on the current `OperationMode` of the application. The `OperationMode`","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"is an enum that represents the current mode of the application. It has five","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"different values:","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"- `PILOT`: the application is used to manage pilots.","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"- `PLANE`: the application is used to manage planes.","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"- `CREW`: the application is used to manage crew.","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"- `FLIGHT`: the application is used to manage flights.","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"- `LOCATION`: the application is used to manage locations.","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"If the current `OperationMode` is `PILOT`, then the tokens would be passed","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"down to the `CommandGroup` class of the `PILOT` mode.","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"### Step 3: Delegating to the `CommandFactory` class","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"Our next step is to delegate the parsing logic to the `CommandFactory`","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"objects. A `CommandFactory` object is a class that is responsible for","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"creating new `Command` objects. They are responsible for parsing the tokens","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"that are needed for the creation of the `Command` object, and then create","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"the respective `Command` object.","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"The logic of this delegation process is done in the super class, in a method","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"called `parseFactory`. This method takes in a `Deque` of tokens, peeks at","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"the top of the `Deque` as the command word, and matches it with the","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"`getCommandWord()` method of the `CommandFactory` objects. If there is a","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"match, it would pass the `Deque` of tokens and the `getPrefixes()` method of","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"the `CommandFactory` object to the `from` factory constructor of the","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"`CommandParam` class.","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"### Step 4: Extracting the values of prefixes","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"This step is done in the `CommandParam` class. More specifically, it is done","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"statically in the `from` factory constructor. It will take an optional set","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"of tokens and a deque of prefixes, and return a `CommandParam` object that","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"contains the unnamed and named parameters.","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"The unnamed parameters are extracted by reading from the start of the `Deque`","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"of tokens until either the end of the `Deque` is reached, or a token that","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"matches a prefix is found. The named parameters are extracted by reading from","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"the start of the `Deque` of tokens until either the end of the `Deque` is","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"reached, or a token that matches another prefix is found. **Currently,","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"duplicated prefixes are not allowed.**","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"### Step 5: Creating the `Command` object","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"This step is done in the `CommandFactory` class. More specifically, it is","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"done in the `create` method. It takes in a `CommandParam` object, and then","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"it will create the respective `Command` object.","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"## Implementing a new command","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"To implement a new command, we need to do the following:","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"1. Create a new `Command` class that extends the `Command` class.","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"2. Create a new `CommandFactory` class that extends the `CommandFactory`","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"   class with a generic type of the command class that we created in step 1.","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"3. Add the `CommandFactory` object to the `CommandGroup` class of the","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"   respective mode, which can be found in the `WingmanParser` class.","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":103}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"LogicManager .left.|\u003e Logic","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jishnu28":1,"-":45}},{"path":"docs/diagrams/WingmanAddCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"participant \":WingmanParser\" as WingmanParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"participant \"command:AddXYZCommand\" as AddXYZCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"participant \":XYZManager\" as XYZManager MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"LogicManager -\u003e WingmanParser : parse(getOperationMode(), \"add/name CA\")","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"activate WingmanParser","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"create AddXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"WingmanParser -\u003e AddXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"activate AddXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"AddXYZCommand --\u003e WingmanParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"deactivate AddXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"WingmanParser --\u003e LogicManager : command","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"deactivate WingmanParser","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"LogicManager -\u003e AddXYZCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"activate AddXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"AddXYZCommand -\u003e ModelManager : addLocation(CA)","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"activate ModelManager","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"ModelManager -\u003e XYZManager : addItem(CA)","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"activate XYZManager","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"ModelManager --\u003e AddXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"XYZManager --\u003e ModelManager","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"deactivate ModelManager","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"deactivate XYZManager","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"AddXYZCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"deactivate AddXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"BoAi01":49}},{"path":"docs/diagrams/WingmanArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"!include style.puml","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"user -[USER_COLOR]\u003e ui : \"add /model A380 /age 12\"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"activate ui UI_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"add /model A380 /age 12\")","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"logic -[LOGIC_COLOR]\u003e model : addPlane(plane)","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"deactivate model","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"logic -[LOGIC_COLOR]\u003e storage : save()","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"storage -[STORAGE_COLOR]\u003e storage : savePlaneManager(model.getPlaneManager())","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"deactivate storage","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"deactivate storage","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"deactivate logic","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"deactivate ui","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"jishnu28":38}},{"path":"docs/diagrams/WingmanDeleteXYZDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"participant \":WingmanParser\" as WingmanParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"participant \"command:DeleteXYZCommand\" as DeleteXYZCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"participant \":XYZManager\" as XYZManager MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"[-\u003e MainWindow : executeCommand(\"delete id\")","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"activate MainWindow","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"MainWindow -\u003e LogicManager : execute(\"delete id\")","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"LogicManager -\u003e WingmanParser : parse(getOperationMode(), \"delete id\")","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"activate WingmanParser","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"create DeleteXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"WingmanParser -\u003e DeleteXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"activate DeleteXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"DeleteXYZCommand --\u003e WingmanParser","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"deactivate DeleteXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"WingmanParser --\u003e LogicManager : command","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"deactivate WingmanParser","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"LogicManager -\u003e DeleteXYZCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"activate DeleteXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"DeleteXYZCommand -\u003e ModelManager : deleteXYZ(id)","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"activate ModelManager","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"ModelManager -\u003e XYZManager : removeItem(id)","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"activate XYZManager","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"ModelManager --\u003e DeleteXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"XYZManager --\u003e ModelManager","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"deactivate ModelManager","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"deactivate XYZManager","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"DeleteXYZCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"deactivate DeleteXYZCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"LogicManager --\u003e MainWindow : commandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"[\u003c-- MainWindow","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"deactivate MainWindow","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"cetigerlily":60}},{"path":"docs/diagrams/WingmanLinkFlightActivity.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"start","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":":switch to mode flight;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"if () then ([Flight does not exist yet])","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"    :Add flight;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"else ([Flight already exists])","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"endif","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"if () then ([XYZ does not exist])","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"    :switch to mode XYZ;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    :Add XYZ;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"else ([XYZ already exists])","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"endif","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":":Link XYZ to flight;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"stop","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"@enduml","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"jishnu28":21}},{"path":"docs/diagrams/WingmanLogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"!include style.puml","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"package LogicPackage {","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"Class LogicManager","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"Class WingmanParser","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"Class XYZCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"Class CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"package Model{","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"package Storage{","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"LogicManager -right-\u003e\"1\" WingmanParser","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"WingmanParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"Storage --[hidden] Model","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"Command .right.\u003e Model","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"note right of XYZCommand: XYZCommand \u003d AddPlaneCommand, \\n LinkCrewCommand etc","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"jishnu28":46}},{"path":"docs/diagrams/WingmanModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"!include style.puml","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"Package ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyItemManager\" as ReadOnlyItemManager","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"Class ItemManager","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"Class ModelManager","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"Class UserPrefs","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"Class Items","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"Class Pilot","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"Class Gender \u003c\u003cEnumeration\u003e\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"Class PilotRank \u003c\u003cEnumeration\u003e\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"ItemManager .up.|\u003e ReadOnlyItemManager","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"Model .left.\u003e ReadOnlyItemManager","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"ModelManager -left-\u003e \"1\" ItemManager","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"ItemManager *--\u003e \"1\" Items","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"Items --\u003e \"~* all\" Pilot","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"Pilot *--\u003e \"1\" Gender","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"Pilot *--\u003e \"1\" PilotRank","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"ModelManager --\u003e\"~* filtered\" Pilot","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"jishnu28":39}},{"path":"docs/diagrams/WingmanParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"!include style.puml","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"Class XYZCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"package \"Parser classes\"{","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nCommandFactory\" as CommandFactory","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"Class WingmanParser","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"Class XYZCommandFactory","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"HiddenOutside ..\u003e WingmanParser","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"WingmanParser .down.\u003e XYZCommandFactory: creates \u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"note right of XYZCommandFactory: XYZCommandFactory \u003d AddPlaneCommandFactory, \\n LinkCrewCommandFactory etc","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"XYZCommandFactory ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"WingmanParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"XYZCommandFactory .up.|\u003e CommandFactory","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"XYZCommandFactory --\u003e \"1\" CommandWord","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"XYZCommandFactory --\u003e \"1..*\" PREFIX_ABC","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"note right of PREFIX_ABC: PREFIX_ABC \u003d PREFIX_AGE, \\n PREFIX_NAME etc","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"jishnu28":29}},{"path":"docs/diagrams/WingmanStorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"!include style.puml","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"package StoragePackage {","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"Class StorageManager","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"package \"Item Storage\" #F4F6F6{","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nItemStorage\" as ItemStorage","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"Class JsonItemStorage","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"Class JsonXYZManagerStorage","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"Class JsonSerializableXYZManager","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"Class JsonAdaptedXYZ","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"JsonItemStorage .up.|\u003e ItemStorage","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"JsonXYZManagerStorage -up-|\u003e JsonItemStorage","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"JsonXYZManagerStorage ..\u003e JsonSerializableXYZManager","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"JsonSerializableXYZManager --\u003e \"*\" JsonAdaptedXYZ","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"jishnu28":41}},{"path":"docs/diagrams/WingmanUiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"!include style.puml","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"package UiPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"Class UiManager","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"Class MainWindow","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"Class HelpWindow","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"Class ResultDisplay","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"Class ItemListPanel","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"Class ItemCard","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"Class FlightListPanel","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"Class FlightCard","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"Class StatusBarFooter","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"Class CommandBox","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"MainWindow *-down-\u003e \"1\" ItemListPanel","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"MainWindow *-down-\u003e \"1\" FlightListPanel","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"ItemListPanel -down-\u003e \"*\" ItemCard","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"FlightListPanel -down-\u003e \"*\" FlightCard","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"ItemListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"ItemCard --|\u003e UiPart","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"FlightListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"FlightCard --|\u003e UiPart","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"ItemCard ..\u003e Model","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"ItemListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"jishnu28":66}},{"path":"docs/diagrams/WingmanUnlinkXYZDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"participant \":Logic\" as Logic LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"participant \":StorageManager\" as StorageManager STORAGE_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"participant \":JsonItemStorage\" as JsonItemStorage STORAGE_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"LogicManager -\u003e StorageManager : saveFlightManager(flightManager)","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"activate StorageManager","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"StorageManager -\u003e JsonItemStorage : save(flightManager, filePath )","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"activate JsonItemStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"JsonItemStorage -\u003e FileHelper : createIfMissing(filePath)","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"FileHelper --\u003e JsonItemStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"deactivate FileHelper","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"JsonItemStorage -\u003e JsonHelper : saveJsonFile(flightManager, filePath)","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"JsonHelper --\u003e JsonItemStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"deactivate JsonHelper","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"JsonItemStorage --\u003e StorageManager :","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"deactivate JsonItemStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"LogicManager \u003c--StorageManager","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"deactivate StorageManager","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jishnu28":38}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"title: Wingman","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"[![CI Status-for AB-3](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"[![codecov-for AB-3](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"**Wingman is a desktop application for airline managers to manage resources efficiently and quickly.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"* If you are interested in using Wingman, head over to the [_Quick Start_ section of the **User Guide**](https://ay2223s2-cs2103t-w11-1.github.io/tp/UserGuide.html#getting-started).","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"* If you are interested about developing Wingman, the [**Developer Guide**](https://ay2223s2-cs2103t-w11-1.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jishnu28":6,"-":13}},{"path":"docs/team/boai01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"layout: page","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"title: Ai Bo\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"### Project: Wingman","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"Wingman - Wingman is an application designed to help airline managers efficiently manage the allocation of their","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"resources.","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"* **Feature 1**: Location mode-related commands, including `add`, `delete`, `list` `linkflight`.","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"  * What it does: allows the user to add, delete, and display current locations in the database. It also allows the ","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"  user to specify the start and destination locations of a flight. ","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"  * Justification: This is a must-have feature, because location is an important flight-related resource.","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"  * Highlights: We need to constrain each flight to only have two locations, i.e., the departure and arrival locations. ","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"* **Feature 2**: Link/Unlink `crew`, `pilot`, and `plane` to locations.","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"  * What it does: allows the users to specify the locations that flight-related resources might reside. ","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"  * Justification: This information is important, as flight managers must ensure the resources are in-place for a flight.","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"  * Highlights: We need to ensure such information is stored on disk properly, but it is not straightforward to ","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"  store object attributes. ","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"  * Credits: to Xiuxuan who implemented the `Link` class that enables easy storing and reading.","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"* **Feature 3**: Use index to specify objects instead of UUID for all command classes.","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"  * What it does: instead of asking users to specify objects with UUID, which is a long string, this allows them to ","lastModifiedDate":"2023-04-01"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"  refer to an object with index in the list, e.g., `delete 2`. ","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"  * Justification: This significantly saves users\u0027 effort on typing the long UUID string, improving the ","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"  user-friendliness of the product.","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"  * Highlights: This is not hard to implement, but involves some labor.","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dboai01\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dBoAi01\u0026tabRepo\u003dAY2223S2-CS2103T-W11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"* **Project management**:","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"  * Monitor and examine issues with existing products, e.g., issues ","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"  [#117](https://github.com/AY2223S2-CS2103T-W11-1/tp/issues/117), ","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"  [#113](https://github.com/AY2223S2-CS2103T-W11-1/tp/issues/113),","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"  [#110](https://github.com/AY2223S2-CS2103T-W11-1/tp/issues/110), ","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"  [#109](https://github.com/AY2223S2-CS2103T-W11-1/tp/issues/109),","lastModifiedDate":"2023-04-01"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"  * Refactor, to rename `Identifiable` to `Item` and rename all related classes for naming consistency.","lastModifiedDate":"2023-04-01"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"  * Remove magic literals in the program. Improve error message by using `String.format`.","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"  * Change zero-based indexing to one-based indexing.","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"  * User Guide: ","lastModifiedDate":"2023-04-01"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    * Did cosmetic tweaks to existing QnA and intro.","lastModifiedDate":"2023-04-01"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"    * Update user stories, use cases, NFR, glossary in the Developer Guide for location class","lastModifiedDate":"2023-04-01"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    * Add implementation details of the `add` command.","lastModifiedDate":"2023-04-01"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"* **Community**: ","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"  * PRs reviewed: 15 in total, e.g., [\\#26](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/26), ","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"  [\\#39](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/39)","lastModifiedDate":"2023-04-01"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"  * Contributed to forum discussions: 42 posts in total, ranked 3rd on ","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"  [Forum Dashboard](https://nus-cs2103-ay2223s2.github.io/dashboards/contents/forum-activities.html).","lastModifiedDate":"2023-04-01"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"  * Reported bugs and suggestions for other teams in the class: [Mock PE](https://github.com/BoAi01/ped/issues).","lastModifiedDate":"2023-04-01"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"* **Tools**: NA","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"[//]: # (  * Integrated a third party library \u0026#40;Natty\u0026#41; to the project \u0026#40;[\\#42]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-04-01"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"[//]: # (  * Integrated a new Github plugin \u0026#40;CircleCI\u0026#41; to the team repo)","lastModifiedDate":"2023-04-01"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"BoAi01":63,"cetigerlily":2}},{"path":"docs/team/cetigerlily.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"layout: page","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"title: Celeste Cheah\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"### Project: Wingman","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"Wingman is an application designed to help airline managers efficiently manage the allocation of their resources.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"* **Code Contribution**:","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"    * My code contribution to the Wingman project can be found at","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"      this [link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dcetigerlily\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other).","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"1. Handled general implementation for","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"   Plane ([#60](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/60), [#77](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/77))","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    * Responsible for implementing the Plane model in Wingman along with all the basic functions related. This includes:","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"      adding and deleting a Plane, linking or unlinking a Plane to or from a Flight, and handling the storage and the","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"      parsing of a Plane.","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"    * **What it does:** Allows for a Plane to be properly managed in the Wingman app.","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"    * **Justification:** It includes all the necessary commands which a manager would need to manage the planes in their","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"      fleet eg. they can add a new plane, and delete planes which are out of service.","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"2. Added an `isAvailable` attribute for Crew, Pilot, and","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"   Plane ([#100](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/100))","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    * **What it does:** Allows for Crew, Pilot, and Plane to be marked as available or unavailble, depending on whether","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"      they are linked to a Flight. This feature works with the `linkflight` command ie. when any of the resources are","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"      linked","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"      to a flight, they automatically become unavailable.","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"    * **Justification:** This feature is essential for airline managers as their scheduling depends on the","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"      availability of their resources. With the`check` command, airline manager\u0027s no longer have to look through the","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"      list of","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"      resources - thereby, making it easier for them to check a resource\u0027s availability.","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"3. Implemented the `check` command for Crew, Pilot, and","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"   Plane ([#100](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/100))","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"    * **What it does:** Check the availability of a Crew, Pilot, or Plane.","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"    * **Justification:** With the`check` command, airline manager\u0027s no longer have to look through the list of resources","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"      , making it easier for them to check a specific resource\u0027s availability.","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"**Note:** This feature was later removed, unfortunately, as we were not able to update our `linkflight` logic to","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"accommodate for the problems which arose with the `check` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"4. Added better error messaging across all commands ([#140](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/140))","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"    * Added better error messages across all commands in Wingman and created new errors to be thrown when","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"      needed (eg. a non-numeric value is entered although a numeric value is needed, an error message would be thrown).","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"    * **What it does:** Commands return more appropriate/helpful error messages when exceptions are thrown.","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"    * **Justification:** Better error messages tell users what exactly is wrong with the input they\u0027ve given, which","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"      helps","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"      them. Additionally, it allows for Wingman to run smoother as Wingman knows how to deal with errors which are","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"      expected","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"      to be encountered.","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"5. Edited prefixes used in all commands ([#130](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/130))","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"    * Edited the previously used prefixes for commands, such that they would be streamlined across all commands.","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"    * **Justification:** Makes Wingman more consistent and hence, easier for users to learn and use.","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"cetigerlily"},"content":"* **Project Management**:","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"    * Recorded meeting minutes during weekly group meetings","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"    * Managed releases `v1.3` - `v1.3.1` on GitHub","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":69,"author":{"gitId":"cetigerlily"},"content":"* **Community**:","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"cetigerlily"},"content":"    * PRs reviewed (with non-trivial review comments): (","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"cetigerlily"},"content":"      examples: [#125](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/125), [#133](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/133), [#145](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/145))","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":73,"author":{"gitId":"cetigerlily"},"content":"[//]: # (    * Reported bugs and suggestions for other teams in the class \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"cetigerlily"},"content":"* **Enhancements to Existing Features**:","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"cetigerlily"},"content":"  TBC","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":78,"author":{"gitId":"cetigerlily"},"content":"* **Documentation**:","lastModifiedDate":"2023-04-03"},{"lineNumber":79,"author":{"gitId":"cetigerlily"},"content":"    * User Guide:","lastModifiedDate":"2023-04-03"},{"lineNumber":80,"author":{"gitId":"cetigerlily"},"content":"        * Added input/output examples for commands and a complete prefix summary","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"cetigerlily"},"content":"          table ([#135](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/135))","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"cetigerlily"},"content":"    * Developer Guide:","lastModifiedDate":"2023-04-03"},{"lineNumber":83,"author":{"gitId":"cetigerlily"},"content":"        * Added user stories and use cases related to","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"cetigerlily"},"content":"          Plane ([#28](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/28))","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"cetigerlily"},"content":"        * Added documentation for `delete` feature, focusing on the logic layer, and created a sequence diagram of the","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"cetigerlily"},"content":"          deletion process ([#111](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/111))","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"cetigerlily":86}},{"path":"docs/team/jishnu28.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"layout: page","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"title: Jishnu\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"# Project: Wingman","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"## Overview:","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"Wingman is an application designed to help airline managers efficiently manage the allocation of their resources.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"## Summary of Contributions","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"### Code contributed:","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"### Enhancements implemented:","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"### Contributions to the UG:","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"### Contributions to the DG:","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"### Contributions to team-based-tasks:","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"* Link to PPP requirements: https://nus-cs2103-ay2223s2.github.io/website/schedule/week7/project.html#4-add-a-skeletal-ppp","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"* _{you can add/remove categories in the list below}","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"* **Project management**:","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"  * User Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"* **Community**:","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"* **Tools**:","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo_","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jishnu28":73}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"title: Xiuxuan Wang\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"### Project: Wingman","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"Wingman is an application designed to help airline managers efficiently manage","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"the allocation of their resources.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"**Code Contributed**:","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"[Click Here](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dwxxedu\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"* **New Feature**:","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"* **Code contributed**:","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wxxedu":8,"-":19}},{"path":"docs/team/tangyuantyy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"# Yuanyuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"### Project: Wingman","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"Wingman is an application designed to help airline managers efficiently manage the allocation of their resources.","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"* **Feature 1**: Crew mode-related commands, including `add`, `delete`","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"  , `list` ([#58](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/58))","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"    * What it does: Allows the user to add, delete, and display current crew members in the database. The rank of a crew","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"      can also be specified using prefixes.","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    * Justification: It includes all the essential commands to manage the crew for a flight.","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"* **Feature 2**: Scrollable panels for all modes ([#128](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/128))","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    * What it does: Displays 5 scrollable panels for each mode (Flight, Crew, Pilot, Plane and Location)","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"    * Justification: All information can be displayed in one window without having to switch between modes, which saves","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"      time for the users.","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"* **Feature 3**: Responsive Status Bar Footer ([#74](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/74))","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"    * What it does: Shows the current mode the user is in.","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    * Justification: The commands are mode-specific so a status bar footer displaying the current mode would help a user","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"      use the correct command.","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"* **Feature 4**: Display index for each item in the","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"  panel ([#131](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/131))","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"    * What it does: Shows the index for each flight, crew, pilot, plane and location item.","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"    * Justification: A displayed index helps the user pick the correct item to delete and link, without having to type","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"      out its uuid which is time-consuming.","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"* **Code","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"  contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dtangyuantyy\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dBoAi01\u0026tabRepo\u003dAY2223S2-CS2103T-W11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"* **Project management**:","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"    * Added and managed issues","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"      ([#3](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/3),","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"       [#33](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/33),","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"       [#62](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/62),","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"       [#71](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/71),","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"       [#119](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/119))","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"tangyuantyy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"tangyuantyy"},"content":"    * Updated the GUI color scheme ([#75](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/75))","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"tangyuantyy"},"content":"    * Added product logo ([#75](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/75))","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"tangyuantyy"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"tangyuantyy"},"content":"    * User Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"tangyuantyy"},"content":"        * Added UI display picture ([#133](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/133))","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"tangyuantyy"},"content":"        * Updated Table of Contents ([#133](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/133))","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"tangyuantyy"},"content":"        ","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"tangyuantyy"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"tangyuantyy"},"content":"        * Added User stories and use cases related to crew ([#25](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/25))","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"tangyuantyy"},"content":"        * Added implementation details of the Scrollable panel","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"tangyuantyy"},"content":"          feature. ([#106](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/106))","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"tangyuantyy"},"content":"* **Community**:","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"tangyuantyy"},"content":"    * PRs reviewed (with non-trivial review comments): ([\\#73](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/73)","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"tangyuantyy"},"content":"      , [\\#135](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/135))","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"tangyuantyy"},"content":"    * Reported bugs and suggestions for other teams in the class [Mock PE](https://github.com/tangyuantyy/ped/issues).","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"tangyuantyy"},"content":"  ","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"tangyuantyy":68}},{"path":"docs/team/wxxedu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"layout: page","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"title: Wang Xiuxuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"Wingman is an application designed to help airline managers efficiently manage the allocation of their resources.","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"* **Code Contribution**:","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    * My code contribution to the Wingman project can be found at","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"      this [link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dwxxedu\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other).","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"1. Adapted `AddressBook`\u0027s model layer such that we could easily extend it.","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"   Including ([#21](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/21), ","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"   [#22](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/22)):","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    * Migrated `UniquePersonsList` to `UniqueList`, a list that\u0027s unique with","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"      the `Item`s contained inside it.","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    * Migrated `ReadOnlyAddressBook` to `ReadOnlyItemManager`, an interface that","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"      managers the `Item`s inside it.","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    * Migrated `AddressBook` to `ItemManager`. ","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    * **What they do**: allows my teammates to work on independent features without writing much duplicate code. ","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    * **Justification**: same as above. ","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"2. Handled general implementation for","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"   Pilot ([#22](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/22))","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    * Responsible for implementing the Plane model in Wingman along with all the basic functions related. This includes:","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"      adding and deleting a Plane, linking or unlinking a Plane to or from a Flight, and handling the storage and the","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"      parsing of a Plane.","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    * **What it does:** Allows for a Plane to be properly managed in the Wingman app.","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    * **Justification:** It includes all the necessary commands which a manager would need to manage the planes in their","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"      fleet eg. they can add a new plane, and delete planes which are out of service.","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"3. Rewrote the parser for Wingman, abandoning the original parsing logic.","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"   ([#39](https://github.com/AY2223S2-CS2103T-W11-1/tp/pull/39)) ","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    * Adopted a 2-level parsing scheme that can be adapted to a multi-level","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"      parsing scheme easily. ","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    * **What it does**: parses the command put into Wingman. ","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    * **Justification**: to reduce the boilerplate in the original AddressBook","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"      parser.","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"4. Implemented a `Link` class that represents a link between two entities. ","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    * **What it does**: describes a link from one entity to another. ","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    * **Justification**: reduce code duplication (did not work so well).","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"* **Project Management**:","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    * Joined in discussions about where the project is going. ","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"wxxedu":50}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"import model.w11_1.wingman.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"import static util.commons.w11_1.wingman.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"wxxedu":3,"-":398}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `logic.w11_1.wingman.Logic`.","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"A quick look at the `logic.w11_1.wingman.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wxxedu":2,"-":299}},{"path":"src/main/java/wingman/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.FileUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"wxxedu":3,"-":61}},{"path":"src/main/java/wingman/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"wxxedu":1,"-":24}},{"path":"src/main/java/wingman/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.concurrent.Callable;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.Config;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.Version;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.FileUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.StringUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.Logic;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.LogicManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ModelManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"import wingman.model.UserPrefs;","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.ItemStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.Storage;","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.StorageManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.storage.JsonCrewManagerStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.storage.JsonFlightManagerStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.storage.JsonLocationManagerStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.storage.JsonPilotManagerStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.storage.JsonPlaneManagerStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"import wingman.ui.Ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"import wingman.ui.UiManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        logger.info(","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"                \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Wingman ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        initFields();","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        configureServiceLocator();","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"     * Initialises respective fields from storage","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    private void initFields() throws IOException {","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        storage \u003d initStorage(userPrefs, userPrefsStorage);","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"     * To allow for convenient access to the services in the specified packages,","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"     * without disrupting effective isolation between classes","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    private void configureServiceLocator() {","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        GetUtil.put(Config.class, config);","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        GetUtil.put(Storage.class, storage);","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        GetUtil.put(Model.class, model);","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        GetUtil.put(Logic.class, logic);","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"     * Read a specified manager from data","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"jishnu28"},"content":"     * @param managerSupplier the data from which the manager is read","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"jishnu28"},"content":"     * @param managerName     name of the manager","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"jishnu28"},"content":"     * @param \u003cT\u003e             the type of object that the manager manages","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"jishnu28"},"content":"     * @return a read only version of the item manager","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"    private \u003cT extends Item\u003e ReadOnlyItemManager\u003cT\u003e readManager(","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"            Callable\u003cOptional\u003c? extends ReadOnlyItemManager\u003cT\u003e\u003e\u003e managerSupplier,","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"            String managerName","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"        Optional\u003c? extends ReadOnlyItemManager\u003cT\u003e\u003e managerOptional;","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"            managerOptional \u003d managerSupplier.call();","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"            if (managerOptional.isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"                return managerOptional.get();","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"            logger.info(","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"                    String.format(\"Data file for %s is not found.\", managerName)","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"            return new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"        } catch (DataConversionException | IOException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"            logger.info(String.format(","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"                    \"Exception caught while reading data file for %s: %s\",","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"                    managerName,","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"                    e.toString()","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"            ));","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"            return new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"            logger.info(String.format(","lastModifiedDate":"2023-03-25"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"                    \"Unknown Exception: %s.\",","lastModifiedDate":"2023-03-25"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"                    e.getMessage()","lastModifiedDate":"2023-03-25"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"            ));","lastModifiedDate":"2023-03-25"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"            return new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"    private Model initModelManager(","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"            Storage storage,","lastModifiedDate":"2023-03-25"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyUserPrefs userPrefs","lastModifiedDate":"2023-03-25"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-25"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        ReadOnlyItemManager\u003cPilot\u003e pilotManager \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"                readManager(storage::readPilotManager, \"PilotManager\");","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"        ReadOnlyItemManager\u003cLocation\u003e locationManager \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"                readManager(storage::readLocationManager, \"LocationManager\");","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"        ReadOnlyItemManager\u003cCrew\u003e crewManager \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"                readManager(storage::readCrewManager, \"CrewManager\");","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"        ReadOnlyItemManager\u003cPlane\u003e planeManager \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"                readManager(storage::readPlaneManager, \"PlaneManager\");","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"        ReadOnlyItemManager\u003cFlight\u003e flightManager \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"                readManager(storage::readFlightManager, \"FlightManager\");","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"        return new ModelManager(userPrefs, pilotManager, locationManager,","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"                crewManager, planeManager, flightManager","lastModifiedDate":"2023-03-25"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":158,"author":{"gitId":"jishnu28"},"content":"     * Initialises storages for specified object types and user preferences","lastModifiedDate":"2023-03-19"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":160,"author":{"gitId":"jishnu28"},"content":"     * @param userPrefs        user preferences","lastModifiedDate":"2023-03-19"},{"lineNumber":161,"author":{"gitId":"jishnu28"},"content":"     * @param userPrefsStorage storage destination for user preferences","lastModifiedDate":"2023-03-19"},{"lineNumber":162,"author":{"gitId":"jishnu28"},"content":"     * @return StorageManager object that manages the storages for specified object types and user preferences","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"    private Storage initStorage(","lastModifiedDate":"2023-03-25"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"            UserPrefs userPrefs,","lastModifiedDate":"2023-03-25"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"            UserPrefsStorage userPrefsStorage","lastModifiedDate":"2023-03-25"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"    ) throws IOException {","lastModifiedDate":"2023-03-25"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createParentDirsOfFile(userPrefs.getPilotManagerFilePath());","lastModifiedDate":"2023-03-25"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createParentDirsOfFile(userPrefs.getCrewManagerFilePath());","lastModifiedDate":"2023-03-25"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createParentDirsOfFile(userPrefs.getPlaneManagerFilePath());","lastModifiedDate":"2023-03-25"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createParentDirsOfFile(userPrefs.getLocationManagerFilePath());","lastModifiedDate":"2023-03-25"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createParentDirsOfFile(userPrefs.getFlightManagerFilePath());","lastModifiedDate":"2023-03-25"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createIfMissing(userPrefs.getPilotManagerFilePath());","lastModifiedDate":"2023-03-25"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createIfMissing(userPrefs.getCrewManagerFilePath());","lastModifiedDate":"2023-03-25"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createIfMissing(userPrefs.getPlaneManagerFilePath());","lastModifiedDate":"2023-03-25"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createIfMissing(userPrefs.getLocationManagerFilePath());","lastModifiedDate":"2023-03-25"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createIfMissing(userPrefs.getFlightManagerFilePath());","lastModifiedDate":"2023-03-25"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"        ItemStorage\u003cPilot\u003e pilotStorage \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"                new JsonPilotManagerStorage(userPrefs.getPilotManagerFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"        ItemStorage\u003cLocation\u003e locationStorage \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"                new JsonLocationManagerStorage(userPrefs.getLocationManagerFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"        ItemStorage\u003cCrew\u003e crewStorage \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"                new JsonCrewManagerStorage(userPrefs.getCrewManagerFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"        ItemStorage\u003cPlane\u003e planeStorage \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"                new JsonPlaneManagerStorage(userPrefs.getPlaneManagerFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":186,"author":{"gitId":"wxxedu"},"content":"        ItemStorage\u003cFlight\u003e flightStorage \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"                new JsonFlightManagerStorage(userPrefs.getFlightManagerFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"        return new StorageManager(userPrefsStorage, pilotStorage,","lastModifiedDate":"2023-03-17"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"                locationStorage,","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"                crewStorage, planeStorage, flightStorage","lastModifiedDate":"2023-03-25"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-25"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(","lastModifiedDate":"2023-03-25"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"                    configFilePathUsed);","lastModifiedDate":"2023-03-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                                   + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":230,"author":{"gitId":"wxxedu"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(","lastModifiedDate":"2023-03-25"},{"lineNumber":231,"author":{"gitId":"wxxedu"},"content":"                    e));","lastModifiedDate":"2023-03-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                                   + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":254,"author":{"gitId":"wxxedu"},"content":"            logger.warning(","lastModifiedDate":"2023-03-25"},{"lineNumber":255,"author":{"gitId":"wxxedu"},"content":"                    \"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2023-03-25"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":263,"author":{"gitId":"wxxedu"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(","lastModifiedDate":"2023-03-25"},{"lineNumber":264,"author":{"gitId":"wxxedu"},"content":"                    e));","lastModifiedDate":"2023-03-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"wxxedu"},"content":"        logger.info(","lastModifiedDate":"2023-03-25"},{"lineNumber":279,"author":{"gitId":"wxxedu"},"content":"                \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Wingman ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-25"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":283,"author":{"gitId":"wxxedu"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(","lastModifiedDate":"2023-03-25"},{"lineNumber":284,"author":{"gitId":"wxxedu"},"content":"                    e));","lastModifiedDate":"2023-03-25"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BoAi01":5,"jishnu28":20,"wxxedu":138,"-":124}},{"path":"src/main/java/wingman/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":1,"-":62}},{"path":"src/main/java/wingman/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":1,"-":78}},{"path":"src/main/java/wingman/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":1,"-":111}},{"path":"src/main/java/wingman/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wxxedu":1,"-":12}},{"path":"src/main/java/wingman/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":1,"-":115}},{"path":"src/main/java/wingman/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.core.index;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"wxxedu":1,"-":53}},{"path":"src/main/java/wingman/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":1,"-":10}},{"path":"src/main/java/wingman/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wxxedu":1,"-":20}},{"path":"src/main/java/wingman/commons/fp/Either.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.fp;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":" * Represents an instance that can be either of 2 instances, i.e. the left or right instance.","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * @param \u003cL\u003e the type of the left instance.","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * @param \u003cR\u003e the type of the right instance.","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"public abstract class Either\u003cL, R\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     * Returns an Either instance that contains the left value.","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * @param leftValue the value on the left side.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cL\u003e       the type of the value on the left.","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cR\u003e       the type of the value on the right.","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * @return the {@link Either} instance holding the value on the left.","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    public static \u003cL, R\u003e Either\u003cL, R\u003e left(L leftValue) {","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        return new Left\u003c\u003e(leftValue);","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * Returns an Either instance that contains the right value.","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * @param rightValue the value on the right side.","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cL\u003e        the type of the value on the left.","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cR\u003e        the type of the value on the right.","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * @return the {@link Either} instance holding","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    public static \u003cL, R\u003e Either\u003cL, R\u003e right(R rightValue) {","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"        return new Right\u003c\u003e(rightValue);","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * Gets the left part of this either.","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * @return the left part of this either instance.","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    public abstract L getLeft();","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     * Gets the right part of this either.","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * @return the right part of this either instance.","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    public abstract R getRight();","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * Gets whether if the {@code Either} instance is the left.","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * @return true if the {@code Either} instance is the left.","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"    public abstract boolean isLeft();","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"     * Gets whether if the {@code Either} instance is the right.","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     * @return true if the {@code Either} instance is the right.","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    public abstract boolean isRight();","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    public abstract \u003cT\u003e Either\u003cT, R\u003e mapLeft(Function\u003c? super L, ? extends T\u003e mp);","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    public abstract \u003cT\u003e Either\u003cL, T\u003e mapRight(Function\u003c? super R, ? extends T\u003e mp);","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"     * The left instance.","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cL\u003e the type of the value on the left.","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cR\u003e the type of the value on the right.","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"    private static class Left\u003cL, R\u003e extends Either\u003cL, R\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"        private final L value;","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        public Left(L value) {","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"            this.value \u003d value;","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        public L getLeft() {","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"            return this.value;","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        public R getRight() {","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalStateException(","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"                \"Cannot get the right instance inside a left instance.\"","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"        public boolean isLeft() {","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        public boolean isRight() {","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"        public \u003cT\u003e Either\u003cT, R\u003e mapLeft(Function\u003c? super L, ? extends T\u003e mp) {","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"            return Either.left(mp.apply(this.value));","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        public \u003cT\u003e Either\u003cL, T\u003e mapRight(Function\u003c? super R, ? extends T\u003e mp) {","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"            return Either.left(this.value);","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"     * The right instance.","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cL\u003e the type of the value on the left.","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cR\u003e the type of the value on the right.","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"    private static class Right\u003cL, R\u003e extends Either\u003cL, R\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        private final R value;","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"        public Right(R value) {","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"            this.value \u003d value;","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"        public L getLeft() {","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalStateException(","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"                \"Cannot get the left value inside a right instance.\"","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"        public R getRight() {","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"            return value;","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"        public boolean isLeft() {","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"        public boolean isRight() {","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"        public \u003cT\u003e Either\u003cT, R\u003e mapLeft(Function\u003c? super L, ? extends T\u003e mp) {","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"            return Either.right(this.value);","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"        public \u003cT\u003e Either\u003cL, T\u003e mapRight(Function\u003c? super R, ? extends T\u003e mp) {","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"            return Either.right(mp.apply(this.value));","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"jishnu28":1,"wxxedu":160}},{"path":"src/main/java/wingman/commons/fp/Lazy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.fp;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * A lazily evaluated value.","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e the type of the value that\u0027s to be lazily evaluated.","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"public class Lazy\u003cT\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    private Either\u003cSupplier\u003cT\u003e, T\u003e supplierOrValue;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    private Lazy(Either\u003cSupplier\u003cT\u003e, T\u003e supplierOrValue) {","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"        this.supplierOrValue \u003d supplierOrValue;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * Creates a new lazy instance.","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * @param supplier the supplier for the value.","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e      the type of the supplier value.","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * @return the new lazy instance.","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e Lazy\u003cT\u003e of(Supplier\u003cT\u003e supplier) {","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        return new Lazy\u003c\u003e(Either.left(supplier));","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * Creates a new lazy instance that\u0027s evaluated.","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * @param value the value which this either instance contains.","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e   the type of the value.","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @return the lazy instance created.","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e Lazy\u003cT\u003e of(T value) {","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        return new Lazy\u003c\u003e(Either.right(value));","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * Gets the value stored inside this lazy instance.","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * @return the value stored inside this lazy instance.","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    public T get() {","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        if (supplierOrValue.isLeft()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"            supplierOrValue \u003d Either.right(supplierOrValue.getLeft().get());","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        return supplierOrValue.getRight();","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * Maps the lazy. If the lazy value is already evaluated, then the new","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     * lazy function would also be evaluated.","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     * @param func the map function","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cR\u003e  the type of the new value contained by the lazy.","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"     * @return the result.","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    public \u003cR\u003e Lazy\u003cR\u003e map(Function\u003c? super T, ? extends R\u003e func) {","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        return new Lazy\u003c\u003e(","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"            this.supplierOrValue","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"                .\u003cSupplier\u003cR\u003e\u003emapLeft((f) -\u003e () -\u003e func.apply(f.get()))","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"                .mapRight(func)","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"wxxedu":67}},{"path":"src/main/java/wingman/commons/models/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.models;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * Represents a pair of objects.","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * @param \u003cA\u003e the type of the first object","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * @param \u003cB\u003e the type of the second object","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"public class Pair\u003cA, B\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    private final A first;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    private final B second;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * Creates a pair of objects.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * @param first  the first object","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * @param second the second object","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    public Pair(A first, B second) {","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        this.first \u003d first;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        this.second \u003d second;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * Returns the first object.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * @return the first object","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public A getFirst() {","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        return first;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * Returns the second object.","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @return the second object","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    public B getSecond() {","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        return second;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":41}},{"path":"src/main/java/wingman/commons/util/AppHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * This class is here to replace the {@code AppUtil} class in the original","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * AB3 codebase. It will not use static methods, and will instead use","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * a singleton pattern.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"public class AppHelper {","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     * The singleton instance of this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    public static final AppHelper INSTANCE;","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    static {","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"        INSTANCE \u003d new AppHelper();","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    private AppHelper() {","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * @see AppUtil#getImage(String)","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    public Image getImage(String imagePath) {","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"        return AppUtil.getImage(imagePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * @see AppUtil#checkArgument(Boolean)","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    public void checkArgument(Boolean condition) {","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        AppUtil.checkArgument(condition);","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * @see AppUtil#checkArgument(Boolean)","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    public void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        AppUtil.checkArgument(condition, errorMessage);","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":44}},{"path":"src/main/java/wingman/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.MainApp;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wxxedu":2,"-":40}},{"path":"src/main/java/wingman/commons/util/CollectionHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * The singleton instance that wraps around the {@code CollectionUtil} class.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"public class CollectionHelper {","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * The singleton instance of this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    public static final CollectionHelper INSTANCE;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    static {","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"        INSTANCE \u003d new CollectionHelper();","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    private CollectionHelper() {","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * @see CollectionUtil#requireAllNonNull(Object...)","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public void requireAllNonNull(Object... items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        CollectionUtil.requireAllNonNull(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * @see CollectionUtil#requireAllNonNull(Collection)","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    public void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        CollectionUtil.requireAllNonNull(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @see CollectionUtil#isAnyNonNull(Object...)","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    public boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        return CollectionUtil.isAnyNonNull(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":41}},{"path":"src/main/java/wingman/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     * Creates a deep copy of the source, which is a {@link Map} whose value","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     * is a {@link Deque}.","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     * @param source the source from which the deep copy is made.","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cK\u003e    the type of the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cV\u003e    the type of the value contained by the {@link Deque}.","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * @return the deep copy of the source.","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    public static \u003cK, V\u003e Map\u003cK, Deque\u003cV\u003e\u003e deepCopyMapDq(","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        Map\u003c? extends K, ? extends Deque\u003c? extends V\u003e\u003e source) {","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        HashMap\u003cK, Deque\u003cV\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        for (K key : source.keySet()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"            map.put(key, new ArrayDeque\u003c\u003e(source.get(key)));","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        return map;","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     * @param source the source from which the deep copy is made","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cK\u003e    the type of the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cV\u003e    the type of the value.","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     * @return the deep copy of the source.","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    public static \u003cK, V\u003e Map\u003cK, V\u003e deepCopy(Map\u003cK, V\u003e source) {","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        HashMap\u003cK, V\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        for (K key : source.keySet()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"            map.put(key, source.get(key));","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        return map;","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     * Returns an unmodifiable view of the {@link Map} whose value is a","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"     * {@link Deque}.","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     * @param source the source file.","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cK\u003e    the type of the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cV\u003e    the type of value contained by the {@link Deque}","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"     * @return the deep copy of the source.","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"    public static \u003cK, V\u003e Map\u003cK, Collection\u003cV\u003e\u003e unmodifiableMapDq(","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        Map\u003c? extends K, ? extends Collection\u003c? extends V\u003e\u003e source) {","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        HashMap\u003cK, Collection\u003cV\u003e\u003e result \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        for (K key : source.keySet()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"            result.put(key, Collections.unmodifiableCollection(source.get(key)));","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        return Collections.unmodifiableMap(result);","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wxxedu":59,"-":33}},{"path":"src/main/java/wingman/commons/util/ConfigHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.Config;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * The singleton instance that wraps around the {@code ConfigUtil} class.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"public class ConfigHelper {","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * The singleton instance of this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    public static final ConfigHelper INSTANCE;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    static {","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        INSTANCE \u003d new ConfigHelper();","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    private ConfigHelper() {","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * @see ConfigUtil#readConfig(Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @see ConfigUtil#saveConfig(Config, Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    public void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":39}},{"path":"src/main/java/wingman/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.Config;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wxxedu":3,"-":20}},{"path":"src/main/java/wingman/commons/util/FileHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * The singleton instance that wraps around the {@code FileUtil} class.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"public class FileHelper {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     * The singleton instance of this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    public static final FileHelper INSTANCE;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    static {","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"        INSTANCE \u003d new FileHelper();","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    private FileHelper() {","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#isFileExists(Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    public boolean isFileExists(Path filePath) {","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        return FileUtil.isFileExists(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#isValidPath(String)","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    public boolean isValidPath(String filePath) {","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"        return FileUtil.isValidPath(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#createIfMissing(Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    public void createIfMissing(Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#createFile(Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    public void createFile(Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createFile(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#createParentDirsOfFile(Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    public void createParentDirsOfFile(Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createParentDirsOfFile(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#readFromFile(Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    public String readFromFile(Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        return FileUtil.readFromFile(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#writeToFile(Path, String)","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    public void writeToFile(Path filePath, String content) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        FileUtil.writeToFile(filePath, content);","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":70}},{"path":"src/main/java/wingman/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":1,"-":82}},{"path":"src/main/java/wingman/commons/util/GetUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" * The service locator for locating already instantiated services. This can","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * be used to help with dependency injection and create effective isolation","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" * between different classes.","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"public class GetUtil {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    private static final String SERVICE_NOT_REGISTERED_MESSAGE \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        \"Service %s not registered.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    private static final String SERVICE_ALREADY_REGISTERED_MESSAGE \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"        \"Service %s has already been registered.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    private static final String CAST_FAILED_MESSAGE \u003d \"Casting failed: %s\";","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    private static final String DELETE_IF_CONTAINS_MESSAGE \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        \"Deletes the service %s for %s.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    private static final String INSTANTIATE_LAZY_VARIABLE_MESSAGE \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"        \"Instantiating lazy service %s for %s.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    private static final String CLEAR_MESSAGE \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"        \"Clearing the contents of GetUtil.\";","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    private static final Map\u003cClass\u003c?\u003e, Lazy\u003c?\u003e\u003e services \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(GetUtil.class);","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * Clears the services stored in this service locator.","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    public static void clear() {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        logger.info(CLEAR_MESSAGE);","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        services.clear();","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     * Gets the instance of the corresponding class","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * @param clazz the class of the service that\u0027s registered.","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e T get(Class\u003cT\u003e clazz) {","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"        if (services.containsKey(clazz)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"            try {","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"                return (T) services.get(clazz).get();","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"            } catch (ClassCastException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"                throw new GetException(String.format(CAST_FAILED_MESSAGE,","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"                    e.getMessage()));","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        throw new GetException(String.format(SERVICE_NOT_REGISTERED_MESSAGE,","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"            clazz.getName()));","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     * Gets the value corresponding to the class clazz, in a lazy manner.","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     * @param clazz the class that contains the key","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e   the type of the value contained by the lazy instance.","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"     * @return the lazy instance","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e Lazy\u003cT\u003e getLazy(Class\u003cT\u003e clazz) {","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        return Lazy.of(() -\u003e get(clazz));","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     * Throws the {@link GetException} if contains the key already.","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"     * @param key the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e the type of the value.","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"    private static \u003cT\u003e void throwIfContains(Class\u003cT\u003e key) {","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        if (!services.containsKey(key)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"            return;","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        throw new GetException(","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"            String.format(SERVICE_ALREADY_REGISTERED_MESSAGE,","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"                services.get(key).toString())","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"     * Deletes the existing value if it is already contained.","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"     * @param key the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e the type of the value.","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e void delete(Class\u003cT\u003e key) {","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"        if (!services.containsKey(key)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"            return;","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        logger.info(String.format(DELETE_IF_CONTAINS_MESSAGE,","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"            services.get(key).toString(), key.getName()));","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"        services.remove(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"     * Puts the value of the key to the service locator. This method will","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"     * throw if the service is already registered. In most cases, allowing","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"     * throwing would be the desired behavior. However, if you do not want","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"     * this behavior, use {@link GetUtil#putForce(Class, Object)} instead.","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"     * @param key   the class of the value","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"     * @param value the value","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e   the type of the value","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e void put(Class\u003cT\u003e key, T value) {","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"        throwIfContains(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"        services.put(key, Lazy.of(value));","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"     * Puts the value into the services, overriding all previous entries.","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"     * @param key   the class of the service.","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"     * @param value the value of the service.","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e   the type of the service.","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e void putForce(Class\u003cT\u003e key, T value) {","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"        delete(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"        services.put(key, Lazy.of(value));","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"     * Puts a lazy instantiation of the service. The service would only be","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"     * instantiated when it is used.","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"     * @param key      the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"     * @param supplier the supplier for the value.","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e      the type of the value.","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e void putLazy(Class\u003cT\u003e key, Supplier\u003cT\u003e supplier) {","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(supplier);","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"        throwIfContains(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"        services.put(key, Lazy.of(supplier));","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"     * Puts a lazy instantiation of the service and replace the existing ones","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"     * with the one provided by the supplier.","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"     * @param key      the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"     * @param supplier the supplier for the value.","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e      the type of the value.","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT\u003e void putLazyForce(Class\u003cT\u003e key, Supplier\u003cT\u003e supplier) {","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(supplier);","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"        delete(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"        services.put(key, Lazy.of(supplier));","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"     * The exception thrown when trying to get something","lastModifiedDate":"2023-03-16"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"    public static class GetException extends RuntimeException {","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"        /**","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"         * Creates a get exception with the given message","lastModifiedDate":"2023-03-16"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"         */","lastModifiedDate":"2023-03-16"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"        public GetException(String message) {","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"            super(message);","lastModifiedDate":"2023-03-16"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"wxxedu":175}},{"path":"src/main/java/wingman/commons/util/JsonHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * The singleton instance that wraps around the {@code JsonUtil} class.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"public class JsonHelper {","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * The singleton instance of this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public static final JsonHelper INSTANCE;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    static {","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        INSTANCE \u003d new JsonHelper();","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    private JsonHelper() {","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * @see JsonUtil#readJsonFile(Path, Class)","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    public \u003cT\u003e Optional\u003cT\u003e readJsonFile(Path filePath, Class\u003cT\u003e clazz)","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException {","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        return JsonUtil.readJsonFile(filePath, clazz);","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @see JsonUtil#saveJsonFile(Object, Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    public \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        JsonUtil.saveJsonFile(jsonFile, filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * @see JsonUtil#fromJsonString(String, Class)","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    public \u003cT\u003e T fromJsonString(String jsonString, Class\u003cT\u003e clazz) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        return JsonUtil.fromJsonString(jsonString, clazz);","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * @see JsonUtil#toJsonString(Object)","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    public \u003cT\u003e String toJsonString(T jsonFile) throws JsonProcessingException {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        return JsonUtil.toJsonString(jsonFile);","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":55}},{"path":"src/main/java/wingman/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":3,"-":140}},{"path":"src/main/java/wingman/commons/util/StringHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The singleton instance that wraps around the {@code StringUtil} class.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class StringHelper {","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * The singleton instance of this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    public static final StringHelper INSTANCE;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    static {","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"        INSTANCE \u003d new StringHelper();","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    private StringHelper() {","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * @see StringUtil#containsWordIgnoreCase(String, String)","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    public boolean containsWordIgnoreCase(String source, String word) {","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"        return StringUtil.containsWordIgnoreCase(source, word);","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * @see StringUtil#getDetails(Throwable)","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public String getDetails(Throwable throwable) {","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        return StringUtil.getDetails(throwable);","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @see StringUtil#isNonZeroUnsignedInteger(String)","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    public boolean isNonZeroUnsignedInteger(String test) {","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        return StringUtil.isNonZeroUnsignedInteger(test);","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":39}},{"path":"src/main/java/wingman/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static wingman.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":2,"-":66}},{"path":"src/main/java/wingman/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.GuiSettings;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.OperationMode;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * Gets the filtered list of items.","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * @return the filtered list of items.","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    ObservableList\u003cItem\u003e getFilteredItemList();","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * Gets the current operation mode.","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * @return the current operation mode.","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    OperationMode getOperationMode();","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"tangyuantyy"},"content":"     * Gets the filtered list of flights.","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"tangyuantyy"},"content":"     * @return the filtered list of flights.","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"tangyuantyy"},"content":"    ObservableList\u003cFlight\u003e getFilteredFlightList();","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"tangyuantyy"},"content":"     * Gets the filtered list of crew.","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"tangyuantyy"},"content":"     * @return the filtered list of crew.","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"tangyuantyy"},"content":"    ObservableList\u003cCrew\u003e getFilteredCrewList();","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"tangyuantyy"},"content":"     * Gets the filtered list of planes.","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"tangyuantyy"},"content":"     * @return the filtered list of planes.","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"tangyuantyy"},"content":"    ObservableList\u003cPlane\u003e getFilteredPlaneList();","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"tangyuantyy"},"content":"     * Gets the filtered list of pilots.","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"tangyuantyy"},"content":"     * @return the filtered list of pilots.","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"tangyuantyy"},"content":"    ObservableList\u003cPilot\u003e getFilteredPilotList();","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"tangyuantyy"},"content":"     * Gets the filtered list of locations.","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"tangyuantyy"},"content":"     * @return the filtered list of locations.","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"tangyuantyy"},"content":"    ObservableList\u003cLocation\u003e getFilteredLocationList();","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"BoAi01":1,"wxxedu":26,"tangyuantyy":35,"-":26}},{"path":"src/main/java/wingman/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.GuiSettings;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.WingmanParser;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.OperationMode;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.Storage;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":" * TODO: remove the magic literals.","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    private final WingmanParser parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     * {@code Storage}.","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     * @param model   the model to use.","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * @param storage the storage to use.","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     * @param parser  the parser to use.","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    public LogicManager(Model model, Storage storage, WingmanParser parser) {","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     * {@code Storage}, using the default {@code WingmanParser}.","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     * @param model   the model to use.","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     * @param storage the storage to use.","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        this(model, storage, new WingmanParser());","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        final Command command \u003d parser.parse(getOperationMode(), commandText);","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        final CommandResult result \u003d command.execute(model);","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        this.save();","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"        return result;","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"     * Saves the current state of the application to the storage.","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"     * @throws CommandException if there was an error during saving.","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"    private void save() throws CommandException {","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"            switch (getOperationMode()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"            case PILOT:","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"                storage.savePilotManager(model.getPilotManager());","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"                storage.saveLocationManager(model.getLocationManager());","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"                break;","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"            case LOCATION:","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"                storage.saveLocationManager(model.getLocationManager());","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"                break;","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"            case PLANE:","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"cetigerlily"},"content":"                storage.savePlaneManager(model.getPlaneManager());","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"                storage.saveLocationManager(model.getLocationManager());","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"cetigerlily"},"content":"                break;","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"            case FLIGHT:","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"                storage.saveFlightManager(model.getFlightManager());","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"jishnu28"},"content":"                break;","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"            case CREW:","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"tangyuantyy"},"content":"                storage.saveCrewManager(model.getCrewManager());","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"                storage.saveLocationManager(model.getLocationManager());","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"tangyuantyy"},"content":"                break;","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"            default:","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"                throw new CommandException(\"Unknown operation mode\");","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"            storage.saveFlightManager(model.getFlightManager());","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + e, e);","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"    public ObservableList\u003cItem\u003e getFilteredItemList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"        logger.info(\"Getting filtered item list: \" + model","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"                                                             .getItemsList()","lastModifiedDate":"2023-03-31"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"                                                             .size() + \" \"","lastModifiedDate":"2023-03-31"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"                            + \"items\");","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"        return model.getItemsList();","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"tangyuantyy"},"content":"    public ObservableList\u003cFlight\u003e getFilteredFlightList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"        logger.info(\"Getting filtered flight list: \" + model","lastModifiedDate":"2023-03-31"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"                                                               .getFlightList()","lastModifiedDate":"2023-03-31"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"                                                               .size() + \" \"","lastModifiedDate":"2023-03-31"},{"lineNumber":129,"author":{"gitId":"tangyuantyy"},"content":"                            + \"flights\");","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"tangyuantyy"},"content":"        return model.getFlightList();","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"tangyuantyy"},"content":"    public ObservableList\u003cCrew\u003e getFilteredCrewList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"        logger.info(\"Getting filtered crew list: \" + model","lastModifiedDate":"2023-03-31"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"                                                             .getCrewList()","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"                                                             .size() + \" \"","lastModifiedDate":"2023-03-31"},{"lineNumber":138,"author":{"gitId":"tangyuantyy"},"content":"                            + \"crew\");","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"tangyuantyy"},"content":"        return model.getCrewList();","lastModifiedDate":"2023-03-26"},{"lineNumber":140,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":141,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":142,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":143,"author":{"gitId":"tangyuantyy"},"content":"    public ObservableList\u003cPlane\u003e getFilteredPlaneList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"        logger.info(\"Getting filtered plane list: \" + model","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"                                                              .getPlaneList()","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"                                                              .size() + \" \"","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"tangyuantyy"},"content":"                            + \"planes\");","lastModifiedDate":"2023-03-26"},{"lineNumber":148,"author":{"gitId":"tangyuantyy"},"content":"        return model.getPlaneList();","lastModifiedDate":"2023-03-26"},{"lineNumber":149,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":151,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":152,"author":{"gitId":"tangyuantyy"},"content":"    public ObservableList\u003cPilot\u003e getFilteredPilotList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"        logger.info(\"Getting filtered pilot list: \" + model","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"                                                              .getPilotList()","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"                                                              .size() + \" \"","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"tangyuantyy"},"content":"                            + \"pilots\");","lastModifiedDate":"2023-03-26"},{"lineNumber":157,"author":{"gitId":"tangyuantyy"},"content":"        return model.getPilotList();","lastModifiedDate":"2023-03-26"},{"lineNumber":158,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":161,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":162,"author":{"gitId":"tangyuantyy"},"content":"    public ObservableList\u003cLocation\u003e getFilteredLocationList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"        logger.info(\"Getting filtered location list: \" + model","lastModifiedDate":"2023-03-31"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"                                                                 .getLocationList()","lastModifiedDate":"2023-03-31"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"                                                                 .size() + \" \"","lastModifiedDate":"2023-03-31"},{"lineNumber":166,"author":{"gitId":"tangyuantyy"},"content":"                            + \"locations\");","lastModifiedDate":"2023-03-26"},{"lineNumber":167,"author":{"gitId":"tangyuantyy"},"content":"        return model.getLocationList();","lastModifiedDate":"2023-03-26"},{"lineNumber":168,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":169,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"    public OperationMode getOperationMode() {","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"        return model.getOperationMode();","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"BoAi01":7,"jishnu28":2,"cetigerlily":2,"wxxedu":97,"tangyuantyy":32,"-":34}},{"path":"src/main/java/wingman/logic/core/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"public interface Command {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     * Parses a one-based index string to zero-based index integer.","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     * @param string a string of an index that starts from one","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     * @return a zero-based index integer","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"    static int parseIntegerToZeroBasedIndex(String string) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"        int parsedIndex \u003d Integer.parseInt(string);","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        if (parsedIndex \u003c\u003d 0) {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"            throw new CommandException(","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"                    \"Input index must be positive.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"                            + \"Please enter a one-based index, refer to the display list for index.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"        return parsedIndex - 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BoAi01":14,"cetigerlily":3,"wxxedu":5,"-":13}},{"path":"src/main/java/wingman/logic/core/CommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * The factory that\u0027s responsible for creating a command.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e the type of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"public interface CommandFactory\u003cT extends Command\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * Returns the command word of the command. For example, if the command","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * is to add an entity, then the command word may be \"add\". Every command","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * should have a command word.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * @return the command word of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    String getCommandWord();","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * Gets the prefixes of the command. Prefixes are used to identify the","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * arguments of the command. If the command does not have any prefixes,","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * then return {@code Optional.empty()}.","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * @return the prefixes of the command, or {@code Optional.empty()} if","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     *     the command does not have any prefixes.","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    Optional\u003cSet\u003cString\u003e\u003e getPrefixes();","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * Creates a command with the given parameters.","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @param param the parameters of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     * @return the command created.","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if the parameters are invalid.","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    T createCommand(CommandParam param) throws ParseException, CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":1,"wxxedu":41}},{"path":"src/main/java/wingman/logic/core/CommandGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.OperationMode;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" * The group of commands.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"public class CommandGroup extends FactoryParser {","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * The mode at which the command is executed.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    private final OperationMode mode;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * The list of factories responsible for creating commands.","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * Since we won\u0027t be having too many commands, using a list would be","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * faster than using a map.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    private final List\u003cCommandFactory\u003c?\u003e\u003e factories;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * Creates a command group with the given mode and list of factories. A","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * command groups provides a logical grouping of the commands. Which","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * command group to use is determined by the current mode of the","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * software, hence this software being \"modal\". The specific resolution","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * of the command is handled inside the command group via its array of","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * factories.","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @param mode      the mode at which the command is executed.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     * @param factories the list of factories responsible for creating commands.","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    public CommandGroup(OperationMode mode, List\u003cCommandFactory\u003c?\u003e\u003e factories) {","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        this.mode \u003d mode;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        this.factories \u003d factories;","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * Parses the command and returns the resulting command object.","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * @param tokens the tokens of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    public Command parse(Deque\u003cString\u003e tokens) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        if (tokens.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(\"Tokens is empty\");","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        final Optional\u003cCommand\u003e result \u003d this.parseFactory(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        if (result.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(\"Unknown command in \" + this.mode);","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        return result.get();","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     * Returns the mode at which the command is executed.","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     * @return the mode at which the command is executed.","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    public OperationMode getOperationMode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        return mode;","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    protected List\u003cCommandFactory\u003c?\u003e\u003e getFactories() {","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        return factories;","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":1,"wxxedu":74}},{"path":"src/main/java/wingman/logic/core/CommandParam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * Represents the parameters of a command.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"public class CommandParam {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * The unnamed token of the command, which is the part right after","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * command word and before the first prefix.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    private final Optional\u003cString\u003e unnamedValue;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * The named token of the command, which is the part right after","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * one prefix and before the next prefix.","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    private final Optional\u003cMap\u003cString, Optional\u003cString\u003e\u003e\u003e namedValues;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * Creates a command parameter from the given tokens. Note that this","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * function will not throw parser exception, but will instead return a","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * {@code CommandParam} with empty optional fields. It is the caller\u0027s","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * responsibility to check if the returned command parameter is valid,","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * because this class does not have enough context to provide a","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * meaningful exception message.","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @param unnamedValue the unnamed token of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @param namedValues  the named token of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    public CommandParam(Optional\u003cString\u003e unnamedValue,","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cMap\u003cString, Optional\u003cString\u003e\u003e\u003e namedValues) {","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        this.unnamedValue \u003d unnamedValue;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        this.namedValues \u003d namedValues;","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * Creates a command parameter from the given tokens. Note that this","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     * function will not throw parser exception, but will instead return a","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * {@code CommandParam} with empty optional fields. It is the caller\u0027s","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     * responsibility to check if the returned command parameter is valid,","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * because this class does not have enough context to provide a","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * meaningful exception message.","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * @param tokens   the tokens of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     * @param prefixes the prefixes of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     * @return the command parameter created.","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    public static CommandParam from(Deque\u003cString\u003e tokens,","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cSet\u003cString\u003e\u003e prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        // special cases","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        if (tokens.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"            return new CommandParam(Optional.empty(),","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"                Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        if (prefixes.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"            return new CommandParam(","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"                Optional.of(String.join(\" \", tokens)),","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"                Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        // set up","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"        Set\u003cString\u003e prefixMap \u003d prefixes.get();","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        // handle the unnamed token","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e unnamedValue \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"            parseUnnamedValue(tokens, prefixMap);","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        // handle the named tokens","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e namedValues \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"            parseNamedValues(tokens, prefixMap);","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        return new CommandParam(unnamedValue, Optional.of(namedValues));","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"     * Parses the unnamed value from the given tokens. The unnamed value is","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"     * the part right after the command word and before the first prefix.","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     * Note that it is assumed that the tokens already have the command word","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"     * removed. The prefix set is used to determine when the unnamed value","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"     * ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     * @param tokens   the tokens of the command, with the command word","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     *                 removed.","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"     * @param prefixes the prefixes of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     * @return the unnamed value parsed.","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"    public static Optional\u003cString\u003e parseUnnamedValue(Deque\u003cString\u003e tokens,","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"        Set\u003cString\u003e prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"        if (tokens.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"        while (tokens.size() \u003e 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"            if (prefixes.contains(tokens.peek())) {","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"                break;","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"            builder.append(tokens.pop()).append(\" \");","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        if (builder.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"        return Optional.of(builder.toString().trim());","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"     * Parses the named values from the given tokens. The named values are","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"     * the parts right after the prefixes and before the next prefix. Note","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"     * that it is assumed that the tokens already have the command word","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"     * and the unnamed value removed.","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"     * @param tokens   the tokens of the command, with the command word and","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"     *                 the unnamed value removed.","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"     * @param prefixes the prefixes of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"     * @return the named values parsed.","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"    public static Map\u003cString, Optional\u003cString\u003e\u003e parseNamedValues(Deque\u003cString\u003e tokens,","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"        Set\u003cString\u003e prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        if (tokens.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"            return padNamedValues(new HashMap\u003c\u003e(), prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e namedValues \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"        String prefix \u003d tokens.pop();","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"        // just to be defensive, despite the assumption","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"        while (!prefixes.contains(prefix)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"            prefix \u003d tokens.pop();","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"        while (tokens.size() \u003e 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"            if (!prefixes.contains(tokens.peek())) {","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"                builder.append(tokens.pop()).append(\" \");","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"                continue;","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"            namedValues.put(prefix, Optional.of(builder.toString().trim()));","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"            prefix \u003d tokens.pop();","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"            builder.setLength(0);","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"        if (builder.length() \u003e 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"            namedValues.put(prefix, Optional.of(builder.toString().trim()));","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"        return padNamedValues(namedValues, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"     * Pad the named values with empty values for the prefixes that are not","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"     * present in the named values.","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"     * @param namedValues the named values to pad.","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"     * @param prefixes    the prefixes to pad.","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"     * @return the named values padded.","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"    private static Map\u003cString, Optional\u003cString\u003e\u003e padNamedValues(","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e namedValues, Set\u003cString\u003e prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"        for (String p : prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"            if (!namedValues.containsKey(p)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"                namedValues.put(p, Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"        return namedValues;","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"     * Returns the unnamed token of the command, which is the part right after","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"     * command word and before the first prefix.","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"     * @return the unnamed token of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cString\u003e getUnnamedValue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"        return unnamedValue;","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"     * Gets the unnamed token of the command or throws an exception.","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"    public String getUnnamedValueOrThrow(String message) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"        if (unnamedValue.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(message);","lastModifiedDate":"2023-03-04"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"        return unnamedValue.get();","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":186,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"     * Gets the unnamed token of the command or throws an exception.","lastModifiedDate":"2023-03-04"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"     * @return the unnamed token of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"     * @throws CommandException if the unnamed token is not present.","lastModifiedDate":"2023-03-04"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"    public String getUnnamedValueOrThrow() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":193,"author":{"gitId":"cetigerlily"},"content":"        return getUnnamedValueOrThrow(\"Missing unnamed value.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"     * Returns the named token of the command, which is the part right after","lastModifiedDate":"2023-03-04"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"     * one prefix and before the next prefix.","lastModifiedDate":"2023-03-04"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"     * @return the named token of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cMap\u003cString, Optional\u003cString\u003e\u003e\u003e getNamedValues() {","lastModifiedDate":"2023-03-04"},{"lineNumber":203,"author":{"gitId":"wxxedu"},"content":"        // so that the caller cannot modify the named token","lastModifiedDate":"2023-03-04"},{"lineNumber":204,"author":{"gitId":"wxxedu"},"content":"        return namedValues.map(Map::copyOf);","lastModifiedDate":"2023-03-04"},{"lineNumber":205,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":208,"author":{"gitId":"wxxedu"},"content":"     * Gets the value of the named token with the given prefix.","lastModifiedDate":"2023-03-04"},{"lineNumber":209,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":210,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cString\u003e getNamedValues(String prefix) {","lastModifiedDate":"2023-03-04"},{"lineNumber":211,"author":{"gitId":"wxxedu"},"content":"        if (namedValues.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":213,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":214,"author":{"gitId":"wxxedu"},"content":"        return namedValues.get().get(prefix);","lastModifiedDate":"2023-03-04"},{"lineNumber":215,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":216,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"     * Gets the value of the named token with the given prefix or throws an exception.","lastModifiedDate":"2023-03-04"},{"lineNumber":219,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-04-01"},{"lineNumber":220,"author":{"gitId":"BoAi01"},"content":"     * @throws ParseException if there is no value following a prefix,","lastModifiedDate":"2023-04-01"},{"lineNumber":221,"author":{"gitId":"BoAi01"},"content":"     *                          the input is an empty string.","lastModifiedDate":"2023-04-01"},{"lineNumber":222,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":223,"author":{"gitId":"wxxedu"},"content":"    public String getNamedValuesOrThrow(String prefix, String message) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":224,"author":{"gitId":"wxxedu"},"content":"        final Optional\u003cString\u003e value \u003d getNamedValues(prefix);","lastModifiedDate":"2023-03-04"},{"lineNumber":225,"author":{"gitId":"BoAi01"},"content":"        if (value.isEmpty() || value.get().isEmpty()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":226,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(message);","lastModifiedDate":"2023-03-04"},{"lineNumber":227,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"        return value.get();","lastModifiedDate":"2023-03-04"},{"lineNumber":229,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":230,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":231,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":232,"author":{"gitId":"wxxedu"},"content":"     * Gets the value of the named token with the given prefix or throws an exception.","lastModifiedDate":"2023-03-04"},{"lineNumber":233,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":234,"author":{"gitId":"wxxedu"},"content":"     * @see #getNamedValuesOrThrow(String, String)","lastModifiedDate":"2023-03-04"},{"lineNumber":235,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":236,"author":{"gitId":"wxxedu"},"content":"    public String getNamedValuesOrThrow(String prefix) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":237,"author":{"gitId":"BoAi01"},"content":"        return getNamedValuesOrThrow(prefix,","lastModifiedDate":"2023-04-01"},{"lineNumber":238,"author":{"gitId":"BoAi01"},"content":"                String.format(","lastModifiedDate":"2023-04-01"},{"lineNumber":239,"author":{"gitId":"cetigerlily"},"content":"                    \"Missing value for prefix %s.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"cetigerlily"},"content":"                            + \"Please try entering a value following %s.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":241,"author":{"gitId":"cetigerlily"},"content":"                prefix,","lastModifiedDate":"2023-03-28"},{"lineNumber":242,"author":{"gitId":"cetigerlily"},"content":"                prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"cetigerlily"},"content":"        ));","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":245,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":246,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":247,"author":{"gitId":"wxxedu"},"content":"     * Gets the integer value of the unnamed token with the given prefix,","lastModifiedDate":"2023-03-04"},{"lineNumber":248,"author":{"gitId":"wxxedu"},"content":"     * else throws a {@code ParseException} with the given message.","lastModifiedDate":"2023-03-04"},{"lineNumber":249,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":250,"author":{"gitId":"wxxedu"},"content":"    public int getUnnamedIntOrThrow(String message) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":251,"author":{"gitId":"wxxedu"},"content":"        final String value \u003d getUnnamedValueOrThrow(message);","lastModifiedDate":"2023-03-04"},{"lineNumber":252,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":253,"author":{"gitId":"wxxedu"},"content":"            return Integer.parseInt(value);","lastModifiedDate":"2023-03-04"},{"lineNumber":254,"author":{"gitId":"wxxedu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":255,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"cetigerlily"},"content":"                    \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"cetigerlily"},"content":"                            + \"Please try using an integer instead.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"cetigerlily"},"content":"                    value","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":261,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":262,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":263,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":264,"author":{"gitId":"wxxedu"},"content":"     * Gets the integer value of the unnamed token with the given prefix,","lastModifiedDate":"2023-03-04"},{"lineNumber":265,"author":{"gitId":"wxxedu"},"content":"     * else throws a {@code ParseException} with the given message.","lastModifiedDate":"2023-03-04"},{"lineNumber":266,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":267,"author":{"gitId":"wxxedu"},"content":"    public int getUnnamedIntOrThrow() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":268,"author":{"gitId":"cetigerlily"},"content":"        return getUnnamedIntOrThrow(","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"cetigerlily"},"content":"                \"Missing integer.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"cetigerlily"},"content":"                        + \"Please try entering an integer.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":272,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":273,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":274,"author":{"gitId":"wxxedu"},"content":"     * Gets the integer value of the named token with the given prefix or throws an exception.","lastModifiedDate":"2023-03-04"},{"lineNumber":275,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":276,"author":{"gitId":"wxxedu"},"content":"    public int getNamedIntOrThrow(String prefix, String message) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":277,"author":{"gitId":"wxxedu"},"content":"        final String value \u003d getNamedValuesOrThrow(prefix, message);","lastModifiedDate":"2023-03-04"},{"lineNumber":278,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":279,"author":{"gitId":"wxxedu"},"content":"            return Integer.parseInt(value);","lastModifiedDate":"2023-03-04"},{"lineNumber":280,"author":{"gitId":"wxxedu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":281,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"cetigerlily"},"content":"                    \"%s is an invalid value for prefix %s.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"cetigerlily"},"content":"                            + \"Please try using an integer instead.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"cetigerlily"},"content":"                    value,","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"cetigerlily"},"content":"                    prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":287,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":288,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":289,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":290,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":291,"author":{"gitId":"wxxedu"},"content":"     * Gets the integer value of the named token with the given prefix or throws an exception.","lastModifiedDate":"2023-03-04"},{"lineNumber":292,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":293,"author":{"gitId":"wxxedu"},"content":"     * @see #getNamedIntOrThrow(String, String)","lastModifiedDate":"2023-03-04"},{"lineNumber":294,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":295,"author":{"gitId":"wxxedu"},"content":"    public int getNamedIntOrThrow(String prefix) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":296,"author":{"gitId":"cetigerlily"},"content":"        return getNamedIntOrThrow(prefix, String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":297,"author":{"gitId":"cetigerlily"},"content":"                \"Missing integer for prefix %s.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":298,"author":{"gitId":"cetigerlily"},"content":"                        + \"Please try entering an integer following %s.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":299,"author":{"gitId":"cetigerlily"},"content":"                prefix,","lastModifiedDate":"2023-03-28"},{"lineNumber":300,"author":{"gitId":"cetigerlily"},"content":"                prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":301,"author":{"gitId":"cetigerlily"},"content":"        ));","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":303,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":304,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":305,"author":{"gitId":"wxxedu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":306,"author":{"gitId":"wxxedu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":307,"author":{"gitId":"wxxedu"},"content":"            return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":308,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":309,"author":{"gitId":"wxxedu"},"content":"        if (!(other instanceof CommandParam)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":310,"author":{"gitId":"wxxedu"},"content":"            return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":311,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":312,"author":{"gitId":"wxxedu"},"content":"        CommandParam otherCommandParam \u003d (CommandParam) other;","lastModifiedDate":"2023-03-04"},{"lineNumber":313,"author":{"gitId":"wxxedu"},"content":"        return unnamedValue.equals(otherCommandParam.unnamedValue)","lastModifiedDate":"2023-03-04"},{"lineNumber":314,"author":{"gitId":"wxxedu"},"content":"                   \u0026\u0026 namedValues.equals(otherCommandParam.namedValues);","lastModifiedDate":"2023-03-04"},{"lineNumber":315,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":316,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":6,"cetigerlily":26,"wxxedu":284}},{"path":"src/main/java/wingman/logic/core/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wxxedu":1,"-":69}},{"path":"src/main/java/wingman/logic/core/FactoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * The parser that delegates the parsing of the commands to the specific","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" * factories.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"public abstract class FactoryParser {","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * Gets the list of factories that this parser handles.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * @return the list of factories that this parser handles.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    protected abstract List\u003cCommandFactory\u003c?\u003e\u003e getFactories();","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * Parses the given tokens and returns the corresponding command. If","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * there is no command that matches the tokens, an empty optional is","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * returned.","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * @param tokens the tokens of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * @return the command that matches the tokens.","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if the command is invalid.","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003cCommand\u003e parseFactory(Deque\u003cString\u003e tokens)","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"            throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        if (tokens.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(\"Tokens is empty\");","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        String commandWord \u003d tokens.peek();","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        for (CommandFactory\u003c?\u003e factory : getFactories()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"            if (commandWord.equals(factory.getCommandWord())) {","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"                tokens.pop();","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"                final CommandParam param \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"                    CommandParam.from(tokens, factory.getPrefixes());","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"                return Optional.of(factory.createCommand(param));","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":2,"wxxedu":48}},{"path":"src/main/java/wingman/logic/core/WingmanParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.crew.linkflight.LinkCrewToFlightCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.crew.linklocation.LinkCrewToLocationCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.crew.unlinkflight.UnlinkCrewToFlightCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.crew.unlinklocation.UnlinkCrewToLocationCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.flight.linklocation.LinkFlightToLocationCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.flight.unlinklocation.UnlinkFlightToLocationCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.pilot.linkflight.LinkPilotToFlightCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.pilot.linklocation.LinkPilotToLocationCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.pilot.unlinkflight.UnlinkPilotToFlightCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.pilot.unlinklocation.UnlinkPilotToLocationCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.plane.linkflight.LinkPlaneToFlightCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.plane.linklocation.LinkPlaneToLocationCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.plane.unlinkflight.UnlinkPlaneToFlightCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.plane.unlinklocation.UnlinkPlaneToLocationCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.toplevel.add.AddCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.toplevel.changemode.ChangeModeCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.toplevel.delete.DeleteCommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.toplevel.syntax.CrewSyntax;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.toplevel.syntax.FlightSyntax;","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.toplevel.syntax.LocationSyntax;","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.toplevel.syntax.PilotSyntax;","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.toplevel.syntax.PlaneSyntax;","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"import wingman.model.OperationMode;","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":" * The parser that\u0027s responsible for parsing the user input and handling the","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":" * commands.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"public class WingmanParser extends FactoryParser {","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * The command groups that are available in the application.","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    private static final List\u003cCommandGroup\u003e COMMAND_GROUPS \u003d List.of(","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"            new CommandGroup(OperationMode.PILOT,","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"                    List.of(","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"                        new AddCommandFactory\u003c\u003e(","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"                                \"pilot\",","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"                                Optional.of(PilotSyntax.PREFIXES),","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"                                PilotSyntax::add,","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"                                PilotSyntax::factory","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"                        ),","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"                        new DeleteCommandFactory\u003c\u003e(","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"                                PilotSyntax::getManager,","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"                                PilotSyntax::delete","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"                        ),","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"                        new LinkPilotToFlightCommandFactory(),","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"                        new UnlinkPilotToFlightCommandFactory(),","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"                        new LinkPilotToLocationCommandFactory(),","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"                        new UnlinkPilotToLocationCommandFactory()","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"                )","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"            ),","lastModifiedDate":"2023-04-01"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"            new CommandGroup(OperationMode.CREW,","lastModifiedDate":"2023-04-01"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"                    List.of(","lastModifiedDate":"2023-04-01"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"                        new AddCommandFactory\u003c\u003e(","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"                                \"crew\",","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"                                Optional.of(CrewSyntax.PREFIXES),","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"                                CrewSyntax::add,","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"                                CrewSyntax::factory","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"                        ),","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"                        new DeleteCommandFactory\u003c\u003e(","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"                                CrewSyntax::getManager,","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"                                CrewSyntax::delete","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"                        ),","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"                        new LinkCrewToFlightCommandFactory(),","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"                        new UnlinkCrewToFlightCommandFactory(),","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"                        new LinkCrewToLocationCommandFactory(),","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"                        new UnlinkCrewToLocationCommandFactory()","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"                )","lastModifiedDate":"2023-04-01"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"            ),","lastModifiedDate":"2023-04-01"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"            new CommandGroup(OperationMode.PLANE,","lastModifiedDate":"2023-04-01"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"                    List.of(","lastModifiedDate":"2023-04-01"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"                        new AddCommandFactory\u003c\u003e(","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"cetigerlily"},"content":"                                \"plane\",","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"                                Optional.of(PlaneSyntax.PREFIXES),","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"                                PlaneSyntax::add,","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"                                PlaneSyntax::factory","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"                        ),","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"                        new DeleteCommandFactory\u003c\u003e(","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"                                PlaneSyntax::getManager,","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"                                PlaneSyntax::delete","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"                        ),","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"                        new LinkPlaneToFlightCommandFactory(),","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"                        new UnlinkPlaneToFlightCommandFactory(),","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"                        new LinkPlaneToLocationCommandFactory(),","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"                        new UnlinkPlaneToLocationCommandFactory()","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"                )","lastModifiedDate":"2023-04-01"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"            ),","lastModifiedDate":"2023-04-01"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"            new CommandGroup(OperationMode.LOCATION,","lastModifiedDate":"2023-04-01"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"                    List.of(","lastModifiedDate":"2023-04-01"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"                        new AddCommandFactory\u003c\u003e(","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"cetigerlily"},"content":"                                \"location\",","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"                                Optional.of(LocationSyntax.PREFIXES),","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"                                LocationSyntax::add,","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"                                LocationSyntax::factory","lastModifiedDate":"2023-03-25"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"                        ),","lastModifiedDate":"2023-03-25"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"                        new DeleteCommandFactory\u003c\u003e(","lastModifiedDate":"2023-03-25"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"                                LocationSyntax::getManager,","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"                                LocationSyntax::delete","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"                        )","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"                )","lastModifiedDate":"2023-04-01"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"            ),","lastModifiedDate":"2023-04-01"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"            new CommandGroup(OperationMode.FLIGHT,","lastModifiedDate":"2023-04-01"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"                    List.of(","lastModifiedDate":"2023-04-01"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"                        new AddCommandFactory\u003c\u003e(","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"cetigerlily"},"content":"                                \"flight\",","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"                                Optional.of(FlightSyntax.PREFIXES),","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"                                FlightSyntax::add,","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"                                FlightSyntax::factory","lastModifiedDate":"2023-03-25"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"                        ),","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"                        new DeleteCommandFactory\u003c\u003e(","lastModifiedDate":"2023-03-25"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"                                FlightSyntax::getManager,","lastModifiedDate":"2023-03-25"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"                                FlightSyntax::delete","lastModifiedDate":"2023-03-25"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"                        ),","lastModifiedDate":"2023-03-25"},{"lineNumber":124,"author":{"gitId":"BoAi01"},"content":"                        new LinkFlightToLocationCommandFactory(),","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"BoAi01"},"content":"                        new UnlinkFlightToLocationCommandFactory()","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"                )","lastModifiedDate":"2023-04-01"},{"lineNumber":127,"author":{"gitId":"BoAi01"},"content":"            )","lastModifiedDate":"2023-04-01"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"    );","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"     * The top level command factories that are available in the application.","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"    private static final List\u003cCommandFactory\u003c?\u003e\u003e COMMAND_FACTORIES \u003d List.of(","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"BoAi01"},"content":"            new ChangeModeCommandFactory()","lastModifiedDate":"2023-04-02"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"    );","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"     * The command groups that are available in the application.","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"    private final List\u003cCommandGroup\u003e groups;","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"     * The list of top-level factories that produces commands.","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"    private final List\u003cCommandFactory\u003c?\u003e\u003e factories;","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"     * Constructs a {@code WingmanParser} with the command groups given.","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"     * @param commandGroups the command groups that are available in the","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"     *                      application.","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"     * @param factories     the top-level factories that are responsible","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"     *                      for parsing of top-level features.","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"    public WingmanParser(","lastModifiedDate":"2023-03-25"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"            List\u003cCommandGroup\u003e commandGroups,","lastModifiedDate":"2023-03-25"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"            List\u003cCommandFactory\u003c?\u003e\u003e factories","lastModifiedDate":"2023-03-25"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-25"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"        this.groups \u003d commandGroups;","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"        this.factories \u003d factories;","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"     * Constructs a {@code WingmanParser} with the default {@code","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"     * COMMAND_GROUPS} and {@code  COMMAND_FACTORIES}","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"    public WingmanParser() {","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"        this(COMMAND_GROUPS, COMMAND_FACTORIES);","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"     * Tokenizes the user input into a {@code Deque} of {@code String}s. It","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"     * splits the user input by whitespace. This may result in the token","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"     * being unable to recover back to the original user input, i.e. if the","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"     * user used different whitespace characters other than spaces. However,","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"     * for the purpose of this application, this is acceptable.","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"     * @param userInput the user input to tokenize.","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"     * @return a {@code Deque} of {@code String}s that contains the tokens.","lastModifiedDate":"2023-03-04"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"    private static Deque\u003cString\u003e tokenize(String userInput) {","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"        return new ArrayDeque\u003c\u003e(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-04"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2023-03-04"},{"lineNumber":186,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"     * @param operationMode the operation mode at which the command is","lastModifiedDate":"2023-03-04"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"     *                      executed.","lastModifiedDate":"2023-03-04"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"     * @param userInput     the user input to parse.","lastModifiedDate":"2023-03-04"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"     * @return the command that corresponds to the user input.","lastModifiedDate":"2023-03-04"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if a parsing error exists, or if no command is","lastModifiedDate":"2023-03-04"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"     *                        found in the parser.","lastModifiedDate":"2023-03-04"},{"lineNumber":193,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":194,"author":{"gitId":"wxxedu"},"content":"    public Command parse(","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"            OperationMode operationMode,","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"            String userInput","lastModifiedDate":"2023-03-25"},{"lineNumber":197,"author":{"gitId":"BoAi01"},"content":"    ) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"        final Deque\u003cString\u003e tokens \u003d tokenize(userInput);","lastModifiedDate":"2023-03-04"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"        final Optional\u003cCommand\u003e topCommand \u003d this.parseFactory(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"wxxedu"},"content":"        if (topCommand.isPresent()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":203,"author":{"gitId":"wxxedu"},"content":"            return topCommand.get();","lastModifiedDate":"2023-03-04"},{"lineNumber":204,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":205,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"        final Optional\u003cCommand\u003e groupedCommand \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"wxxedu"},"content":"                this.parseGroup(operationMode, tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":208,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":209,"author":{"gitId":"wxxedu"},"content":"        if (groupedCommand.isPresent()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":210,"author":{"gitId":"wxxedu"},"content":"            return groupedCommand.get();","lastModifiedDate":"2023-03-04"},{"lineNumber":211,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":213,"author":{"gitId":"wxxedu"},"content":"        throw new ParseException(\"No command group found for operation mode \"","lastModifiedDate":"2023-03-04"},{"lineNumber":214,"author":{"gitId":"wxxedu"},"content":"                                         + operationMode);","lastModifiedDate":"2023-03-04"},{"lineNumber":215,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":216,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"     * Helps to delegate the parsing to each command group. This is","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"wxxedu"},"content":"     * abstracted out so that we can have single level of abstraction in","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"wxxedu"},"content":"     * the {@code parse} method.","lastModifiedDate":"2023-03-05"},{"lineNumber":221,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":222,"author":{"gitId":"wxxedu"},"content":"     * @param operationMode the operation mode at which the command is","lastModifiedDate":"2023-03-05"},{"lineNumber":223,"author":{"gitId":"wxxedu"},"content":"     * @param tokens        the tokens to parse.","lastModifiedDate":"2023-03-05"},{"lineNumber":224,"author":{"gitId":"wxxedu"},"content":"     * @return the command that corresponds to the user input.","lastModifiedDate":"2023-03-05"},{"lineNumber":225,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if a parsing error exists. Note that if no","lastModifiedDate":"2023-03-05"},{"lineNumber":226,"author":{"gitId":"wxxedu"},"content":"     *                        group is found, this method will simply return an","lastModifiedDate":"2023-03-05"},{"lineNumber":227,"author":{"gitId":"wxxedu"},"content":"     *                        empty {@code Optional}.","lastModifiedDate":"2023-03-05"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":229,"author":{"gitId":"wxxedu"},"content":"    private Optional\u003cCommand\u003e parseGroup(","lastModifiedDate":"2023-03-25"},{"lineNumber":230,"author":{"gitId":"wxxedu"},"content":"            OperationMode operationMode,","lastModifiedDate":"2023-03-25"},{"lineNumber":231,"author":{"gitId":"wxxedu"},"content":"            Deque\u003cString\u003e tokens","lastModifiedDate":"2023-03-25"},{"lineNumber":232,"author":{"gitId":"BoAi01"},"content":"    ) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":233,"author":{"gitId":"wxxedu"},"content":"        for (CommandGroup commandGroup : this.groups) {","lastModifiedDate":"2023-03-04"},{"lineNumber":234,"author":{"gitId":"wxxedu"},"content":"            if (!commandGroup.getOperationMode().equals(operationMode)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":235,"author":{"gitId":"wxxedu"},"content":"                continue;","lastModifiedDate":"2023-03-04"},{"lineNumber":236,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":237,"author":{"gitId":"wxxedu"},"content":"            return Optional.of(commandGroup.parse(tokens));","lastModifiedDate":"2023-03-04"},{"lineNumber":238,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":239,"author":{"gitId":"wxxedu"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":240,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":241,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":242,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":243,"author":{"gitId":"wxxedu"},"content":"    protected List\u003cCommandFactory\u003c?\u003e\u003e getFactories() {","lastModifiedDate":"2023-03-04"},{"lineNumber":244,"author":{"gitId":"wxxedu"},"content":"        return this.factories;","lastModifiedDate":"2023-03-04"},{"lineNumber":245,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":246,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":37,"cetigerlily":3,"wxxedu":206}},{"path":"src/main/java/wingman/logic/core/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"wxxedu":2,"-":17}},{"path":"src/main/java/wingman/logic/core/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"wxxedu":2,"-":15}},{"path":"src/main/java/wingman/logic/crew/checkcrew/CheckCrewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.crew.checkcrew;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":" * The command that checks a crew\u0027s availability in the Wingman app.","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"public class CheckCrewCommand implements Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     * The UUID of the crew whose availability is to be checked.","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    private final String id;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     * Creates a command that, when executed, checks the availability of the crew with the given UUID.","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     * @param id the UUID of the crew to be checked.","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    public CheckCrewCommand(String id) {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"        boolean isAvailable;","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"        // checking if its a valid integer","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"        int crewId;","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"            crewId \u003d Command.parseIntegerToZeroBasedIndex(id);","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"                    id","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"        // checking if its a vaid index","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"        boolean isCrewIndexValid \u003d (crewId \u003c model.getCrewManager().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"        if (!isCrewIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"                    crewId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"        isAvailable \u003d model.checkCrewByIndex(crewId);","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"        Crew crew \u003d model.getCrewManager().getItem(crewId);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"        if (isAvailable) {","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"                    \"%s is available.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"cetigerlily"},"content":"                    crew.toString()","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"cetigerlily"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"                    \"%s is unavailable.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"cetigerlily"},"content":"                    crew.toString()","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"BoAi01":7,"cetigerlily":60,"wxxedu":6}},{"path":"src/main/java/wingman/logic/crew/checkcrew/CheckCrewCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.crew.checkcrew;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":" * The factory that\u0027s responsible for creating a {@code CheckCrewCommand}.","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"public class CheckCrewCommandFactory implements CommandFactory\u003cCheckCrewCommand\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"    public static final String COMMAND_WORD \u003d \"check\";","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    public static final String PREFIX_ID \u003d \"/id\";","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_CREW_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"            \"No crew has been entered. \"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /id followed by the crew ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"        return Optional.of(Set.of(PREFIX_ID));","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    public CheckCrewCommand createCommand(CommandParam param) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"        String index \u003d param.getNamedValuesOrThrow(PREFIX_ID);","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"        return new CheckCrewCommand(index);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"cetigerlily":32,"wxxedu":5}},{"path":"src/main/java/wingman/logic/crew/linkflight/LinkCrewToFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.crew.linkflight;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.FlightCrewType;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.exception.IndexOutOfBoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":" * The command that links a crew to a flight","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"public class LinkCrewToFlightCommand implements Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    private static final String FLIGHT_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"            \"Flight with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"    private static final String CREW_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"            \"Crew with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"            \"Linked %s to %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     * The flight to be linked to.","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    private final Flight flight;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"     * The crew to be linked.","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cFlightCrewType, Crew\u003e crews;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link command.","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"     * @param crews the id of the crews.","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"     * @param flight the id of the flight.","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"    public LinkCrewToFlightCommand(Flight flight, Map\u003cFlightCrewType, Crew\u003e crews) {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"        this.crews \u003d crews;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"        String result \u003d crews.entrySet()","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"                .stream()","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"                .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                        \"%s %s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"                        entry.getKey(),","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"                        entry.getValue().getName()))","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"        return String.format(DISPLAY_MESSAGE, result, flight.getCode());","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"            for (Map.Entry\u003cFlightCrewType, Crew\u003e entry : crews.entrySet()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"                flight.crewLink.putRevolve(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"                entry.getValue().setUnavailable();","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"        } catch (IndexOutOfBoundException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"            return new CommandResult(","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"                    String.format(\"Error: %s\", e.getMessage())","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"BoAi01":5,"jishnu28":50,"cetigerlily":11,"wxxedu":10}},{"path":"src/main/java/wingman/logic/crew/linkflight/LinkCrewToFlightCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.crew.linkflight;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.FlightCrewType;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.exception.IndexOutOfBoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":" * The factory that creates {@code LinkCrewCommand}.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"public class LinkCrewToFlightCommandFactory implements CommandFactory\u003cLinkCrewToFlightCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    private static final String COMMAND_WORD \u003d \"linkflight\";","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    private static final String FLIGHT_PREFIX \u003d \"/fl\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    private static final String CABIN_SERVICE_DIRECTOR_PREFIX \u003d \"/csd\";","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    private static final String SENIOR_FLIGHT_ATTENDANT_PREFIX \u003d \"/sfa\";","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"    private static final String FLIGHT_ATTENDANT_PREFIX \u003d \"/fa\";","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    private static final String TRAINEE_PREFIX \u003d \"/tr\";","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_FLIGHT_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"            \"No flight has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /fl followed by the flight ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"    private static final String NO_CREW_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"            \"No crew has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter at least 1 of the following:\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"                    + \"     /csd for the Cabin Service Director, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"                    + \"/sfa for the Senior Flight Attendants,\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"                    + \"     /fa for the Flight Attendants, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"                    + \"/tr for the Trainees.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"                    \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"                            + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cCrew\u003e\u003e crewManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link command factory with the model registered.","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"    public LinkCrewToFlightCommandFactory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link command factory with the given modelLazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"     * @param modelLazy the modelLazy used for the creation of the link command factory.","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"    public LinkCrewToFlightCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"        this(","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"                modelLazy.map(Model::getCrewManager),","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"                modelLazy.map(Model::getFlightManager)","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"        );","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link crew command factory with the given crew manager","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"     * @param crewManagerLazy   the lazy instance of the crew manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"     * @param flightManagerLazy the lazy instance of the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"    public LinkCrewToFlightCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"            Lazy\u003cReadOnlyItemManager\u003cCrew\u003e\u003e crewManagerLazy,","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"            Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"        this.crewManagerLazy \u003d crewManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"        this.flightManagerLazy \u003d flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link crew command factory with the given crew manager","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"     * and the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"jishnu28"},"content":"     * @param flightManager the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"cetigerlily"},"content":"     * @param crewManager   the crew manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"    public LinkCrewToFlightCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cFlight\u003e flightManager,","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cCrew\u003e crewManager","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"jishnu28"},"content":"        this(Lazy.of(crewManager), Lazy.of(flightManager));","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"jishnu28"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"jishnu28"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"jishnu28"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"jishnu28"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"cetigerlily"},"content":"                FLIGHT_PREFIX,","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"                CABIN_SERVICE_DIRECTOR_PREFIX,","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"                SENIOR_FLIGHT_ATTENDANT_PREFIX,","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"                FLIGHT_ATTENDANT_PREFIX,","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"cetigerlily"},"content":"                TRAINEE_PREFIX","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"jishnu28"},"content":"        ));","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"cetigerlily"},"content":"    private boolean addCrew(Optional\u003cString\u003e crewIdOptional, FlightCrewType type, Map\u003cFlightCrewType, Crew\u003e target)","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"cetigerlily"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"jishnu28"},"content":"        if (crewIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"        int crewId;","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"            crewId \u003d Command.parseIntegerToZeroBasedIndex(crewIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"                    crewIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"        boolean isCrewIndexValid \u003d (crewId \u003c crewManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"        if (!isCrewIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"cetigerlily"},"content":"                    crewId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cCrew\u003e crewOptional \u003d crewManagerLazy.get().getItemOptional(crewId);","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"jishnu28"},"content":"        if (crewOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"jishnu28"},"content":"        target.put(type, crewOptional.get());","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"jishnu28"},"content":"        return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"cetigerlily"},"content":"    private Flight getFlightOrThrow(Optional\u003cString\u003e flightIdOptional) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"jishnu28"},"content":"        if (flightIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"        int flightId;","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"            flightId \u003d Command.parseIntegerToZeroBasedIndex(flightIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(INVALID_INDEX_VALUE_MESSAGE, flightIdOptional.get()));","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"        boolean isFlightIndexValid \u003d (flightId \u003c flightManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"        if (!isFlightIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"                    flightId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cFlight\u003e flightOptional \u003d flightManagerLazy.get().getItemOptional(flightId);","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"jishnu28"},"content":"        if (flightOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"jishnu28"},"content":"        return flightOptional.get();","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":175,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"    public LinkCrewToFlightCommand createCommand(CommandParam param) throws ParseException, IndexOutOfBoundException {","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e cabinServiceDirectorIdOptional \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":178,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(CABIN_SERVICE_DIRECTOR_PREFIX);","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e seniorFlightAttendantIdOptional \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(SENIOR_FLIGHT_ATTENDANT_PREFIX);","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e flightAttendantIdOptional \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(FLIGHT_ATTENDANT_PREFIX);","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e traineeIdOptional \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(TRAINEE_PREFIX);","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"cetigerlily"},"content":"        Flight flight;","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"cetigerlily"},"content":"            flight \u003d getFlightOrThrow(param.getNamedValues(FLIGHT_PREFIX));","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":193,"author":{"gitId":"cetigerlily"},"content":"        Map\u003cFlightCrewType, Crew\u003e crews \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"cetigerlily"},"content":"        boolean hasFoundCrew;","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"cetigerlily"},"content":"            hasFoundCrew \u003d addCrew(","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"jishnu28"},"content":"                    cabinServiceDirectorIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"jishnu28"},"content":"                    FlightCrewType.CABIN_SERVICE_DIRECTOR,","lastModifiedDate":"2023-03-19"},{"lineNumber":199,"author":{"gitId":"jishnu28"},"content":"                    crews","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"jishnu28"},"content":"            ) || addCrew(","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"jishnu28"},"content":"                    seniorFlightAttendantIdOptional,","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"jishnu28"},"content":"                    FlightCrewType.SENIOR_FLIGHT_ATTENDANT,","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"jishnu28"},"content":"                    crews","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"jishnu28"},"content":"            ) || addCrew(","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"jishnu28"},"content":"                    flightAttendantIdOptional,","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"jishnu28"},"content":"                    FlightCrewType.FLIGHT_ATTENDANT,","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"jishnu28"},"content":"                    crews","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"jishnu28"},"content":"            ) || addCrew(","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"jishnu28"},"content":"                    traineeIdOptional,","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"jishnu28"},"content":"                    FlightCrewType.TRAINEE,","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"jishnu28"},"content":"                    crews","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"jishnu28"},"content":"            );","lastModifiedDate":"2023-03-19"},{"lineNumber":213,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":214,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":217,"author":{"gitId":"jishnu28"},"content":"        if (!hasFoundCrew) {","lastModifiedDate":"2023-03-19"},{"lineNumber":218,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_CREW_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":219,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":220,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":221,"author":{"gitId":"cetigerlily"},"content":"        return new LinkCrewToFlightCommand(flight, crews);","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":223,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"BoAi01":7,"jishnu28":126,"cetigerlily":76,"wxxedu":14}},{"path":"src/main/java/wingman/logic/crew/linklocation/LinkCrewToLocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.crew.linklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.CrewLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":" * The command that links a crew to a location","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"public class LinkCrewToLocationCommand implements Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"            \"Linked %s to %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     * The id of the location","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    private final Location location;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     * The id of the crews","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cCrewLocationType, Crew\u003e crews;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command.","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     * @param crews the id of the crews.","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     * @param location the id of the location.","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"    public LinkCrewToLocationCommand(Location location, Map\u003cCrewLocationType, Crew\u003e crews) {","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"        this.crews \u003d crews;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"        String result \u003d crews.entrySet()","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"                .stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"                .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"                        \"%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"                        entry.getValue().toString()))","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"        return String.format(DISPLAY_MESSAGE, result, location.getName());","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"            for (Map.Entry\u003cCrewLocationType, Crew\u003e entry : crews.entrySet()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"                location.getCrewLink().putRevolve(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BoAi01":46,"cetigerlily":10,"wxxedu":9}},{"path":"src/main/java/wingman/logic/crew/linklocation/LinkCrewToLocationCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.crew.linklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.CrewLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":" * Links a crew to location.","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":" * The location could be a place where they reside.","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":" * To link a crew to a flight, the crew should reside in","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":" * the same location as the flight\u0027s starting location.","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"public class LinkCrewToLocationCommandFactory implements CommandFactory\u003cLinkCrewToLocationCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    private static final String COMMAND_WORD \u003d \"linklocation\";","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private static final String LOCATION_PREFIX \u003d \"/lo\";","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    private static final String CREW_PREFIX \u003d \"/cr\";","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    private static final String NO_LOCATION_MESSAGE \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"            \"No location has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /lo followed by the location ID.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_CREW_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"            \"No crew has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /cr followed by the crew ID.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cCrew\u003e\u003e crewManagerLazy;","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy;","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command factory with the model registered.","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"    public LinkCrewToLocationCommandFactory() {","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command factory with the given modelLazy.","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"     * @param modelLazy the modelLazy used for the creation of the link command factory.","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"    public LinkCrewToLocationCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"        this(","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"                modelLazy.map(Model::getCrewManager),","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"                modelLazy.map(Model::getLocationManager)","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link crew command factory with the given crew manager","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"     * @param crewManagerLazy     the lazy instance of the crew manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"     * @param locationManagerLazy the lazy instance of the location manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"    public LinkCrewToLocationCommandFactory(","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"            Lazy\u003cReadOnlyItemManager\u003cCrew\u003e\u003e crewManagerLazy,","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"            Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"        this.crewManagerLazy \u003d crewManagerLazy;","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"        this.locationManagerLazy \u003d locationManagerLazy;","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link crew command factory with the given crew manager","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"     * and the location manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"     * @param crewManager     the crew manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"     * @param locationManager the flight manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"    public LinkCrewToLocationCommandFactory(","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cCrew\u003e crewManager,","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cLocation\u003e locationManager","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"        this(","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"                Lazy.of(crewManager),","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"                Lazy.of(locationManager)","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"                LOCATION_PREFIX,","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"                CREW_PREFIX","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"        ));","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"cetigerlily"},"content":"    private boolean addCrew(Optional\u003cString\u003e crewIdOptional, CrewLocationType type, Map\u003cCrewLocationType, Crew\u003e target)","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"cetigerlily"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"        if (crewIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"cetigerlily"},"content":"        int crewId;","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"cetigerlily"},"content":"            crewId \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"                    Command.parseIntegerToZeroBasedIndex(crewIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"                    crewIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"        boolean isCrewIndexValid \u003d (crewId \u003c crewManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"        if (!isCrewIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"                    crewId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cCrew\u003e crewOptional \u003d crewManagerLazy.get().getItemOptional(crewId);","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"BoAi01"},"content":"        if (crewOptional.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"        target.put(type, crewOptional.get());","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"        return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"cetigerlily"},"content":"    private Location getLocationOrThrow(Optional\u003cString\u003e locationIdOptional) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"        if (locationIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_LOCATION_MESSAGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"cetigerlily"},"content":"        int locationId;","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"cetigerlily"},"content":"            locationId \u003d Command.parseIntegerToZeroBasedIndex(locationIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(INVALID_INDEX_VALUE_MESSAGE, locationIdOptional.get()));","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"        boolean isLocationIndexValid \u003d (locationId \u003c locationManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"        if (!isLocationIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"                    locationId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cLocation\u003e locationOptional \u003d locationManagerLazy.get().getItemOptional(locationId);","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"BoAi01"},"content":"        if (locationOptional.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_LOCATION_MESSAGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"BoAi01"},"content":"        return locationOptional.get();","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"cetigerlily"},"content":"    public LinkCrewToLocationCommand createCommand(CommandParam param) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"BoAi01"},"content":"        Optional\u003cString\u003e locationIdOptional \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"                param.getNamedValues(LOCATION_PREFIX);","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"BoAi01"},"content":"        Optional\u003cString\u003e crewIdOptional \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"                param.getNamedValues(CREW_PREFIX);","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"cetigerlily"},"content":"        Location location \u003d getLocationOrThrow(locationIdOptional);","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"        Map\u003cCrewLocationType, Crew\u003e crews \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"cetigerlily"},"content":"        boolean hasFoundCrew;","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"cetigerlily"},"content":"            hasFoundCrew \u003d addCrew(","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"BoAi01"},"content":"                    crewIdOptional,","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"BoAi01"},"content":"                    CrewLocationType.LOCATION_USING,","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"BoAi01"},"content":"                    crews","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"BoAi01"},"content":"        if (!hasFoundCrew) {","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_CREW_MESSAGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"cetigerlily"},"content":"        return new LinkCrewToLocationCommand(location, crews);","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BoAi01":125,"cetigerlily":60,"wxxedu":13}},{"path":"src/main/java/wingman/logic/crew/unlinkflight/UnlinkCrewToFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.crew.unlinkflight;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.FlightCrewType;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":" * The command that unlinks a crew from a flight","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"public class UnlinkCrewToFlightCommand implements Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    private static final String FLIGHT_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"            \"Flight with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    private static final String CREW_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"            \"Crew with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"            \"Unlinked %s from %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     * The flight to be unlinked from.","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private final Flight flight;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"     * The id of the crews","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cFlightCrewType, Crew\u003e crews;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink command.","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     * @param crews the id of the crews.","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"     * @param flight the id of the flight.","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"    public UnlinkCrewToFlightCommand(Flight flight, Map\u003cFlightCrewType, Crew\u003e crews) {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"        this.crews \u003d crews;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"        String result \u003d crews.entrySet()","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"                .stream()","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"                .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"                        \"%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                        entry.getValue().toString()))","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"        return String.format(DISPLAY_MESSAGE, result, flight.getCode());","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"            for (Map.Entry\u003cFlightCrewType, Crew\u003e entry : crews.entrySet()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"                flight.crewLink.delete(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"                entry.getValue().setAvailable();","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"BoAi01":1,"jishnu28":48,"cetigerlily":13,"wxxedu":9}},{"path":"src/main/java/wingman/logic/crew/unlinkflight/UnlinkCrewToFlightCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.crew.unlinkflight;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.FlightCrewType;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.exception.IndexOutOfBoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":" * The factory that creates {@code UnlinkCrewCommand}.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"public class UnlinkCrewToFlightCommandFactory implements CommandFactory\u003cUnlinkCrewToFlightCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    private static final String COMMAND_WORD \u003d \"unlinkflight\";","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    private static final String FLIGHT_PREFIX \u003d \"/fl\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    private static final String CABIN_SERVICE_DIRECTOR_PREFIX \u003d \"/csd\";","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    private static final String SENIOR_FLIGHT_ATTENDANT_PREFIX \u003d \"/sfa\";","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"    private static final String FLIGHT_ATTENDANT_PREFIX \u003d \"/fa\";","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    private static final String TRAINEE_PREFIX \u003d \"/tr\";","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"    private static final String NO_FLIGHT_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"            \"No flight has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /fl followed by the flight ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_CREW_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"            \"No crew has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter at least 1 of the following:\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"                    + \"     /csd for the Cabin Service Director, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"                    + \"/sfa for the Senior Flight Attendants, \\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"                    + \"     /fa for the Flight Attendants, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"                    + \"/tr for the Trainees.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cCrew\u003e\u003e crewManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink command factory with the model registered.","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"    public UnlinkCrewToFlightCommandFactory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink command factory with the given modelLazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"     * @param modelLazy the modelLazy used for the creation of the unlink command factory.","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"    public UnlinkCrewToFlightCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"        this(","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"                modelLazy.map(Model::getCrewManager),","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"                modelLazy.map(Model::getFlightManager)","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"        );","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink crew command factory with the given crew manager","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"     * @param crewManagerLazy   the lazy instance of the crew manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"     * @param flightManagerLazy the lazy instance of the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"    public UnlinkCrewToFlightCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"            Lazy\u003cReadOnlyItemManager\u003cCrew\u003e\u003e crewManagerLazy,","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"            Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"        this.crewManagerLazy \u003d crewManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"        this.flightManagerLazy \u003d flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink crew command factory with the given crew manager","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"     * and the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"jishnu28"},"content":"     * @param crewManager   the crew manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"jishnu28"},"content":"     * @param flightManager the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"    public UnlinkCrewToFlightCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"            ReadOnlyItemManager\u003cCrew\u003e crewManager,","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"jishnu28"},"content":"            ReadOnlyItemManager\u003cFlight\u003e flightManager","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"jishnu28"},"content":"        this(Lazy.of(crewManager), Lazy.of(flightManager));","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"jishnu28"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"jishnu28"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"jishnu28"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"jishnu28"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"jishnu28"},"content":"                CABIN_SERVICE_DIRECTOR_PREFIX,","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"                SENIOR_FLIGHT_ATTENDANT_PREFIX,","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"                FLIGHT_ATTENDANT_PREFIX,","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"                TRAINEE_PREFIX,","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"                FLIGHT_PREFIX","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"jishnu28"},"content":"        ));","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"jishnu28"},"content":"    private boolean addCrew(","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"jishnu28"},"content":"            Optional\u003cString\u003e crewIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"jishnu28"},"content":"            FlightCrewType type,","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"jishnu28"},"content":"            Map\u003cFlightCrewType, Crew\u003e target","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"    ) throws IndexOutOfBoundException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"jishnu28"},"content":"        if (crewIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"        int crewId;","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"            crewId \u003d Command.parseIntegerToZeroBasedIndex(crewIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"                    crewIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"        boolean isCrewIndexValid \u003d (crewId \u003c crewManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"cetigerlily"},"content":"        if (!isCrewIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"cetigerlily"},"content":"                    crewId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cCrew\u003e crewOptional \u003d crewManagerLazy.get().getItemOptional(crewId);","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"jishnu28"},"content":"        if (crewOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"jishnu28"},"content":"        target.put(type, crewOptional.get());","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"jishnu28"},"content":"        return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"jishnu28"},"content":"    private Flight getFlightOrThrow(","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"jishnu28"},"content":"            Optional\u003cString\u003e flightIdOptional","lastModifiedDate":"2023-03-19"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"    ) throws ParseException, IndexOutOfBoundException, NumberFormatException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"jishnu28"},"content":"        if (flightIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":155,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":156,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"        int flightId;","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"            flightId \u003d Command.parseIntegerToZeroBasedIndex(flightIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"                    flightIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"cetigerlily"},"content":"        boolean isFlightIndexValid \u003d (flightId \u003c flightManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"cetigerlily"},"content":"        if (!isFlightIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"cetigerlily"},"content":"                    flightId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cFlight\u003e flightOptional \u003d flightManagerLazy.get().getItemOptional(flightId);","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"jishnu28"},"content":"        if (flightOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":177,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":178,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"jishnu28"},"content":"        return flightOptional.get();","lastModifiedDate":"2023-03-19"},{"lineNumber":181,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":182,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":183,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"    public UnlinkCrewToFlightCommand createCommand(CommandParam param)","lastModifiedDate":"2023-03-25"},{"lineNumber":185,"author":{"gitId":"BoAi01"},"content":"            throws ParseException, IndexOutOfBoundException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e cabinServiceDirectorIdOptional \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":187,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(CABIN_SERVICE_DIRECTOR_PREFIX);","lastModifiedDate":"2023-03-19"},{"lineNumber":188,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e seniorFlightAttendantIdOptional \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":189,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(SENIOR_FLIGHT_ATTENDANT_PREFIX);","lastModifiedDate":"2023-03-19"},{"lineNumber":190,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e flightAttendantIdOptional \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":191,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(FLIGHT_ATTENDANT_PREFIX);","lastModifiedDate":"2023-03-19"},{"lineNumber":192,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e traineeIdOptional \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":193,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(TRAINEE_PREFIX);","lastModifiedDate":"2023-03-19"},{"lineNumber":194,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"cetigerlily"},"content":"        Flight flight \u003d getFlightOrThrow(param.getNamedValues(FLIGHT_PREFIX));","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"jishnu28"},"content":"        Map\u003cFlightCrewType, Crew\u003e crews \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"cetigerlily"},"content":"        boolean hasFoundCrew;","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"cetigerlily"},"content":"            hasFoundCrew \u003d addCrew(","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"jishnu28"},"content":"                    cabinServiceDirectorIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":202,"author":{"gitId":"jishnu28"},"content":"                    FlightCrewType.CABIN_SERVICE_DIRECTOR,","lastModifiedDate":"2023-03-19"},{"lineNumber":203,"author":{"gitId":"jishnu28"},"content":"                    crews","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"jishnu28"},"content":"            ) || addCrew(","lastModifiedDate":"2023-03-19"},{"lineNumber":205,"author":{"gitId":"jishnu28"},"content":"                    seniorFlightAttendantIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":206,"author":{"gitId":"jishnu28"},"content":"                    FlightCrewType.SENIOR_FLIGHT_ATTENDANT,","lastModifiedDate":"2023-03-19"},{"lineNumber":207,"author":{"gitId":"jishnu28"},"content":"                    crews","lastModifiedDate":"2023-03-19"},{"lineNumber":208,"author":{"gitId":"jishnu28"},"content":"            ) || addCrew(","lastModifiedDate":"2023-03-19"},{"lineNumber":209,"author":{"gitId":"jishnu28"},"content":"                    flightAttendantIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":210,"author":{"gitId":"jishnu28"},"content":"                    FlightCrewType.FLIGHT_ATTENDANT,","lastModifiedDate":"2023-03-19"},{"lineNumber":211,"author":{"gitId":"jishnu28"},"content":"                    crews","lastModifiedDate":"2023-03-19"},{"lineNumber":212,"author":{"gitId":"jishnu28"},"content":"            ) || addCrew(","lastModifiedDate":"2023-03-19"},{"lineNumber":213,"author":{"gitId":"jishnu28"},"content":"                    traineeIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":214,"author":{"gitId":"jishnu28"},"content":"                    FlightCrewType.TRAINEE,","lastModifiedDate":"2023-03-19"},{"lineNumber":215,"author":{"gitId":"jishnu28"},"content":"                    crews","lastModifiedDate":"2023-03-19"},{"lineNumber":216,"author":{"gitId":"jishnu28"},"content":"            );","lastModifiedDate":"2023-03-19"},{"lineNumber":217,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":221,"author":{"gitId":"jishnu28"},"content":"        if (!hasFoundCrew) {","lastModifiedDate":"2023-03-19"},{"lineNumber":222,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_CREW_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":223,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":224,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":225,"author":{"gitId":"cetigerlily"},"content":"        return new UnlinkCrewToFlightCommand(flight, crews);","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":227,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"BoAi01":8,"jishnu28":138,"cetigerlily":66,"wxxedu":15}},{"path":"src/main/java/wingman/logic/crew/unlinklocation/UnlinkCrewToLocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.crew.unlinklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.CrewLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":" * The command class that unlinks crews to","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":" * locations, where they reside.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"public class UnlinkCrewToLocationCommand implements Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    private static final String LOCATION_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"            \"Location with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"    private static final String CREW_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"            \"Crew with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"            \"Unlinked %s from %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     * The location to be linked to.","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    private final Location location;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"     * The id of the crews","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cCrewLocationType, Crew\u003e crews;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command.","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"     * @param crews the id of the crews.","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"     * @param location the id of the location.","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"    public UnlinkCrewToLocationCommand(Location location, Map\u003cCrewLocationType, Crew\u003e crews) {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"        this.crews \u003d crews;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"        String result \u003d crews.entrySet()","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"                .stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"                .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                        \"%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"                        entry.getValue().toString()))","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        return String.format(DISPLAY_MESSAGE, result, location.getName());","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"            for (Map.Entry\u003cCrewLocationType, Crew\u003e entry : crews.entrySet()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"                location.getCrewLink().delete(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BoAi01":49,"cetigerlily":12,"wxxedu":9}},{"path":"src/main/java/wingman/logic/crew/unlinklocation/UnlinkCrewToLocationCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.crew.unlinklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.CrewLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":" * The command factory that unlinks crews to locations.","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":" * Command factory is a class that can create an executable object, i.e.,","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":" * command class. The actual execution will be done by this object.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"public class UnlinkCrewToLocationCommandFactory implements CommandFactory\u003cUnlinkCrewToLocationCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    private static final String COMMAND_WORD \u003d \"unlinklocation\";","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    private static final String LOCATION_PREFIX \u003d \"/lo\";","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private static final String CREW_PREFIX \u003d \"/cr\";","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    private static final String NO_LOCATION_MESSAGE \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"            \"No location has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"                    + \"Please enter /lo followed by the location ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_CREW_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"            \"No crew has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"                    + \"Please enter /cr followed by the crew ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cCrew\u003e\u003e crewManagerLazy;","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy;","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command factory with the model registered.","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    public UnlinkCrewToLocationCommandFactory() {","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"     * Creates a new unlink command factory with the given modelLazy.","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"     * @param modelLazy the modelLazy used for the creation of the link command factory.","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    public UnlinkCrewToLocationCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"        this(","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"                modelLazy.map(Model::getCrewManager),","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"                modelLazy.map(Model::getLocationManager)","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link crew command factory with the given crew manager","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"     * @param crewManagerLazy     the lazy instance of the crew manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"     * @param locationManagerLazy the lazy instance of the location manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"    public UnlinkCrewToLocationCommandFactory(","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"            Lazy\u003cReadOnlyItemManager\u003cCrew\u003e\u003e crewManagerLazy,","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"            Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"        this.crewManagerLazy \u003d crewManagerLazy;","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"        this.locationManagerLazy \u003d locationManagerLazy;","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link crew command factory with the given crew manager","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"     * and the location manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"     * @param crewManager     the crew manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"     * @param locationManager the flight manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"    public UnlinkCrewToLocationCommandFactory(","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cCrew\u003e crewManager,","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cLocation\u003e locationManager","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"        this(","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"                Lazy.of(crewManager),","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"                Lazy.of(locationManager)","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"                LOCATION_PREFIX,","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"                CREW_PREFIX","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"        ));","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"    private boolean addCrew(","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"            Optional\u003cString\u003e crewIdOptional,","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"            CrewLocationType type,","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"            Map\u003cCrewLocationType, Crew\u003e target","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"    ) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"        if (crewIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"cetigerlily"},"content":"        int crewId;","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"cetigerlily"},"content":"            crewId \u003d Command.parseIntegerToZeroBasedIndex(crewIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"                    crewIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"        boolean isCrewIndexValid \u003d (crewId \u003c crewManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"        if (!isCrewIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"                    crewId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cCrew\u003e crewOptional \u003d crewManagerLazy.get().getItemOptional(crewId);","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"        if (crewOptional.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"        target.put(type, crewOptional.get());","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"        return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"    private Location getLocationOrThrow(","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"            Optional\u003cString\u003e locationIdOptional","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"    ) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"        if (locationIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_LOCATION_MESSAGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"cetigerlily"},"content":"        int locationId;","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"            locationId \u003d Command.parseIntegerToZeroBasedIndex(locationIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"                    locationIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"        boolean isLocationIndexValid \u003d (locationId \u003c locationManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"        if (!isLocationIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"cetigerlily"},"content":"                    locationId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cLocation\u003e locationOptional \u003d locationManagerLazy.get().getItemOptional(locationId);","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"BoAi01"},"content":"        if (locationOptional.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_LOCATION_MESSAGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"        return locationOptional.get();","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"BoAi01"},"content":"    public UnlinkCrewToLocationCommand createCommand(CommandParam param)","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"            throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"        Optional\u003cString\u003e locationIdOptional \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"                param.getNamedValues(LOCATION_PREFIX);","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"BoAi01"},"content":"        Optional\u003cString\u003e crewIdOptional \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"BoAi01"},"content":"                param.getNamedValues(CREW_PREFIX);","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"cetigerlily"},"content":"        Location location \u003d getLocationOrThrow(locationIdOptional);","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"BoAi01"},"content":"        Map\u003cCrewLocationType, Crew\u003e crews \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"cetigerlily"},"content":"        boolean hasFoundCrew;","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"cetigerlily"},"content":"            hasFoundCrew \u003d addCrew(","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"BoAi01"},"content":"                    crewIdOptional,","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"BoAi01"},"content":"                    CrewLocationType.LOCATION_USING,","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"BoAi01"},"content":"                    crews","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"BoAi01"},"content":"        if (!hasFoundCrew) {","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_CREW_MESSAGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"cetigerlily"},"content":"        return new UnlinkCrewToLocationCommand(location, crews);","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BoAi01":135,"cetigerlily":57,"wxxedu":13}},{"path":"src/main/java/wingman/logic/flight/linklocation/LinkFlightToLocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.flight.linklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.FlightLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":" * The command that links locations to a flight.","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"public class LinkFlightToLocationCommand implements Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    private static final String FLIGHT_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"            \"Flight with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    private static final String LOCATION_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"            \"Location with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"            \"Linked %s to %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     * The flight to be linked.","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private final Flight flight;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"     * The locations to be linked to.","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cFlightLocationType, Location\u003e locations;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link command.","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     * @param locations the id of the locations.","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"     * @param flight the id of the flight.","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"    public LinkFlightToLocationCommand(Flight flight, Map\u003cFlightLocationType, Location\u003e locations) {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"        this.locations \u003d locations;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"        String result \u003d locations.entrySet()","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"                .stream()","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"                .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"                        \"%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                        entry.getValue().toString()))","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"        return String.format(DISPLAY_MESSAGE, result, flight.getCode());","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"            for (Map.Entry\u003cFlightLocationType, Location\u003e entry : locations.entrySet()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"                flight.locationLink.putRevolve(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"BoAi01":24,"jishnu28":25,"cetigerlily":11,"wxxedu":9}},{"path":"src/main/java/wingman/logic/flight/linklocation/LinkFlightToLocationCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.flight.linklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.FlightLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":" * The factory that creates {@code LinkLocationCommand}.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"public class LinkFlightToLocationCommandFactory implements CommandFactory\u003cLinkFlightToLocationCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    public static final String COMMAND_WORD \u003d \"linklocation\";","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    public static final String FLIGHT_PREFIX \u003d \"/fl\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    public static final String LOCATION_DEPARTURE_PREFIX \u003d \"/from\";","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    public static final String LOCATION_ARRIVAL_PREFIX \u003d \"/to\";","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_FLIGHT_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"            \"No flight has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /fl followed by the flight ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"    private static final String NO_LOCATION_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"            \"No location has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /from followed by the departure location ID \"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"                    + \" and /to followed by the arrival location ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link command factory with the model registered.","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    public LinkFlightToLocationCommandFactory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link command factory with the given modelLazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"     * @param modelLazy the modelLazy used for the creation of the link command factory.","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"    public LinkFlightToLocationCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"        this(","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"                modelLazy.map(Model::getLocationManager),","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"                modelLazy.map(Model::getFlightManager)","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"        );","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link location command factory with the given location manager","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"     * @param locationManagerLazy the lazy instance of the location manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"     * @param flightManagerLazy   the lazy instance of the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"    public LinkFlightToLocationCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"            Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy,","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"            Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"        this.locationManagerLazy \u003d locationManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"        this.flightManagerLazy \u003d flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link location command factory with the given location manager","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"     * and the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"     * @param locationManager the location manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"jishnu28"},"content":"     * @param flightManager   the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"    public LinkFlightToLocationCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"jishnu28"},"content":"            ReadOnlyItemManager\u003cLocation\u003e locationManager,","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"jishnu28"},"content":"            ReadOnlyItemManager\u003cFlight\u003e flightManager","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"jishnu28"},"content":"        this(Lazy.of(locationManager), Lazy.of(flightManager));","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jishnu28"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"jishnu28"},"content":"                FLIGHT_PREFIX,","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"jishnu28"},"content":"                LOCATION_DEPARTURE_PREFIX,","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"jishnu28"},"content":"                LOCATION_ARRIVAL_PREFIX","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"jishnu28"},"content":"        ));","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"    private boolean addLocation(","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"            Optional\u003cString\u003e locationIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"            FlightLocationType type,","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"jishnu28"},"content":"            Map\u003cFlightLocationType, Location\u003e target","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"    ) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"jishnu28"},"content":"        if (locationIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"cetigerlily"},"content":"        int locationId;","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"cetigerlily"},"content":"            locationId \u003d Command.parseIntegerToZeroBasedIndex(locationIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"                    locationIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"        boolean isLocationIndexValid \u003d (locationId \u003c locationManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"        if (!isLocationIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"                    locationId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cLocation\u003e locationOptional \u003d locationManagerLazy.get().getItemOptional(locationId);","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"jishnu28"},"content":"        if (locationOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"jishnu28"},"content":"        target.put(type, locationOptional.get());","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"jishnu28"},"content":"        return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"cetigerlily"},"content":"    private Flight getFlightOrThrow(Optional\u003cString\u003e flightIdOptional) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"jishnu28"},"content":"        if (flightIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"cetigerlily"},"content":"        int flightId;","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"cetigerlily"},"content":"            flightId \u003d Command.parseIntegerToZeroBasedIndex(flightIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"                    flightIdOptional.get()));","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"        boolean isFlightIndexValid \u003d (flightId \u003c flightManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"        if (!isFlightIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"                    flightId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cFlight\u003e flightOptional \u003d flightManagerLazy.get().getItemOptional(flightId);","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"jishnu28"},"content":"        if (flightOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":168,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"jishnu28"},"content":"        return flightOptional.get();","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"BoAi01"},"content":"    private boolean isIndexOutOfBound(int index) {","lastModifiedDate":"2023-04-01"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"        return index \u003e\u003d locationManagerLazy.get().size();","lastModifiedDate":"2023-04-01"},{"lineNumber":175,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":177,"author":{"gitId":"BoAi01"},"content":"    private void checkValidLocationIds(int departureId, int arrivalId) throws CommandException {","lastModifiedDate":"2023-04-01"},{"lineNumber":178,"author":{"gitId":"BoAi01"},"content":"        if (isIndexOutOfBound(departureId)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"            throw new CommandException(","lastModifiedDate":"2023-04-01"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"                    String.format(\"Departure location is out of bound.\")","lastModifiedDate":"2023-04-01"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-04-01"},{"lineNumber":182,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":183,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":184,"author":{"gitId":"BoAi01"},"content":"        if (isIndexOutOfBound(arrivalId)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":185,"author":{"gitId":"BoAi01"},"content":"            throw new CommandException(","lastModifiedDate":"2023-04-01"},{"lineNumber":186,"author":{"gitId":"BoAi01"},"content":"                    String.format(\"Arrival location is out of bound.\")","lastModifiedDate":"2023-04-01"},{"lineNumber":187,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-04-01"},{"lineNumber":188,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":189,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":190,"author":{"gitId":"BoAi01"},"content":"        if (departureId \u003d\u003d arrivalId) {","lastModifiedDate":"2023-04-01"},{"lineNumber":191,"author":{"gitId":"BoAi01"},"content":"            throw new CommandException(","lastModifiedDate":"2023-04-01"},{"lineNumber":192,"author":{"gitId":"BoAi01"},"content":"                    \"Departure location and arrival location cannot be the same.\"","lastModifiedDate":"2023-04-01"},{"lineNumber":193,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-04-01"},{"lineNumber":194,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":195,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":196,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":197,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"BoAi01"},"content":"    public LinkFlightToLocationCommand createCommand(CommandParam param) throws ParseException, CommandException {","lastModifiedDate":"2023-04-01"},{"lineNumber":199,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e locationDepartureIdOptional \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(LOCATION_DEPARTURE_PREFIX);","lastModifiedDate":"2023-03-19"},{"lineNumber":201,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":202,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e locationArrivalIdOptional \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":203,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(LOCATION_ARRIVAL_PREFIX);","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"cetigerlily"},"content":"        Flight flight;","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"cetigerlily"},"content":"            flight \u003d getFlightOrThrow(param.getNamedValues(FLIGHT_PREFIX));","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"jishnu28"},"content":"        Map\u003cFlightLocationType, Location\u003e locations \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":213,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":214,"author":{"gitId":"BoAi01"},"content":"        int departureId;","lastModifiedDate":"2023-04-01"},{"lineNumber":215,"author":{"gitId":"BoAi01"},"content":"        int arrivalId;","lastModifiedDate":"2023-04-01"},{"lineNumber":216,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"BoAi01"},"content":"            departureId \u003d Command.parseIntegerToZeroBasedIndex(locationDepartureIdOptional.get());","lastModifiedDate":"2023-04-01"},{"lineNumber":218,"author":{"gitId":"BoAi01"},"content":"            arrivalId \u003d Command.parseIntegerToZeroBasedIndex(locationArrivalIdOptional.get());","lastModifiedDate":"2023-04-01"},{"lineNumber":219,"author":{"gitId":"BoAi01"},"content":"            checkValidLocationIds(departureId, arrivalId);","lastModifiedDate":"2023-04-01"},{"lineNumber":220,"author":{"gitId":"BoAi01"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":221,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_LOCATION_MESSAGE);","lastModifiedDate":"2023-04-01"},{"lineNumber":222,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":223,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":224,"author":{"gitId":"BoAi01"},"content":"        addLocation(","lastModifiedDate":"2023-04-01"},{"lineNumber":225,"author":{"gitId":"jishnu28"},"content":"                locationDepartureIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":226,"author":{"gitId":"jishnu28"},"content":"                FlightLocationType.LOCATION_DEPARTURE,","lastModifiedDate":"2023-03-19"},{"lineNumber":227,"author":{"gitId":"jishnu28"},"content":"                locations","lastModifiedDate":"2023-03-19"},{"lineNumber":228,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-04-01"},{"lineNumber":229,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":230,"author":{"gitId":"BoAi01"},"content":"        addLocation(","lastModifiedDate":"2023-04-01"},{"lineNumber":231,"author":{"gitId":"jishnu28"},"content":"                locationArrivalIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":232,"author":{"gitId":"jishnu28"},"content":"                FlightLocationType.LOCATION_ARRIVAL,","lastModifiedDate":"2023-03-19"},{"lineNumber":233,"author":{"gitId":"jishnu28"},"content":"                locations","lastModifiedDate":"2023-03-19"},{"lineNumber":234,"author":{"gitId":"jishnu28"},"content":"        );","lastModifiedDate":"2023-03-19"},{"lineNumber":235,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":236,"author":{"gitId":"cetigerlily"},"content":"        return new LinkFlightToLocationCommand(flight, locations);","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"BoAi01":66,"jishnu28":96,"cetigerlily":63,"wxxedu":13}},{"path":"src/main/java/wingman/logic/flight/unlinklocation/UnlinkFlightToLocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.flight.unlinklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.FlightLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":" * The command that unlinks locations from flights.","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"public class UnlinkFlightToLocationCommand implements Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    private static final String FLIGHT_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"            \"Flight with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    private static final String LOCATION_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"            \"Location with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"            \"Unlinked %s from %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     * The flight to be unlinked.","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private final Flight flight;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"     * The locations to be unlinked from.","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cFlightLocationType, Location\u003e locations;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink command.","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     * @param locations the id of the locations.","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"     * @param flight the id of the flight.","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"    public UnlinkFlightToLocationCommand(Map\u003cFlightLocationType, Location\u003e locations, Flight flight) {","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"        this.locations \u003d locations;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"        String result \u003d locations.entrySet()","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"                .stream()","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"                .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"                        \"%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                        entry.getValue().toString()))","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"        return String.format(DISPLAY_MESSAGE, result, flight.getCode());","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"            for (Map.Entry\u003cFlightLocationType, Location\u003e entry : locations.entrySet()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"                flight.locationLink.delete(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"BoAi01":18,"jishnu28":33,"cetigerlily":9,"wxxedu":9}},{"path":"src/main/java/wingman/logic/flight/unlinklocation/UnlinkFlightToLocationCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.flight.unlinklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.exception.IndexOutOfBoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.FlightLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":" * The factory that creates {@code UnlinkLocationCommand}.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"public class UnlinkFlightToLocationCommandFactory implements CommandFactory\u003cUnlinkFlightToLocationCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    public static final String COMMAND_WORD \u003d \"unlinklocation\";","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    public static final String FLIGHT_PREFIX \u003d \"/fl\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    public static final String LOCATION_DEPARTURE_PREFIX \u003d \"/from\";","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    public static final String LOCATION_ARRIVAL_PREFIX \u003d \"/to\";","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_FLIGHT_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"            \"No flight has been entered. \"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /fl followed by the flight ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"    private static final String NO_LOCATION_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"            \"No location has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /from followed by the departure location ID \"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"                    + \"and /to followed by the arrival location ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink command factory with the model registered.","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    public UnlinkFlightToLocationCommandFactory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink command factory with the given modelLazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"     * @param modelLazy the modelLazy used for the creation of the link command factory.","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"    public UnlinkFlightToLocationCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"        this(","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"                modelLazy.map(Model::getLocationManager),","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"                modelLazy.map(Model::getFlightManager)","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"        );","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink location command factory with the given location manager","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"     * @param locationManagerLazy the lazy instance of the location manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"     * @param flightManagerLazy   the lazy instance of the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"    public UnlinkFlightToLocationCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"            Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy,","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"            Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"        this.locationManagerLazy \u003d locationManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"        this.flightManagerLazy \u003d flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink location command factory with the given location manager","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"     * and the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"     * @param locationManager the location manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"jishnu28"},"content":"     * @param flightManager   the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"    public UnlinkFlightToLocationCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"jishnu28"},"content":"            ReadOnlyItemManager\u003cLocation\u003e locationManager,","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"jishnu28"},"content":"            ReadOnlyItemManager\u003cFlight\u003e flightManager","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"jishnu28"},"content":"        this(Lazy.of(locationManager), Lazy.of(flightManager));","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jishnu28"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"jishnu28"},"content":"                FLIGHT_PREFIX,","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"jishnu28"},"content":"                LOCATION_DEPARTURE_PREFIX,","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"jishnu28"},"content":"                LOCATION_ARRIVAL_PREFIX","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"jishnu28"},"content":"        ));","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"    private boolean addLocation(","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"            Optional\u003cString\u003e locationIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"            FlightLocationType type,","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"jishnu28"},"content":"            Map\u003cFlightLocationType, Location\u003e target","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"    ) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"jishnu28"},"content":"        if (locationIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"cetigerlily"},"content":"        int locationId;","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"cetigerlily"},"content":"            locationId \u003d Command.parseIntegerToZeroBasedIndex(locationIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"                    locationIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"        boolean isLocationIndexValid \u003d (locationId \u003c locationManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"        if (!isLocationIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"                    locationId));","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cLocation\u003e locationOptional \u003d locationManagerLazy.get().getItemOptional(locationId);","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"jishnu28"},"content":"        if (locationOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"jishnu28"},"content":"        target.put(type, locationOptional.get());","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"jishnu28"},"content":"        return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"cetigerlily"},"content":"    private Flight getFlightOrThrow(Optional\u003cString\u003e flightIdOptional) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"jishnu28"},"content":"        if (flightIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"cetigerlily"},"content":"        int flightId;","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"            flightId \u003d Command.parseIntegerToZeroBasedIndex(flightIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"                    flightIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"        boolean isFlightIndexValid \u003d (flightId \u003c flightManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"        if (!isFlightIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"                    flightId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cFlight\u003e flightOptional \u003d flightManagerLazy.get().getItemOptional(flightId);","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"jishnu28"},"content":"        if (flightOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"jishnu28"},"content":"        return flightOptional.get();","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":175,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"BoAi01"},"content":"    public UnlinkFlightToLocationCommand createCommand(","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"BoAi01"},"content":"            CommandParam param","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"    ) throws ParseException, IndexOutOfBoundException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e locationDepartureIdOptional \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":181,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(LOCATION_DEPARTURE_PREFIX);","lastModifiedDate":"2023-03-19"},{"lineNumber":182,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e locationArrivalIdOptional \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":183,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(LOCATION_ARRIVAL_PREFIX);","lastModifiedDate":"2023-03-19"},{"lineNumber":184,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"cetigerlily"},"content":"        Flight flight \u003d getFlightOrThrow(param.getNamedValues(FLIGHT_PREFIX));","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"jishnu28"},"content":"        Map\u003cFlightLocationType, Location\u003e locations \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":187,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":188,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"cetigerlily"},"content":"        boolean hasFoundLocation;","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"cetigerlily"},"content":"            hasFoundLocation \u003d addLocation(","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"jishnu28"},"content":"                    locationDepartureIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":193,"author":{"gitId":"jishnu28"},"content":"                    FlightLocationType.LOCATION_DEPARTURE,","lastModifiedDate":"2023-03-19"},{"lineNumber":194,"author":{"gitId":"jishnu28"},"content":"                    locations","lastModifiedDate":"2023-03-19"},{"lineNumber":195,"author":{"gitId":"BoAi01"},"content":"            ) \u0026\u0026 addLocation(","lastModifiedDate":"2023-04-01"},{"lineNumber":196,"author":{"gitId":"jishnu28"},"content":"                    locationArrivalIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"jishnu28"},"content":"                    FlightLocationType.LOCATION_ARRIVAL,","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"jishnu28"},"content":"                    locations","lastModifiedDate":"2023-03-19"},{"lineNumber":199,"author":{"gitId":"jishnu28"},"content":"            );","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"jishnu28"},"content":"        if (!hasFoundLocation) {","lastModifiedDate":"2023-03-19"},{"lineNumber":205,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_LOCATION_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":206,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":207,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":208,"author":{"gitId":"BoAi01"},"content":"        return new UnlinkFlightToLocationCommand(locations, flight);","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"BoAi01":33,"jishnu28":100,"cetigerlily":63,"wxxedu":14}},{"path":"src/main/java/wingman/logic/pilot/addpilot/AddPilotCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.pilot.addpilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * The command that adds a pilot to the address book.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"public class AddPilotCommand implements Command {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * The pilot to be added.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    private final Pilot pilot;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * Creates a command that, when executed, adds the pilot to the address","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * book.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * @param pilot The pilot to be added.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public AddPilotCommand(Pilot pilot) {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        this.pilot \u003d pilot;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        model.addPilot(pilot);","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"                \"Added %s.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"                pilot.toString()","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"        ));","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cetigerlily":4,"wxxedu":32}},{"path":"src/main/java/wingman/logic/pilot/addpilot/AddPilotCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.pilot.addpilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Gender;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.PilotRank;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"import wingman.model.pilot.exceptions.InvalidGenderException;","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" * The factory that\u0027s responsible for creating a {@code AddPilotCommand}.","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"public class AddPilotCommandFactory implements CommandFactory\u003cAddPilotCommand\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_NAME \u003d \"/name\";","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_RANK \u003d \"/rank\";","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_AGE \u003d \"/age\";","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_GENDER \u003d \"/gender\";","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_FLIGHT_HOUR \u003d \"/fh\";","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"     * Parses the gender from a number.","lastModifiedDate":"2023-04-01"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     * @param genderIdx User-input number indicating gender","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"     * @return the Gender value","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     * @throws CommandException when the input number is not a valid gender type","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    private Gender parseGenderFromNumber(int genderIdx) throws CommandException {","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"        final Gender gender;","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"            gender \u003d Gender.fromIndex(genderIdx);","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"        } catch (InvalidGenderException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"            throw new CommandException(","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"                    String.format(","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"                            \"Input gender %s is invalid. \\nPlease only specify 0 (male), 1 (female), or 2 (other).\",","lastModifiedDate":"2023-04-01"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"                            genderIdx","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"                    )","lastModifiedDate":"2023-04-01"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-04-01"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"        return gender;","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        return Optional.of(Set.of(PREFIX_NAME, PREFIX_RANK, PREFIX_AGE,","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"            PREFIX_GENDER, PREFIX_FLIGHT_HOUR));","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"    public AddPilotCommand createCommand(CommandParam param) throws ParseException, CommandException {","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        final String name \u003d param.getNamedValuesOrThrow(PREFIX_NAME);","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"        final int rankId \u003d param.getNamedIntOrThrow(PREFIX_RANK);","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        final PilotRank rank \u003d PilotRank.fromIndex(rankId);","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        final int age \u003d param.getNamedIntOrThrow(PREFIX_AGE);","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        final int genderIdx \u003d param.getNamedIntOrThrow(PREFIX_GENDER);","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"        Gender gender \u003d parseGenderFromNumber(genderIdx);","lastModifiedDate":"2023-04-01"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        final int flightHour \u003d param.getNamedIntOrThrow(PREFIX_FLIGHT_HOUR);","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        final Pilot pilot \u003d new Pilot(name, age, gender, rank, flightHour);","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        return new AddPilotCommand(pilot);","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":26,"wxxedu":47}},{"path":"src/main/java/wingman/logic/pilot/checkpilot/CheckPilotCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.pilot.checkpilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":" * The command that checks a pilot\u0027s availability in the Wingman app.","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"public class CheckPilotCommand implements Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     * The UUID of the pilot whose availability is to be checked.","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    private final String id;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"     * Creates a command that, when executed, checks the availability of the pilot with the given UUID.","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"     * @param id the UUID of the pilot to be checked.","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    public CheckPilotCommand(String id) {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"        boolean isAvailable;","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"        int pilotId;","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"            pilotId \u003d Command.parseIntegerToZeroBasedIndex(id);","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"                    id","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"        boolean isPilotIndexValid \u003d (pilotId \u003c model.getPilotManager().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"        if (!isPilotIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"                    pilotId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"        isAvailable \u003d model.checkPilotByIndex(pilotId);","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"        Pilot pilot \u003d model.getPilotManager().getItem(pilotId);","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"        if (isAvailable) {","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"                    \"%s is available.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"                    pilot.toString()","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"cetigerlily"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"                    \"%s is unavailable.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"                    pilot.toString()","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"BoAi01":7,"cetigerlily":57,"wxxedu":6}},{"path":"src/main/java/wingman/logic/pilot/checkpilot/CheckPilotCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.pilot.checkpilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":" * The factory that\u0027s responsible for creating a {@code CheckPilotCommand}.","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"public class CheckPilotCommandFactory implements CommandFactory\u003cCheckPilotCommand\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"    public static final String COMMAND_WORD \u003d \"check\";","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"    public static final String PREFIX_ID \u003d \"/id\";","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"        return Optional.of(Set.of(PREFIX_ID));","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    public CheckPilotCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"        String id \u003d param.getNamedValuesOrThrow(PREFIX_ID);","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"        return new CheckPilotCommand(id);","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"cetigerlily":29,"wxxedu":4}},{"path":"src/main/java/wingman/logic/pilot/linkflight/LinkPilotToFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.pilot.linkflight;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.FlightPilotType;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" * The command that links the pilot.","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"public class LinkPilotToFlightCommand implements Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    private static final String FLIGHT_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"        \"Flight with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    private static final String PILOT_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"        \"Pilot with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"        \"Linked %s to %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     * The id of the flight.","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private final Flight flight;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"     * The id of the pilot.","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cFlightPilotType, Pilot\u003e pilots;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * Creates a new link command.","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * @param flight the id of the flight.","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"     * @param pilots the id of the pilots.","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"    public LinkPilotToFlightCommand(Flight flight, Map\u003cFlightPilotType, Pilot\u003e pilots) {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"        this.pilots \u003d pilots;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        String result \u003d pilots.entrySet()","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"                            .stream()","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"                            .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"                                \"%s %s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"                                entry.getKey(),","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"                                entry.getValue().getName()))","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"                            .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        return String.format(DISPLAY_MESSAGE, result, flight.getCode());","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"            for (Map.Entry\u003cFlightPilotType, Pilot\u003e entry : pilots.entrySet()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"                flight.pilotLink.putRevolve(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"cetigerlily"},"content":"                entry.getValue().setUnavailable();","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"BoAi01":1,"cetigerlily":13,"wxxedu":58}},{"path":"src/main/java/wingman/logic/pilot/linkflight/LinkPilotToFlightCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.pilot.linkflight;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.exception.IndexOutOfBoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.FlightPilotType;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":" * The factory that\u0027s responsible for creating a new","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":" * \u003ccode\u003eCommandFactory\u003c/code\u003e.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"public class LinkPilotToFlightCommandFactory implements CommandFactory\u003cLinkPilotToFlightCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    private static final String COMMAND_WORD \u003d \"linkflight\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    private static final String FLIGHT_PREFIX \u003d \"/fl\";","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    private static final String PILOT_FLYING_PREFIX \u003d \"/pf\";","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    private static final String PILOT_MONITORING_PREFIX \u003d \"/pm\";","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_FLIGHT_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"            \"No flight has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /fl followed by the flight ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    private static final String NO_PILOT_MESSAGE \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"            \"No pilot has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter at least 1 of the following:\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"                    + \"     /pm for the Pilot Monitoring, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"                    + \"/pf for the Pilot Flying.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cPilot\u003e\u003e pilotManagerLazy;","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy;","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * Creates a new link command factory with the model registered.","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    public LinkPilotToFlightCommandFactory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     * Creates a new link command factory with the given modelLazy.","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     * @param modelLazy the modelLazy used for the creation of the link command factory.","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"    public LinkPilotToFlightCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        this(","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getFlightManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getPilotManager)","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"     * Creates a new link pilot command factory with the given pilot manager","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     * @param flightManagerLazy the lazy instance of the flight manager.","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"cetigerlily"},"content":"     * @param pilotManagerLazy  the lazy instance of the pilot manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"    public LinkPilotToFlightCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy,","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cPilot\u003e\u003e pilotManagerLazy","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        this.flightManagerLazy \u003d flightManagerLazy;","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"cetigerlily"},"content":"        this.pilotManagerLazy \u003d pilotManagerLazy;","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     * Creates a new link pilot command factory with the given pilot manager","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     * and the flight manager.","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     * @param flightManager the flight manager.","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"cetigerlily"},"content":"     * @param pilotManager  the pilot manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"    public LinkPilotToFlightCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cFlight\u003e flightManager,","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cPilot\u003e pilotManager","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"cetigerlily"},"content":"        this(","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(flightManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(pilotManager));","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"                FLIGHT_PREFIX,","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"cetigerlily"},"content":"                PILOT_FLYING_PREFIX,","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"                PILOT_MONITORING_PREFIX","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"        ));","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"cetigerlily"},"content":"    private boolean addPilot(Optional\u003cString\u003e pilotIdOptional, FlightPilotType type, Map\u003cFlightPilotType, Pilot\u003e target)","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"cetigerlily"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"        if (pilotIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"        int pilotId;","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"            pilotId \u003d Command.parseIntegerToZeroBasedIndex(pilotIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"                    pilotIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"        boolean isPilotIndexValid \u003d (pilotId \u003c pilotManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"        if (!isPilotIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"cetigerlily"},"content":"                    pilotId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cPilot\u003e pilotOptional \u003d pilotManagerLazy.get().getItemOptional(pilotId);","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        if (pilotOptional.isEmpty()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"        target.put(type, pilotOptional.get());","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"        return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"cetigerlily"},"content":"    private Flight getFlightOrThrow(Optional\u003cString\u003e flightIdOptional) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"        if (flightIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"        int flightId;","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"            flightId \u003d Command.parseIntegerToZeroBasedIndex(flightIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(INVALID_INDEX_VALUE_MESSAGE, flightIdOptional.get()));","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"        boolean isFlightIndexValid \u003d (flightId \u003c flightManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"        if (!isFlightIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"                    flightId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cFlight\u003e flightOptional \u003d flightManagerLazy.get().getItemOptional(flightId);","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"        if (flightOptional.isEmpty()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"        return flightOptional.get();","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"    public LinkPilotToFlightCommand createCommand(CommandParam param)","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"cetigerlily"},"content":"            throws ParseException, IndexOutOfBoundException {","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e pilotFlyingIdOptional \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"                param.getNamedValues(PILOT_FLYING_PREFIX);","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e pilotMonitoringIdOptional \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"                param.getNamedValues(PILOT_MONITORING_PREFIX);","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"cetigerlily"},"content":"        Flight flight;","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"cetigerlily"},"content":"            flight \u003d getFlightOrThrow(param.getNamedValues(FLIGHT_PREFIX));","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"        Map\u003cFlightPilotType, Pilot\u003e pilots \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"cetigerlily"},"content":"        boolean hasFoundPilot;","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"cetigerlily"},"content":"            hasFoundPilot \u003d addPilot(","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"                    pilotFlyingIdOptional,","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"                    FlightPilotType.PILOT_FLYING,","lastModifiedDate":"2023-03-17"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"                    pilots","lastModifiedDate":"2023-03-17"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"            ) || addPilot(","lastModifiedDate":"2023-03-17"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"                    pilotMonitoringIdOptional,","lastModifiedDate":"2023-03-17"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"                    FlightPilotType.PILOT_MONITORING,","lastModifiedDate":"2023-03-17"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"                    pilots","lastModifiedDate":"2023-03-17"},{"lineNumber":202,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":203,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":207,"author":{"gitId":"wxxedu"},"content":"        if (!hasFoundPilot) {","lastModifiedDate":"2023-03-17"},{"lineNumber":208,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(NO_PILOT_MESSAGE);","lastModifiedDate":"2023-03-17"},{"lineNumber":209,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":210,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":211,"author":{"gitId":"cetigerlily"},"content":"        return new LinkPilotToFlightCommand(flight, pilots);","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":213,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"BoAi01":6,"cetigerlily":85,"wxxedu":122}},{"path":"src/main/java/wingman/logic/pilot/linklocation/LinkPilotToLocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.pilot.linklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.PilotLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":" * The command that links a pilot to a flight","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"public class LinkPilotToLocationCommand implements Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"            \"Linked %s to %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     * The id of the location","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    private final Location location;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     * The id of the pilot","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cPilotLocationType, Pilot\u003e pilot;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command.","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     * @param location the id of the location.","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"     * @param pilot the id of the pilot.","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"    public LinkPilotToLocationCommand(Location location, Map\u003cPilotLocationType, Pilot\u003e pilot) {","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"        this.pilot \u003d pilot;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"        String result \u003d pilot.entrySet()","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"                .stream()","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"                .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"                        \"%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"                        entry.getValue().toString()))","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"        return String.format(DISPLAY_MESSAGE, result, location.getName());","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"            for (Map.Entry\u003cPilotLocationType, Pilot\u003e entry : pilot.entrySet()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"                location.getPilotLink().putRevolve(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"BoAi01":46,"cetigerlily":11,"wxxedu":9}},{"path":"src/main/java/wingman/logic/pilot/linklocation/LinkPilotToLocationCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.pilot.linklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.PilotLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":" * Links a pilot to location.","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":" * The location could be a place where they reside.","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":" * To link a pilot to a flight, the pilot should reside in","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":" * the same location as the flight\u0027s starting location.","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"public class LinkPilotToLocationCommandFactory implements CommandFactory\u003cLinkPilotToLocationCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    private static final String COMMAND_WORD \u003d \"linklocation\";","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private static final String LOCATION_PREFIX \u003d \"/lo\";","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    private static final String PILOT_PREFIX \u003d \"/pi\";","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_LOCATION_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"            \"No location has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /lo followed by the location ID.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"    private static final String NO_LOCATION_FOUND_MESSAGE \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"            \"No location has been found in the list.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /lo followed by the location ID.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_PILOT_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"            \"No pilot has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /pi followed by the pilot ID.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cPilot\u003e\u003e pilotManagerLazy;","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy;","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command factory with the model registered.","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    public LinkPilotToLocationCommandFactory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command factory with the given modelLazy.","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"     * @param modelLazy the modelLazy used for the creation of the link command factory.","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"    public LinkPilotToLocationCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"        this(","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getLocationManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getPilotManager)","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link pilot command factory with the given pilot manager","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"     * @param locationManagerLazy the lazy instance of the location manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"cetigerlily"},"content":"     * @param pilotManagerLazy    the lazy instance of the pilot manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"    public LinkPilotToLocationCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy,","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cPilot\u003e\u003e pilotManagerLazy","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"        this.locationManagerLazy \u003d locationManagerLazy;","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"cetigerlily"},"content":"        this.pilotManagerLazy \u003d pilotManagerLazy;","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link pilot command factory with the given pilot manager","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"     * and the location manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"     * @param locationManager the flight manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"cetigerlily"},"content":"     * @param pilotManager    the pilot manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"    public LinkPilotToLocationCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cLocation\u003e locationManager,","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cPilot\u003e pilotManager","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"        this(","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(locationManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(pilotManager)","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"                LOCATION_PREFIX,","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"                PILOT_PREFIX","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"        ));","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"    private boolean addPilot(","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"            Optional\u003cString\u003e pilotIdOptional,","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"            PilotLocationType type,","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"cetigerlily"},"content":"            Map\u003cPilotLocationType, Pilot\u003e target)","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"cetigerlily"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"        if (pilotIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"        int pilotId;","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"            pilotId \u003d Command.parseIntegerToZeroBasedIndex(pilotIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"                    pilotIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"        boolean iPilotIndexValid \u003d (pilotId \u003c pilotManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"        if (!iPilotIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"cetigerlily"},"content":"                    pilotId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cPilot\u003e pilotOptional \u003d pilotManagerLazy.get().getItemOptional(pilotId);","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"        if (pilotOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"        target.put(type, pilotOptional.get());","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"        return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"cetigerlily"},"content":"    private Location getLocationOrThrow(Optional\u003cString\u003e locationIdOptional) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"        if (locationIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(NO_LOCATION_MESSAGE);","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"        int locationId;","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"            locationId \u003d Command.parseIntegerToZeroBasedIndex(locationIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(INVALID_INDEX_VALUE_MESSAGE, locationIdOptional.get()));","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"        boolean isLocationIndexValid \u003d (locationId \u003c locationManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"        if (!isLocationIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"                    locationId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cLocation\u003e locationOptional \u003d locationManagerLazy.get().getItemOptional(locationId);","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"BoAi01"},"content":"        if (locationOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(NO_LOCATION_MESSAGE);","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"BoAi01"},"content":"        return locationOptional.get();","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"cetigerlily"},"content":"    public LinkPilotToLocationCommand createCommand(CommandParam param) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"BoAi01"},"content":"        Optional\u003cString\u003e locationIdOptional \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"                param.getNamedValues(LOCATION_PREFIX);","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"        Optional\u003cString\u003e pilotIdOptional \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"                param.getNamedValues(PILOT_PREFIX);","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"cetigerlily"},"content":"        Location location \u003d getLocationOrThrow(locationIdOptional);","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"BoAi01"},"content":"        Map\u003cPilotLocationType, Pilot\u003e pilot \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"cetigerlily"},"content":"        boolean hasFoundPilot;","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"cetigerlily"},"content":"            hasFoundPilot \u003d addPilot(","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"BoAi01"},"content":"                    pilotIdOptional,","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"BoAi01"},"content":"                    PilotLocationType.LOCATION_USING,","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"BoAi01"},"content":"                    pilot","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"BoAi01"},"content":"        if (!hasFoundPilot) {","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_PILOT_MESSAGE);","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"cetigerlily"},"content":"        return new LinkPilotToLocationCommand(location, pilot);","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"BoAi01":114,"cetigerlily":76,"wxxedu":13}},{"path":"src/main/java/wingman/logic/pilot/unlinkflight/UnlinkPilotToFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.pilot.unlinkflight;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.FlightPilotType;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":" * The command that unlinks a pilot from a flight","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"public class UnlinkPilotToFlightCommand implements Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    private static final String FLIGHT_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"            \"Flight with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    private static final String PILOT_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"            \"Pilot with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"            \"Unlinked %s from %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     * The id of the flight","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private final Flight flight;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"     * The id of the pilot","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cFlightPilotType, Pilot\u003e pilots;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link command.","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     * @param flight the id of the flight.","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"     * @param pilots the id of the pilots.","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"    public UnlinkPilotToFlightCommand(Flight flight, Map\u003cFlightPilotType, Pilot\u003e pilots) {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"        this.pilots \u003d pilots;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"        String result \u003d pilots.entrySet()","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"                .stream()","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"                .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"                        \"%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                        entry.getValue().toString()))","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"        return String.format(DISPLAY_MESSAGE, result, flight.getCode());","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"            for (Map.Entry\u003cFlightPilotType, Pilot\u003e entry : pilots.entrySet()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"                flight.pilotLink.delete(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"                entry.getValue().setAvailable();","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"BoAi01":1,"jishnu28":47,"cetigerlily":14,"wxxedu":9}},{"path":"src/main/java/wingman/logic/pilot/unlinkflight/UnlinkPilotToFlightCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.pilot.unlinkflight;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.FlightPilotType;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":" * The factory that creates {@code UnlinkPilotCommand}.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"public class UnlinkPilotToFlightCommandFactory implements CommandFactory\u003cUnlinkPilotToFlightCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    private static final String COMMAND_WORD \u003d \"unlinkflight\";","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    private static final String FLIGHT_PREFIX \u003d \"/fl\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    private static final String PILOT_FLYING_PREFIX \u003d \"/pf\";","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    private static final String PILOT_MONITORING_PREFIX \u003d \"/pm\";","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_FLIGHT_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"            \"No flight has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /fl followed by the flight ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"    private static final String NO_PILOT_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"            \"No pilot has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter at least 1 of the following:\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"                    + \"     /pm for the Pilot Monitoring,\"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"                    + \"/pf for the Pilot Flying.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cPilot\u003e\u003e pilotManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink command factory with the model registered.","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPilotToFlightCommandFactory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink command factory with the given modelLazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"     * @param modelLazy the modelLazy used for the creation of the unlink command factory.","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPilotToFlightCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"        this(","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getFlightManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getPilotManager)","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"        );","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink pilot command factory with the given pilot manager","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"     * @param flightManagerLazy the lazy instance of the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"cetigerlily"},"content":"     * @param pilotManagerLazy  the lazy instance of the pilot manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPilotToFlightCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy,","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cPilot\u003e\u003e pilotManagerLazy","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"        this.flightManagerLazy \u003d flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"cetigerlily"},"content":"        this.pilotManagerLazy \u003d pilotManagerLazy;","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink pilot command factory with the given pilot manager","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"     * and the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"     * @param flightManager the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"cetigerlily"},"content":"     * @param pilotManager  the pilot manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPilotToFlightCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cFlight\u003e flightManager,","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cPilot\u003e pilotManager","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"cetigerlily"},"content":"        this(","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(flightManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(pilotManager));","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"jishnu28"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"jishnu28"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"jishnu28"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"jishnu28"},"content":"                FLIGHT_PREFIX,","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"cetigerlily"},"content":"                PILOT_FLYING_PREFIX,","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"jishnu28"},"content":"                PILOT_MONITORING_PREFIX","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"        ));","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"    private boolean addPilot(","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"jishnu28"},"content":"            Optional\u003cString\u003e pilotIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"jishnu28"},"content":"            FlightPilotType type,","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"jishnu28"},"content":"            Map\u003cFlightPilotType, Pilot\u003e target","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"    ) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"jishnu28"},"content":"        if (pilotIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"cetigerlily"},"content":"        int pilotId;","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"            pilotId \u003d Command.parseIntegerToZeroBasedIndex(pilotIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"                    pilotIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"        boolean isCrewIndexValid \u003d (pilotId \u003c pilotManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"        if (!isCrewIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"                    pilotId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cPilot\u003e pilotOptional \u003d pilotManagerLazy.get().getItemOptional(pilotId);","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"jishnu28"},"content":"        if (pilotOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"jishnu28"},"content":"        target.put(type, pilotOptional.get());","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"jishnu28"},"content":"        return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"jishnu28"},"content":"    private Flight getFlightOrThrow(","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"jishnu28"},"content":"            Optional\u003cString\u003e flightIdOptional","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"    ) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"jishnu28"},"content":"        if (flightIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"        int flightId;","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"            flightId \u003d Command.parseIntegerToZeroBasedIndex(flightIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"                    flightIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"        boolean isFlightIndexValid \u003d (flightId \u003c flightManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"        if (!isFlightIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"cetigerlily"},"content":"                    flightId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cFlight\u003e flightOptional \u003d flightManagerLazy.get().getItemOptional(flightId);","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"jishnu28"},"content":"        if (flightOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"jishnu28"},"content":"        return flightOptional.get();","lastModifiedDate":"2023-03-19"},{"lineNumber":176,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":177,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":178,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPilotToFlightCommand createCommand(CommandParam param)","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"            throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e pilotFlyingIdOptional \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":183,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(PILOT_FLYING_PREFIX);","lastModifiedDate":"2023-03-19"},{"lineNumber":184,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e pilotMonitoringIdOptional \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":185,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(PILOT_MONITORING_PREFIX);","lastModifiedDate":"2023-03-19"},{"lineNumber":186,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"cetigerlily"},"content":"        Flight flight \u003d getFlightOrThrow(param.getNamedValues(FLIGHT_PREFIX));","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"jishnu28"},"content":"        Map\u003cFlightPilotType, Pilot\u003e pilots \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":189,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":190,"author":{"gitId":"cetigerlily"},"content":"        boolean hasFoundPilot;","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"cetigerlily"},"content":"            hasFoundPilot \u003d addPilot(","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"jishnu28"},"content":"                    pilotFlyingIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":194,"author":{"gitId":"jishnu28"},"content":"                    FlightPilotType.PILOT_FLYING,","lastModifiedDate":"2023-03-19"},{"lineNumber":195,"author":{"gitId":"jishnu28"},"content":"                    pilots","lastModifiedDate":"2023-03-19"},{"lineNumber":196,"author":{"gitId":"jishnu28"},"content":"            ) || addPilot(","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"jishnu28"},"content":"                    pilotMonitoringIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"jishnu28"},"content":"                    FlightPilotType.PILOT_MONITORING,","lastModifiedDate":"2023-03-19"},{"lineNumber":199,"author":{"gitId":"jishnu28"},"content":"                    pilots","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"jishnu28"},"content":"            );","lastModifiedDate":"2023-03-19"},{"lineNumber":201,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":205,"author":{"gitId":"jishnu28"},"content":"        if (!hasFoundPilot) {","lastModifiedDate":"2023-03-19"},{"lineNumber":206,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_PILOT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":207,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":208,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":209,"author":{"gitId":"cetigerlily"},"content":"        return new UnlinkPilotToFlightCommand(flight, pilots);","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":211,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"BoAi01":9,"jishnu28":113,"cetigerlily":76,"wxxedu":13}},{"path":"src/main/java/wingman/logic/pilot/unlinklocation/UnlinkPilotToLocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.pilot.unlinklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.PilotLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":" * The command class that unlinks pilot to","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":" * locations, where they reside.","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"public class UnlinkPilotToLocationCommand implements Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    private static final String LOCATION_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"            \"Location with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"    private static final String PILOT_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"            \"Pilot with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"            \"Unlinked %s from %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     * The id of the location","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    private final Location location;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"     * The id of the pilot","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cPilotLocationType, Pilot\u003e pilot;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command.","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"     * @param location the id of the location.","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"     * @param pilot the id of the pilot.","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"    public UnlinkPilotToLocationCommand(Location location, Map\u003cPilotLocationType, Pilot\u003e pilot) {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"        this.pilot \u003d pilot;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"        String result \u003d pilot.entrySet()","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"                .stream()","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"                .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                        \"%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"                        entry.getValue().toString()))","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        return String.format(DISPLAY_MESSAGE, result, location.getName());","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"            for (Map.Entry\u003cPilotLocationType, Pilot\u003e entry : pilot.entrySet()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"                location.getPilotLink().delete(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"BoAi01":48,"cetigerlily":14,"wxxedu":9}},{"path":"src/main/java/wingman/logic/pilot/unlinklocation/UnlinkPilotToLocationCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.pilot.unlinklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.PilotLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":" * The command factory that unlinks pilots to locations.","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":" * Command factory is a class that can create an executable object, i.e.,","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":" * command class. The actual execution will be done by this object.","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"public class UnlinkPilotToLocationCommandFactory implements CommandFactory\u003cUnlinkPilotToLocationCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    private static final String COMMAND_WORD \u003d \"unlinklocation\";","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    private static final String LOCATION_PREFIX \u003d \"/lo\";","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private static final String PILOT_PREFIX \u003d \"/pi\";","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    private static final String NO_LOCATION_MESSAGE \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"            \"No location has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /lo followed by the location ID.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_PILOT_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"            \"No pilot has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /pi followed by the pilot ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cPilot\u003e\u003e pilotManagerLazy;","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy;","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command factory with the model registered.","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPilotToLocationCommandFactory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"     * Creates a new unlink command factory with the given modelLazy.","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"     * @param modelLazy the modelLazy used for the creation of the link command factory.","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPilotToLocationCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"        this(","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getLocationManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getPilotManager)","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command factory with the given pilot manager","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"     * @param locationManagerLazy the lazy instance of the location manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"cetigerlily"},"content":"     * @param pilotManagerLazy    the lazy instance of the pilot manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPilotToLocationCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy,","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cPilot\u003e\u003e pilotManagerLazy","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"        this.pilotManagerLazy \u003d pilotManagerLazy;","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"        this.locationManagerLazy \u003d locationManagerLazy;","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link pilot command factory with the given pilot manager","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"     * and the location manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"     * @param locationManager the flight manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"cetigerlily"},"content":"     * @param pilotManager    the pilot manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPilotToLocationCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cLocation\u003e locationManager,","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cPilot\u003e pilotManager","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"        this(","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(locationManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(pilotManager)","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"                LOCATION_PREFIX,","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"                PILOT_PREFIX","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"        ));","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"    private boolean addPilot(","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"            Optional\u003cString\u003e pilotIdOptional,","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"            PilotLocationType type,","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"            Map\u003cPilotLocationType, Pilot\u003e target","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"    ) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"        if (pilotIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"cetigerlily"},"content":"        int pilotId;","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"cetigerlily"},"content":"            pilotId \u003d Command.parseIntegerToZeroBasedIndex(pilotIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"                    pilotIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"        boolean isPilotIndexValid \u003d (pilotId \u003c pilotManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"        if (!isPilotIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"                    pilotId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cPilot\u003e pilotOptional \u003d pilotManagerLazy.get().getItemOptional(pilotId);","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"        if (pilotOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"        target.put(type, pilotOptional.get());","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"        return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"    private Location getLocationOrThrow(","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"            Optional\u003cString\u003e locationIdOptional","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"    ) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"        if (locationIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_LOCATION_MESSAGE);","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"cetigerlily"},"content":"        int locationId;","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"            locationId \u003d Command.parseIntegerToZeroBasedIndex(locationIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"                    locationIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"        boolean isLocationIndexValid \u003d (locationId \u003c locationManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"        if (!isLocationIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"cetigerlily"},"content":"                    locationId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cLocation\u003e locationOptional \u003d locationManagerLazy.get().getItemOptional(locationId);","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"BoAi01"},"content":"        if (locationOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_LOCATION_MESSAGE);","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"        return locationOptional.get();","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPilotToLocationCommand createCommand(CommandParam param)","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"            throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"        Optional\u003cString\u003e locationIdOptional \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"                param.getNamedValues(LOCATION_PREFIX);","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"BoAi01"},"content":"        Optional\u003cString\u003e pilotIdOptional \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"BoAi01"},"content":"                param.getNamedValues(PILOT_PREFIX);","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"cetigerlily"},"content":"        Location location \u003d getLocationOrThrow(locationIdOptional);","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"BoAi01"},"content":"        Map\u003cPilotLocationType, Pilot\u003e pilot \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"cetigerlily"},"content":"        boolean hasFoundPilot;","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"cetigerlily"},"content":"            hasFoundPilot \u003d addPilot(","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"BoAi01"},"content":"                    pilotIdOptional,","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"BoAi01"},"content":"                    PilotLocationType.LOCATION_USING,","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"BoAi01"},"content":"                    pilot","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"BoAi01"},"content":"        if (!hasFoundPilot) {","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_PILOT_MESSAGE);","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"cetigerlily"},"content":"        return new UnlinkPilotToLocationCommand(location, pilot);","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"BoAi01":123,"cetigerlily":69,"wxxedu":13}},{"path":"src/main/java/wingman/logic/plane/checkplane/CheckPlaneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.plane.checkplane;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":" * The command that checks a plane\u0027s availability in the Wingman app.","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"public class CheckPlaneCommand implements Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     * The UUID of the plane whose availability is to be checked.","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    private final String id;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"     * Creates a command that, when executed, checks the availability of the plane with the given UUID.","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"     * @param id the UUID of the plane to be checked.","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    public CheckPlaneCommand(String id) {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"        boolean isAvailable;","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"        int planeId;","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"            planeId \u003d Command.parseIntegerToZeroBasedIndex(id);","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"                    id","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"        boolean isPlaneIndexValid \u003d (planeId \u003c model.getPlaneManager().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"        if (!isPlaneIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"                    planeId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"        isAvailable \u003d model.checkPlaneByIndex(planeId);","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"        Plane plane \u003d model.getPlaneManager().getItem(planeId);","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"        if (isAvailable) {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"                    \"%s is available.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"                    plane.toString()","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"cetigerlily"},"content":"                    \"%s is unavailable.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"                    plane.toString()","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"BoAi01":7,"cetigerlily":56,"wxxedu":6}},{"path":"src/main/java/wingman/logic/plane/checkplane/CheckPlaneCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.plane.checkplane;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":" * The factory that\u0027s responsible for creating a {@code CheckPlaneCommand}.","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"public class CheckPlaneCommandFactory implements CommandFactory\u003cCheckPlaneCommand\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"    public static final String COMMAND_WORD \u003d \"check\";","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"    public static final String PREFIX_ID \u003d \"/id\";","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"        return Optional.of(Set.of(PREFIX_ID));","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    public CheckPlaneCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"        String id \u003d param.getNamedValuesOrThrow(PREFIX_ID);","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"        return new CheckPlaneCommand(id);","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"cetigerlily":29,"wxxedu":4}},{"path":"src/main/java/wingman/logic/plane/linkflight/LinkPlaneToFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.plane.linkflight;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.FlightPlaneType;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":" * The command that links a plane to a flight","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"public class LinkPlaneToFlightCommand implements Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    private static final String FLIGHT_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"            \"Flight with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"    private static final String PLANE_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"            \"Plane with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"            \"Linked %s to %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     * The id of the flight","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    private final Flight flight;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"     * The id of the plane","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cFlightPlaneType, Plane\u003e planes;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link command.","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"     * @param flight the id of the flight.","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"     * @param planes the id of the planes.","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"    public LinkPlaneToFlightCommand(Flight flight, Map\u003cFlightPlaneType, Plane\u003e planes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"        this.planes \u003d planes;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"        String result \u003d planes.entrySet()","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"                .stream()","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"                .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                        \"%s %s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"                        entry.getKey(),","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"                        entry.getValue().getModel()))","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"        return String.format(DISPLAY_MESSAGE, result, flight.getCode());","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"            for (Map.Entry\u003cFlightPlaneType, Plane\u003e entry : planes.entrySet()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"                flight.planeLink.putRevolve(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"                entry.getValue().setUnavailable();","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"BoAi01":1,"jishnu28":50,"cetigerlily":13,"wxxedu":9}},{"path":"src/main/java/wingman/logic/plane/linkflight/LinkPlaneToFlightCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.plane.linkflight;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.exception.IndexOutOfBoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.FlightPlaneType;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":" * The factory that creates {@code LinkPlaneCommand}.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"public class LinkPlaneToFlightCommandFactory implements CommandFactory\u003cLinkPlaneToFlightCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    private static final String COMMAND_WORD \u003d \"linkflight\";","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    private static final String FLIGHT_PREFIX \u003d \"/fl\";","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    private static final String PLANE_USING_PREFIX \u003d \"/pl\";","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"    private static final String NO_FLIGHT_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"            \"No flight has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /fl followed by the flight ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_PLANE_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"            \"No plane has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /pl followed by the plane ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cPlane\u003e\u003e planeManagerLazy;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link command factory with the model registered.","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    public LinkPlaneToFlightCommandFactory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link command factory with the given modelLazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"     * @param modelLazy the modelLazy used for the creation of the link command factory.","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"    public LinkPlaneToFlightCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"        this(","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getFlightManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getPlaneManager)","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"        );","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link plane command factory with the given plane manager","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"     * @param flightManagerLazy the lazy instance of the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"cetigerlily"},"content":"     * @param planeManagerLazy  the lazy instance of the plane manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"    public LinkPlaneToFlightCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy,","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cPlane\u003e\u003e planeManagerLazy","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"        this.flightManagerLazy \u003d flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"cetigerlily"},"content":"        this.planeManagerLazy \u003d planeManagerLazy;","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link plane command factory with the given plane manager","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"     * and the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"     * @param flightManager the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"cetigerlily"},"content":"     * @param planeManager  the plane manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"    public LinkPlaneToFlightCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cFlight\u003e flightManager,","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cPlane\u003e planeManager","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"cetigerlily"},"content":"        this(","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(flightManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(planeManager));","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"jishnu28"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"jishnu28"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"jishnu28"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"jishnu28"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"cetigerlily"},"content":"                FLIGHT_PREFIX,","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"cetigerlily"},"content":"                PLANE_USING_PREFIX","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"jishnu28"},"content":"        ));","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"cetigerlily"},"content":"    private boolean addPlane(Optional\u003cString\u003e planeIdOptional, FlightPlaneType type, Map\u003cFlightPlaneType, Plane\u003e target)","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"cetigerlily"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"        if (planeIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"cetigerlily"},"content":"        int planeId;","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"cetigerlily"},"content":"            planeId \u003d Command.parseIntegerToZeroBasedIndex(planeIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"cetigerlily"},"content":"                    planeIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"        boolean isCrewIndexValid \u003d (planeId \u003c planeManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"        if (!isCrewIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"                    planeId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cPlane\u003e planeOptional \u003d planeManagerLazy.get().getItemOptional(planeId);","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"jishnu28"},"content":"        if (planeOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"jishnu28"},"content":"        target.put(type, planeOptional.get());","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"jishnu28"},"content":"        return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"jishnu28"},"content":"    private Flight getFlightOrThrow(","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"jishnu28"},"content":"            Optional\u003cString\u003e flightIdOptional","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"    ) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"jishnu28"},"content":"        if (flightIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"cetigerlily"},"content":"        int flightId;","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"cetigerlily"},"content":"            flightId \u003d Command.parseIntegerToZeroBasedIndex(flightIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(INVALID_INDEX_VALUE_MESSAGE, flightIdOptional.get()));","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"        boolean isFlightIndexValid \u003d (flightId \u003c flightManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"        if (!isFlightIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"                    flightId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cFlight\u003e flightOptional \u003d flightManagerLazy.get().getItemOptional(flightId);","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"jishnu28"},"content":"        if (flightOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":165,"author":{"gitId":"jishnu28"},"content":"        return flightOptional.get();","lastModifiedDate":"2023-03-19"},{"lineNumber":166,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":167,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":168,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"BoAi01"},"content":"    public LinkPlaneToFlightCommand createCommand(CommandParam param)","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"BoAi01"},"content":"            throws ParseException, IndexOutOfBoundException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e planeUsingIdOptional \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(PLANE_USING_PREFIX);","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"cetigerlily"},"content":"        Flight flight \u003d getFlightOrThrow(param.getNamedValues(FLIGHT_PREFIX));","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"jishnu28"},"content":"        Map\u003cFlightPlaneType, Plane\u003e planes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":176,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":177,"author":{"gitId":"cetigerlily"},"content":"        boolean hasFoundPlane;","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"cetigerlily"},"content":"            hasFoundPlane \u003d addPlane(","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"jishnu28"},"content":"                    planeUsingIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":181,"author":{"gitId":"jishnu28"},"content":"                    FlightPlaneType.PLANE_USING,","lastModifiedDate":"2023-03-19"},{"lineNumber":182,"author":{"gitId":"jishnu28"},"content":"                    planes","lastModifiedDate":"2023-03-19"},{"lineNumber":183,"author":{"gitId":"jishnu28"},"content":"            );","lastModifiedDate":"2023-03-19"},{"lineNumber":184,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":188,"author":{"gitId":"jishnu28"},"content":"        if (!hasFoundPlane) {","lastModifiedDate":"2023-03-19"},{"lineNumber":189,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_PLANE_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":190,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":191,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":192,"author":{"gitId":"cetigerlily"},"content":"        return new LinkPlaneToFlightCommand(flight, planes);","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":194,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"BoAi01":8,"jishnu28":97,"cetigerlily":75,"wxxedu":14}},{"path":"src/main/java/wingman/logic/plane/linklocation/LinkPlaneToLocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.plane.linklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.PlaneLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":" * The command that links a plane to a flight","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"public class LinkPlaneToLocationCommand implements Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"            \"Linked %s to %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     * The id of the location","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    private final Location location;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     * The id of the plane","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cPlaneLocationType, Plane\u003e plane;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command.","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     * @param location the id of the location.","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"     * @param plane the id of the plane.","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"    public LinkPlaneToLocationCommand(Location location, Map\u003cPlaneLocationType, Plane\u003e plane) {","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"        this.plane \u003d plane;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"        String result \u003d plane.entrySet()","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"                .stream()","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"                .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"                        \"%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"                        entry.getValue().toString()))","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"        return String.format(DISPLAY_MESSAGE, result, location.getName());","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"            for (Map.Entry\u003cPlaneLocationType, Plane\u003e entry : plane.entrySet()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"                location.getPlaneLink().putRevolve(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"BoAi01":46,"cetigerlily":11,"wxxedu":9}},{"path":"src/main/java/wingman/logic/plane/linklocation/LinkPlaneToLocationCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.plane.linklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.PlaneLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":" * Links a plane to location.","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":" * The location could be a place where they reside.","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":" * To link a plane to a flight, the plane should reside in","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":" * the same location as the flight\u0027s starting location.","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"public class LinkPlaneToLocationCommandFactory implements CommandFactory\u003cLinkPlaneToLocationCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    private static final String COMMAND_WORD \u003d \"linklocation\";","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private static final String LOCATION_PREFIX \u003d \"/lo\";","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    private static final String PLANE_PREFIX \u003d \"/pl\";","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_LOCATION_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"            \"No location has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /lo followed by the location ID.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"    private static final String NO_LOCATION_FOUND_MESSAGE \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"            \"No location has been found in the list.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /lo followed by the location ID.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_PLANE_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"            \"No plane has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /pl followed by the plane ID.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy;","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cPlane\u003e\u003e planeManagerLazy;","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command factory with the model registered.","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    public LinkPlaneToLocationCommandFactory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command factory with the given modelLazy.","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"     * @param modelLazy the modelLazy used for the creation of the link command factory.","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"    public LinkPlaneToLocationCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"        this(","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getLocationManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getPlaneManager)","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link plane command factory with the given plane manager","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"     * @param locationManagerLazy the lazy instance of the location manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"cetigerlily"},"content":"     * @param planeManagerLazy    the lazy instance of the plane manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"    public LinkPlaneToLocationCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy,","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cPlane\u003e\u003e planeManagerLazy","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"        this.locationManagerLazy \u003d locationManagerLazy;","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"cetigerlily"},"content":"        this.planeManagerLazy \u003d planeManagerLazy;","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link plane command factory with the given plane manager","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"     * and the location manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"     * @param locationManager the flight manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"cetigerlily"},"content":"     * @param planeManager    the plane manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"    public LinkPlaneToLocationCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cLocation\u003e locationManager,","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cPlane\u003e planeManager","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"        this(","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(locationManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(planeManager)","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"                LOCATION_PREFIX,","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"cetigerlily"},"content":"                PLANE_PREFIX","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"        ));","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"    private boolean addPlane(","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"cetigerlily"},"content":"            Optional\u003cString\u003e planeIdOptional,","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"            PlaneLocationType type,","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"cetigerlily"},"content":"            Map\u003cPlaneLocationType, Plane\u003e target)","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"cetigerlily"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"cetigerlily"},"content":"        if (planeIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"        int planeId;","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"            planeId \u003d Command.parseIntegerToZeroBasedIndex(planeIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"                    planeIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"        boolean isPlaneIndexValid \u003d (planeId \u003c planeManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"        if (!isPlaneIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"cetigerlily"},"content":"                    planeId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cPlane\u003e planeOptional \u003d planeManagerLazy.get().getItemOptional(planeId);","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"        if (planeOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"        target.put(type, planeOptional.get());","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"        return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"    private Location getLocationOrThrow(","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"            Optional\u003cString\u003e locationIdOptional","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"BoAi01"},"content":"    ) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"BoAi01"},"content":"        if (locationIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(NO_LOCATION_MESSAGE);","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"        int locationId;","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"            locationId \u003d Command.parseIntegerToZeroBasedIndex(locationIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(INVALID_INDEX_VALUE_MESSAGE, locationIdOptional.get()));","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"        boolean isLocationIndexValid \u003d (locationId \u003c locationManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"        if (!isLocationIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"cetigerlily"},"content":"                    locationId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cLocation\u003e locationOptional \u003d locationManagerLazy.get().getItemOptional(locationId);","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"        if (locationOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_LOCATION_FOUND_MESSAGE);","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"BoAi01"},"content":"        return locationOptional.get();","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"    public LinkPlaneToLocationCommand createCommand(CommandParam param)","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"            throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"        Optional\u003cString\u003e locationIdOptional \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"BoAi01"},"content":"                param.getNamedValues(LOCATION_PREFIX);","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cString\u003e planeIdOptional \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"cetigerlily"},"content":"                param.getNamedValues(PLANE_PREFIX);","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"cetigerlily"},"content":"        Location location \u003d getLocationOrThrow(locationIdOptional);","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"BoAi01"},"content":"        Map\u003cPlaneLocationType, Plane\u003e plane \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"cetigerlily"},"content":"        boolean hasFoundPlane;","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"cetigerlily"},"content":"            hasFoundPlane \u003d addPlane(","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"cetigerlily"},"content":"                    planeIdOptional,","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"BoAi01"},"content":"                    PlaneLocationType.LOCATION_USING,","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"BoAi01"},"content":"                    plane","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"cetigerlily"},"content":"        if (!hasFoundPlane) {","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_PLANE_MESSAGE);","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"cetigerlily"},"content":"        return new LinkPlaneToLocationCommand(location, plane);","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"BoAi01":112,"cetigerlily":81,"wxxedu":13}},{"path":"src/main/java/wingman/logic/plane/unlinkflight/UnlinkPlaneToFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.plane.unlinkflight;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.FlightPlaneType;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":" * The command that unlinks a plane from a flight.","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"public class UnlinkPlaneToFlightCommand implements Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    private static final String FLIGHT_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"            \"Flight with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    private static final String PLANE_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"            \"Plane with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"            \"Unlinked %s from %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     * The id of the flight","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private final Flight flight;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"     * The id of the plane","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cFlightPlaneType, Plane\u003e planes;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"     * Creates a new link command.","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     * @param flight the id of the flight.","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"     * @param planes the id of the planes.","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"    public UnlinkPlaneToFlightCommand(Flight flight, Map\u003cFlightPlaneType, Plane\u003e planes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"        this.planes \u003d planes;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"        String result \u003d planes.entrySet()","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"                .stream()","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"                .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"                        \"%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                        entry.getValue().toString()))","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"        return String.format(DISPLAY_MESSAGE, result, flight.getCode());","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"            for (Map.Entry\u003cFlightPlaneType, Plane\u003e entry : planes.entrySet()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"                flight.planeLink.delete(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"                entry.getValue().setAvailable();","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"BoAi01":1,"jishnu28":46,"cetigerlily":15,"wxxedu":9}},{"path":"src/main/java/wingman/logic/plane/unlinkflight/UnlinkPlaneToFlightCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.plane.unlinkflight;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.exception.IndexOutOfBoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.FlightPlaneType;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":" * The factory that creates {@code UnlinkPlaneCommand}.","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"public class UnlinkPlaneToFlightCommandFactory implements CommandFactory\u003cUnlinkPlaneToFlightCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    private static final String COMMAND_WORD \u003d \"unlinkflight\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    private static final String FLIGHT_PREFIX \u003d \"/fl\";","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private static final String PLANE_USING_PREFIX \u003d \"/pl\";","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    private static final String NO_FLIGHT_MESSAGE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"            \"No flight has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /fl followed by the flight ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_PLANE_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"            \"No plane has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /pl followed by the plane ID.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cPlane\u003e\u003e planeManagerLazy;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink command factory with the model registered.","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPlaneToFlightCommandFactory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink command factory with the given modelLazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"     * @param modelLazy the modelLazy used for the creation of the unlink command factory.","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPlaneToFlightCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"        this(","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getFlightManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getPlaneManager)","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"        );","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink plane command factory with the given plane manager","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"     * @param flightManagerLazy the lazy instance of the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"cetigerlily"},"content":"     * @param planeManagerLazy  the lazy instance of the plane manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPlaneToFlightCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerLazy,","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cPlane\u003e\u003e planeManagerLazy","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"        this.flightManagerLazy \u003d flightManagerLazy;","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"cetigerlily"},"content":"        this.planeManagerLazy \u003d planeManagerLazy;","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"     * Creates a new unlink plane command factory with the given plane manager","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"     * and the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"     * @param flightManager the flight manager.","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"cetigerlily"},"content":"     * @param planeManager  the plane manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPlaneToFlightCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cFlight\u003e flightManager,","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cPlane\u003e planeManager","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"jishnu28"},"content":"    ) {","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"cetigerlily"},"content":"        this(Lazy.of(flightManager), Lazy.of(planeManager));","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"jishnu28"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"jishnu28"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"jishnu28"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"cetigerlily"},"content":"                FLIGHT_PREFIX,","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"cetigerlily"},"content":"                PLANE_USING_PREFIX","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"jishnu28"},"content":"        ));","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"jishnu28"},"content":"    private boolean addPlane(","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"jishnu28"},"content":"            Optional\u003cString\u003e planeIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"            FlightPlaneType type,","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"            Map\u003cFlightPlaneType, Plane\u003e target","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"    ) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"        if (planeIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"cetigerlily"},"content":"        int planeId;","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"cetigerlily"},"content":"            planeId \u003d Command.parseIntegerToZeroBasedIndex(planeIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"                    planeIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"        boolean isCrewIndexValid \u003d (planeId \u003c planeManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"        if (!isCrewIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"                    planeId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cPlane\u003e planeOptional \u003d planeManagerLazy.get().getItemOptional(planeId);","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"jishnu28"},"content":"        if (planeOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"jishnu28"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"jishnu28"},"content":"        target.put(type, planeOptional.get());","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"jishnu28"},"content":"        return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"jishnu28"},"content":"    private Flight getFlightOrThrow(","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"jishnu28"},"content":"            Optional\u003cString\u003e flightIdOptional","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"    ) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"jishnu28"},"content":"        if (flightIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"cetigerlily"},"content":"        int flightId;","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"cetigerlily"},"content":"            flightId \u003d Command.parseIntegerToZeroBasedIndex(flightIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"                    flightIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"        boolean isFlightIndexValid \u003d (flightId \u003c flightManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"        if (!isFlightIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"                    flightId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cFlight\u003e flightOptional \u003d flightManagerLazy.get().getItemOptional(flightId);","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"jishnu28"},"content":"        if (flightOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":167,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_FLIGHT_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":168,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"jishnu28"},"content":"        return flightOptional.get();","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPlaneToFlightCommand createCommand(","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"BoAi01"},"content":"            CommandParam param","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"    ) throws ParseException, IndexOutOfBoundException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"jishnu28"},"content":"        Optional\u003cString\u003e planeUsingIdOptional \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":178,"author":{"gitId":"jishnu28"},"content":"                param.getNamedValues(PLANE_USING_PREFIX);","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"cetigerlily"},"content":"        Flight flight \u003d getFlightOrThrow(param.getNamedValues(FLIGHT_PREFIX));","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"jishnu28"},"content":"        Map\u003cFlightPlaneType, Plane\u003e planes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":182,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":183,"author":{"gitId":"cetigerlily"},"content":"        boolean hasFoundPlane;","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"cetigerlily"},"content":"            hasFoundPlane \u003d addPlane(","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"jishnu28"},"content":"                    planeUsingIdOptional,","lastModifiedDate":"2023-03-19"},{"lineNumber":187,"author":{"gitId":"jishnu28"},"content":"                    FlightPlaneType.PLANE_USING,","lastModifiedDate":"2023-03-19"},{"lineNumber":188,"author":{"gitId":"jishnu28"},"content":"                    planes","lastModifiedDate":"2023-03-19"},{"lineNumber":189,"author":{"gitId":"jishnu28"},"content":"            );","lastModifiedDate":"2023-03-19"},{"lineNumber":190,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":194,"author":{"gitId":"jishnu28"},"content":"        if (!hasFoundPlane) {","lastModifiedDate":"2023-03-19"},{"lineNumber":195,"author":{"gitId":"jishnu28"},"content":"            throw new ParseException(NO_PLANE_MESSAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":196,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"cetigerlily"},"content":"        return new UnlinkPlaneToFlightCommand(flight, planes);","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"BoAi01":10,"jishnu28":102,"cetigerlily":74,"wxxedu":14}},{"path":"src/main/java/wingman/logic/plane/unlinklocation/UnlinkPlaneToLocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.plane.unlinklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.PlaneLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":" * The command class that unlinks plane to","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":" * locations, where they reside.","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"public class UnlinkPlaneToLocationCommand implements Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    private static final String PILOT_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"            \"Plane with ID %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    private static final String LOCATION_NOT_FOUND_EXCEPTION \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"            \"Location with id %s can\u0027t be found.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    private static final String DISPLAY_MESSAGE \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"            \"Unlinked %s from %s.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     * The id of the location","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    private final Location location;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"     * The id of the plane","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    private final Map\u003cPlaneLocationType, Plane\u003e plane;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command.","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"     * @param location the id of the location.","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"     * @param plane the id of the plane.","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"    public UnlinkPlaneToLocationCommand(Location location, Map\u003cPlaneLocationType, Plane\u003e plane) {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"        this.plane \u003d plane;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"        String result \u003d plane.entrySet()","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"                .stream()","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"                .map((entry) -\u003e String.format(","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                        \"%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"                        entry.getValue().toString()))","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"                .collect(Collectors.joining(\",\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        return String.format(DISPLAY_MESSAGE, result, location.getName());","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"            for (Map.Entry\u003cPlaneLocationType, Plane\u003e entry : plane.entrySet()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"                location.getPlaneLink().delete(entry.getKey(), entry.getValue());","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"        return new CommandResult(this.toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"BoAi01":49,"cetigerlily":13,"wxxedu":9}},{"path":"src/main/java/wingman/logic/plane/unlinklocation/UnlinkPlaneToLocationCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.plane.unlinklocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.PlaneLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":" * The command factory that unlinks pilots to locations.","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":" * Command factory is a class that can create an executable object, i.e.,","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":" * command class. The actual execution will be done by this object.","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"public class UnlinkPlaneToLocationCommandFactory implements CommandFactory\u003cUnlinkPlaneToLocationCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    private static final String COMMAND_WORD \u003d \"unlinklocation\";","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    private static final String LOCATION_PREFIX \u003d \"/lo\";","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    private static final String PLANE_PREFIX \u003d \"/pl\";","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    private static final String NO_LOCATION_MESSAGE \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"            \"No location has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /lo followed by the location ID.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    private static final String NO_PLANE_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"            \"No plane has been entered.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter /pl followed by the plane ID.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_INDEX_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid value.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try using an integer instead.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"    private static final String INDEX_OUT_OF_BOUNDS_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"            \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please enter a valid index.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy;","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"    private final Lazy\u003cReadOnlyItemManager\u003cPlane\u003e\u003e planeManagerLazy;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command factory with the model registered.","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPlaneToLocationCommandFactory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"        this(GetUtil.getLazy(Model.class));","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"     * Creates a new unlink command factory with the given modelLazy.","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"     * @param modelLazy the modelLazy used for the creation of the link command factory.","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPlaneToLocationCommandFactory(Lazy\u003cModel\u003e modelLazy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"        this(","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getLocationManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"                modelLazy.map(Model::getPlaneManager)","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link command factory with the given plane manager","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"     * lazy and the flight manager lazy.","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"     * @param locationManagerLazy the lazy instance of the location manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"cetigerlily"},"content":"     * @param planeManagerLazy    the lazy instance of the plane manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPlaneToLocationCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerLazy,","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"cetigerlily"},"content":"            Lazy\u003cReadOnlyItemManager\u003cPlane\u003e\u003e planeManagerLazy","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"        this.locationManagerLazy \u003d locationManagerLazy;","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"cetigerlily"},"content":"        this.planeManagerLazy \u003d planeManagerLazy;","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"     * Creates a new link plane command factory with the given plane manager","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"     * and the location manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"     * @param locationManager the flight manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"cetigerlily"},"content":"     * @param planeManager    the plane manager.","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPlaneToLocationCommandFactory(","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cLocation\u003e locationManager,","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"cetigerlily"},"content":"            ReadOnlyItemManager\u003cPlane\u003e planeManager","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"        this(","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(locationManager),","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"cetigerlily"},"content":"                Lazy.of(planeManager)","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"        return Optional.of(Set.of(","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"                LOCATION_PREFIX,","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"                PLANE_PREFIX","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"        ));","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"    private boolean addPlane(","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"cetigerlily"},"content":"            Optional\u003cString\u003e planeIdOptional,","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"            PlaneLocationType type,","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"            Map\u003cPlaneLocationType, Plane\u003e target","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"    ) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"cetigerlily"},"content":"        if (planeIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"cetigerlily"},"content":"        int planeId;","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"cetigerlily"},"content":"            planeId \u003d Command.parseIntegerToZeroBasedIndex(planeIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"                    planeIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"        boolean isPlaneIndexValid \u003d (planeId \u003c planeManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"        if (!isPlaneIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"                    planeId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cPlane\u003e planeOptional \u003d planeManagerLazy.get().getItemOptional(planeId);","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"        if (planeOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"        target.put(type, planeOptional.get());","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"        return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"    private Location getLocationOrThrow(","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"            Optional\u003cString\u003e locationIdOptional","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"    ) throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"        if (locationIdOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_LOCATION_MESSAGE);","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"cetigerlily"},"content":"        int locationId;","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"            locationId \u003d Command.parseIntegerToZeroBasedIndex(locationIdOptional.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_INDEX_VALUE_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"                    locationIdOptional.get()","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"        boolean isLocationIndexValid \u003d (locationId \u003c locationManagerLazy.get().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"        if (!isLocationIndexValid) {","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"                    INDEX_OUT_OF_BOUNDS_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"cetigerlily"},"content":"                    locationId + 1));","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"cetigerlily"},"content":"        Optional\u003cLocation\u003e locationOptional \u003d locationManagerLazy.get().getItemOptional(locationId);","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"BoAi01"},"content":"        if (locationOptional.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_LOCATION_MESSAGE);","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"        return locationOptional.get();","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"BoAi01"},"content":"    public UnlinkPlaneToLocationCommand createCommand(CommandParam param)","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"            throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"        Optional\u003cString\u003e locationIdOptional \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"                param.getNamedValues(LOCATION_PREFIX);","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"BoAi01"},"content":"        Optional\u003cString\u003e pilotIdOptional \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"BoAi01"},"content":"                param.getNamedValues(PLANE_PREFIX);","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"cetigerlily"},"content":"        Location location \u003d getLocationOrThrow(locationIdOptional);","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"BoAi01"},"content":"        Map\u003cPlaneLocationType, Plane\u003e plane \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"cetigerlily"},"content":"        boolean hasFoundPilot;","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"cetigerlily"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"cetigerlily"},"content":"            hasFoundPilot \u003d addPlane(","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"BoAi01"},"content":"                    pilotIdOptional,","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"BoAi01"},"content":"                    PlaneLocationType.LOCATION_USING,","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"BoAi01"},"content":"                    plane","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"cetigerlily"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"BoAi01"},"content":"        if (!hasFoundPilot) {","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(NO_PLANE_MESSAGE);","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"cetigerlily"},"content":"        return new UnlinkPlaneToLocationCommand(location, plane);","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"BoAi01":120,"cetigerlily":72,"wxxedu":13}},{"path":"src/main/java/wingman/logic/toplevel/add/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.add;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import wingman.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * The command that adds an item to the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e the type of the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"public class AddCommand\u003cT extends Item\u003e implements Command {","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * The function that\u0027s responsible for adding the item. {@link AddFunction}.","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    private final AddFunction\u003cT\u003e addFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * The item to be added.","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    private final T item;","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * The name of the type of the item that\u0027s being added.","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    private final String typeName;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * Creates a command that adds an item using the function.","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @param addFunction the function that adds the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * @param item        the item to be added.","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @param typeName    the type of the item to be added.","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    public AddCommand(AddFunction\u003cT\u003e addFunction, T item, String typeName) {","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        this.addFunction \u003d addFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        this.item \u003d item;","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        this.typeName \u003d typeName;","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"            addFunction.add(model, item);","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"        } catch (DuplicateItemException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"            return new CommandResult(","lastModifiedDate":"2023-04-01"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"                    String.format(","lastModifiedDate":"2023-04-01"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"                            \"%s %s already exists. Duplication not allowed. \",","lastModifiedDate":"2023-04-01"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"                            typeName.substring(0, 1).toUpperCase() + typeName.substring(1),","lastModifiedDate":"2023-04-01"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"                            item","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"                    )","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"        return new CommandResult(","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"                String.format(","lastModifiedDate":"2023-04-01"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"                    \"Added %s.\", item.toString()","lastModifiedDate":"2023-04-01"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"                )","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-04-01"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"BoAi01":16,"wxxedu":47}},{"path":"src/main/java/wingman/logic/toplevel/add/AddCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.add;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * The command factory that\u0027s responsible for producing commands that adds an","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * item to the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e the type of the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"public class AddCommandFactory\u003cT extends Item\u003e implements CommandFactory\u003cAddCommand\u003cT\u003e\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    private static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * The prefixes associated with this command.","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    private final Optional\u003cSet\u003cString\u003e\u003e prefixes;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * The function that\u0027s responsible for adding the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    private final AddFunction\u003cT\u003e addFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * The function that\u0027s responsible for creating an item.","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    private final ItemFactory\u003cT\u003e itemFactory;","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * The name of the type of the item that\u0027s being added.","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    private final String typeName;","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * Creates a new AddCommandFactory that\u0027s responsible for creating","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     * commands that add items.","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     * @param typeName    the name of the type of items that\u0027s added.","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     * @param prefixes    the prefixes of the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * @param addFunction the function that will add the corresponding item","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     *                    to the list.","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * @param itemFactory the factory that\u0027s responsible for creating the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    public AddCommandFactory(","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"            String typeName,","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"            Optional\u003cSet\u003cString\u003e\u003e prefixes,","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"            AddFunction\u003cT\u003e addFunction,","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"            ItemFactory\u003cT\u003e itemFactory","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        this.typeName \u003d typeName;","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        this.prefixes \u003d prefixes;","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        this.addFunction \u003d addFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        this.itemFactory \u003d itemFactory;","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        return prefixes;","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"    public AddCommand\u003cT\u003e createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        T item \u003d itemFactory.create(param);","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        return new AddCommand\u003c\u003e(addFunction, item, typeName);","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"wxxedu":77}},{"path":"src/main/java/wingman/logic/toplevel/add/AddFunction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.add;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * The interface that\u0027s responsible for adding the item to the given model.","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e the type of the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"@FunctionalInterface","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"public interface AddFunction\u003cT extends Item\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * Adds the given item to the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * @param model the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * @param item  the item to be added.","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    void add(Model model, T item);","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"wxxedu":20}},{"path":"src/main/java/wingman/logic/toplevel/add/ItemFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.add;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * The interface responsible for creating an item.","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e the type of the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"@FunctionalInterface","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"public interface ItemFactory\u003cT extends Item\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * Creates an item based on the {@link CommandParam} supplied.","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * @param param the command parameter after parsing","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * @return the item created","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if the command parameter does not fit the","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     *                        requirement.","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    T create(CommandParam param) throws ParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * Creates a plane.","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * @param param the command parameter after parsing.","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * @return a new crew","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if the parameter does not fit the requirements.","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    static Plane planeFactory(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        return null;","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     * Creates a crew.","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     * @param param the command parameter after parsing.","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * @return a new crew.","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if the parameter does not fit the requirements.","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    static Crew crewFactory(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        return null;","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * Creates a location.","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * @param param the command parameter after parsing.","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     * @return a new location.","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if the parameter does not fit the requirements.","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    static Location locationFactory(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        return null;","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     * Creates a flight.","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     * @param param the command parameter after parsing.","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     * @return a new flight.","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if the parameter does not fit the requirements.","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    static Flight flightFactory(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        return null;","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"wxxedu":71}},{"path":"src/main/java/wingman/logic/toplevel/changemode/ChangeModeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.changemode;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.OperationMode;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * The command that changes the operation mode of the application.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"public class ChangeModeCommand implements Command {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * The mode to change to.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    private final OperationMode mode;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public ChangeModeCommand(OperationMode mode) {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"        this.mode \u003d mode;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"        model.setOperationMode(mode);","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"        return new CommandResult(\"Currently in \" + mode + \" mode.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cetigerlily":1,"wxxedu":26}},{"path":"src/main/java/wingman/logic/toplevel/changemode/ChangeModeCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.changemode;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.OperationMode;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * The factory that\u0027s responsible for creating a {@code ChangeModeCommand}.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"public class ChangeModeCommandFactory implements CommandFactory\u003cChangeModeCommand\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    public static final String COMMAND_WORD \u003d \"mode\";","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    public ChangeModeCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"        final String modeStr \u003d param.getUnnamedValueOrThrow();","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        final OperationMode mode;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"            mode \u003d OperationMode.fromString(modeStr);","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"                    \"%s is an invalid mode.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"                            + \"Please try crew, flight, location, pilot, or plane.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"                    modeStr));","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        return new ChangeModeCommand(mode);","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cetigerlily":5,"wxxedu":37}},{"path":"src/main/java/wingman/logic/toplevel/delete/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.delete;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * The command that deletes an item.","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"public class DeleteCommand\u003cT extends Item\u003e implements Command {","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * The item.","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    private final int itemIndex;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * Delete function that deletes the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    private final DeleteFunction\u003cT\u003e deleteFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * The function that gets the manager.","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    private final GetManagerFunction\u003cT\u003e getManagerFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * The command that deletes an item.","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * @param itemIndex          the index of the item","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * @param getManagerFunction the function for getting the manager.","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @param deleteFunction     the function for deleting the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    public DeleteCommand(","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"            int itemIndex,","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"            GetManagerFunction\u003cT\u003e getManagerFunction,","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"            DeleteFunction\u003cT\u003e deleteFunction","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        this.deleteFunction \u003d deleteFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        this.getManagerFunction \u003d getManagerFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        T toDelete;","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"        boolean isValidIndex \u003d model.isIndexValid(itemIndex, getManagerFunction.get(model));","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"        if (!isValidIndex) {","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                    \"Index %s is out of bounds.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"                            + \"Please enter a valid index.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"                    itemIndex","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"            ));","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"            toDelete \u003d getManagerFunction.get(model).getItem(itemIndex - 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        deleteFunction.delete(model, toDelete);","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"                \"Deleted %s.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"                toDelete.toString()","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        ));","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"BoAi01":1,"cetigerlily":9,"wxxedu":57}},{"path":"src/main/java/wingman/logic/toplevel/delete/DeleteCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.delete;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * The command factory that produces commands that deletes the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"public class DeleteCommandFactory\u003cT extends Item\u003e implements CommandFactory\u003cDeleteCommand\u003cT\u003e\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * The command word for deletion.","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    private static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * The function that gets the manager.","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    private final GetManagerFunction\u003cT\u003e getManagerFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * The function that deletes the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    private final DeleteFunction\u003cT\u003e deleteFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * The command factory that deletes things.","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * @param getManagerFunction the function that gets the manager.","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @param deleteFunction     the function that deletes the object.","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    public DeleteCommandFactory(","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"            GetManagerFunction\u003cT\u003e getManagerFunction,","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"            DeleteFunction\u003cT\u003e deleteFunction","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        this.getManagerFunction \u003d getManagerFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        this.deleteFunction \u003d deleteFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    public DeleteCommand\u003cT\u003e createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"        int index \u003d param.getUnnamedIntOrThrow();","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"        return new DeleteCommand\u003c\u003e(index, getManagerFunction, deleteFunction);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"cetigerlily":6,"wxxedu":56}},{"path":"src/main/java/wingman/logic/toplevel/delete/DeleteFunction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.delete;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * The function that deletes an item.","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e the type of the item to be deleted.","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"@FunctionalInterface","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"public interface DeleteFunction\u003cT extends Item\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * Deletes the item with the given id and returns the deleted item.","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * @param model the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * @param item  the item to be deleted.","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * @throws CommandException if deletion fails.","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    void delete(Model model, T item) throws CommandException;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"wxxedu":22}},{"path":"src/main/java/wingman/logic/toplevel/delete/GetManagerFunction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.delete;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * The function that gets the manager.","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e the type of item managed by the manager.","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"@FunctionalInterface","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"public interface GetManagerFunction\u003cT extends Item\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * Gets the manager.","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * @return the manager.","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    ReadOnlyItemManager\u003cT\u003e get(Model model);","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"wxxedu":20}},{"path":"src/main/java/wingman/logic/toplevel/exit/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package wingman.logic.toplevel.exit;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import wingman.logic.core.Command;","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":" * The command that ends the whole program.","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    public ExitCommand() {}","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"        Platform.exit();","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        return new CommandResult(\"Bye bye!\");","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"BoAi01":20}},{"path":"src/main/java/wingman/logic/toplevel/exit/ExitCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package wingman.logic.toplevel.exit;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import wingman.logic.core.CommandFactory;","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" * The factory that\u0027s responsible for creating a {@code ExitCommand}.","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public class ExitCommandFactory implements CommandFactory\u003cExitCommand\u003e {","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"        return Optional.empty();","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    public ExitCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-04-01"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        return new ExitCommand();","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"BoAi01":30}},{"path":"src/main/java/wingman/logic/toplevel/syntax/CrewSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.syntax;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.CrewRank;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"import wingman.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * The class that stores the syntax for a crew.","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"public abstract class CrewSyntax extends ModelSyntax {","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * The prefix for name.","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_NAME \u003d \"/n\";","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * The prefix for rank.","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_RANK \u003d \"/r\";","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * The prefixes of a crew.","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    public static final Set\u003cString\u003e PREFIXES \u003d Set.of(","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"            PREFIX_NAME,","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"            PREFIX_RANK","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    );","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_CREW_RANK_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid crew rank.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try 0 for a Cabin Service Director, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"                    + \"1 for a Senior Flight Attendant,\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"                    + \"2 for a Flight Attendant, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"                    + \"or 3 for a Trainee.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     * The factory that creates a crew.","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * @param param the parameter.","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     * @return a new crew.","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if the param does not meet the expectations.","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    public static Crew factory(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"        final String name \u003d param.getNamedValuesOrThrow(PREFIX_NAME);","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"        requireAllAlphanumericOrSpace(name);","lastModifiedDate":"2023-04-01"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        final int rankId \u003d param.getNamedIntOrThrow(PREFIX_RANK);","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"        if (!(Stream.of(0, 1, 2, 3)","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"                .anyMatch(validRank -\u003e validRank.equals(rankId)))) {","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_CREW_RANK_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"                    rankId","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        final CrewRank rank \u003d CrewRank.fromIndex(rankId);","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        return new Crew(name, rank);","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"     * Adds the given crew to the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"     * @param model the model to which the crew shall be added.","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"     * @param crew  the crew that which will be added to the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"    public static void add(Model model, Crew crew) throws DuplicateItemException {","lastModifiedDate":"2023-04-01"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        model.addCrew(crew);","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     * Gets the manager for the crew.","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"     * @param model the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"     * @return the manager for the crew.","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"    public static ReadOnlyItemManager\u003cCrew\u003e getManager(Model model) {","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        return model.getCrewManager();","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"     * Deletes the crew from the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"     * @param model the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"     * @param crew  the crew to be deleted from the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    public static void delete(Model model, Crew crew) {","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"        model.deleteCrew(crew);","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"BoAi01":5,"cetigerlily":19,"wxxedu":73}},{"path":"src/main/java/wingman/logic/toplevel/syntax/FlightSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.syntax;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import wingman.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * The syntax for flight.","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"public abstract class FlightSyntax extends ModelSyntax {","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * The prefix for code.","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_CODE \u003d \"/c\";","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * The prefixes.","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public static final Set\u003cString\u003e PREFIXES \u003d Set.of(PREFIX_CODE);","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * Creates a flights.","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * @param param the parameter.","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * @return the flight created from param.","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if the param does not fit the requirement.","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    public static Flight factory(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"        final String code \u003d param.getNamedValuesOrThrow(PREFIX_CODE);","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"        requireAllAlphanumericOrSpace(code);","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        return new Flight(code);","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     * Adds a flight to the given model.","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     * @param model  the model to which the flight shall be added.","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * @param flight the flight that which will be added to the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    public static void add(Model model, Flight flight) throws DuplicateItemException {","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        model.addFlight(flight);","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * Gets the flight manager.","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     * @param model the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * @return the flight manager.","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"    public static ReadOnlyItemManager\u003cFlight\u003e getManager(Model model) {","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        return model.getFlightManager();","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     * Deletes the flight from the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     * @param model  the model from which the flight is deleted.","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     * @param flight the flight to be deleted.","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    public static void delete(Model model, Flight flight) {","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"        model.deleteFlight(flight);","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"BoAi01":4,"cetigerlily":1,"wxxedu":63}},{"path":"src/main/java/wingman/logic/toplevel/syntax/LocationSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.syntax;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import wingman.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * The syntax for location.","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"public abstract class LocationSyntax extends ModelSyntax {","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * The prefix for name.","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_NAME \u003d \"/n\";","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * The prefixes.","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public static final Set\u003cString\u003e PREFIXES \u003d Set.of(PREFIX_NAME);","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * Creates a location.","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * @param param the command parameter for location.","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * @return the location.","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if the command parameter does not fit the","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     *                        requirements.","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    public static Location factory(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        final String name \u003d param.getNamedValuesOrThrow(PREFIX_NAME);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"        requireAllAlphanumericOrSpace(name);","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        return new Location(name);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * Adds a location to the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * @param model    the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     * @param location the location.","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"    public static void add(Model model, Location location) throws DuplicateItemException {","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        model.addLocation(location);","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * Gets the manager for location.","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * @param model the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     * @return the manager for location.","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"    public static ReadOnlyItemManager\u003cLocation\u003e getManager(Model model) {","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        return model.getLocationManager();","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"     * Deletes the location from the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     * @param model    the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     * @param location the location to be deleted from the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    public static void delete(Model model, Location location) {","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        model.deleteLocation(location);","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"BoAi01":4,"cetigerlily":1,"wxxedu":64}},{"path":"src/main/java/wingman/logic/toplevel/syntax/ModelSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package wingman.logic.toplevel.syntax;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":" * The parent class of all Syntax classes.","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":" * It provides a method that checks the non-negativeness of integers, which is shared","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":" * across all children classes.","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"public abstract class ModelSyntax {","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    static final String NON_NEGATIVE_ERROR_MESSAGE \u003d \"Numerical values cannot be negative.\";","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    static final String NON_ALPHANUMERIC_SPACE_ERROR_MESSAGE \u003d \"The strings should only consist of \"","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"            + \"alphabets, numbers, and/or spaces.\";","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     * Checks all input integers are non-negative, otherwise an exception is thrown.","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     * @param integers integers to check, expected user-input integers","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * @throws ParseException when any of the integers is negative","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    public static void requireAllNonNegative(int... integers) throws ParseException {","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"        for (int integer: integers) {","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"            if (integer \u003c 0) {","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"                throw new ParseException(NON_NEGATIVE_ERROR_MESSAGE);","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    private static boolean isAlphanumericOrSpace(String input) {","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        if (input \u003d\u003d null || input.isEmpty()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"        for (int i \u003d 0; i \u003c input.length(); i++) {","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"            char c \u003d input.charAt(i);","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"            if (!Character.isLetterOrDigit(c) \u0026\u0026 c !\u003d \u0027 \u0027) {","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"                return false;","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        return true;","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"     * Checks all input strings are alphanumeric.","lastModifiedDate":"2023-04-01"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"     * @param strings the input strings from the user","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"     * @throws ParseException if any input string is not alphanumeric","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    protected static void requireAllAlphanumericOrSpace(String... strings) throws ParseException {","lastModifiedDate":"2023-04-01"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"        for (String string: strings) {","lastModifiedDate":"2023-04-01"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"            if (!isAlphanumericOrSpace(string)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"                throw new ParseException(NON_ALPHANUMERIC_SPACE_ERROR_MESSAGE);","lastModifiedDate":"2023-04-01"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"BoAi01":55}},{"path":"src/main/java/wingman/logic/toplevel/syntax/PilotSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.syntax;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import wingman.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Gender;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.PilotRank;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"import wingman.model.pilot.exceptions.InvalidGenderException;","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" * The syntax related to a pilot.","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"public abstract class PilotSyntax extends ModelSyntax {","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * The type name.","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"    public static final String TYPE_NAME \u003d \"pilot\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * The prefix for getting the name of the pilot.","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_NAME \u003d \"/n\";","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * The prefix for getting the rank of the pilot.","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_RANK \u003d \"/r\";","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * The prefix for getting the age of the pilot.","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_AGE \u003d \"/a\";","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * The prefix for getting the gender of the pilot.","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_GENDER \u003d \"/g\";","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * The prefix for getting the flight hour of the pilot.","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_FLIGHT_HOUR \u003d \"/fh\";","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"    private static final String INVALID_PILOT_RANK_MESSAGE \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"            \"%s is an invalid pilot rank.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"                    + \"Please try 0 for a Training Captain, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"                    + \"1 for a Captain, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"                    + \"2 for a Senior First Officer,\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"                    + \"3 for a First Officer, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"                    + \"4 for a Second Officer, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"                    + \"or 5 for a Cadet.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    private static final String INVALID_GENDER_MESSAGE \u003d","lastModifiedDate":"2023-04-01"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"            \"Input gender %s is invalid. \\n\"","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"                    + \"Please try 0 for male, 1 for female, or 2 for others.\";","lastModifiedDate":"2023-04-01"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     * The set of all prefixes of a pilot.","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    public static final Set\u003cString\u003e PREFIXES \u003d Set.of(","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"            PREFIX_NAME,","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"            PREFIX_AGE,","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"            PREFIX_RANK,","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"            PREFIX_GENDER,","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"            PREFIX_FLIGHT_HOUR","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    );","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"     * Parses the gender from a number.","lastModifiedDate":"2023-04-01"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"     * @param genderIdx User-input number indicating gender","lastModifiedDate":"2023-04-01"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"     * @return the Gender value","lastModifiedDate":"2023-04-01"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"     * @throws ParseException when the input number is not a valid gender type","lastModifiedDate":"2023-04-01"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"    private static Gender parseGenderFromNumber(int genderIdx) throws ParseException {","lastModifiedDate":"2023-04-01"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"        final Gender gender;","lastModifiedDate":"2023-04-01"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"            gender \u003d Gender.fromIndex(genderIdx);","lastModifiedDate":"2023-04-01"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"        } catch (InvalidGenderException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"            throw new ParseException(","lastModifiedDate":"2023-04-01"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"                    String.format(","lastModifiedDate":"2023-04-01"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"                            INVALID_GENDER_MESSAGE,","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"                            genderIdx","lastModifiedDate":"2023-04-01"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"                    )","lastModifiedDate":"2023-04-01"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-04-01"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"        return gender;","lastModifiedDate":"2023-04-01"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":95,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"     * Parses the rank from a number.","lastModifiedDate":"2023-04-01"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-04-01"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"     * @param rankIdx User-input number indicating gender","lastModifiedDate":"2023-04-01"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"     * @return the rank value","lastModifiedDate":"2023-04-01"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"     * @throws ParseException when the input number is not a valid gender type","lastModifiedDate":"2023-04-01"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"    private static PilotRank parseRankFromNumber(int rankIdx) throws ParseException {","lastModifiedDate":"2023-04-01"},{"lineNumber":104,"author":{"gitId":"cetigerlily"},"content":"        if (!(Stream.of(0, 1, 2, 3, 4, 5)","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"                .anyMatch(validRank -\u003e validRank.equals(rankIdx)))) {","lastModifiedDate":"2023-04-01"},{"lineNumber":106,"author":{"gitId":"cetigerlily"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"cetigerlily"},"content":"                    INVALID_PILOT_RANK_MESSAGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"                    rankIdx","lastModifiedDate":"2023-04-01"},{"lineNumber":109,"author":{"gitId":"cetigerlily"},"content":"            ));","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"        return PilotRank.fromIndex(rankIdx);","lastModifiedDate":"2023-04-01"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"     * Creates a pilot.","lastModifiedDate":"2023-04-01"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-04-01"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"     * @param param the command parameter after parsing.","lastModifiedDate":"2023-04-01"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"     * @return a new pilot","lastModifiedDate":"2023-04-01"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"     * @throws ParseException if the parameter does not fit the requirements, or","lastModifiedDate":"2023-04-01"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"     *                          the gender is invalid","lastModifiedDate":"2023-04-01"},{"lineNumber":122,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":123,"author":{"gitId":"BoAi01"},"content":"    public static Pilot factory(CommandParam param) throws ParseException {","lastModifiedDate":"2023-04-01"},{"lineNumber":124,"author":{"gitId":"BoAi01"},"content":"        final String name \u003d param.getNamedValuesOrThrow(PREFIX_NAME);","lastModifiedDate":"2023-04-01"},{"lineNumber":125,"author":{"gitId":"BoAi01"},"content":"        final int rankId \u003d param.getNamedIntOrThrow(PREFIX_RANK);","lastModifiedDate":"2023-04-01"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"        final PilotRank rank \u003d parseRankFromNumber(rankId);","lastModifiedDate":"2023-04-01"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"        final int age \u003d param.getNamedIntOrThrow(PREFIX_AGE);","lastModifiedDate":"2023-03-25"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"        final int genderId \u003d param.getNamedIntOrThrow(PREFIX_GENDER);","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"BoAi01"},"content":"        final Gender gender \u003d parseGenderFromNumber(genderId);","lastModifiedDate":"2023-04-01"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"        final int flightHour \u003d param.getNamedIntOrThrow(PREFIX_FLIGHT_HOUR);","lastModifiedDate":"2023-03-25"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"        requireAllNonNegative(age, flightHour);","lastModifiedDate":"2023-04-01"},{"lineNumber":133,"author":{"gitId":"BoAi01"},"content":"        requireAllAlphanumericOrSpace(name);","lastModifiedDate":"2023-04-01"},{"lineNumber":134,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"        return new Pilot(name, age, gender, rank, flightHour);","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"     * Adds the given pilot to the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"     * @param model the model to which the pilot is added.","lastModifiedDate":"2023-03-25"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"     * @param pilot the pilot that which is added to the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"    public static void add(Model model, Pilot pilot) throws DuplicateItemException {","lastModifiedDate":"2023-04-01"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"        model.addPilot(pilot);","lastModifiedDate":"2023-03-25"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"     * Gets the manager for pilot.","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"     * @param model the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"     * @return the manager for pilot.","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"    public static ReadOnlyItemManager\u003cPilot\u003e getManager(Model model) {","lastModifiedDate":"2023-03-25"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"        return model.getPilotManager();","lastModifiedDate":"2023-03-25"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"     * Deletes the pilot from the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"     * @param model the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"     * @param pilot the pilot.","lastModifiedDate":"2023-03-25"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"    public static void delete(Model model, Pilot pilot) {","lastModifiedDate":"2023-03-25"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"        model.deletePilot(pilot);","lastModifiedDate":"2023-03-25"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"BoAi01":55,"cetigerlily":26,"wxxedu":86}},{"path":"src/main/java/wingman/logic/toplevel/syntax/PlaneSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.toplevel.syntax;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandParam;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import wingman.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * The syntax for a plane.","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"public abstract class PlaneSyntax extends ModelSyntax {","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * The prefix for model.","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_MODEL \u003d \"/m\";","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * The prefix for age.","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_AGE \u003d \"/a\";","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * The prefixes.","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public static final Set\u003cString\u003e PREFIXES \u003d Set.of(","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"            PREFIX_MODEL,","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"            PREFIX_AGE","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    );","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * Creates a param.","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @param param the command parameter.","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     * @return the plane created.","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if the command parameter is not valid.","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    public static Plane factory(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        String model \u003d param.getNamedValuesOrThrow(PREFIX_MODEL);","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        int age \u003d param.getNamedIntOrThrow(PREFIX_AGE);","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"        requireAllAlphanumericOrSpace(model);","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        requireAllNonNegative(age);","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        return new Plane(model, age);","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     * Adds the given plane to the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     * @param model the model to which the plane shall be added.","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     * @param plane the plane that which shall be added to the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"    public static void add(Model model, Plane plane) throws DuplicateItemException {","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        model.addPlane(plane);","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     * Returns the manager for planes.","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     * @param model the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     * @return the manager for planes.","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    public static ReadOnlyItemManager\u003cPlane\u003e getManager(Model model) {","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        return model.getPlaneManager();","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"     * Deletes the plane from the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     * @param model the model.","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     * @param plane the plane.","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    public static void delete(Model model, Plane plane) {","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        model.deletePlane(plane);","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"BoAi01":7,"cetigerlily":2,"wxxedu":71}},{"path":"src/main/java/wingman/model/ItemManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static wingman.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.exception.IndexOutOfBoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.UniqueList;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"import wingman.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":" * Implementation of a read-only item manager, this has other methods","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" * that allows for the modification of the manager.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"public class ItemManager\u003cT extends Item\u003e implements","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"                                         ReadOnlyItemManager\u003cT\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * The internal list responsible for holding the items.","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    private final UniqueList\u003cT\u003e items;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    {","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"        items \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     * Initializes an empty {@code ItemManager}.","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    public ItemManager() {","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     * Creates a {@code ItemManager} from the given list of items.","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * Please make sure that the items in the list are unique.","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * @param toBeCopied the list of items out of which the {@code","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"     *                   ItemManager} will be created.","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    public ItemManager(ReadOnlyItemManager\u003cT\u003e toBeCopied) {","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        this();","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * Replaces the contents of the item list with {@code items}.","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * @param items the list of items to replace the current list with.","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"    public void setItems(List\u003cT\u003e items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        this.items.setItems(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"     * Resets the existing data of this {@code ItemManager} with","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"     * {@code newData}.","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     * @param newData the new data to be used.","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"    public void resetData(ReadOnlyItemManager\u003cT\u003e newData) {","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        setItems(newData.getItemList());","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"     * Checks if the item is in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     * @param item the item to check","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     * @return true if the item is in the list, false otherwise.","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"    public boolean hasItem(T item) {","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        return items.contains(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"     * Checks if the item with the given ID is in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     * @param id the ID of the item to check","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     * @return true if the item is in the list, false otherwise.","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"    public boolean hasItem(String id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        return items.contains(id);","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"     * Adds an item to the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"     * @param item the item to add","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"    public void addItem(T item) throws DuplicateItemException {","lastModifiedDate":"2023-04-01"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        items.add(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"     * Replaces the given item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"     * @param target     the item to be replaced","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"     * @param editedItem the item to replace with","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"    public void setItem(T target, T editedItem) {","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"        items.setItem(target, editedItem);","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"     * Removes {@code key} from this {@code ItemManager}.","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"     * @param item the item to remove","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"    public void removeItem(T item) {","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"        items.remove(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"    public void removeItem(String id) {","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"        items.remove(id);","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"BoAi01"},"content":"     * Remove an item in the list by the","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"BoAi01"},"content":"     * given index.","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"BoAi01"},"content":"     * @param index the index of the item to remove","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"     * @throws IndexOutOfBoundException when the given index larger than size","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"BoAi01"},"content":"    public void removeItemByIndex(int index) throws IndexOutOfBoundException {","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"        T itemToRemove \u003d getItem(index);","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"        removeItem(itemToRemove.getId());","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cT\u003e getItemOptional(String id) {","lastModifiedDate":"2023-03-25"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        for (T item : items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"            if (item.getId().equals(id)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"                return Optional.of(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"        return Optional.empty();","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cT\u003e getItemOptional(int index) {","lastModifiedDate":"2023-03-25"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"            return Optional.of(items.get(index));","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"        } catch (IndexOutOfBoundException e) {","lastModifiedDate":"2023-03-25"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-25"},{"lineNumber":155,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"    public T getItem(int index) throws IndexOutOfBoundException {","lastModifiedDate":"2023-03-25"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"        return items.get(index);","lastModifiedDate":"2023-03-25"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":162,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"    public T getItem(String id) {","lastModifiedDate":"2023-03-25"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"        return items.get(id);","lastModifiedDate":"2023-03-25"},{"lineNumber":166,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"    public int size() {","lastModifiedDate":"2023-02-23"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"        return this.items.size();","lastModifiedDate":"2023-02-23"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"    public ObservableList\u003cT\u003e getItemList() {","lastModifiedDate":"2023-02-23"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"        return this.items.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-23"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"        // TODO: refine later","lastModifiedDate":"2023-02-23"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"        return this.size() + \" items\";","lastModifiedDate":"2023-02-23"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":186,"author":{"gitId":"wxxedu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"            return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":189,"author":{"gitId":"BoAi01"},"content":"        if (!(other instanceof ItemManager\u003c?\u003e)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"            return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":192,"author":{"gitId":"BoAi01"},"content":"        ItemManager\u003c?\u003e otherItemManager \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":193,"author":{"gitId":"BoAi01"},"content":"                (ItemManager\u003c?\u003e) other;","lastModifiedDate":"2023-03-07"},{"lineNumber":194,"author":{"gitId":"BoAi01"},"content":"        return items.equals(otherItemManager.items);","lastModifiedDate":"2023-03-07"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"        return items.hashCode();","lastModifiedDate":"2023-02-23"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":34,"wxxedu":167}},{"path":"src/main/java/wingman/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.GuiSettings;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * {@code Predicate} that always evaluate to false","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    Predicate\u003cPilot\u003e PREDICATE_SHOW_ALL_PILOTS \u003d unused -\u003e false;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"     * {@code Predicate} that always evaluate to false","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    Predicate\u003cCrew\u003e PREDICATE_SHOW_ALL_CREW \u003d unused -\u003e false;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * Returns the user prefs\u0027 operation mode.","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    OperationMode getOperationMode();","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * Sets the user prefs\u0027 operation mode to {@code operationMode}.","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * @param operationMode The new operation mode.","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    void setOperationMode(OperationMode operationMode);","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"     * Returns the list of items.","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    ObservableList\u003cItem\u003e getItemsList();","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Pilot methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the list of pilots.","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"tangyuantyy"},"content":"    ObservableList\u003cPilot\u003e getPilotList();","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     * Returns the person manager.","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     * @return the person manager.","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"    ReadOnlyItemManager\u003cPilot\u003e getPilotManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     * Returns the pilot manager file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"     * @return the pilot manager file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    Path getPilotManagerFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     * Sets the pilot manager file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"     * @param pilotManagerFilePath the pilot manager file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    void setPilotManagerFilePath(Path pilotManagerFilePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"     * Replaces pilot manager data with the data in {@code pilotManager}.","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"     * @param pilotManager the pilot manager to replace with.","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"    void setPilotManager(ReadOnlyItemManager\u003cPilot\u003e pilotManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"     * Returns true if a pilot with the same identity as {@code pilot} exists","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"     * in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"     * @param pilot the pilot to check.","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"     * @return true if the pilot exists, false otherwise.","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"    boolean hasPilot(Pilot pilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"     * Deletes the given pilot.","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"     * The pilot must exist in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"     * @param target the pilot to delete.","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"    void deletePilot(Pilot target);","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"     * Deletes the pilot with the given id.","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"    void deletePilot(String id);","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"     * Deletes a pilot by index.","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"BoAi01"},"content":"     * @param index the index of the pilot to delete, which","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"BoAi01"},"content":"     *              should be the order of the object in the","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"BoAi01"},"content":"     *              list.","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"    void deletePilotByIndex(int index);","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"     * Adds the given pilot.","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"     * @param pilot the pilot to add.","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"    void addPilot(Pilot pilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"     * Replaces the given pilot {@code target} with {@code editedPilot}.","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"     * The pilot identity of {@code editedPilot} must not be the same as another existing pilot in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"     * @param target      the pilot to replace.","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"     * @param editedPilot the pilot to replace with.","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"    void setPilot(Pilot target, Pilot editedPilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":152,"author":{"gitId":"cetigerlily"},"content":"     * Checks the availability of the pilot.","lastModifiedDate":"2023-03-21"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"     * @param id the id of the pilot whose availability is to be checked.","lastModifiedDate":"2023-03-21"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"     * @return   the availability of the pilot.","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"    boolean checkPilot(String id);","lastModifiedDate":"2023-03-21"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":159,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"BoAi01"},"content":"     * Checks the availability of a pilot.","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"BoAi01"},"content":"     * @param index the index of the pilot in the list","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"BoAi01"},"content":"     * @return the availability of the pilot","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"BoAi01"},"content":"    boolean checkPilotByIndex(int index);","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"     * Returns an unmodifiable view of the filtered pilot list","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"    ObservableList\u003cPilot\u003e getFilteredPilotList();","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"     * Updates the filter of the filtered pilot list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"    void updateFilteredPilotList(Predicate\u003cPilot\u003e predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"cetigerlily"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Location methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":183,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the list of locations.","lastModifiedDate":"2023-03-26"},{"lineNumber":184,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":185,"author":{"gitId":"tangyuantyy"},"content":"    ObservableList\u003cLocation\u003e getLocationList();","lastModifiedDate":"2023-03-26"},{"lineNumber":186,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":187,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"BoAi01"},"content":"     * Returns location object by location id","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"BoAi01"},"content":"     * @param id the location id","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"BoAi01"},"content":"     * @return the location object with the id","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"BoAi01"},"content":"    Location getLocationById(String id);","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":196,"author":{"gitId":"BoAi01"},"content":"     * Returns true if the location is in the location list","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"BoAi01"},"content":"     * @param location a location object to be checked","lastModifiedDate":"2023-03-05"},{"lineNumber":199,"author":{"gitId":"BoAi01"},"content":"     * @return true if the location has already been in the list","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":201,"author":{"gitId":"BoAi01"},"content":"    boolean hasLocation(Location location);","lastModifiedDate":"2023-03-05"},{"lineNumber":202,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":203,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":204,"author":{"gitId":"BoAi01"},"content":"     * Delete a location from the location list","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"BoAi01"},"content":"     * @param uuid the id of the location to be deleted","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"BoAi01"},"content":"    void deleteLocation(String uuid);","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"BoAi01"},"content":"     * Deletes the given location from the","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"BoAi01"},"content":"     * location list.","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"BoAi01"},"content":"     * @param location the location object to","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"BoAi01"},"content":"     *                 delete.","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"BoAi01"},"content":"    void deleteLocation(Location location);","lastModifiedDate":"2023-03-23"},{"lineNumber":218,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"BoAi01"},"content":"     * Deletes a location by index.","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"BoAi01"},"content":"     * @param index the index of the location, which","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"BoAi01"},"content":"     *              should indicate its order in the","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"BoAi01"},"content":"     *              location list","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"BoAi01"},"content":"    void deleteLocationByIndex(int index);","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":228,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":229,"author":{"gitId":"BoAi01"},"content":"     * Add a location to the location list","lastModifiedDate":"2023-03-05"},{"lineNumber":230,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":231,"author":{"gitId":"BoAi01"},"content":"     * @param location the location to be added","lastModifiedDate":"2023-03-05"},{"lineNumber":232,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":233,"author":{"gitId":"BoAi01"},"content":"    void addLocation(Location location);","lastModifiedDate":"2023-03-05"},{"lineNumber":234,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":235,"author":{"gitId":"BoAi01"},"content":"    void setLocationManagerFilePath(Path pilotManagerFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":236,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":237,"author":{"gitId":"BoAi01"},"content":"    ReadOnlyItemManager\u003cLocation\u003e getLocationManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":238,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":239,"author":{"gitId":"BoAi01"},"content":"    Path getLocationManagerFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":240,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":241,"author":{"gitId":"BoAi01"},"content":"    void setLocationManager(ReadOnlyItemManager\u003cLocation\u003e locationManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":242,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":243,"author":{"gitId":"BoAi01"},"content":"    void setLocation(Location target, Location editedLocation);","lastModifiedDate":"2023-03-05"},{"lineNumber":244,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":245,"author":{"gitId":"BoAi01"},"content":"    ObservableList\u003cLocation\u003e getFilteredLocationList();","lastModifiedDate":"2023-03-05"},{"lineNumber":246,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":247,"author":{"gitId":"BoAi01"},"content":"    void updateFilteredLocationList(Predicate\u003cLocation\u003e predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":248,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":249,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":250,"author":{"gitId":"cetigerlily"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Crew methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":251,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":252,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":253,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the list of crew.","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"tangyuantyy"},"content":"    ObservableList\u003cCrew\u003e getCrewList();","lastModifiedDate":"2023-03-26"},{"lineNumber":256,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":257,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":258,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the crew manager file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":259,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":260,"author":{"gitId":"tangyuantyy"},"content":"     * @return the crew manager file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":261,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":262,"author":{"gitId":"tangyuantyy"},"content":"    Path getCrewManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":263,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":264,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":265,"author":{"gitId":"tangyuantyy"},"content":"     * Sets the crew manager file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":266,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":267,"author":{"gitId":"tangyuantyy"},"content":"     * @param crewManagerFilePath the crew manager file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":268,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":269,"author":{"gitId":"tangyuantyy"},"content":"    void setCrewManagerFilePath(Path crewManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":270,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":271,"author":{"gitId":"BoAi01"},"content":"    void setCrewManager(ReadOnlyItemManager\u003cCrew\u003e manager);","lastModifiedDate":"2023-03-07"},{"lineNumber":272,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":273,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":274,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the crew manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":275,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":276,"author":{"gitId":"tangyuantyy"},"content":"     * @return the crew manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":277,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":278,"author":{"gitId":"BoAi01"},"content":"    ReadOnlyItemManager\u003cCrew\u003e getCrewManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":279,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":280,"author":{"gitId":"tangyuantyy"},"content":"    boolean hasCrew(Crew crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":281,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":282,"author":{"gitId":"tangyuantyy"},"content":"    boolean hasCrew(String id);","lastModifiedDate":"2023-03-06"},{"lineNumber":283,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":284,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":285,"author":{"gitId":"tangyuantyy"},"content":"     * Add a crew to the crew list.","lastModifiedDate":"2023-03-06"},{"lineNumber":286,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":287,"author":{"gitId":"tangyuantyy"},"content":"     * @param crew the crew to be added.","lastModifiedDate":"2023-03-06"},{"lineNumber":288,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":289,"author":{"gitId":"tangyuantyy"},"content":"    void addCrew(Crew crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":290,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":291,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":292,"author":{"gitId":"tangyuantyy"},"content":"     * Deletes a crew to the crew list.","lastModifiedDate":"2023-03-06"},{"lineNumber":293,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":294,"author":{"gitId":"tangyuantyy"},"content":"     * @param crew the crew to be deleted.","lastModifiedDate":"2023-03-06"},{"lineNumber":295,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":296,"author":{"gitId":"tangyuantyy"},"content":"    void deleteCrew(Crew crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":297,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":298,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":299,"author":{"gitId":"tangyuantyy"},"content":"     * Deletes a crew to the crew list.","lastModifiedDate":"2023-03-06"},{"lineNumber":300,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":301,"author":{"gitId":"tangyuantyy"},"content":"     * @param id the id of the crew to be deleted.","lastModifiedDate":"2023-03-06"},{"lineNumber":302,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":303,"author":{"gitId":"tangyuantyy"},"content":"    void deleteCrew(String id);","lastModifiedDate":"2023-03-06"},{"lineNumber":304,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":305,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":306,"author":{"gitId":"BoAi01"},"content":"     * Deletes a crew by index.","lastModifiedDate":"2023-03-23"},{"lineNumber":307,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":308,"author":{"gitId":"BoAi01"},"content":"     * @param index the id of the crew to delete, and the id","lastModifiedDate":"2023-03-23"},{"lineNumber":309,"author":{"gitId":"BoAi01"},"content":"     *              should be assigned by the order of the","lastModifiedDate":"2023-03-23"},{"lineNumber":310,"author":{"gitId":"BoAi01"},"content":"     *              crew in the list.","lastModifiedDate":"2023-03-23"},{"lineNumber":311,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":312,"author":{"gitId":"BoAi01"},"content":"    void deleteCrew(int index);","lastModifiedDate":"2023-03-23"},{"lineNumber":313,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":314,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":315,"author":{"gitId":"BoAi01"},"content":"     * Deletes a crew by index, and the index is given by order.","lastModifiedDate":"2023-03-23"},{"lineNumber":316,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":317,"author":{"gitId":"BoAi01"},"content":"     * @param index the index of the crew to delete.","lastModifiedDate":"2023-03-23"},{"lineNumber":318,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":319,"author":{"gitId":"BoAi01"},"content":"    void deleteCrewByIndex(int index);","lastModifiedDate":"2023-03-23"},{"lineNumber":320,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":321,"author":{"gitId":"tangyuantyy"},"content":"    void setCrew(Crew target, Crew editedCrew);","lastModifiedDate":"2023-03-06"},{"lineNumber":322,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":323,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":324,"author":{"gitId":"cetigerlily"},"content":"     * Checks the availability of the crew.","lastModifiedDate":"2023-03-21"},{"lineNumber":325,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":326,"author":{"gitId":"cetigerlily"},"content":"     * @param id the id of the crew whose availability is to be checked.","lastModifiedDate":"2023-03-21"},{"lineNumber":327,"author":{"gitId":"cetigerlily"},"content":"     * @return   the availability of the crew.","lastModifiedDate":"2023-03-21"},{"lineNumber":328,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":329,"author":{"gitId":"cetigerlily"},"content":"    boolean checkCrew(String id);","lastModifiedDate":"2023-03-21"},{"lineNumber":330,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":331,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":332,"author":{"gitId":"BoAi01"},"content":"     * Checks the availability of the crew","lastModifiedDate":"2023-03-23"},{"lineNumber":333,"author":{"gitId":"BoAi01"},"content":"     * by order index.","lastModifiedDate":"2023-03-23"},{"lineNumber":334,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":335,"author":{"gitId":"BoAi01"},"content":"     * @param index the index of the crew, by order","lastModifiedDate":"2023-03-23"},{"lineNumber":336,"author":{"gitId":"BoAi01"},"content":"     * @return whether the crew is available","lastModifiedDate":"2023-03-23"},{"lineNumber":337,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":338,"author":{"gitId":"BoAi01"},"content":"    boolean checkCrewByIndex(int index);","lastModifiedDate":"2023-03-23"},{"lineNumber":339,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":340,"author":{"gitId":"tangyuantyy"},"content":"    void updateFilteredCrewList(Predicate\u003cCrew\u003e predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":341,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":342,"author":{"gitId":"tangyuantyy"},"content":"    ObservableList\u003cCrew\u003e getFilteredCrewList();","lastModifiedDate":"2023-03-06"},{"lineNumber":343,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":344,"author":{"gitId":"cetigerlily"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Plane methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":345,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":346,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":347,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the list of planes.","lastModifiedDate":"2023-03-26"},{"lineNumber":348,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":349,"author":{"gitId":"tangyuantyy"},"content":"    ObservableList\u003cPlane\u003e getPlaneList();","lastModifiedDate":"2023-03-26"},{"lineNumber":350,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":351,"author":{"gitId":"BoAi01"},"content":"    void setPlaneManager(ReadOnlyItemManager\u003cPlane\u003e manager);","lastModifiedDate":"2023-03-07"},{"lineNumber":352,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":353,"author":{"gitId":"BoAi01"},"content":"    ReadOnlyItemManager\u003cPlane\u003e getPlaneManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":354,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":355,"author":{"gitId":"cetigerlily"},"content":"    void addPlane(Plane plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":356,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":357,"author":{"gitId":"cetigerlily"},"content":"    void deletePlane(Plane plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":358,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":359,"author":{"gitId":"cetigerlily"},"content":"    void deletePlane(String id);","lastModifiedDate":"2023-03-06"},{"lineNumber":360,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":361,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":362,"author":{"gitId":"BoAi01"},"content":"     * Deletes a plane by order index.","lastModifiedDate":"2023-03-23"},{"lineNumber":363,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":364,"author":{"gitId":"BoAi01"},"content":"     * @param index the index of the plane to delete, by order","lastModifiedDate":"2023-03-23"},{"lineNumber":365,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":366,"author":{"gitId":"BoAi01"},"content":"    void deletePlaneByIndex(int index);","lastModifiedDate":"2023-03-23"},{"lineNumber":367,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":368,"author":{"gitId":"cetigerlily"},"content":"    boolean hasPlane(Plane plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":369,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":370,"author":{"gitId":"cetigerlily"},"content":"    boolean hasPlane(String id);","lastModifiedDate":"2023-03-06"},{"lineNumber":371,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":372,"author":{"gitId":"cetigerlily"},"content":"    void setPlane(Plane target, Plane editedPlane);","lastModifiedDate":"2023-03-06"},{"lineNumber":373,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":374,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":375,"author":{"gitId":"cetigerlily"},"content":"     * Checks the availability of the plane.","lastModifiedDate":"2023-03-21"},{"lineNumber":376,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":377,"author":{"gitId":"cetigerlily"},"content":"     * @param id the id of the plane whose availability is to be checked.","lastModifiedDate":"2023-03-21"},{"lineNumber":378,"author":{"gitId":"cetigerlily"},"content":"     * @return   the availability of the plane.","lastModifiedDate":"2023-03-21"},{"lineNumber":379,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":380,"author":{"gitId":"cetigerlily"},"content":"    boolean checkPlane(String id);","lastModifiedDate":"2023-03-21"},{"lineNumber":381,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":382,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":383,"author":{"gitId":"BoAi01"},"content":"     * Checks the availability of the plane by index, where","lastModifiedDate":"2023-03-23"},{"lineNumber":384,"author":{"gitId":"BoAi01"},"content":"     * the index should be based on the order in the list.","lastModifiedDate":"2023-03-23"},{"lineNumber":385,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":386,"author":{"gitId":"BoAi01"},"content":"     * @param index the index of the plane to check","lastModifiedDate":"2023-03-23"},{"lineNumber":387,"author":{"gitId":"BoAi01"},"content":"     * @return the availability of the plane","lastModifiedDate":"2023-03-23"},{"lineNumber":388,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":389,"author":{"gitId":"BoAi01"},"content":"    boolean checkPlaneByIndex(int index);","lastModifiedDate":"2023-03-23"},{"lineNumber":390,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":391,"author":{"gitId":"cetigerlily"},"content":"    ObservableList\u003cPlane\u003e getFilteredPlaneList();","lastModifiedDate":"2023-03-06"},{"lineNumber":392,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":393,"author":{"gitId":"cetigerlily"},"content":"    void updateFilteredPlaneList(Predicate\u003cPlane\u003e predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":394,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":395,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":396,"author":{"gitId":"cetigerlily"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Flight methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":397,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":398,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":399,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the list of flights.","lastModifiedDate":"2023-03-26"},{"lineNumber":400,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":401,"author":{"gitId":"tangyuantyy"},"content":"    ObservableList\u003cFlight\u003e getFlightList();","lastModifiedDate":"2023-03-26"},{"lineNumber":402,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":403,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":404,"author":{"gitId":"BoAi01"},"content":"     * Returns flight object by flight id","lastModifiedDate":"2023-03-14"},{"lineNumber":405,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":406,"author":{"gitId":"BoAi01"},"content":"     * @param id the flight id","lastModifiedDate":"2023-03-14"},{"lineNumber":407,"author":{"gitId":"BoAi01"},"content":"     * @return the flight object with the id","lastModifiedDate":"2023-03-14"},{"lineNumber":408,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":409,"author":{"gitId":"BoAi01"},"content":"    Flight getFlightById(String id);","lastModifiedDate":"2023-03-14"},{"lineNumber":410,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":411,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":412,"author":{"gitId":"jishnu28"},"content":"     * Returns the flight manager","lastModifiedDate":"2023-03-06"},{"lineNumber":413,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":414,"author":{"gitId":"jishnu28"},"content":"     * @return flight manager","lastModifiedDate":"2023-03-06"},{"lineNumber":415,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":416,"author":{"gitId":"BoAi01"},"content":"    ReadOnlyItemManager\u003cFlight\u003e getFlightManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":417,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":418,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":419,"author":{"gitId":"jishnu28"},"content":"     * Returns the flight manager file path","lastModifiedDate":"2023-03-06"},{"lineNumber":420,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":421,"author":{"gitId":"jishnu28"},"content":"     * @return flight manager file path","lastModifiedDate":"2023-03-06"},{"lineNumber":422,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":423,"author":{"gitId":"jishnu28"},"content":"    Path getFlightManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":424,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":425,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":426,"author":{"gitId":"jishnu28"},"content":"     * Sets the flight manager file path","lastModifiedDate":"2023-03-06"},{"lineNumber":427,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":428,"author":{"gitId":"jishnu28"},"content":"     * @param flightManagerFilePath flight manager file path","lastModifiedDate":"2023-03-07"},{"lineNumber":429,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":430,"author":{"gitId":"jishnu28"},"content":"    void setFlightManagerFilePath(Path flightManagerFilePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":431,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":432,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":433,"author":{"gitId":"jishnu28"},"content":"     * Replaces the current flight manager\u0027s data with data in {@code flightManager}","lastModifiedDate":"2023-03-06"},{"lineNumber":434,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":435,"author":{"gitId":"jishnu28"},"content":"     * @param flightManager the flight manager to replace with","lastModifiedDate":"2023-03-06"},{"lineNumber":436,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":437,"author":{"gitId":"BoAi01"},"content":"    void setFlightManager(ReadOnlyItemManager\u003cFlight\u003e flightManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":438,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":439,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":440,"author":{"gitId":"jishnu28"},"content":"     * Returns true if a flight with the same identity as {@code flight} exists in Wingman","lastModifiedDate":"2023-03-06"},{"lineNumber":441,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":442,"author":{"gitId":"wxxedu"},"content":"     * @param flight the flight","lastModifiedDate":"2023-03-17"},{"lineNumber":443,"author":{"gitId":"jishnu28"},"content":"     * @return true if flight exists, false otherwise","lastModifiedDate":"2023-03-06"},{"lineNumber":444,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":445,"author":{"gitId":"jishnu28"},"content":"    boolean hasFlight(Flight flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":446,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":447,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":448,"author":{"gitId":"jishnu28"},"content":"     * Deletes the given flight, if the flight exists in Wingman","lastModifiedDate":"2023-03-06"},{"lineNumber":449,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":450,"author":{"gitId":"jishnu28"},"content":"     * @param target flight to be deleted","lastModifiedDate":"2023-03-06"},{"lineNumber":451,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":452,"author":{"gitId":"jishnu28"},"content":"    void deleteFlight(Flight target);","lastModifiedDate":"2023-03-06"},{"lineNumber":453,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":454,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":455,"author":{"gitId":"BoAi01"},"content":"     * Deletes the flight with the given id","lastModifiedDate":"2023-03-23"},{"lineNumber":456,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":457,"author":{"gitId":"BoAi01"},"content":"     * @param id identifier of flight to be deleted","lastModifiedDate":"2023-03-23"},{"lineNumber":458,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":459,"author":{"gitId":"BoAi01"},"content":"    void deleteFlight(String id);","lastModifiedDate":"2023-03-23"},{"lineNumber":460,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":461,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":462,"author":{"gitId":"BoAi01"},"content":"     * Deletes a flight by index.","lastModifiedDate":"2023-03-23"},{"lineNumber":463,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":464,"author":{"gitId":"BoAi01"},"content":"     * @param index the index of the flight to delete by order.","lastModifiedDate":"2023-03-23"},{"lineNumber":465,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":466,"author":{"gitId":"BoAi01"},"content":"    void deleteFlightByIndex(int index);","lastModifiedDate":"2023-03-23"},{"lineNumber":467,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":468,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":469,"author":{"gitId":"jishnu28"},"content":"     * Adds the given flight","lastModifiedDate":"2023-03-06"},{"lineNumber":470,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":471,"author":{"gitId":"jishnu28"},"content":"     * @param flight flight to be added","lastModifiedDate":"2023-03-06"},{"lineNumber":472,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":473,"author":{"gitId":"jishnu28"},"content":"    void addFlight(Flight flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":474,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":475,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":476,"author":{"gitId":"jishnu28"},"content":"     * Replaces the given flight {@code target} with {@code editedFlight}","lastModifiedDate":"2023-03-06"},{"lineNumber":477,"author":{"gitId":"jishnu28"},"content":"     * {@code target} must exist in Wingman","lastModifiedDate":"2023-03-06"},{"lineNumber":478,"author":{"gitId":"jishnu28"},"content":"     * The flight identity of {@code editedFlight} must not be the same as another existing flight in Wingman","lastModifiedDate":"2023-03-06"},{"lineNumber":479,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":480,"author":{"gitId":"jishnu28"},"content":"     * @param target       the flight to be replaced","lastModifiedDate":"2023-03-06"},{"lineNumber":481,"author":{"gitId":"jishnu28"},"content":"     * @param editedFlight the flight to replace with","lastModifiedDate":"2023-03-06"},{"lineNumber":482,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":483,"author":{"gitId":"jishnu28"},"content":"    void setFlight(Flight target, Flight editedFlight);","lastModifiedDate":"2023-03-06"},{"lineNumber":484,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":485,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":486,"author":{"gitId":"jishnu28"},"content":"     * Returns an unmodifiable view of the filtered flight list","lastModifiedDate":"2023-03-06"},{"lineNumber":487,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":488,"author":{"gitId":"jishnu28"},"content":"     * @return unmodifiable view of the filtered flight list","lastModifiedDate":"2023-03-06"},{"lineNumber":489,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":490,"author":{"gitId":"jishnu28"},"content":"    ObservableList\u003cFlight\u003e getFilteredFlightList();","lastModifiedDate":"2023-03-06"},{"lineNumber":491,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":492,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":493,"author":{"gitId":"jishnu28"},"content":"     * Updates the filter of the filtered flight list to filter by the given {@code predicate}","lastModifiedDate":"2023-03-06"},{"lineNumber":494,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":495,"author":{"gitId":"jishnu28"},"content":"     * @param predicate the new predicate to use","lastModifiedDate":"2023-03-06"},{"lineNumber":496,"author":{"gitId":"jishnu28"},"content":"     * @throws NullPointerException if {@code predicate} is null","lastModifiedDate":"2023-03-06"},{"lineNumber":497,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":498,"author":{"gitId":"jishnu28"},"content":"    void updateFilteredFlightList(Predicate\u003cFlight\u003e predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":499,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":500,"author":{"gitId":"cetigerlily"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Generic \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":501,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":502,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":503,"author":{"gitId":"cetigerlily"},"content":"     * Checks whether a given index is in range of the current item list.","lastModifiedDate":"2023-03-28"},{"lineNumber":504,"author":{"gitId":"cetigerlily"},"content":"     * @param index the index inputted.","lastModifiedDate":"2023-03-28"},{"lineNumber":505,"author":{"gitId":"cetigerlily"},"content":"     * @return      a boolean determining whether the index is valid.","lastModifiedDate":"2023-03-28"},{"lineNumber":506,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":507,"author":{"gitId":"cetigerlily"},"content":"    \u003cT extends Item\u003e boolean isIndexValid(int index, ReadOnlyItemManager\u003cT\u003e itemManager);","lastModifiedDate":"2023-03-28"},{"lineNumber":508,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"BoAi01":149,"jishnu28":81,"cetigerlily":47,"wxxedu":117,"tangyuantyy":81,"-":33}},{"path":"src/main/java/wingman/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.GuiSettings;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.exceptions.CrewNotFoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.exception.IndexOutOfBoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.exceptions.FlightNotFoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"import wingman.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.exceptions.LocationNotFoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.exceptions.PilotNotFoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.exceptions.PlaneNotFoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    // pilot manager","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    private final ItemManager\u003cPilot\u003e pilotManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    private final FilteredList\u003cPilot\u003e filteredPilots;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"    private final ObservableList\u003cPilot\u003e pilotList;","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    // TODO: migrate this to the ui layer -\u003e this probably should be there.","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    // location manager","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"    private final ItemManager\u003cLocation\u003e locationManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"    private final FilteredList\u003cLocation\u003e filteredLocations;","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"tangyuantyy"},"content":"    private final ObservableList\u003cLocation\u003e locationList;","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"tangyuantyy"},"content":"    // crew manager","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"    private final ItemManager\u003cCrew\u003e crewManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"tangyuantyy"},"content":"    private final FilteredList\u003cCrew\u003e filteredCrew;","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"tangyuantyy"},"content":"    private final ObservableList\u003cCrew\u003e crewList;","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"    // plane manager","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"    private final ItemManager\u003cPlane\u003e planeManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"    private final FilteredList\u003cPlane\u003e filteredPlanes;","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"tangyuantyy"},"content":"    private final ObservableList\u003cPlane\u003e planeList;","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"    // flight manager","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"    private final ItemManager\u003cFlight\u003e flightManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"    private final FilteredList\u003cFlight\u003e filteredFlights;","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"tangyuantyy"},"content":"    private final ObservableList\u003cFlight\u003e flightList;","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"    // general utilities","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"    private final ObservableList\u003cItem\u003e itemsList;","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"    private Optional\u003cObservableList\u003c? extends Item\u003e\u003e lastBoundList \u003d Optional.empty();","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    public ModelManager(","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cPilot\u003e pilotManager,","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cLocation\u003e locationManager,","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cCrew\u003e crewManager,","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cPlane\u003e planeManager,","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyItemManager\u003cFlight\u003e flightManager","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        CollectionUtil.requireAllNonNull(userPrefs);","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        logger.fine(","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"                \"Initializing with Wingman storage(pilot, location, crew, plane, flight)\"","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"                        + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"        this.pilotManager \u003d new ItemManager\u003c\u003e(pilotManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        filteredPilots \u003d new FilteredList\u003c\u003e(this.pilotManager.getItemList());","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"        this.locationManager \u003d new ItemManager\u003c\u003e(locationManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"        filteredLocations \u003d new FilteredList\u003c\u003e(this.locationManager.getItemList());","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"        this.crewManager \u003d new ItemManager\u003c\u003e(crewManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"tangyuantyy"},"content":"        filteredCrew \u003d new FilteredList\u003c\u003e(this.crewManager.getItemList());","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"        this.planeManager \u003d new ItemManager\u003c\u003e(planeManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"cetigerlily"},"content":"        filteredPlanes \u003d new FilteredList\u003c\u003e(this.planeManager.getItemList());","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"        this.flightManager \u003d new ItemManager\u003c\u003e(flightManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"        filteredFlights \u003d new FilteredList\u003c\u003e(this.flightManager.getItemList());","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        itemsList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"tangyuantyy"},"content":"        flightList \u003d new FilteredList\u003c\u003e(filteredFlights);","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"tangyuantyy"},"content":"        crewList \u003d new FilteredList\u003c\u003e(filteredCrew);","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"tangyuantyy"},"content":"        planeList \u003d new FilteredList\u003c\u003e(filteredPlanes);","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"tangyuantyy"},"content":"        pilotList \u003d new FilteredList\u003c\u003e(filteredPilots);","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"tangyuantyy"},"content":"        locationList \u003d new FilteredList\u003c\u003e(filteredLocations);","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        setOperationMode(userPrefs.getOperationMode());","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"cetigerlily"},"content":"     * Initializes a ModelManager","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":117,"author":{"gitId":"jishnu28"},"content":"        this(new UserPrefs(), new ItemManager\u003c\u003e(),","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"                new ItemManager\u003c\u003e(), new ItemManager\u003c\u003e(),","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"                new ItemManager\u003c\u003e(), new ItemManager\u003c\u003e()","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"    public OperationMode getOperationMode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"        return userPrefs.getOperationMode();","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"     * Sets the operation mode of the app.","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"     * @param mode the new operation mode","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"    public void setOperationMode(OperationMode mode) {","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"        this.userPrefs.setOperationMode(mode);","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"        switch (mode) {","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"        case PILOT:","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"            rebind(filteredPilots);","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"        case PLANE:","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"            rebind(filteredPlanes);","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"jishnu28"},"content":"        case FLIGHT:","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"jishnu28"},"content":"            rebind(filteredFlights);","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"jishnu28"},"content":"        case CREW:","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"tangyuantyy"},"content":"            rebind(filteredCrew);","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"tangyuantyy"},"content":"            break;","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"        case LOCATION:","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"BoAi01"},"content":"            rebind(filteredLocations);","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"            logger.warning(\"Unknown operation mode: \" + mode);","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"    private void rebind(ObservableList\u003c? extends Item\u003e list) {","lastModifiedDate":"2023-03-07"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"        if (lastBoundList.isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"BoAi01"},"content":"            final ObservableList\u003c? extends Item\u003e lastBound \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"                    lastBoundList.get();","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"            Bindings.unbindContent(itemsList, lastBound);","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"        Bindings.bindContent(itemsList, list);","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"        lastBoundList \u003d Optional.of(list);","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"BoAi01"},"content":"    public ObservableList\u003cItem\u003e getItemsList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"        return itemsList;","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":186,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":187,"author":{"gitId":"tangyuantyy"},"content":"    public ObservableList\u003cFlight\u003e getFlightList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":188,"author":{"gitId":"tangyuantyy"},"content":"        return flightList;","lastModifiedDate":"2023-03-19"},{"lineNumber":189,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":190,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":191,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":192,"author":{"gitId":"tangyuantyy"},"content":"    public ObservableList\u003cCrew\u003e getCrewList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":193,"author":{"gitId":"tangyuantyy"},"content":"        return crewList;","lastModifiedDate":"2023-03-26"},{"lineNumber":194,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":195,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":196,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":197,"author":{"gitId":"tangyuantyy"},"content":"    public ObservableList\u003cPlane\u003e getPlaneList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":198,"author":{"gitId":"tangyuantyy"},"content":"        return planeList;","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":201,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"tangyuantyy"},"content":"    public ObservableList\u003cPilot\u003e getPilotList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":203,"author":{"gitId":"tangyuantyy"},"content":"        return pilotList;","lastModifiedDate":"2023-03-26"},{"lineNumber":204,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":205,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":206,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":207,"author":{"gitId":"tangyuantyy"},"content":"    public ObservableList\u003cLocation\u003e getLocationList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":208,"author":{"gitId":"tangyuantyy"},"content":"        return locationList;","lastModifiedDate":"2023-03-26"},{"lineNumber":209,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":210,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":222,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":223,"author":{"gitId":"wxxedu"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Pilot \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"BoAi01"},"content":"    public ReadOnlyItemManager\u003cPilot\u003e getPilotManager() {","lastModifiedDate":"2023-03-07"},{"lineNumber":227,"author":{"gitId":"wxxedu"},"content":"        return pilotManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"wxxedu"},"content":"    public Path getPilotManagerFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"wxxedu"},"content":"        return userPrefs.getPilotManagerFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"wxxedu"},"content":"    public void setPilotManagerFilePath(Path pilotManagerFilePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(pilotManagerFilePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"wxxedu"},"content":"        userPrefs.setPilotManagerFilePath(pilotManagerFilePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"BoAi01"},"content":"    public void setPilotManager(ReadOnlyItemManager\u003cPilot\u003e pilotManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":243,"author":{"gitId":"wxxedu"},"content":"        this.pilotManager.resetData(pilotManager);","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":245,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":246,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":247,"author":{"gitId":"wxxedu"},"content":"    public boolean hasPilot(Pilot pilot) {","lastModifiedDate":"2023-03-03"},{"lineNumber":248,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(pilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":249,"author":{"gitId":"wxxedu"},"content":"        return pilotManager.hasItem(pilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":250,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":251,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":252,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":253,"author":{"gitId":"wxxedu"},"content":"    public void deletePilot(Pilot target) {","lastModifiedDate":"2023-03-03"},{"lineNumber":254,"author":{"gitId":"wxxedu"},"content":"        pilotManager.removeItem(target);","lastModifiedDate":"2023-03-03"},{"lineNumber":255,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":258,"author":{"gitId":"wxxedu"},"content":"    public void deletePilot(String id) {","lastModifiedDate":"2023-03-04"},{"lineNumber":259,"author":{"gitId":"wxxedu"},"content":"        pilotManager.removeItem(id);","lastModifiedDate":"2023-03-04"},{"lineNumber":260,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":261,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":262,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"BoAi01"},"content":"    public void deletePilotByIndex(int index) throws IndexOutOfBoundException {","lastModifiedDate":"2023-03-24"},{"lineNumber":264,"author":{"gitId":"BoAi01"},"content":"        pilotManager.removeItemByIndex(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":268,"author":{"gitId":"wxxedu"},"content":"    public void addPilot(Pilot pilot) {","lastModifiedDate":"2023-03-03"},{"lineNumber":269,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(pilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":270,"author":{"gitId":"wxxedu"},"content":"        pilotManager.addItem(pilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":271,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":272,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":273,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":274,"author":{"gitId":"wxxedu"},"content":"    public void setPilot(Pilot target, Pilot editedPilot) {","lastModifiedDate":"2023-03-03"},{"lineNumber":275,"author":{"gitId":"wxxedu"},"content":"        CollectionUtil.requireAllNonNull(target, editedPilot);","lastModifiedDate":"2023-03-31"},{"lineNumber":276,"author":{"gitId":"wxxedu"},"content":"        pilotManager.setItem(target, editedPilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":277,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":278,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":279,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":280,"author":{"gitId":"cetigerlily"},"content":"    public boolean checkPilot(String id) {","lastModifiedDate":"2023-03-21"},{"lineNumber":281,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cPilot\u003e temp \u003d pilotManager.getItemOptional(id);","lastModifiedDate":"2023-03-25"},{"lineNumber":282,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":283,"author":{"gitId":"cetigerlily"},"content":"        if (temp.isPresent()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":284,"author":{"gitId":"cetigerlily"},"content":"            Pilot pilotToCheck \u003d temp.get();","lastModifiedDate":"2023-03-21"},{"lineNumber":285,"author":{"gitId":"cetigerlily"},"content":"            return pilotToCheck.isAvailable();","lastModifiedDate":"2023-03-21"},{"lineNumber":286,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":287,"author":{"gitId":"cetigerlily"},"content":"            throw new PilotNotFoundException();","lastModifiedDate":"2023-03-21"},{"lineNumber":288,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":289,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":290,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":291,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":292,"author":{"gitId":"BoAi01"},"content":"    public boolean checkPilotByIndex(int index) throws IndexOutOfBoundException {","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cPilot\u003e pilot \u003d pilotManager.getItemOptional(index);","lastModifiedDate":"2023-03-25"},{"lineNumber":294,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"BoAi01"},"content":"        if (pilot.isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"BoAi01"},"content":"            Pilot pilotToCheck \u003d pilot.get();","lastModifiedDate":"2023-03-23"},{"lineNumber":297,"author":{"gitId":"BoAi01"},"content":"            return pilotToCheck.isAvailable();","lastModifiedDate":"2023-03-23"},{"lineNumber":298,"author":{"gitId":"BoAi01"},"content":"        } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":299,"author":{"gitId":"BoAi01"},"content":"            throw new PilotNotFoundException();","lastModifiedDate":"2023-03-23"},{"lineNumber":300,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":301,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":302,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":303,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":304,"author":{"gitId":"wxxedu"},"content":"    public ObservableList\u003cPilot\u003e getFilteredPilotList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":305,"author":{"gitId":"wxxedu"},"content":"        return filteredPilots;","lastModifiedDate":"2023-03-03"},{"lineNumber":306,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":307,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":308,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":309,"author":{"gitId":"wxxedu"},"content":"    public void updateFilteredPilotList(Predicate\u003cPilot\u003e predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":310,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":311,"author":{"gitId":"wxxedu"},"content":"        filteredPilots.setPredicate(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":312,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":313,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":314,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":315,"author":{"gitId":"BoAi01"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Location \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":316,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":317,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":318,"author":{"gitId":"BoAi01"},"content":"    public Location getLocationById(String id) {","lastModifiedDate":"2023-03-14"},{"lineNumber":319,"author":{"gitId":"BoAi01"},"content":"        Location locationToFind \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":320,"author":{"gitId":"BoAi01"},"content":"        for (Location location : getFilteredLocationList()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":321,"author":{"gitId":"BoAi01"},"content":"            if (location.getId().equals(id)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":322,"author":{"gitId":"BoAi01"},"content":"                locationToFind \u003d location;","lastModifiedDate":"2023-03-14"},{"lineNumber":323,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":324,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":325,"author":{"gitId":"BoAi01"},"content":"        if (locationToFind \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":326,"author":{"gitId":"BoAi01"},"content":"            throw new LocationNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":327,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":328,"author":{"gitId":"BoAi01"},"content":"        return locationToFind;","lastModifiedDate":"2023-03-14"},{"lineNumber":329,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":330,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":331,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":332,"author":{"gitId":"BoAi01"},"content":"    public ReadOnlyItemManager\u003cLocation\u003e getLocationManager() {","lastModifiedDate":"2023-03-07"},{"lineNumber":333,"author":{"gitId":"BoAi01"},"content":"        return locationManager;","lastModifiedDate":"2023-03-05"},{"lineNumber":334,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":335,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":336,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":337,"author":{"gitId":"BoAi01"},"content":"    public Path getLocationManagerFilePath() {","lastModifiedDate":"2023-03-05"},{"lineNumber":338,"author":{"gitId":"BoAi01"},"content":"        return userPrefs.getPilotManagerFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":339,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":340,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":341,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":342,"author":{"gitId":"BoAi01"},"content":"    public void setLocationManagerFilePath(Path locationManagerFilePath) {","lastModifiedDate":"2023-03-05"},{"lineNumber":343,"author":{"gitId":"BoAi01"},"content":"        requireNonNull(locationManagerFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":344,"author":{"gitId":"BoAi01"},"content":"        userPrefs.setPilotManagerFilePath(locationManagerFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":345,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":346,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":347,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":348,"author":{"gitId":"BoAi01"},"content":"    public void setLocationManager(ReadOnlyItemManager\u003cLocation\u003e locationManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":349,"author":{"gitId":"BoAi01"},"content":"        this.locationManager.resetData(locationManager);","lastModifiedDate":"2023-03-05"},{"lineNumber":350,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":351,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":352,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":353,"author":{"gitId":"BoAi01"},"content":"    public boolean hasLocation(Location location) {","lastModifiedDate":"2023-03-05"},{"lineNumber":354,"author":{"gitId":"BoAi01"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":355,"author":{"gitId":"BoAi01"},"content":"        return locationManager.hasItem(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":356,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":357,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":358,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":359,"author":{"gitId":"BoAi01"},"content":"    public void deleteLocation(Location location) {","lastModifiedDate":"2023-03-05"},{"lineNumber":360,"author":{"gitId":"BoAi01"},"content":"        locationManager.removeItem(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":361,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":362,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":363,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":364,"author":{"gitId":"BoAi01"},"content":"    public void deleteLocation(String id) {","lastModifiedDate":"2023-03-05"},{"lineNumber":365,"author":{"gitId":"BoAi01"},"content":"        locationManager.removeItem(id);","lastModifiedDate":"2023-03-05"},{"lineNumber":366,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":367,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":368,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":369,"author":{"gitId":"BoAi01"},"content":"    public void deleteLocationByIndex(int index) throws IndexOutOfBoundException {","lastModifiedDate":"2023-03-24"},{"lineNumber":370,"author":{"gitId":"BoAi01"},"content":"        locationManager.removeItemByIndex(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":371,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":372,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":373,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":374,"author":{"gitId":"BoAi01"},"content":"    public void addLocation(Location location) throws DuplicateItemException {","lastModifiedDate":"2023-04-01"},{"lineNumber":375,"author":{"gitId":"BoAi01"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":376,"author":{"gitId":"BoAi01"},"content":"        locationManager.addItem(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":377,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":378,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":379,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":380,"author":{"gitId":"BoAi01"},"content":"    public void setLocation(Location target, Location editedLocation) {","lastModifiedDate":"2023-03-05"},{"lineNumber":381,"author":{"gitId":"wxxedu"},"content":"        CollectionUtil.requireAllNonNull(target, editedLocation);","lastModifiedDate":"2023-03-31"},{"lineNumber":382,"author":{"gitId":"BoAi01"},"content":"        locationManager.setItem(target, editedLocation);","lastModifiedDate":"2023-03-05"},{"lineNumber":383,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":384,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":385,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":386,"author":{"gitId":"BoAi01"},"content":"    public ObservableList\u003cLocation\u003e getFilteredLocationList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":387,"author":{"gitId":"BoAi01"},"content":"        return filteredLocations;","lastModifiedDate":"2023-03-05"},{"lineNumber":388,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":389,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":390,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":391,"author":{"gitId":"BoAi01"},"content":"    public void updateFilteredLocationList(Predicate\u003cLocation\u003e predicate) {","lastModifiedDate":"2023-03-05"},{"lineNumber":392,"author":{"gitId":"BoAi01"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":393,"author":{"gitId":"BoAi01"},"content":"        filteredLocations.setPredicate(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":394,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":395,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":396,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":397,"author":{"gitId":"jishnu28"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Crew \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":398,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":399,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":400,"author":{"gitId":"BoAi01"},"content":"    public void setCrewManager(ReadOnlyItemManager\u003cCrew\u003e crewManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":401,"author":{"gitId":"tangyuantyy"},"content":"        requireNonNull(crewManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":402,"author":{"gitId":"tangyuantyy"},"content":"        this.crewManager.resetData(crewManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":403,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":404,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":405,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":406,"author":{"gitId":"BoAi01"},"content":"    public ReadOnlyItemManager\u003cCrew\u003e getCrewManager() {","lastModifiedDate":"2023-03-07"},{"lineNumber":407,"author":{"gitId":"tangyuantyy"},"content":"        return crewManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":408,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":409,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":410,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":411,"author":{"gitId":"tangyuantyy"},"content":"    public Path getCrewManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":412,"author":{"gitId":"tangyuantyy"},"content":"        return userPrefs.getCrewManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":413,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":414,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":415,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":416,"author":{"gitId":"tangyuantyy"},"content":"    public void setCrewManagerFilePath(Path crewManagerFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":417,"author":{"gitId":"tangyuantyy"},"content":"        requireNonNull(crewManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":418,"author":{"gitId":"tangyuantyy"},"content":"        userPrefs.setCrewManagerFilePath(crewManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":419,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":420,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":421,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":422,"author":{"gitId":"tangyuantyy"},"content":"    public boolean hasCrew(Crew crew) {","lastModifiedDate":"2023-03-06"},{"lineNumber":423,"author":{"gitId":"tangyuantyy"},"content":"        requireNonNull(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":424,"author":{"gitId":"tangyuantyy"},"content":"        return this.crewManager.hasItem(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":425,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":426,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":427,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":428,"author":{"gitId":"tangyuantyy"},"content":"    public boolean hasCrew(String id) {","lastModifiedDate":"2023-03-06"},{"lineNumber":429,"author":{"gitId":"tangyuantyy"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":430,"author":{"gitId":"tangyuantyy"},"content":"        return this.crewManager.hasItem(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":431,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":432,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":433,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":434,"author":{"gitId":"BoAi01"},"content":"    public void addCrew(Crew crew) throws DuplicateItemException {","lastModifiedDate":"2023-04-01"},{"lineNumber":435,"author":{"gitId":"tangyuantyy"},"content":"        requireNonNull(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":436,"author":{"gitId":"tangyuantyy"},"content":"        crewManager.addItem(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":437,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":438,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":439,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":440,"author":{"gitId":"tangyuantyy"},"content":"    public void deleteCrew(Crew crew) {","lastModifiedDate":"2023-03-06"},{"lineNumber":441,"author":{"gitId":"tangyuantyy"},"content":"        crewManager.removeItem(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":442,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":443,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":444,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":445,"author":{"gitId":"tangyuantyy"},"content":"    public void deleteCrew(String id) {","lastModifiedDate":"2023-03-06"},{"lineNumber":446,"author":{"gitId":"tangyuantyy"},"content":"        crewManager.removeItem(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":447,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":448,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":449,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":450,"author":{"gitId":"BoAi01"},"content":"    public void deleteCrew(int index) throws IndexOutOfBoundException {","lastModifiedDate":"2023-03-24"},{"lineNumber":451,"author":{"gitId":"BoAi01"},"content":"        crewManager.removeItemByIndex(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":452,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":453,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":454,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":455,"author":{"gitId":"BoAi01"},"content":"    public void deleteCrewByIndex(int index) throws IndexOutOfBoundException {","lastModifiedDate":"2023-03-24"},{"lineNumber":456,"author":{"gitId":"BoAi01"},"content":"        crewManager.removeItemByIndex(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":457,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":458,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":459,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":460,"author":{"gitId":"tangyuantyy"},"content":"    public void setCrew(Crew target, Crew editedCrew) {","lastModifiedDate":"2023-03-06"},{"lineNumber":461,"author":{"gitId":"wxxedu"},"content":"        CollectionUtil.requireAllNonNull(target, editedCrew);","lastModifiedDate":"2023-03-31"},{"lineNumber":462,"author":{"gitId":"tangyuantyy"},"content":"        crewManager.setItem(target, editedCrew);","lastModifiedDate":"2023-03-06"},{"lineNumber":463,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":464,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":465,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":466,"author":{"gitId":"cetigerlily"},"content":"    public boolean checkCrew(String id) {","lastModifiedDate":"2023-03-21"},{"lineNumber":467,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cCrew\u003e temp \u003d crewManager.getItemOptional(id);","lastModifiedDate":"2023-03-25"},{"lineNumber":468,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":469,"author":{"gitId":"cetigerlily"},"content":"        if (temp.isPresent()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":470,"author":{"gitId":"cetigerlily"},"content":"            Crew crewToCheck \u003d temp.get();","lastModifiedDate":"2023-03-21"},{"lineNumber":471,"author":{"gitId":"cetigerlily"},"content":"            return crewToCheck.isAvailable();","lastModifiedDate":"2023-03-21"},{"lineNumber":472,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":473,"author":{"gitId":"cetigerlily"},"content":"            throw new CrewNotFoundException();","lastModifiedDate":"2023-03-21"},{"lineNumber":474,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":475,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":476,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":477,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":478,"author":{"gitId":"cetigerlily"},"content":"    public boolean checkCrewByIndex(int index) throws CrewNotFoundException {","lastModifiedDate":"2023-03-28"},{"lineNumber":479,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cCrew\u003e crew \u003d crewManager.getItemOptional(index);","lastModifiedDate":"2023-03-25"},{"lineNumber":480,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":481,"author":{"gitId":"BoAi01"},"content":"        if (crew.isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":482,"author":{"gitId":"BoAi01"},"content":"            Crew crewToCheck \u003d crew.get();","lastModifiedDate":"2023-03-23"},{"lineNumber":483,"author":{"gitId":"BoAi01"},"content":"            return crewToCheck.isAvailable();","lastModifiedDate":"2023-03-23"},{"lineNumber":484,"author":{"gitId":"BoAi01"},"content":"        } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":485,"author":{"gitId":"BoAi01"},"content":"            throw new CrewNotFoundException();","lastModifiedDate":"2023-03-23"},{"lineNumber":486,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":487,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":488,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":489,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":490,"author":{"gitId":"tangyuantyy"},"content":"    public void updateFilteredCrewList(Predicate\u003cCrew\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":491,"author":{"gitId":"tangyuantyy"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":492,"author":{"gitId":"tangyuantyy"},"content":"        filteredCrew.setPredicate(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":493,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":494,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":495,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":496,"author":{"gitId":"cetigerlily"},"content":"    public ObservableList\u003cCrew\u003e getFilteredCrewList() {","lastModifiedDate":"2023-03-28"},{"lineNumber":497,"author":{"gitId":"cetigerlily"},"content":"        return filteredCrew;","lastModifiedDate":"2023-03-28"},{"lineNumber":498,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":499,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":500,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":501,"author":{"gitId":"cetigerlily"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Plane \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":502,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":503,"author":{"gitId":"BoAi01"},"content":"    public void setPlaneManager(ReadOnlyItemManager\u003cPlane\u003e planeManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":504,"author":{"gitId":"cetigerlily"},"content":"        this.planeManager.resetData(planeManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":505,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":506,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":507,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":508,"author":{"gitId":"BoAi01"},"content":"    public ReadOnlyItemManager\u003cPlane\u003e getPlaneManager() {","lastModifiedDate":"2023-03-07"},{"lineNumber":509,"author":{"gitId":"cetigerlily"},"content":"        return this.planeManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":510,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":511,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":512,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":513,"author":{"gitId":"BoAi01"},"content":"    public void addPlane(Plane plane) throws DuplicateItemException {","lastModifiedDate":"2023-04-01"},{"lineNumber":514,"author":{"gitId":"wxxedu"},"content":"        CollectionUtil.requireAllNonNull(plane);","lastModifiedDate":"2023-03-31"},{"lineNumber":515,"author":{"gitId":"cetigerlily"},"content":"        planeManager.addItem(plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":516,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":517,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":518,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":519,"author":{"gitId":"cetigerlily"},"content":"    public void deletePlane(Plane plane) {","lastModifiedDate":"2023-03-06"},{"lineNumber":520,"author":{"gitId":"cetigerlily"},"content":"        planeManager.removeItem(plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":521,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":522,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":523,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":524,"author":{"gitId":"cetigerlily"},"content":"    public void deletePlane(String id) {","lastModifiedDate":"2023-03-06"},{"lineNumber":525,"author":{"gitId":"cetigerlily"},"content":"        planeManager.removeItem(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":526,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":527,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":528,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":529,"author":{"gitId":"BoAi01"},"content":"    public void deletePlaneByIndex(int index) throws IndexOutOfBoundException {","lastModifiedDate":"2023-03-24"},{"lineNumber":530,"author":{"gitId":"BoAi01"},"content":"        planeManager.removeItemByIndex(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":531,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":532,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":533,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":534,"author":{"gitId":"cetigerlily"},"content":"    public boolean hasPlane(Plane plane) {","lastModifiedDate":"2023-03-06"},{"lineNumber":535,"author":{"gitId":"cetigerlily"},"content":"        requireNonNull(plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":536,"author":{"gitId":"cetigerlily"},"content":"        return planeManager.hasItem(plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":537,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":538,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":539,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":540,"author":{"gitId":"cetigerlily"},"content":"    public boolean hasPlane(String id) {","lastModifiedDate":"2023-03-06"},{"lineNumber":541,"author":{"gitId":"cetigerlily"},"content":"        return planeManager.hasItem(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":542,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":543,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":544,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":545,"author":{"gitId":"cetigerlily"},"content":"    public void setPlane(Plane target, Plane editedPlane) {","lastModifiedDate":"2023-03-06"},{"lineNumber":546,"author":{"gitId":"wxxedu"},"content":"        CollectionUtil.requireAllNonNull(target, editedPlane);","lastModifiedDate":"2023-03-31"},{"lineNumber":547,"author":{"gitId":"cetigerlily"},"content":"        planeManager.setItem(target, editedPlane);","lastModifiedDate":"2023-03-06"},{"lineNumber":548,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":549,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":550,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":551,"author":{"gitId":"cetigerlily"},"content":"    public boolean checkPlane(String id) {","lastModifiedDate":"2023-03-21"},{"lineNumber":552,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cPlane\u003e temp \u003d planeManager.getItemOptional(id);","lastModifiedDate":"2023-03-25"},{"lineNumber":553,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":554,"author":{"gitId":"cetigerlily"},"content":"        if (temp.isPresent()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":555,"author":{"gitId":"cetigerlily"},"content":"            Plane planeToCheck \u003d temp.get();","lastModifiedDate":"2023-03-21"},{"lineNumber":556,"author":{"gitId":"cetigerlily"},"content":"            return planeToCheck.isAvailable();","lastModifiedDate":"2023-03-21"},{"lineNumber":557,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":558,"author":{"gitId":"cetigerlily"},"content":"            throw new PlaneNotFoundException();","lastModifiedDate":"2023-03-21"},{"lineNumber":559,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":560,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":561,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":562,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":563,"author":{"gitId":"BoAi01"},"content":"    public boolean checkPlaneByIndex(int index) throws IndexOutOfBoundException {","lastModifiedDate":"2023-03-24"},{"lineNumber":564,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cPlane\u003e plane \u003d planeManager.getItemOptional(index);","lastModifiedDate":"2023-03-25"},{"lineNumber":565,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":566,"author":{"gitId":"BoAi01"},"content":"        if (plane.isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":567,"author":{"gitId":"BoAi01"},"content":"            Plane planeToCheck \u003d plane.get();","lastModifiedDate":"2023-03-23"},{"lineNumber":568,"author":{"gitId":"BoAi01"},"content":"            return planeToCheck.isAvailable();","lastModifiedDate":"2023-03-23"},{"lineNumber":569,"author":{"gitId":"BoAi01"},"content":"        } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":570,"author":{"gitId":"BoAi01"},"content":"            throw new PlaneNotFoundException();","lastModifiedDate":"2023-03-23"},{"lineNumber":571,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":572,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":573,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":574,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":575,"author":{"gitId":"cetigerlily"},"content":"    public ObservableList\u003cPlane\u003e getFilteredPlaneList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":576,"author":{"gitId":"cetigerlily"},"content":"        return filteredPlanes;","lastModifiedDate":"2023-03-06"},{"lineNumber":577,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":578,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":579,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":580,"author":{"gitId":"cetigerlily"},"content":"    public void updateFilteredPlaneList(Predicate\u003cPlane\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":581,"author":{"gitId":"cetigerlily"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":582,"author":{"gitId":"cetigerlily"},"content":"        filteredPlanes.setPredicate(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":583,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":584,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":585,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":586,"author":{"gitId":"jishnu28"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Flight \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":587,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":588,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":589,"author":{"gitId":"BoAi01"},"content":"    public Flight getFlightById(String id) {","lastModifiedDate":"2023-03-14"},{"lineNumber":590,"author":{"gitId":"BoAi01"},"content":"        Flight flightToFind \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":591,"author":{"gitId":"BoAi01"},"content":"        for (Flight flight : getFilteredFlightList()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":592,"author":{"gitId":"BoAi01"},"content":"            if (flight.getId().equals(id)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":593,"author":{"gitId":"BoAi01"},"content":"                flightToFind \u003d flight;","lastModifiedDate":"2023-03-14"},{"lineNumber":594,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":595,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":596,"author":{"gitId":"BoAi01"},"content":"        if (flightToFind \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":597,"author":{"gitId":"BoAi01"},"content":"            throw new FlightNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":598,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":599,"author":{"gitId":"BoAi01"},"content":"        return flightToFind;","lastModifiedDate":"2023-03-14"},{"lineNumber":600,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":601,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":602,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":603,"author":{"gitId":"BoAi01"},"content":"    public ReadOnlyItemManager\u003cFlight\u003e getFlightManager() {","lastModifiedDate":"2023-03-07"},{"lineNumber":604,"author":{"gitId":"jishnu28"},"content":"        return flightManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":605,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":606,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":607,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":608,"author":{"gitId":"jishnu28"},"content":"    public Path getFlightManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":609,"author":{"gitId":"jishnu28"},"content":"        return userPrefs.getFlightManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":610,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":611,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":612,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":613,"author":{"gitId":"jishnu28"},"content":"    public void setFlightManagerFilePath(Path flightManagerFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":614,"author":{"gitId":"jishnu28"},"content":"        requireNonNull(flightManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":615,"author":{"gitId":"jishnu28"},"content":"        userPrefs.setFlightManagerFilePath(flightManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":616,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":617,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":618,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":619,"author":{"gitId":"BoAi01"},"content":"    public void setFlightManager(ReadOnlyItemManager\u003cFlight\u003e flightManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":620,"author":{"gitId":"jishnu28"},"content":"        this.flightManager.resetData(flightManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":621,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":622,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":623,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":624,"author":{"gitId":"jishnu28"},"content":"    public boolean hasFlight(Flight flight) {","lastModifiedDate":"2023-03-06"},{"lineNumber":625,"author":{"gitId":"jishnu28"},"content":"        requireNonNull(flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":626,"author":{"gitId":"jishnu28"},"content":"        return flightManager.hasItem(flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":627,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":628,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":629,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":630,"author":{"gitId":"jishnu28"},"content":"    public void deleteFlight(Flight target) {","lastModifiedDate":"2023-03-06"},{"lineNumber":631,"author":{"gitId":"jishnu28"},"content":"        flightManager.removeItem(target);","lastModifiedDate":"2023-03-06"},{"lineNumber":632,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":633,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":634,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":635,"author":{"gitId":"jishnu28"},"content":"    public void deleteFlight(String id) {","lastModifiedDate":"2023-03-06"},{"lineNumber":636,"author":{"gitId":"jishnu28"},"content":"        flightManager.removeItem(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":637,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":638,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":639,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":640,"author":{"gitId":"BoAi01"},"content":"    public void deleteFlightByIndex(int index) throws IndexOutOfBoundException {","lastModifiedDate":"2023-03-24"},{"lineNumber":641,"author":{"gitId":"BoAi01"},"content":"        flightManager.removeItemByIndex(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":642,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":643,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":644,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":645,"author":{"gitId":"BoAi01"},"content":"    public void addFlight(Flight flight) throws DuplicateItemException {","lastModifiedDate":"2023-04-01"},{"lineNumber":646,"author":{"gitId":"jishnu28"},"content":"        requireNonNull(flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":647,"author":{"gitId":"jishnu28"},"content":"        flightManager.addItem(flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":648,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":649,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":650,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":651,"author":{"gitId":"jishnu28"},"content":"    public void setFlight(Flight target, Flight editedFlight) {","lastModifiedDate":"2023-03-06"},{"lineNumber":652,"author":{"gitId":"wxxedu"},"content":"        CollectionUtil.requireAllNonNull(target, editedFlight);","lastModifiedDate":"2023-03-31"},{"lineNumber":653,"author":{"gitId":"jishnu28"},"content":"        flightManager.setItem(target, editedFlight);","lastModifiedDate":"2023-03-06"},{"lineNumber":654,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":655,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":656,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":657,"author":{"gitId":"jishnu28"},"content":"    public ObservableList\u003cFlight\u003e getFilteredFlightList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":658,"author":{"gitId":"jishnu28"},"content":"        return filteredFlights;","lastModifiedDate":"2023-03-06"},{"lineNumber":659,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":660,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":661,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":662,"author":{"gitId":"jishnu28"},"content":"    public void updateFilteredFlightList(Predicate\u003cFlight\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":663,"author":{"gitId":"jishnu28"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":664,"author":{"gitId":"jishnu28"},"content":"        filteredFlights.setPredicate(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":665,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":666,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":667,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":668,"author":{"gitId":"BoAi01"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Generic \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":669,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":670,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":671,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":674,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":677,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":679,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":680,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":682,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":683,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":684,"author":{"gitId":"jishnu28"},"content":"        return userPrefs.equals(other.userPrefs)","lastModifiedDate":"2023-03-11"},{"lineNumber":685,"author":{"gitId":"tangyuantyy"},"content":"                       \u0026\u0026 pilotManager.equals(other.pilotManager)","lastModifiedDate":"2023-03-06"},{"lineNumber":686,"author":{"gitId":"jishnu28"},"content":"                       \u0026\u0026 crewManager.equals(other.crewManager)","lastModifiedDate":"2023-03-11"},{"lineNumber":687,"author":{"gitId":"jishnu28"},"content":"                       \u0026\u0026 planeManager.equals(other.planeManager)","lastModifiedDate":"2023-03-11"},{"lineNumber":688,"author":{"gitId":"jishnu28"},"content":"                       \u0026\u0026 flightManager.equals(other.flightManager)","lastModifiedDate":"2023-03-11"},{"lineNumber":689,"author":{"gitId":"jishnu28"},"content":"                       \u0026\u0026 locationManager.equals(other.locationManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":690,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":691,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":692,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":693,"author":{"gitId":"wxxedu"},"content":"    public \u003cT extends Item\u003e boolean isIndexValid(","lastModifiedDate":"2023-03-31"},{"lineNumber":694,"author":{"gitId":"wxxedu"},"content":"            int index,","lastModifiedDate":"2023-03-31"},{"lineNumber":695,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyItemManager\u003cT\u003e itemManager","lastModifiedDate":"2023-03-31"},{"lineNumber":696,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-31"},{"lineNumber":697,"author":{"gitId":"BoAi01"},"content":"        return index \u003c\u003d itemManager.size() \u0026\u0026 index \u003e 0;","lastModifiedDate":"2023-04-01"},{"lineNumber":698,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":699,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BoAi01":194,"jishnu28":59,"cetigerlily":100,"wxxedu":176,"tangyuantyy":102,"-":68}},{"path":"src/main/java/wingman/model/OperationMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The mode at which the command is executed.","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public enum OperationMode {","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * The manager is currently managing pilots.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    PILOT,","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * The manager is currently managing planes.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    PLANE,","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * The manager is currently managing flights.","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    FLIGHT,","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * The manager is currently managing crew.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    CREW,","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * The manager is currently managing locations.","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    LOCATION;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * Converts an integer to a mode.","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * @param i the integer to convert, should be between 0 and 4.","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * @return the mode corresponding to the integer.","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    public static OperationMode fromInt(int i) throws IllegalArgumentException {","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        switch (i) {","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        case 0:","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"            return PILOT;","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        case 1:","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"            return PLANE;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        case 2:","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"            return FLIGHT;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        case 3:","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"            return CREW;","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        case 4:","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"            return LOCATION;","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"                \"Invalid mode index: \" + i + \", should be between 0 and 4\");","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * Converts a string to a mode.","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     * @param s the string to convert, should be one of pilot, plane, flight, crew, location.","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     * @return the mode corresponding to the string.","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"     * @throws IllegalArgumentException if the string is not one of the valid modes.","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    public static OperationMode fromString(String s) throws IllegalArgumentException {","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        switch (s.toLowerCase()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        case \"pilot\":","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"            return PILOT;","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        case \"plane\":","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"            return PLANE;","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        case \"flight\":","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"            return FLIGHT;","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        case \"crew\":","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"            return CREW;","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        case \"location\":","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"            return LOCATION;","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"                \"Invalid mode string: \" + s + \", should be one of pilot, plane, flight, crew, location\");","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     * Converts the mode to an integer, for storage.","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"     * @return the integer representation of the mode.","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    public int toInt() {","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        switch (this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        case PILOT:","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"            return 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        case PLANE:","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"            return 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        case FLIGHT:","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"            return 2;","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        case CREW:","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"            return 3;","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        case LOCATION:","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"            return 4;","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalArgumentException(\"Invalid mode: \" + this);","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"        switch (this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"        case PILOT:","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"            return \"Pilot\";","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        case PLANE:","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"            return \"Plane\";","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"        case FLIGHT:","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"            return \"Flight\";","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"        case CREW:","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"            return \"Crew\";","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        case LOCATION:","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"            return \"Location\";","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalArgumentException(\"Invalid mode: \" + this);","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":116}},{"path":"src/main/java/wingman/model/ReadOnlyItemManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":" * Unmodifiable view of an item manager.","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" * @param \u003cT\u003e the type of the item items","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public interface ReadOnlyItemManager\u003cT extends Item\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * Returns true if an item with the same identity as {@code item} exists","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * @param item the item to check","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * @return true if an item with the same identity as {@code item} exists","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    boolean hasItem(T item);","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * Returns true if an item with the given ID exists in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * @param id the ID of the item to check","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * @return true if an item with the given ID exists in the address book","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    boolean hasItem(String id);","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * Returns the item with the given ID.","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @param id the ID of the item to get","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * @return the item with the given ID","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    Optional\u003cT\u003e getItemOptional(String id);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     * Returns the item with the given index.","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     * @param index the index of the item to get.","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * @return the item at the given index.","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    Optional\u003cT\u003e getItemOptional(int index);","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"     * Returns the item at the given","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"     * index location.","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * @param index the index of the item counting","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"     *              from zero","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"     * @return the item at the given index","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"    T getItem(int index);","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"     * Returns the item with the given id.","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     * @param id the id of the item.","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"     * @return the item with the given id.","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    T getItem(String id);","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     * Returns the number of items in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"     * @return the number of items in the address book","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    int size();","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     * Returns an unmodifiable view of the items list. This list will not","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     * contain any duplicate items.","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     * @return an unmodifiable view of the items list","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"    ObservableList\u003cT\u003e getItemList();","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":11,"wxxedu":68}},{"path":"src/main/java/wingman/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.GuiSettings;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    OperationMode getOperationMode();","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"     * Returns the file path of the pilotManager","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"     * @return file path of the pilotManager","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    Path getPilotManagerFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"     * Sets the user prefs\u0027 pilot manager file path.","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"     * @param pilotManagerFilePath the new pilot manager file path","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    void setPilotManagerFilePath(Path pilotManagerFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"     * Returns the file path of the locationManager","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"     * @return file path of the locationManager","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    Path getLocationManagerFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"     * Sets the user prefs\u0027 location manager file path.","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     * @param locationManagerFilePath the new location manager file path","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    void setLocationManagerFilePath(Path locationManagerFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"    Path getCrewManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"    void setCrewManagerFilePath(Path crewManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"    Path getPlaneManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"    void setPlaneManagerFilePath(Path planeManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"     * Returns the file path of the flightManager","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"     * @return file path of the flightManager","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"    Path getFlightManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"     * Sets the user prefs\u0027 flight manager file path.","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"     * @param flightManagerFilePath the new flight manager file path","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"    void setFlightManagerFilePath(Path flightManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"BoAi01":4,"jishnu28":36,"cetigerlily":2,"wxxedu":5,"tangyuantyy":3,"-":12}},{"path":"src/main/java/wingman/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.GuiSettings;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    private Path pilotManagerFilePath \u003d Paths.get(","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"            \"data\",","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"            \"pilotmanager.json\"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    );","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    private Path locationManagerFilePath \u003d Paths.get(","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"            \"data\",","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"            \"locationmanager.json\"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    );","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    private Path crewManagerFilePath \u003d Paths.get(","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"            \"data\", \"crewmanager.json\"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    );","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    private Path planeManagerFilePath \u003d Paths.get(","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"            \"data\", \"planemanager.json\"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    );","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    private Path flightManagerFilePath \u003d Paths.get(","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"            \"data\",","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"            \"flightmanager.json\"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    );","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    private int operationModeId \u003d 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    public UserPrefs() {","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        setPilotManagerFilePath(newUserPrefs.getPilotManagerFilePath());","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"        setLocationManagerFilePath(newUserPrefs.getLocationManagerFilePath());","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"tangyuantyy"},"content":"        setCrewManagerFilePath(newUserPrefs.getCrewManagerFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"        setPlaneManagerFilePath(newUserPrefs.getPlaneManagerFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"        setFlightManagerFilePath(newUserPrefs.getFlightManagerFilePath());","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OperationMode \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     * Returns the operation mode of the application.","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"     * @return the operation mode of the application","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    public OperationMode getOperationMode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        return OperationMode.fromInt(operationModeId);","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     * Sets the operation mode of the application.","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"     * @param operationMode the new operation mode of the application","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"    public void setOperationMode(OperationMode operationMode) {","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(operationMode);","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"        this.operationModeId \u003d operationMode.toInt();","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PilotManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"    public Path getPilotManagerFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"        return this.pilotManagerFilePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"    public void setPilotManagerFilePath(Path pilotManagerFilePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(pilotManagerFilePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"        this.pilotManagerFilePath \u003d pilotManagerFilePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d LocationManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"    public Path getLocationManagerFilePath() {","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"        return locationManagerFilePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"    public void setLocationManagerFilePath(Path locationManagerFilePath) {","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"        requireNonNull(locationManagerFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"        this.locationManagerFilePath \u003d locationManagerFilePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"tangyuantyy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CrewManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"tangyuantyy"},"content":"    public Path getCrewManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"tangyuantyy"},"content":"        return this.crewManagerFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"tangyuantyy"},"content":"     * Sets the user prefs\u0027 crew manager file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"tangyuantyy"},"content":"     * @param crewManagerFilePath the new crew manager file path","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"tangyuantyy"},"content":"    public void setCrewManagerFilePath(Path crewManagerFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"tangyuantyy"},"content":"        requireNonNull(crewManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"tangyuantyy"},"content":"        this.crewManagerFilePath \u003d crewManagerFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"cetigerlily"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PlaneManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"cetigerlily"},"content":"    public Path getPlaneManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"cetigerlily"},"content":"        return this.planeManagerFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"cetigerlily"},"content":"    public void setPlaneManagerFilePath(Path planeManagerFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"cetigerlily"},"content":"        requireNonNull(planeManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"        this.planeManagerFilePath \u003d planeManagerFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FlightManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"jishnu28"},"content":"    public Path getFlightManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"jishnu28"},"content":"        return this.flightManagerFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"jishnu28"},"content":"    public void setFlightManagerFilePath(Path flightManagerFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"jishnu28"},"content":"        requireNonNull(flightManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"jishnu28"},"content":"        this.flightManagerFilePath \u003d flightManagerFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Generic \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"jishnu28"},"content":"        return guiSettings.equals(o.guiSettings);","lastModifiedDate":"2023-03-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"jishnu28"},"content":"        return Objects.hash(guiSettings);","lastModifiedDate":"2023-03-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BoAi01":14,"jishnu28":27,"cetigerlily":13,"wxxedu":58,"tangyuantyy":18,"-":68}},{"path":"src/main/java/wingman/model/crew/Crew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import java.util.UUID;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.CrewLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":" * Represents a Crew in the Wingman app.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public class Crew implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"     * The shape of the link between a flight and its crew","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    public static final Map\u003cFlightCrewType, Integer\u003e SHAPE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"            Map.of(FlightCrewType.CABIN_SERVICE_DIRECTOR, 1,","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"                    FlightCrewType.SENIOR_FLIGHT_ATTENDANT, 1,","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"                    FlightCrewType.FLIGHT_ATTENDANT, 12,","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"                    FlightCrewType.TRAINEE, 4","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"            );","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    public static final Map\u003cCrewLocationType, Integer\u003e SHAPE_FOR_LOCATION \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"            Map.of(","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"                    CrewLocationType.LOCATION_USING, 1000000","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    private static final String RANK_STRING \u003d \"Rank\";","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private static final String AVAILABILITY_STRING \u003d \"Status\";","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"    private final String id;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"    private final String name;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"    private final CrewRank rank;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"    private boolean isAvailable;","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a crew with a random UUID as its id.","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"     * @param name the name of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"     * @param rank the rank of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"    public Crew(String name, CrewRank rank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"        this(UUID.randomUUID().toString(), name, rank);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"tangyuantyy"},"content":"     * @param id   the id of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"tangyuantyy"},"content":"     * @param name the name of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"tangyuantyy"},"content":"     * @param rank the rank of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"tangyuantyy"},"content":"    public Crew(String id, String name, CrewRank rank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"tangyuantyy"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"tangyuantyy"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"tangyuantyy"},"content":"        this.rank \u003d rank;","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d true;","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the name of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"tangyuantyy"},"content":"     * @return the name of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"tangyuantyy"},"content":"    public String getName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"tangyuantyy"},"content":"        return name;","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the rank of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"tangyuantyy"},"content":"     * @return the rank of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"tangyuantyy"},"content":"    public CrewRank getRank() {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"tangyuantyy"},"content":"        return rank;","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the id of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"tangyuantyy"},"content":"     * @return the id of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"tangyuantyy"},"content":"    public String getId() {","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"tangyuantyy"},"content":"        return id;","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"cetigerlily"},"content":"     * Returns the availability of the crew.","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"cetigerlily"},"content":"     * @return the availability of the crew.","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"cetigerlily"},"content":"    public boolean isAvailable() {","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"cetigerlily"},"content":"        return this.isAvailable;","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"cetigerlily"},"content":"     * Sets the availability of the crew to unavailable.","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"cetigerlily"},"content":"    public void setUnavailable() {","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d false;","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"cetigerlily"},"content":"     * Sets the availability of the crew to available.","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"cetigerlily"},"content":"    public void setAvailable() {","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d true;","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"cetigerlily"},"content":"     * Returns a String corresponding to the availability of the crew.","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"cetigerlily"},"content":"     * @return the availability of the crew as a String","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"cetigerlily"},"content":"    public String getAvailabilityString() {","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"cetigerlily"},"content":"        return (this.isAvailable)","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"cetigerlily"},"content":"                ? \"Available\"","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"cetigerlily"},"content":"                : \"Unavailable\";","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"tangyuantyy"},"content":"    public List\u003cString\u003e getDisplayList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"BoAi01"},"content":"        return List.of(","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"tangyuantyy"},"content":"                String.format(\"%s\", name),","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", RANK_STRING, rank)","lastModifiedDate":"2023-04-01"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"        );","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"        return String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"                \"%s %s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"                rank,","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"                name);","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":137,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-04-01"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-04-01"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"            return true;","lastModifiedDate":"2023-04-01"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"        if (!(obj instanceof Crew)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-04-01"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"        Crew other \u003d (Crew) obj;","lastModifiedDate":"2023-04-01"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"        return other.getName().equals(getName());","lastModifiedDate":"2023-04-01"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":151,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":23,"jishnu28":15,"cetigerlily":42,"wxxedu":3,"tangyuantyy":68}},{"path":"src/main/java/wingman/model/crew/CrewRank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.exceptions.InvalidCrewRankException;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.exceptions.InvalidPilotRankException;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":" * Represents the rank of a crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"public enum CrewRank {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"    CABIN_SERVICE_DIRECTOR,","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"    SENIOR_FLIGHT_ATTENDANT,","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    FLIGHT_ATTENDANT,","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    TRAINEE;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"    public static final String CABIN_SERVICE_DIRECTOR_STRING \u003d \"Cabin Service Director\";","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    public static final String SENIOR_FLIGHT_ATTENDANT_STRING \u003d \"Senior Flight Attendant\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    public static final String FLIGHT_ATTENDANT_STRING \u003d \"Flight Attendant\";","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"    public static final String TRAINEE_STRING \u003d \"Trainee\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the string representation of the crew rank.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"     * @return the string representation of the crew rank","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"        switch (this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"        case CABIN_SERVICE_DIRECTOR:","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"            return CABIN_SERVICE_DIRECTOR_STRING;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"        case SENIOR_FLIGHT_ATTENDANT:","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"            return SENIOR_FLIGHT_ATTENDANT_STRING;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"        case FLIGHT_ATTENDANT:","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"            return FLIGHT_ATTENDANT_STRING;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"        case TRAINEE:","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"            return TRAINEE_STRING;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"        default:","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"            throw new InvalidPilotRankException(this);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the crew rank from the string representation.","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"     * @param rank the string representation of the crew rank","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"     * @return the crew rank","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"    public static CrewRank fromString(String rank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"tangyuantyy"},"content":"        switch (rank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"tangyuantyy"},"content":"        case CABIN_SERVICE_DIRECTOR_STRING:","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"tangyuantyy"},"content":"            return CABIN_SERVICE_DIRECTOR;","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"tangyuantyy"},"content":"        case SENIOR_FLIGHT_ATTENDANT_STRING:","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"tangyuantyy"},"content":"            return SENIOR_FLIGHT_ATTENDANT;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"tangyuantyy"},"content":"        case FLIGHT_ATTENDANT_STRING:","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"tangyuantyy"},"content":"            return FLIGHT_ATTENDANT;","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"tangyuantyy"},"content":"        case TRAINEE_STRING:","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"tangyuantyy"},"content":"            return TRAINEE;","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"tangyuantyy"},"content":"        default:","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"tangyuantyy"},"content":"            throw new InvalidCrewRankException(rank);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the index of the crew rank in the enum.","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"tangyuantyy"},"content":"     * @return the index of the crew rank in the enum","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"tangyuantyy"},"content":"    public int toIndex() {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"tangyuantyy"},"content":"        switch (this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"tangyuantyy"},"content":"        case CABIN_SERVICE_DIRECTOR:","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"tangyuantyy"},"content":"            return 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"tangyuantyy"},"content":"        case SENIOR_FLIGHT_ATTENDANT:","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"tangyuantyy"},"content":"            return 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"tangyuantyy"},"content":"        case FLIGHT_ATTENDANT:","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"tangyuantyy"},"content":"            return 2;","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"tangyuantyy"},"content":"        case TRAINEE:","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"tangyuantyy"},"content":"            return 3;","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"tangyuantyy"},"content":"        default:","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"tangyuantyy"},"content":"            throw new InvalidCrewRankException(this);","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the crew rank from the index.","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"tangyuantyy"},"content":"     * @param index the index of the crew rank in the enum","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"tangyuantyy"},"content":"     * @return the crew rank","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"tangyuantyy"},"content":"    public static CrewRank fromIndex(int index) {","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"tangyuantyy"},"content":"        switch (index) {","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"tangyuantyy"},"content":"        case 0:","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"tangyuantyy"},"content":"            return CABIN_SERVICE_DIRECTOR;","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"tangyuantyy"},"content":"        case 1:","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"tangyuantyy"},"content":"            return SENIOR_FLIGHT_ATTENDANT;","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"tangyuantyy"},"content":"        case 2:","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"tangyuantyy"},"content":"            return FLIGHT_ATTENDANT;","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"tangyuantyy"},"content":"        case 3:","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"tangyuantyy"},"content":"            return TRAINEE;","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"tangyuantyy"},"content":"        default:","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"tangyuantyy"},"content":"            throw new InvalidCrewRankException(index);","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"wxxedu":3,"tangyuantyy":98}},{"path":"src/main/java/wingman/model/crew/FlightCrewType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":" * The types of crew for a flight.","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"public enum FlightCrewType {","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"     * The cabin service director","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"    CABIN_SERVICE_DIRECTOR,","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"     * The senior flight attendant","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    SENIOR_FLIGHT_ATTENDANT,","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"     * The flight attendant","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    FLIGHT_ATTENDANT,","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"     * The trainee","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"    TRAINEE;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"        switch (this) {","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"        case CABIN_SERVICE_DIRECTOR:","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"            return \"Cabin Service Director\";","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"        case SENIOR_FLIGHT_ATTENDANT:","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"            return \"Senior Flight Attendant\";","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"        case FLIGHT_ATTENDANT:","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"            return \"Flight Attendant\";","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"        case TRAINEE:","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"            return \"Trainee\";","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"        default:","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"            return \"Unknown\";","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"jishnu28":38,"wxxedu":1}},{"path":"src/main/java/wingman/model/crew/exceptions/CrewNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.crew.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":" * Signals that the crew cannot be found in the list.","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"public class CrewNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"    public CrewNotFoundException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"        super(\"Crew not found in the list.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"cetigerlily":9,"wxxedu":1}},{"path":"src/main/java/wingman/model/crew/exceptions/InvalidCrewRankException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.crew.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":" * The exception thrown when the pilot rank is invalid.","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"public class InvalidCrewRankException extends RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"     * Constructs a new {@code InvalidPilotRankException} with the specified","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"     * detail {@code rank}.","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"     * @param rank the rank that is invalid, either an enum or a string.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    public InvalidCrewRankException(Object rank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"        super(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"                \"%s is an invalid crew rank.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"                        + \"Please try 0 for a Cabin Service Director, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"                        + \"1 for a Senior Flight Attendant,\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"                        + \"2 for a Flight Attendant, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"                        + \"or 3 for a Trainee.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"                rank.toString()));","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cetigerlily":7,"wxxedu":1,"tangyuantyy":14}},{"path":"src/main/java/wingman/model/exception/IndexOutOfBoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.exception;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * The error message that indicates the given index","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" * is out of bound of the data structure.","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"public class IndexOutOfBoundException extends RuntimeException {","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"    static final String ERROR_MESSAGE \u003d \"Index out of bound. \";","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"    public IndexOutOfBoundException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"     * Returns the exception object with more specific error","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     * message that includes information about the index and","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     * the maximum index allowed.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * @param givenIndex the index queried","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     * @param totalSize the maximum index value allowed","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     *                  by the data structure","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    public IndexOutOfBoundException(int givenIndex, int totalSize) {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"        super(","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"                String.format(\"The given index %d is larger than \"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"                                + \"the maximum size %d\",","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"                        givenIndex,","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"                        totalSize)","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BoAi01":30,"wxxedu":1}},{"path":"src/main/java/wingman/model/flight/Flight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.UUID;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.FlightCrewType;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.Link;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.FlightLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.FlightPilotType;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.FlightPlaneType;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":" * Represents a flight object in wingman","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"public class Flight implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public final Link\u003cFlightPilotType, Pilot, ReadOnlyItemManager\u003cPilot\u003e\u003e pilotLink;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    public final Link\u003cFlightCrewType, Crew, ReadOnlyItemManager\u003cCrew\u003e\u003e crewLink;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    public final Link\u003cFlightPlaneType, Plane, ReadOnlyItemManager\u003cPlane\u003e\u003e planeLink;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    public final Link\u003cFlightLocationType, Location, ReadOnlyItemManager\u003cLocation\u003e\u003e locationLink;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    private final String code;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    private final String id;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    //TODO: Add exceptions to ensure departure and arrival locations are distinct","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * Creates a new flight","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @param id           the id of the  flight","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @param code         the code","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     * @param pilotLink    the link to the pilot","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     * @param crewLink     the link to the crew","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"     * @param planeLink    the link to the plane","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"     * @param locationLink the link to the location","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    public Flight(","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"            String id,","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"            String code,","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"            Link\u003cFlightPilotType, Pilot, ReadOnlyItemManager\u003cPilot\u003e\u003e pilotLink,","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"            Link\u003cFlightCrewType, Crew, ReadOnlyItemManager\u003cCrew\u003e\u003e crewLink,","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"            Link\u003cFlightPlaneType, Plane, ReadOnlyItemManager\u003cPlane\u003e\u003e planeLink,","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"            Link\u003cFlightLocationType, Location, ReadOnlyItemManager\u003cLocation\u003e\u003e locationLink","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        this.pilotLink \u003d pilotLink;","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"        this.crewLink \u003d crewLink;","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"        this.planeLink \u003d planeLink;","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"        this.locationLink \u003d locationLink;","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"     * Creates a flight with a random UUID as its id","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"     * @param code the code of the flight","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    public Flight(String code) {","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"        this(UUID.randomUUID().toString(), code,","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"                new Link\u003c\u003e(","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"                        Pilot.SHAPE,","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"                        GetUtil.getLazy(Model.class).map(Model::getPilotManager)","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"                ), new Link\u003c\u003e(","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"                        Crew.SHAPE,","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"                        GetUtil.getLazy(Model.class).map(Model::getCrewManager)","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"                ), new Link\u003c\u003e(","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"                        Plane.SHAPE,","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"                        GetUtil.getLazy(Model.class).map(Model::getPlaneManager)","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"                ), new Link\u003c\u003e(","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"                        Location.SHAPE,","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"                        GetUtil","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"                                .getLazy(Model.class)","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"                                .map(Model::getLocationManager)","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"                )","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"jishnu28"},"content":"    public String getCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"jishnu28"},"content":"        return this.code;","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"     * Returns the pilot link of the flight.","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"     * @return the link to pilots","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"    public Link\u003cFlightPilotType, Pilot, ReadOnlyItemManager\u003cPilot\u003e\u003e getPilotLink() {","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"        return pilotLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"     * Returns the crew link of the flight.","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"     * @return the link to crews","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"    public Link\u003cFlightCrewType, Crew, ReadOnlyItemManager\u003cCrew\u003e\u003e getCrewLink() {","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"        return crewLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"     * Returns the plane link of the flight.","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"     * @return the link to planes","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"    public Link\u003cFlightPlaneType, Plane, ReadOnlyItemManager\u003cPlane\u003e\u003e getPlaneLink() {","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"        return planeLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"     * Returns the location link of the flight.","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"     * @return the link to locations","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"    public Link\u003cFlightLocationType, Location, ReadOnlyItemManager\u003cLocation\u003e\u003e getLocationLink() {","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"        return locationLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"cetigerlily"},"content":"    public String toString() {","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"        return getCode();","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"jishnu28"},"content":"    public List\u003cString\u003e getDisplayList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"jishnu28"},"content":"        return List.of(","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"tangyuantyy"},"content":"                String.format(\"%s\", code),","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"                String.format(\"%s: %s\\n\", \"Plane\", planeLink.toString()),","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"                String.format(\"%s: %s\\n\", \"Pilots\", pilotLink.toString()),","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"                String.format(\"%s: %s\\n\", \"Crew\", crewLink.toString()),","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"                String.format(\"%s: %s\\n\", \"Locations\", locationLink.toString())","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"jishnu28"},"content":"        );","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"jishnu28"},"content":"    public String getId() {","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"jishnu28"},"content":"        return this.id;","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-04-01"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-04-01"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"            return true;","lastModifiedDate":"2023-04-01"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":151,"author":{"gitId":"BoAi01"},"content":"        if (!(obj instanceof Flight)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":152,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-04-01"},{"lineNumber":153,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":154,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":155,"author":{"gitId":"BoAi01"},"content":"        Flight other \u003d (Flight) obj;","lastModifiedDate":"2023-04-01"},{"lineNumber":156,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":157,"author":{"gitId":"BoAi01"},"content":"        return other.getCode().equals(getCode());","lastModifiedDate":"2023-04-01"},{"lineNumber":158,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":159,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":52,"jishnu28":56,"cetigerlily":9,"wxxedu":41,"tangyuantyy":1}},{"path":"src/main/java/wingman/model/flight/exceptions/FlightNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.flight.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":" * Signals that the flight cannot be found in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"public class FlightNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"    public FlightNotFoundException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"        super(\"Flight not found in the list.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"cetigerlily":9,"wxxedu":1}},{"path":"src/main/java/wingman/model/item/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.item;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * The interface for objects that are identifiable by a unique ID.","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"public interface Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * Returns the ID of the object.","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * @return the ID of the object","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    String getId();","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * Returns the display list of the object. This will be used for display","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * in JavaFX. Doing so would make it easier for us to work on the","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * \"back-end\" part of the application first without worrying much about","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * the front-end, and it significantly reduces the amount of work we will","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * need to do. However, this also means that we won\u0027t have as much","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * flexibility in the front-end.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * @return the display list of the object","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    default List\u003cString\u003e getDisplayList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"        return List.of(\"ID: \" + getId(), \"NOT IMPLEMENTED\");","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * Returns true if the two objects are the same.","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * @param a the first object","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @param b the second object","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * @return true if the two objects are the same type and have the same ID","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    static boolean isSame(Item a, Item b) {","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        if (a \u003d\u003d b) {","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"            return true;","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        return a.getClass().equals(b.getClass()) \u0026\u0026 a.getId().equals(b.getId());","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"BoAi01":2,"wxxedu":41}},{"path":"src/main/java/wingman/model/item/UniqueList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.item;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"import wingman.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":" * The class that resembles a list of items that are unique.","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e the type of item in the list. They must implement the {@code","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":" *            Item} interface so that they can be identified by their","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":" *            unique ID.","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"public class UniqueList\u003cT extends Item\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * The internal list responsible for holding the items.","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    private final ObservableList\u003cT\u003e internalList;","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * The internal map responsible for holding the items. This would allow","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * us an O(1) implementation of queries.","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    private final Map\u003cString, T\u003e internalMap;","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * The unmodifiable view of the {@code internalList}.","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList;","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     * Creates a {@code UniqueList} from the given list of items. Please make","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     * sure that the items in the list are unique.","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     * @param internalList the list of items out of which the {@code UniqueList}","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     *                     will be created.","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    private UniqueList(ObservableList\u003cT\u003e internalList) {","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"        this.internalList \u003d internalList;","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        this.internalMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        internalList.forEach((val) -\u003e internalMap.put(val.getId(), val));","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"                internalList);","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"     * Creates an empty {@code UniqueList}.","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    public UniqueList() {","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"        this(FXCollections.observableArrayList());","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     * Creates a {@code UniqueList} from the given list of items. Please make","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"     * sure that the items in the list are unique.","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"     * @param internalList the list of items out of which the {@code UniqueList}","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"     *                     will be created.","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e          the type of item in the list. They must implement the","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"     *                     {@code Item} interface so that they can be","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     *                     identified by their unique ID.","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     * @return a {@code UniqueList} from the given list of items.","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    public static \u003cT extends Item\u003e UniqueList\u003cT\u003e fromObservableList(","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"            ObservableList\u003cT\u003e internalList","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(internalList);","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        CollectionUtil.requireAllNonNull(internalList.toArray());","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        if (!internalList.isEmpty() \u0026\u0026 itemsHaveDuplicate(internalList)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"            throw new DuplicateItemException(internalList.get(0).getClass());","lastModifiedDate":"2023-04-01"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        return new UniqueList\u003c\u003e(internalList);","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     * Returns true if the list contains an equivalent {@code T} as the given","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"     * argument.","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"     * @return true if the list contains an equivalent {@code T} as the given","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"     *         argument.","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"        return internalMap.containsKey(toCheck.getId())","lastModifiedDate":"2023-04-01"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"                ||","lastModifiedDate":"2023-04-01"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"                internalList.contains(toCheck);","lastModifiedDate":"2023-04-01"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"     * Returns true if the list contains an item with the given ID.","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"     * @param id the ID to check","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"     * @return true if the list contains an item with the given ID.","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"    public boolean contains(String id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"        return this.internalMap.containsKey(id);","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"     * Adds a {@code T} to the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"     * The {@code T} must not already exist in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"            throw new DuplicateItemException(toAdd.getClass());","lastModifiedDate":"2023-04-01"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"        internalMap.put(toAdd.getId(), toAdd);","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"     * Replaces the {@code T} {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"     * @param target     the {@code T} to be replaced.","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"     * @param editedItem the {@code T} to replace the target with.","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"    public void setItem(T target, T editedItem) {","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"        CollectionUtil.requireAllNonNull(target, editedItem);","lastModifiedDate":"2023-03-31"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"            throw new ItemNotFoundException(target);","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"        if (!Item.isSame(target, editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"            throw new DuplicateItemException(editedItem.getClass());","lastModifiedDate":"2023-04-01"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"        internalMap.remove(target.getId());","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"        internalMap.put(editedItem.getId(), editedItem);","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"     * Removes the equivalent {@code T} from the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"     * The {@code T} must exist in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"        this.remove(toRemove.getId());","lastModifiedDate":"2023-02-23"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"     * Removes the item with the given ID from the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"     * The item with the given ID must exist in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"    public void remove(String id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-02-23"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"        if (!internalList.removeIf((val) -\u003e val.getId().equals(id))) {","lastModifiedDate":"2023-02-23"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"            throw new ItemNotFoundException(id);","lastModifiedDate":"2023-02-23"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"            internalMap.remove(id);","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"     * Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2023-02-22"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"     * @param replacement the replacement list.","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"    public void setItems(List\u003cT\u003e replacement) {","lastModifiedDate":"2023-02-23"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"        if (UniqueList.itemsHaveDuplicate(replacement)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"            throw new DuplicateItemException(replacement.get(0).getClass());","lastModifiedDate":"2023-04-01"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"        internalList.setAll(replacement);","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"        internalMap.clear();","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"        internalList.forEach((item) -\u003e internalMap.put(item.getId(), item));","lastModifiedDate":"2023-03-22"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"     * Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2023-02-22"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"     * {@code replacement} must not contain duplicate items.","lastModifiedDate":"2023-02-22"},{"lineNumber":186,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"     * @param replacement the replacement list.","lastModifiedDate":"2023-02-22"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"    public void setItems(UniqueList\u003cT\u003e replacement) {","lastModifiedDate":"2023-02-22"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"        setItems(replacement.internalList);","lastModifiedDate":"2023-02-22"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":193,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":194,"author":{"gitId":"wxxedu"},"content":"     * The size of the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"     * @return the size of the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"    public int size() {","lastModifiedDate":"2023-02-23"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"        return internalList.size();","lastModifiedDate":"2023-02-23"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":202,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":203,"author":{"gitId":"wxxedu"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-22"},{"lineNumber":204,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"wxxedu"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-22"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-22"},{"lineNumber":207,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":208,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":209,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":210,"author":{"gitId":"wxxedu"},"content":"     * Gets the item at the index specified.","lastModifiedDate":"2023-03-25"},{"lineNumber":211,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"     * @param index the index specified.","lastModifiedDate":"2023-03-25"},{"lineNumber":213,"author":{"gitId":"wxxedu"},"content":"     * @return the item at the index.","lastModifiedDate":"2023-03-25"},{"lineNumber":214,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":215,"author":{"gitId":"wxxedu"},"content":"    public T get(int index) {","lastModifiedDate":"2023-03-25"},{"lineNumber":216,"author":{"gitId":"wxxedu"},"content":"        return internalList.get(index);","lastModifiedDate":"2023-03-25"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":219,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":220,"author":{"gitId":"wxxedu"},"content":"     * Gets the item with the given id.","lastModifiedDate":"2023-03-25"},{"lineNumber":221,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":222,"author":{"gitId":"wxxedu"},"content":"     * @param id the id.","lastModifiedDate":"2023-03-25"},{"lineNumber":223,"author":{"gitId":"wxxedu"},"content":"     * @return the item with the given id.","lastModifiedDate":"2023-03-25"},{"lineNumber":224,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":225,"author":{"gitId":"wxxedu"},"content":"    public T get(String id) {","lastModifiedDate":"2023-03-25"},{"lineNumber":226,"author":{"gitId":"wxxedu"},"content":"        return internalMap.get(id);","lastModifiedDate":"2023-03-25"},{"lineNumber":227,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":229,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":230,"author":{"gitId":"wxxedu"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2023-02-22"},{"lineNumber":231,"author":{"gitId":"wxxedu"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-22"},{"lineNumber":232,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":233,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":234,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":235,"author":{"gitId":"wxxedu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-22"},{"lineNumber":236,"author":{"gitId":"wxxedu"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-02-22"},{"lineNumber":237,"author":{"gitId":"wxxedu"},"content":"            return true;","lastModifiedDate":"2023-02-22"},{"lineNumber":238,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":239,"author":{"gitId":"wxxedu"},"content":"        if (!(other instanceof UniqueList\u003c?\u003e)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":240,"author":{"gitId":"wxxedu"},"content":"            return false;","lastModifiedDate":"2023-02-22"},{"lineNumber":241,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":242,"author":{"gitId":"wxxedu"},"content":"        UniqueList\u003c?\u003e otherList \u003d (UniqueList\u003c?\u003e) other;","lastModifiedDate":"2023-02-22"},{"lineNumber":243,"author":{"gitId":"wxxedu"},"content":"        return internalList.equals(otherList.internalList);","lastModifiedDate":"2023-02-22"},{"lineNumber":244,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":245,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":246,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":247,"author":{"gitId":"wxxedu"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-22"},{"lineNumber":248,"author":{"gitId":"wxxedu"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-22"},{"lineNumber":249,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":250,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":251,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":252,"author":{"gitId":"wxxedu"},"content":"     * Returns true if {@code items} contains duplicate.","lastModifiedDate":"2023-03-22"},{"lineNumber":253,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":254,"author":{"gitId":"wxxedu"},"content":"     * @param items the list of items to be checked.","lastModifiedDate":"2023-02-22"},{"lineNumber":255,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":256,"author":{"gitId":"BoAi01"},"content":"    public static \u003cT extends Item\u003e boolean itemsHaveDuplicate(List\u003cT\u003e items) {","lastModifiedDate":"2023-03-07"},{"lineNumber":257,"author":{"gitId":"wxxedu"},"content":"        Set\u003cString\u003e checkSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":258,"author":{"gitId":"wxxedu"},"content":"        for (T item : items) {","lastModifiedDate":"2023-03-22"},{"lineNumber":259,"author":{"gitId":"wxxedu"},"content":"            if (checkSet.contains(item.getId())) {","lastModifiedDate":"2023-03-22"},{"lineNumber":260,"author":{"gitId":"wxxedu"},"content":"                return true;","lastModifiedDate":"2023-02-22"},{"lineNumber":261,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":262,"author":{"gitId":"wxxedu"},"content":"            checkSet.add(item.getId());","lastModifiedDate":"2023-03-22"},{"lineNumber":263,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":264,"author":{"gitId":"wxxedu"},"content":"        return false;","lastModifiedDate":"2023-02-22"},{"lineNumber":265,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":266,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":267,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"BoAi01":13,"wxxedu":254}},{"path":"src/main/java/wingman/model/item/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.item.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The exception thrown when an operation would result in duplicate objects.","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * The class of the object that is duplicated.","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    private final Class\u003c?\u003e clazz;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     * Creates a new {@code ItemDuplicateException} that has the {@code clazz} of","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * the object that is duplicated.","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * @param clazz","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    public DuplicateItemException(Class\u003c?\u003e clazz) {","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"        super(\"Operation would result in duplicate \" + clazz.getSimpleName()","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"                + \"s\");","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        this.clazz \u003d clazz;","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * Returns the class of the object that is duplicated.","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * @return the class of the object that is duplicated","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public Class\u003c?\u003e getDuplicatedClass() {","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        return clazz;","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"BoAi01":2,"wxxedu":30}},{"path":"src/main/java/wingman/model/item/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.item.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The exception thrown when an operation cannot find the specified item.","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class ItemNotFoundException extends RuntimeException {","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * Constructs a new {@code ItemNotFoundException} with the specified detail","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     * {@code item}.","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     * @param item the item that was not found","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    public ItemNotFoundException(Object item) {","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"        super(\"Item of class \" + item.getClass().getSimpleName() + \"not found: \" + item);","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"wxxedu":16}},{"path":"src/main/java/wingman/model/link/Link.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.link;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkDuplicateException;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkItemNotFoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":" * The link to a target.","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e target.","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":" * @param \u003cM\u003e the manager for the item.","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"public class Link\u003cK, T extends Item,","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"                         M extends ReadOnlyItemManager\u003cT\u003e\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    private static final String KEY_NOT_FOUND_MESSAGE \u003d \"Key %s not found.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    private static final String ILLEGAL_SIZE_MESSAGE \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"            \"Illegal Size: key %s can only have %d keys, but got %d keys\";","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    private static final String CANNOT_PUT_MESSAGE \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"            \"Cannot put %d values into key %s which allows a maximum of %d values\"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"                    + \" but already contains %d keys.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    private static final String DELETE_BROKEN_LINK_MESSAGE \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"            \"Deleted broken link %s from link %s\";","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    private static final Logger _logger \u003d LogsCenter.getLogger(Link.class);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * The shape of this link, which describes: a) what keys this link has;","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     * b) how many values per key can this link hold at max.","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    private final Map\u003cK, Integer\u003e shape;","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     * The contents that this link contains.","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"    private final Map\u003cK, Deque\u003cString\u003e\u003e contents;","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"     * The resolver that\u0027s used to resolve the links.","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    private final Lazy\u003cM\u003e managerLazy;","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     * Creates a link with the given shape.","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     * @param shape       the shape of the link.","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"     * @param contents    the contents that this link contains.","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"     * @param managerLazy the {@link ReadOnlyItemManager} that resolves to an","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"     *                    item from the id.","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    public Link(","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"            Map\u003cK, Integer\u003e shape,","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"            Map\u003cK, Deque\u003cString\u003e\u003e contents,","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"            Lazy\u003cM\u003e managerLazy","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    ) throws LinkException {","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"        fitShapeOrThrow(shape, contents);","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        this.shape \u003d CollectionUtil.deepCopy(shape);","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        this.contents \u003d CollectionUtil.deepCopyMapDq(contents);","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        this.managerLazy \u003d managerLazy;","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        fill(this.shape, this.contents);","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"     * Creates a new link with all the fields set to empty.","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     * @param shape the shape of the field.","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"    public Link(Map\u003cK, Integer\u003e shape, Lazy\u003cM\u003e managerLazy) {","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        this.shape \u003d CollectionUtil.deepCopy(shape);","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        this.contents \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        this.managerLazy \u003d managerLazy;","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        fill(this.shape, this.contents);","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"     * Creates a link with the given data, and returns a new one if the","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"     * creation failed.","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"     * @param shape       the shape of the link.","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"     * @param contents    the contents of the link.","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"     * @param managerLazy the lazy instantiation of the manager.","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cK\u003e         the type of the key.","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e         the type of the item.","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cM\u003e         the type of the manager.","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"     * @return the link created.","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"    public static \u003cK, T extends Item, M extends ReadOnlyItemManager\u003cT\u003e\u003e Link\u003cK, T, M\u003e fromOrCreate(","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"            Map\u003cK, Integer\u003e shape,","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"            Map\u003cK, Deque\u003cString\u003e\u003e contents,","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"            Lazy\u003cM\u003e managerLazy","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"            return new Link\u003c\u003e(shape, contents, managerLazy);","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        } catch (LinkException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"            _logger.warning(e.getMessage());","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"            return new Link\u003c\u003e(shape, managerLazy);","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"     * Checks if the input contents fits the shape. Otherwise, throw.","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"     * @param shape    the shape of the link.","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"     * @param contents the contents of teh link.","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"     * @throws LinkException if the contents does not fit the shape.","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"    private static \u003cK\u003e void fitShapeOrThrow(","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"            Map\u003cK, Integer\u003e shape,","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"            Map\u003cK, Deque\u003cString\u003e\u003e contents","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"    ) throws LinkException {","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"        for (K key : contents.keySet()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"            if (!shape.containsKey(key)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"                throw new LinkException(String.format(","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"                        KEY_NOT_FOUND_MESSAGE,","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"                        key","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"                ));","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"            if (contents.get(key).size() \u003e shape.get(key)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"                throw new LinkException(String.format(ILLEGAL_SIZE_MESSAGE,","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"                        key, shape.get(key), contents.get(key).size()","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"                ));","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"     * Fills the contents with keys in the shape. If a key is in shape, but it","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"     * is not in contents, then we put key into contents with a new empty array.","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"     * @param shape    the shape of the link.","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"     * @param contents the contents in the link","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"    private static \u003cK\u003e void fill(","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"            Map\u003cK, Integer\u003e shape,","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"            Map\u003cK, Deque\u003cString\u003e\u003e contents","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"        for (K key : shape.keySet()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"            if (contents.containsKey(key)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"                continue;","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"            contents.put(key, new ArrayDeque\u003c\u003e());","lastModifiedDate":"2023-03-16"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"     * Gets the contents of this link as an unmodifiable map.","lastModifiedDate":"2023-03-16"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"     * @return the unmodifiable view of this link content.","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"    public Map\u003cK, Collection\u003cString\u003e\u003e getUnmodifiableContents() {","lastModifiedDate":"2023-03-16"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"        return CollectionUtil.unmodifiableMapDq(contents);","lastModifiedDate":"2023-03-31"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"     * Gets a copy of the contents of this link.","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"     * @return the copy of this link content.","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"    public Map\u003cK, Deque\u003cString\u003e\u003e getCopiedContents() {","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"        return CollectionUtil.deepCopyMapDq(contents);","lastModifiedDate":"2023-03-31"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"     * Gets the keys of this link as an unmodifiable set.","lastModifiedDate":"2023-03-16"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"wxxedu"},"content":"     * @return the unmodifiable set of this link content.","lastModifiedDate":"2023-03-16"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"    public Set\u003cK\u003e getUnmodifiableKeys() {","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"        return Collections.unmodifiableSet(this.shape.keySet());","lastModifiedDate":"2023-03-16"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":193,"author":{"gitId":"wxxedu"},"content":"     * Gets the shape of this link as an unmodifiable shape.","lastModifiedDate":"2023-03-16"},{"lineNumber":194,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"     * @return the unmodifiable shape of this link.","lastModifiedDate":"2023-03-16"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"    public Map\u003cK, Integer\u003e getUnmodifiableShape() {","lastModifiedDate":"2023-03-16"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"        return Collections.unmodifiableMap(this.shape);","lastModifiedDate":"2023-03-16"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":202,"author":{"gitId":"wxxedu"},"content":"     * Gets the remaining size, i.e. how many more values, can be hold by the","lastModifiedDate":"2023-03-16"},{"lineNumber":203,"author":{"gitId":"wxxedu"},"content":"     * key.","lastModifiedDate":"2023-03-16"},{"lineNumber":204,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":205,"author":{"gitId":"wxxedu"},"content":"     * @param key the key","lastModifiedDate":"2023-03-16"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"     * @return the number of items that the key can still hold.","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":208,"author":{"gitId":"wxxedu"},"content":"    public int getRemainingSizeOfKey(K key) throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":209,"author":{"gitId":"wxxedu"},"content":"        keyValidOrThrow(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":210,"author":{"gitId":"wxxedu"},"content":"        return shape.get(key) - contents.get(key).size();","lastModifiedDate":"2023-03-16"},{"lineNumber":211,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":213,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":214,"author":{"gitId":"wxxedu"},"content":"     * Checks if the key is valid, if not, throws the corresponding exception.","lastModifiedDate":"2023-03-16"},{"lineNumber":215,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":216,"author":{"gitId":"wxxedu"},"content":"     * @param key the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"     * @throws LinkException if the key is not contained inside the key set.","lastModifiedDate":"2023-03-16"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":219,"author":{"gitId":"wxxedu"},"content":"    private void keyValidOrThrow(K key) throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":220,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":221,"author":{"gitId":"wxxedu"},"content":"        if (!shape.containsKey(key)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":222,"author":{"gitId":"wxxedu"},"content":"            throw new LinkException(String.format(KEY_NOT_FOUND_MESSAGE, key));","lastModifiedDate":"2023-03-16"},{"lineNumber":223,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":224,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":225,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":226,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":227,"author":{"gitId":"wxxedu"},"content":"     * Checks if we can put size many values into the key. If cannot, then","lastModifiedDate":"2023-03-16"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"     * throw.","lastModifiedDate":"2023-03-16"},{"lineNumber":229,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":230,"author":{"gitId":"wxxedu"},"content":"     * @param key  the key","lastModifiedDate":"2023-03-16"},{"lineNumber":231,"author":{"gitId":"wxxedu"},"content":"     * @param size the number of values that we want to put into the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":232,"author":{"gitId":"wxxedu"},"content":"     * @throws LinkException if we cannot put size many values into the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":233,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":234,"author":{"gitId":"wxxedu"},"content":"    private void canPutOrThrow(K key, int size) throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":235,"author":{"gitId":"wxxedu"},"content":"        if (getRemainingSizeOfKey(key) \u003c size) {","lastModifiedDate":"2023-03-16"},{"lineNumber":236,"author":{"gitId":"wxxedu"},"content":"            throw new LinkException(String.format(CANNOT_PUT_MESSAGE, size,","lastModifiedDate":"2023-03-16"},{"lineNumber":237,"author":{"gitId":"wxxedu"},"content":"                    key, shape.get(key), contents.get(key).size()","lastModifiedDate":"2023-03-18"},{"lineNumber":238,"author":{"gitId":"wxxedu"},"content":"            ));","lastModifiedDate":"2023-03-18"},{"lineNumber":239,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":240,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":241,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":242,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":243,"author":{"gitId":"wxxedu"},"content":"     * Checks if we can put 1 value into the key. If not, then throw.","lastModifiedDate":"2023-03-16"},{"lineNumber":244,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":245,"author":{"gitId":"wxxedu"},"content":"     * @param key the key","lastModifiedDate":"2023-03-16"},{"lineNumber":246,"author":{"gitId":"wxxedu"},"content":"     * @throws LinkException if we cannot put 1 value into the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":247,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":248,"author":{"gitId":"wxxedu"},"content":"    private void canPutOrThrow(K key) throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":249,"author":{"gitId":"wxxedu"},"content":"        canPutOrThrow(key, 1);","lastModifiedDate":"2023-03-16"},{"lineNumber":250,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":251,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":252,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":253,"author":{"gitId":"wxxedu"},"content":"     * Checks if the id is already duplicated. If so, throw.","lastModifiedDate":"2023-03-16"},{"lineNumber":254,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":255,"author":{"gitId":"wxxedu"},"content":"     * @param key the key","lastModifiedDate":"2023-03-16"},{"lineNumber":256,"author":{"gitId":"wxxedu"},"content":"     * @param id  the id","lastModifiedDate":"2023-03-16"},{"lineNumber":257,"author":{"gitId":"wxxedu"},"content":"     * @throws LinkDuplicateException if the id is already duplicated under","lastModifiedDate":"2023-03-16"},{"lineNumber":258,"author":{"gitId":"wxxedu"},"content":"     *                                the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":259,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":260,"author":{"gitId":"wxxedu"},"content":"    private void noDuplicateOrThrow(","lastModifiedDate":"2023-03-18"},{"lineNumber":261,"author":{"gitId":"wxxedu"},"content":"            K key,","lastModifiedDate":"2023-03-18"},{"lineNumber":262,"author":{"gitId":"wxxedu"},"content":"            String id","lastModifiedDate":"2023-03-18"},{"lineNumber":263,"author":{"gitId":"wxxedu"},"content":"    ) throws LinkDuplicateException {","lastModifiedDate":"2023-03-18"},{"lineNumber":264,"author":{"gitId":"wxxedu"},"content":"        for (String cid : contents.get(key)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":265,"author":{"gitId":"wxxedu"},"content":"            if (id.equals(cid)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":266,"author":{"gitId":"cetigerlily"},"content":"                throw new LinkDuplicateException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"cetigerlily"},"content":"                        \"A duplicate for %s has already been found.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"cetigerlily"},"content":"                                + \"Please try to link something else, or unlink the previous link first.\",","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"cetigerlily"},"content":"                        key","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"cetigerlily"},"content":"                ));","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":272,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":273,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":274,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":275,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":276,"author":{"gitId":"wxxedu"},"content":"     * Puts the item into the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":277,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":278,"author":{"gitId":"wxxedu"},"content":"     * @param key  the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":279,"author":{"gitId":"wxxedu"},"content":"     * @param item the item that\u0027s associated with the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":280,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":281,"author":{"gitId":"wxxedu"},"content":"    public void put(K key, T item) throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":282,"author":{"gitId":"wxxedu"},"content":"        put(key, item.getId());","lastModifiedDate":"2023-03-16"},{"lineNumber":283,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":284,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":285,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":286,"author":{"gitId":"wxxedu"},"content":"     * Puts the id related to the key into the link.","lastModifiedDate":"2023-03-16"},{"lineNumber":287,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":288,"author":{"gitId":"wxxedu"},"content":"     * @param key the key","lastModifiedDate":"2023-03-16"},{"lineNumber":289,"author":{"gitId":"wxxedu"},"content":"     * @param id  the id","lastModifiedDate":"2023-03-16"},{"lineNumber":290,"author":{"gitId":"wxxedu"},"content":"     * @throws LinkException if the id related to the key cannot be put.","lastModifiedDate":"2023-03-16"},{"lineNumber":291,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":292,"author":{"gitId":"wxxedu"},"content":"    public void put(K key, String id) throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":293,"author":{"gitId":"wxxedu"},"content":"        keyValidOrThrow(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":294,"author":{"gitId":"wxxedu"},"content":"        canPutOrThrow(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":295,"author":{"gitId":"wxxedu"},"content":"        noDuplicateOrThrow(key, id);","lastModifiedDate":"2023-03-16"},{"lineNumber":296,"author":{"gitId":"wxxedu"},"content":"        this.contents.get(key).push(id);","lastModifiedDate":"2023-03-16"},{"lineNumber":297,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":298,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":299,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":300,"author":{"gitId":"jishnu28"},"content":"     * Puts the id related to the item into the link, in a revolving manner if","lastModifiedDate":"2023-03-19"},{"lineNumber":301,"author":{"gitId":"wxxedu"},"content":"     * the key\u0027s contents is already full. For example, if the key can","lastModifiedDate":"2023-03-16"},{"lineNumber":302,"author":{"gitId":"wxxedu"},"content":"     * contain 3 items, and if currently the id is [\"a\", \"b\", \"c\"], and if we","lastModifiedDate":"2023-03-16"},{"lineNumber":303,"author":{"gitId":"wxxedu"},"content":"     * put \"d\" into this, then we would have [\"b\", \"c\", \"d\"]. If, however,","lastModifiedDate":"2023-03-16"},{"lineNumber":304,"author":{"gitId":"wxxedu"},"content":"     * there are less than 3 items, then this should behave as normal.","lastModifiedDate":"2023-03-16"},{"lineNumber":305,"author":{"gitId":"wxxedu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":306,"author":{"gitId":"wxxedu"},"content":"     * This is very helpful if you only have one for the size of the given","lastModifiedDate":"2023-03-16"},{"lineNumber":307,"author":{"gitId":"wxxedu"},"content":"     * key. For example, for a flight, we only have 1 plane. With this, we can","lastModifiedDate":"2023-03-16"},{"lineNumber":308,"author":{"gitId":"wxxedu"},"content":"     * simply use putRevolve, which is similar to replace.","lastModifiedDate":"2023-03-16"},{"lineNumber":309,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":310,"author":{"gitId":"wxxedu"},"content":"     * @param key  the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":311,"author":{"gitId":"wxxedu"},"content":"     * @param item the value to be put.","lastModifiedDate":"2023-03-16"},{"lineNumber":312,"author":{"gitId":"wxxedu"},"content":"     * @throws LinkException if the key cannot be put.","lastModifiedDate":"2023-03-16"},{"lineNumber":313,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":314,"author":{"gitId":"wxxedu"},"content":"    public void putRevolve(K key, T item) throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":315,"author":{"gitId":"wxxedu"},"content":"        putRevolve(key, item.getId());","lastModifiedDate":"2023-03-16"},{"lineNumber":316,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":317,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":318,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":319,"author":{"gitId":"wxxedu"},"content":"     * See {@link Link#putRevolve(K, T)}.","lastModifiedDate":"2023-03-16"},{"lineNumber":320,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":321,"author":{"gitId":"wxxedu"},"content":"     * @param key the key","lastModifiedDate":"2023-03-16"},{"lineNumber":322,"author":{"gitId":"wxxedu"},"content":"     * @param id  the id to be put","lastModifiedDate":"2023-03-16"},{"lineNumber":323,"author":{"gitId":"wxxedu"},"content":"     * @throws LinkException if the key cannot be put","lastModifiedDate":"2023-03-16"},{"lineNumber":324,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":325,"author":{"gitId":"wxxedu"},"content":"    public void putRevolve(K key, String id) throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":326,"author":{"gitId":"wxxedu"},"content":"        keyValidOrThrow(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":327,"author":{"gitId":"wxxedu"},"content":"        canPutOrThrow(key, 0);","lastModifiedDate":"2023-03-16"},{"lineNumber":328,"author":{"gitId":"wxxedu"},"content":"        noDuplicateOrThrow(key, id);","lastModifiedDate":"2023-03-16"},{"lineNumber":329,"author":{"gitId":"wxxedu"},"content":"        int remainingSize \u003d getRemainingSizeOfKey(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":330,"author":{"gitId":"wxxedu"},"content":"        Deque\u003cString\u003e ids \u003d this.contents.get(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":331,"author":{"gitId":"wxxedu"},"content":"        if (remainingSize \u003d\u003d 0) {","lastModifiedDate":"2023-03-16"},{"lineNumber":332,"author":{"gitId":"wxxedu"},"content":"            ids.pop();","lastModifiedDate":"2023-03-16"},{"lineNumber":333,"author":{"gitId":"wxxedu"},"content":"            ids.add(id);","lastModifiedDate":"2023-03-16"},{"lineNumber":334,"author":{"gitId":"wxxedu"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":335,"author":{"gitId":"wxxedu"},"content":"            ids.add(id);","lastModifiedDate":"2023-03-16"},{"lineNumber":336,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":337,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":338,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":339,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":340,"author":{"gitId":"wxxedu"},"content":"     * Clears all the contents for the given key.","lastModifiedDate":"2023-03-16"},{"lineNumber":341,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":342,"author":{"gitId":"wxxedu"},"content":"     * @param key the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":343,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":344,"author":{"gitId":"wxxedu"},"content":"    public void clear(K key) throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":345,"author":{"gitId":"wxxedu"},"content":"        keyValidOrThrow(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":346,"author":{"gitId":"wxxedu"},"content":"        contents.get(key).clear();","lastModifiedDate":"2023-03-16"},{"lineNumber":347,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":348,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":349,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":350,"author":{"gitId":"wxxedu"},"content":"     * Clears all the contents.","lastModifiedDate":"2023-03-16"},{"lineNumber":351,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":352,"author":{"gitId":"wxxedu"},"content":"    public void clear() {","lastModifiedDate":"2023-03-16"},{"lineNumber":353,"author":{"gitId":"wxxedu"},"content":"        for (K key : contents.keySet()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":354,"author":{"gitId":"wxxedu"},"content":"            contents.get(key).clear();","lastModifiedDate":"2023-03-16"},{"lineNumber":355,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":356,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":357,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":358,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":359,"author":{"gitId":"wxxedu"},"content":"     * Deletes the given id of key from this link. If the item is not found","lastModifiedDate":"2023-03-16"},{"lineNumber":360,"author":{"gitId":"wxxedu"},"content":"     * during the deletion, then an exception would be thrown.","lastModifiedDate":"2023-03-16"},{"lineNumber":361,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":362,"author":{"gitId":"wxxedu"},"content":"     * @param key  the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":363,"author":{"gitId":"wxxedu"},"content":"     * @param item the item to be deleted.","lastModifiedDate":"2023-03-16"},{"lineNumber":364,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":365,"author":{"gitId":"wxxedu"},"content":"    public void delete(K key, T item) throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":366,"author":{"gitId":"wxxedu"},"content":"        delete(key, item.getId());","lastModifiedDate":"2023-03-16"},{"lineNumber":367,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":368,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":369,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":370,"author":{"gitId":"wxxedu"},"content":"     * Deletes the given item with id of key from this link. If this item is","lastModifiedDate":"2023-03-16"},{"lineNumber":371,"author":{"gitId":"wxxedu"},"content":"     * not found during the deletion, then an exception would be thrown.","lastModifiedDate":"2023-03-16"},{"lineNumber":372,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":373,"author":{"gitId":"wxxedu"},"content":"     * @param key the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":374,"author":{"gitId":"wxxedu"},"content":"     * @param id  the id of the item to be deleted.","lastModifiedDate":"2023-03-16"},{"lineNumber":375,"author":{"gitId":"wxxedu"},"content":"     * @throws LinkException if the item of key and id is not found.","lastModifiedDate":"2023-03-16"},{"lineNumber":376,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":377,"author":{"gitId":"wxxedu"},"content":"    public void delete(K key, String id) throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":378,"author":{"gitId":"wxxedu"},"content":"        keyValidOrThrow(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":379,"author":{"gitId":"wxxedu"},"content":"        if (!contents.get(key).contains(id)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":380,"author":{"gitId":"wxxedu"},"content":"            throw new LinkItemNotFoundException(key.toString(), id);","lastModifiedDate":"2023-03-16"},{"lineNumber":381,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":382,"author":{"gitId":"wxxedu"},"content":"        contents.get(key).remove(id);","lastModifiedDate":"2023-03-16"},{"lineNumber":383,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":384,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":385,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":386,"author":{"gitId":"wxxedu"},"content":"     * Gets the values corresponding to the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":387,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":388,"author":{"gitId":"wxxedu"},"content":"     * @param key the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":389,"author":{"gitId":"wxxedu"},"content":"     * @return the optionals of values corresponding to the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":390,"author":{"gitId":"wxxedu"},"content":"     * @throws LinkException if the key is not valid.","lastModifiedDate":"2023-03-16"},{"lineNumber":391,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":392,"author":{"gitId":"wxxedu"},"content":"    public List\u003cOptional\u003cT\u003e\u003e get(K key) throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":393,"author":{"gitId":"wxxedu"},"content":"        keyValidOrThrow(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":394,"author":{"gitId":"wxxedu"},"content":"        return contents.get(key)","lastModifiedDate":"2023-03-16"},{"lineNumber":395,"author":{"gitId":"wxxedu"},"content":"                       .stream()","lastModifiedDate":"2023-03-16"},{"lineNumber":396,"author":{"gitId":"wxxedu"},"content":"                       .map((id) -\u003e managerLazy.get().getItemOptional(id))","lastModifiedDate":"2023-03-25"},{"lineNumber":397,"author":{"gitId":"wxxedu"},"content":"                       .collect(Collectors.toList());","lastModifiedDate":"2023-03-16"},{"lineNumber":398,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":399,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":400,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":401,"author":{"gitId":"wxxedu"},"content":"     * Gets all the links while at the same time remove the invalid ids from","lastModifiedDate":"2023-03-16"},{"lineNumber":402,"author":{"gitId":"wxxedu"},"content":"     * this link class.","lastModifiedDate":"2023-03-16"},{"lineNumber":403,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":404,"author":{"gitId":"wxxedu"},"content":"     * @param key the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":405,"author":{"gitId":"wxxedu"},"content":"     * @return the list of valid items, and at the same time remove those","lastModifiedDate":"2023-03-16"},{"lineNumber":406,"author":{"gitId":"wxxedu"},"content":"     *         which are not valid from this list","lastModifiedDate":"2023-03-16"},{"lineNumber":407,"author":{"gitId":"wxxedu"},"content":"     * @throws LinkException if the key is not valid.","lastModifiedDate":"2023-03-16"},{"lineNumber":408,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":409,"author":{"gitId":"wxxedu"},"content":"    public List\u003cT\u003e getAndRemoveInvalid(K key) throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":410,"author":{"gitId":"wxxedu"},"content":"        keyValidOrThrow(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":411,"author":{"gitId":"wxxedu"},"content":"        final List\u003cT\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":412,"author":{"gitId":"wxxedu"},"content":"        final List\u003cString\u003e tbd \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":413,"author":{"gitId":"wxxedu"},"content":"        for (String id : contents.get(key)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":414,"author":{"gitId":"wxxedu"},"content":"            final Optional\u003cT\u003e tmp \u003d managerLazy.get().getItemOptional(id);","lastModifiedDate":"2023-03-25"},{"lineNumber":415,"author":{"gitId":"wxxedu"},"content":"            if (tmp.isPresent()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":416,"author":{"gitId":"wxxedu"},"content":"                result.add(tmp.get());","lastModifiedDate":"2023-03-16"},{"lineNumber":417,"author":{"gitId":"wxxedu"},"content":"            } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":418,"author":{"gitId":"wxxedu"},"content":"                tbd.add(id);","lastModifiedDate":"2023-03-16"},{"lineNumber":419,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":420,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":421,"author":{"gitId":"wxxedu"},"content":"        for (String id : tbd) {","lastModifiedDate":"2023-03-16"},{"lineNumber":422,"author":{"gitId":"wxxedu"},"content":"            contents.get(key).remove(id);","lastModifiedDate":"2023-03-16"},{"lineNumber":423,"author":{"gitId":"wxxedu"},"content":"            _logger.warning(String.format(","lastModifiedDate":"2023-03-16"},{"lineNumber":424,"author":{"gitId":"wxxedu"},"content":"                            DELETE_BROKEN_LINK_MESSAGE,","lastModifiedDate":"2023-03-16"},{"lineNumber":425,"author":{"gitId":"wxxedu"},"content":"                            id,","lastModifiedDate":"2023-03-16"},{"lineNumber":426,"author":{"gitId":"wxxedu"},"content":"                            this","lastModifiedDate":"2023-03-16"},{"lineNumber":427,"author":{"gitId":"wxxedu"},"content":"                    )","lastModifiedDate":"2023-03-16"},{"lineNumber":428,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-16"},{"lineNumber":429,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":430,"author":{"gitId":"wxxedu"},"content":"        return result;","lastModifiedDate":"2023-03-16"},{"lineNumber":431,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":432,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":433,"author":{"gitId":"wxxedu"},"content":"    public List\u003cT\u003e getValid(K key) throws LinkException {","lastModifiedDate":"2023-03-17"},{"lineNumber":434,"author":{"gitId":"wxxedu"},"content":"        keyValidOrThrow(key);","lastModifiedDate":"2023-03-17"},{"lineNumber":435,"author":{"gitId":"wxxedu"},"content":"        final List\u003cT\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":436,"author":{"gitId":"wxxedu"},"content":"        for (String id : contents.get(key)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":437,"author":{"gitId":"wxxedu"},"content":"            final Optional\u003cT\u003e tmp \u003d managerLazy.get().getItemOptional(id);","lastModifiedDate":"2023-03-25"},{"lineNumber":438,"author":{"gitId":"wxxedu"},"content":"            tmp.ifPresent(result::add);","lastModifiedDate":"2023-03-17"},{"lineNumber":439,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":440,"author":{"gitId":"wxxedu"},"content":"        return result;","lastModifiedDate":"2023-03-17"},{"lineNumber":441,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":442,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":443,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":444,"author":{"gitId":"wxxedu"},"content":"     * Gets if the current key set contains key.","lastModifiedDate":"2023-03-16"},{"lineNumber":445,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":446,"author":{"gitId":"wxxedu"},"content":"     * @param key the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":447,"author":{"gitId":"wxxedu"},"content":"     * @return true if the current key set contains key.","lastModifiedDate":"2023-03-16"},{"lineNumber":448,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":449,"author":{"gitId":"wxxedu"},"content":"    public boolean containsKey(K key) {","lastModifiedDate":"2023-03-16"},{"lineNumber":450,"author":{"gitId":"wxxedu"},"content":"        return shape.containsKey(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":451,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":452,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":453,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":454,"author":{"gitId":"wxxedu"},"content":"     * Gets if the item is contained inside this link.","lastModifiedDate":"2023-03-16"},{"lineNumber":455,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":456,"author":{"gitId":"wxxedu"},"content":"     * @param key  the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":457,"author":{"gitId":"wxxedu"},"content":"     * @param item the item.","lastModifiedDate":"2023-03-16"},{"lineNumber":458,"author":{"gitId":"wxxedu"},"content":"     * @return true if the item is contained inside this link corresponding","lastModifiedDate":"2023-03-16"},{"lineNumber":459,"author":{"gitId":"wxxedu"},"content":"     *         to the given key.","lastModifiedDate":"2023-03-16"},{"lineNumber":460,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":461,"author":{"gitId":"wxxedu"},"content":"    public boolean contains(K key, T item) {","lastModifiedDate":"2023-03-16"},{"lineNumber":462,"author":{"gitId":"wxxedu"},"content":"        return contains(key, item.getId());","lastModifiedDate":"2023-03-16"},{"lineNumber":463,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":464,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":465,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":466,"author":{"gitId":"wxxedu"},"content":"     * Gets if the id is contained inside this link.","lastModifiedDate":"2023-03-16"},{"lineNumber":467,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":468,"author":{"gitId":"wxxedu"},"content":"     * @param key the key.","lastModifiedDate":"2023-03-16"},{"lineNumber":469,"author":{"gitId":"wxxedu"},"content":"     * @param id  the item.","lastModifiedDate":"2023-03-16"},{"lineNumber":470,"author":{"gitId":"wxxedu"},"content":"     * @return true if the item is contained inside this link corresponding","lastModifiedDate":"2023-03-16"},{"lineNumber":471,"author":{"gitId":"wxxedu"},"content":"     *         to the given key.","lastModifiedDate":"2023-03-16"},{"lineNumber":472,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":473,"author":{"gitId":"wxxedu"},"content":"    public boolean contains(K key, String id) {","lastModifiedDate":"2023-03-16"},{"lineNumber":474,"author":{"gitId":"wxxedu"},"content":"        return contents.get(key).contains(id);","lastModifiedDate":"2023-03-16"},{"lineNumber":475,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":476,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":477,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":478,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":479,"author":{"gitId":"wxxedu"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-17"},{"lineNumber":480,"author":{"gitId":"cetigerlily"},"content":"        builder.append(\"\\n\");","lastModifiedDate":"2023-03-28"},{"lineNumber":481,"author":{"gitId":"wxxedu"},"content":"        for (K key : getUnmodifiableKeys()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":482,"author":{"gitId":"wxxedu"},"content":"            if (contents.get(key).isEmpty()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":483,"author":{"gitId":"wxxedu"},"content":"                continue;","lastModifiedDate":"2023-03-17"},{"lineNumber":484,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":485,"author":{"gitId":"wxxedu"},"content":"            try {","lastModifiedDate":"2023-03-17"},{"lineNumber":486,"author":{"gitId":"wxxedu"},"content":"                final List\u003cT\u003e items \u003d getValid(key);","lastModifiedDate":"2023-03-17"},{"lineNumber":487,"author":{"gitId":"wxxedu"},"content":"                builder.append(items","lastModifiedDate":"2023-03-18"},{"lineNumber":488,"author":{"gitId":"wxxedu"},"content":"                        .stream()","lastModifiedDate":"2023-03-18"},{"lineNumber":489,"author":{"gitId":"wxxedu"},"content":"                        .map(Object::toString)","lastModifiedDate":"2023-03-18"},{"lineNumber":490,"author":{"gitId":"wxxedu"},"content":"                        .collect(Collectors.joining(\", \")));","lastModifiedDate":"2023-03-18"},{"lineNumber":491,"author":{"gitId":"wxxedu"},"content":"            } catch (LinkException e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":492,"author":{"gitId":"wxxedu"},"content":"                builder.append(\"Failed to load: \").append(e.getMessage());","lastModifiedDate":"2023-03-17"},{"lineNumber":493,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":494,"author":{"gitId":"wxxedu"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2023-03-17"},{"lineNumber":495,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":496,"author":{"gitId":"wxxedu"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-17"},{"lineNumber":497,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":498,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"jishnu28":1,"cetigerlily":6,"wxxedu":491}},{"path":"src/main/java/wingman/model/link/exceptions/LinkDuplicateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.link.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The exception to be thrown when there is a duplicate.","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class LinkDuplicateException extends LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * Creates a link exception.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * @param message the message of the link exception.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    public LinkDuplicateException(String message) {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"        super(message);","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"wxxedu":15}},{"path":"src/main/java/wingman/model/link/exceptions/LinkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.link.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The exception that happens with a link.","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class LinkException extends Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * Creates a link exception.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * @param message the message of the link exception.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    public LinkException(String message) {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"        super(message);","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"wxxedu":15}},{"path":"src/main/java/wingman/model/link/exceptions/LinkItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.link.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The exception to be thrown when the given link item is not found.","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class LinkItemNotFoundException extends LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * Creates a link exception.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * @param key the key of the item.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     * @param id  the id of the item.","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    public LinkItemNotFoundException(String key, String id) {","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"        super(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"                \"The given index can\u0027t be found in the existing link relations.\\n\"","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"                        + \"Please check if the index is used in any valid links. \"","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"        ));","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"BoAi01":2,"cetigerlily":2,"wxxedu":15}},{"path":"src/main/java/wingman/model/location/CrewLocationType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.location;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * The types of locations that a crew member","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" * can have in a link relation.","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"public enum CrewLocationType {","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"     * The location where the crew stays","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    LOCATION_USING;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"        switch (this) {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"        case LOCATION_USING:","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"            return \"Crew\";","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        default:","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"            return \"Unknown\";","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"BoAi01":21,"wxxedu":1}},{"path":"src/main/java/wingman/model/location/FlightLocationType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.location;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":" * The types of locations linked to a flight","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"public enum FlightLocationType {","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"     * The departure location.","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"    LOCATION_DEPARTURE,","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"     * The arrival location.","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    LOCATION_ARRIVAL;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"        switch (this) {","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"        case LOCATION_DEPARTURE:","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"            return \"Departing from\";","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"        case LOCATION_ARRIVAL:","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"            return \"Arriving at\";","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"        default:","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"            return \"Unknown\";","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"jishnu28":26,"wxxedu":1}},{"path":"src/main/java/wingman/model/location/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.location;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.util.UUID;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.Link;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":" * Location is a unit place that the flight can travel to or","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":" *  arrive at.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"public class Location implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"     * The shape of the link between location and flight","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    public static final Map\u003cFlightLocationType, Integer\u003e SHAPE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"            Map.of(FlightLocationType.LOCATION_DEPARTURE, 1,","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"                    FlightLocationType.LOCATION_ARRIVAL, 1","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"            );","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    private final Link\u003cCrewLocationType, Crew, ReadOnlyItemManager\u003cCrew\u003e\u003e crewLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    private final Link\u003cPilotLocationType, Pilot, ReadOnlyItemManager\u003cPilot\u003e\u003e pilotLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    private final Link\u003cPlaneLocationType, Plane, ReadOnlyItemManager\u003cPlane\u003e\u003e planeLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    private final String name;","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    private final String id;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     * Creates a Location object with the given name.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     * @param name name of the location","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    public Location(","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"            String name","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"        this(","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"            UUID.randomUUID().toString(),","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"            name,","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"            new Link\u003c\u003e(","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"                    Crew.SHAPE_FOR_LOCATION,","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"                    GetUtil.getLazy(Model.class).map(Model::getCrewManager)","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"            ),","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"            new Link\u003c\u003e(","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"                    Pilot.SHAPE_FOR_LOCATION,","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"                    GetUtil.getLazy(Model.class).map(Model::getPilotManager)","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"            ),","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"            new Link\u003c\u003e(","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"                    Plane.SHAPE_FOR_LOCATION,","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"                    GetUtil.getLazy(Model.class).map(Model::getPlaneManager)","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"            )","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"     * Creates a Location object from the given id and name","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"     * @param id a unique id assigned to the location","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"     * @param name the name of the location","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"     * @param crewLink the link to the crews that stay in","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"     *                 this location","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"     * @param pilotLink the link to the pilot that stays","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"     *                  in this location","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"     * @param planeLink the link to the planes that stays in","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"     *                  this location","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"    public Location(","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"            String id,","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"            String name,","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"            Link\u003cCrewLocationType, Crew, ReadOnlyItemManager\u003cCrew\u003e\u003e crewLink,","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"            Link\u003cPilotLocationType, Pilot, ReadOnlyItemManager\u003cPilot\u003e\u003e pilotLink,","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"            Link\u003cPlaneLocationType, Plane, ReadOnlyItemManager\u003cPlane\u003e\u003e planeLink","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"    ) {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"        this.crewLink \u003d crewLink;","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"        this.pilotLink \u003d pilotLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"        this.planeLink \u003d planeLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"     * Returns the name of the location in string.","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"     * @return the name of the location","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"    public String getName() {","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"        return name;","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"        return getName();","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"    public String getId() {","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"        return id;","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"    public List\u003cString\u003e getDisplayList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"        return List.of(","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s\", name),","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\\n\", \"Plane\", planeLink.toString()),","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\\n\", \"Pilots\", pilotLink.toString()),","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\\n\", \"Crew\", crewLink.toString())","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"     * Returns the crew link.","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"     * @return the link to the crew","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"    public Link\u003cCrewLocationType, Crew, ReadOnlyItemManager\u003cCrew\u003e\u003e getCrewLink() {","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"        return crewLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"BoAi01"},"content":"     * Returns the pilot link.","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"     * @return the link to the pilot","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"BoAi01"},"content":"    public Link\u003cPilotLocationType, Pilot, ReadOnlyItemManager\u003cPilot\u003e\u003e getPilotLink() {","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"BoAi01"},"content":"        return pilotLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"BoAi01"},"content":"     * Returns the plane link.","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"BoAi01"},"content":"     * @return the link to the plane","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"BoAi01"},"content":"    public Link\u003cPlaneLocationType, Plane, ReadOnlyItemManager\u003cPlane\u003e\u003e getPlaneLink() {","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"        return planeLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"     * Returns true if both locations have the same name.","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"     * This defines a weaker notion of equality between two locations.","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-04-01"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-04-01"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"            return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"BoAi01"},"content":"        if (!(obj instanceof Location)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":152,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-04-01"},{"lineNumber":153,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":154,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":155,"author":{"gitId":"BoAi01"},"content":"        Location other \u003d (Location) obj;","lastModifiedDate":"2023-04-01"},{"lineNumber":156,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":157,"author":{"gitId":"BoAi01"},"content":"        return other.getName().equals(getName());","lastModifiedDate":"2023-04-01"},{"lineNumber":158,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":140,"jishnu28":9,"wxxedu":9,"tangyuantyy":1}},{"path":"src/main/java/wingman/model/location/PilotLocationType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.location;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * The types of locations that a pilot member","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" * can have in a link relation.","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"public enum PilotLocationType {","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"     * The location where the pilot stays","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    LOCATION_USING;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"        switch (this) {","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"        case LOCATION_USING:","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"            return \"Pilot\";","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        default:","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"            return \"Unknown\";","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"BoAi01":21,"wxxedu":1}},{"path":"src/main/java/wingman/model/location/PlaneLocationType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.location;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * The types of locations that a plane","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" * can have in a link relation.","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":" * This means that a plane is currently located","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":" * at a place.","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"public enum PlaneLocationType {","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"     * The location where the plane stays","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    LOCATION_USING;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"        switch (this) {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        case LOCATION_USING:","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"            return \"Plane\";","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"        default:","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"            return \"Unknown\";","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"BoAi01":23,"wxxedu":1}},{"path":"src/main/java/wingman/model/location/exceptions/DuplicateLocationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.location.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * Signals that the operation would result in duplicate locations.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"public class DuplicateLocationException extends RuntimeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"    public DuplicateLocationException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"        super(\"Operation would result in duplicate locations\");","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":9,"wxxedu":1}},{"path":"src/main/java/wingman/model/location/exceptions/LocationNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.location.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * Signals that the location cannot be found in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"public class LocationNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"    public LocationNotFoundException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"        super(\"Location not found in the list. \");","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":9,"wxxedu":1}},{"path":"src/main/java/wingman/model/pilot/FlightPilotType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The two types of the pilot for a flight.","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public enum FlightPilotType {","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * The pilot flying.","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    PILOT_FLYING,","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * The pilot monitoring.","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    PILOT_MONITORING;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"        switch (this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"        case PILOT_FLYING:","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"            return \"Pilot Flying\";","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        case PILOT_MONITORING:","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"            return \"Pilot Monitoring\";","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"            return \"Unknown\";","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"wxxedu":27}},{"path":"src/main/java/wingman/model/pilot/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.exceptions.InvalidGenderException;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * The gender.","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"public enum Gender {","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    MALE,","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    FEMALE,","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    OTHER;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * Converts the gender to index for Json storage.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * @return the gender.","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public int toIndex() {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"        switch (this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        case MALE:","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"            return 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"        case FEMALE:","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"            return 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"        case OTHER:","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"            return 2;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidGenderException();","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * Converts the gender from index.","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @param index the index","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * @return gender.","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    public static Gender fromIndex(int index) throws InvalidGenderException {","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        switch (index) {","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        case 0:","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"            return MALE;","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        case 1:","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"            return FEMALE;","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        case 2:","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"            return OTHER;","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidGenderException();","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":1,"wxxedu":48}},{"path":"src/main/java/wingman/model/pilot/Pilot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.UUID;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.PilotLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * Represents a Pilot in the Wingman app.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public class Pilot implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"     * The shape of the link between pilot and flight","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public static final Map\u003cFlightPilotType, Integer\u003e SHAPE \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"            Map.of(","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"                    FlightPilotType.PILOT_FLYING, 1,","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"                    FlightPilotType.PILOT_MONITORING, 1","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     * The shape of the link between pilot and location.","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"     * Here the number is an arbitrarily large number that","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"     * allows a location to link to infinite number of pilots,","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"     * in the ideal case.","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    public static final Map\u003cPilotLocationType, Integer\u003e SHAPE_FOR_LOCATION \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"            Map.of(","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"                    PilotLocationType.LOCATION_USING, 1000000","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"            );","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    private static final String UUID_STRING \u003d \"UUID\";","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"    private static final String NAME_STRING \u003d \"Name\";","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"    private static final String GENDER_STRING \u003d \"Gender\";","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    private static final String AGE_STRING \u003d \"Age\";","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"    private static final String RANK_STRING \u003d \"Rank\";","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"    private static final String FLIGHT_HR_STRING \u003d \"Flight Hours\";","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"    private static final String AVAILABILITY_STRING \u003d \"Status\";","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    private final String name;","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    private final int age;","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    private final Gender gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    private final int flightHour;","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"    private final PilotRank rank;","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"    private final String id;","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"    private boolean isAvailable;","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     * Creates a pilot with a random UUID as its id.","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     * @param name       the name of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     * @param age        the age of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     * @param gender     the gender of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"     * @param rank       the rank of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"     * @param flightHour the flight hour of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    public Pilot(","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"            String name,","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"            int age,","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"            Gender gender,","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"            PilotRank rank,","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"            int flightHour","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        this(UUID.randomUUID().toString(), name, age, gender, rank, flightHour);","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d true;","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"     * Creates a pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"     * @param id         the id of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"     * @param name       the name of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     * @param age        the age of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     * @param gender     the gender of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     * @param rank       the rank of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"     * @param flightHour the flight hour of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"    public Pilot(","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"            String id,","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"            String name,","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"            int age,","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"            Gender gender,","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"            PilotRank rank,","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"            int flightHour","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        this.rank \u003d rank;","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        this.flightHour \u003d flightHour;","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d true;","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"     * Returns the name of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"     * @return the name of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"    public String getName() {","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        return name;","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"     * Returns the rank of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"     * @return the rank of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"    public PilotRank getRank() {","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        return rank;","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"     * Returns the age of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"     * @return the age of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"    public int getAge() {","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"        return age;","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"     * Gets the gender of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"     * @return the gender of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        return gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"     * Gets the flight hour of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"     * @return the flight hour of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"    public int getFlightHour() {","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"        return flightHour;","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":153,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"cetigerlily"},"content":"     * Returns the availability of the pilot.","lastModifiedDate":"2023-03-21"},{"lineNumber":155,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"cetigerlily"},"content":"     * @return the availability of the pilot.","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":158,"author":{"gitId":"cetigerlily"},"content":"    public boolean isAvailable() {","lastModifiedDate":"2023-03-21"},{"lineNumber":159,"author":{"gitId":"cetigerlily"},"content":"        return this.isAvailable;","lastModifiedDate":"2023-03-21"},{"lineNumber":160,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":161,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":162,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":163,"author":{"gitId":"cetigerlily"},"content":"     * Sets the availability of the pilot to unavailable.","lastModifiedDate":"2023-03-21"},{"lineNumber":164,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"cetigerlily"},"content":"    public void setUnavailable() {","lastModifiedDate":"2023-03-21"},{"lineNumber":166,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d false;","lastModifiedDate":"2023-03-21"},{"lineNumber":167,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":168,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":169,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":170,"author":{"gitId":"cetigerlily"},"content":"     * Sets the availability of the pilot to available.","lastModifiedDate":"2023-03-21"},{"lineNumber":171,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":172,"author":{"gitId":"cetigerlily"},"content":"    public void setAvailable() {","lastModifiedDate":"2023-03-21"},{"lineNumber":173,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d true;","lastModifiedDate":"2023-03-21"},{"lineNumber":174,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":175,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":176,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":177,"author":{"gitId":"cetigerlily"},"content":"     * Returns a String corresponding to the availability of the pilot.","lastModifiedDate":"2023-03-21"},{"lineNumber":178,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":179,"author":{"gitId":"cetigerlily"},"content":"     * @return the availability of the pilot as a String","lastModifiedDate":"2023-03-21"},{"lineNumber":180,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":181,"author":{"gitId":"cetigerlily"},"content":"    public String getAvailabilityString() {","lastModifiedDate":"2023-03-21"},{"lineNumber":182,"author":{"gitId":"cetigerlily"},"content":"        return (this.isAvailable)","lastModifiedDate":"2023-03-21"},{"lineNumber":183,"author":{"gitId":"cetigerlily"},"content":"                ? \"Available\"","lastModifiedDate":"2023-03-21"},{"lineNumber":184,"author":{"gitId":"cetigerlily"},"content":"                : \"Unavailable\";","lastModifiedDate":"2023-03-21"},{"lineNumber":185,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":186,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"    public List\u003cString\u003e getDisplayList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"        return List.of(","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"tangyuantyy"},"content":"                String.format(\"%s\", name),","lastModifiedDate":"2023-03-26"},{"lineNumber":191,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", RANK_STRING, rank),","lastModifiedDate":"2023-03-07"},{"lineNumber":192,"author":{"gitId":"cetigerlily"},"content":"                String.format(\"%s: %s\", AGE_STRING, age),","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"cetigerlily"},"content":"                String.format(\"%s: %s\", GENDER_STRING, gender),","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", FLIGHT_HR_STRING, flightHour)","lastModifiedDate":"2023-04-01"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"    public String getId() {","lastModifiedDate":"2023-02-23"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"        return id;","lastModifiedDate":"2023-02-23"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":202,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":203,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":204,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":205,"author":{"gitId":"cetigerlily"},"content":"        return String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"cetigerlily"},"content":"                \"%s %s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"cetigerlily"},"content":"                rank,","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"cetigerlily"},"content":"                name);","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":210,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":211,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":212,"author":{"gitId":"BoAi01"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-04-01"},{"lineNumber":213,"author":{"gitId":"BoAi01"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-04-01"},{"lineNumber":214,"author":{"gitId":"BoAi01"},"content":"            return true;","lastModifiedDate":"2023-04-01"},{"lineNumber":215,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":216,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":217,"author":{"gitId":"BoAi01"},"content":"        if (!(obj instanceof Pilot)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":218,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-04-01"},{"lineNumber":219,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":220,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":221,"author":{"gitId":"BoAi01"},"content":"        Pilot other \u003d (Pilot) obj;","lastModifiedDate":"2023-04-01"},{"lineNumber":222,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":223,"author":{"gitId":"BoAi01"},"content":"        return other.getName().equals(getName());","lastModifiedDate":"2023-04-01"},{"lineNumber":224,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":225,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":41,"jishnu28":5,"cetigerlily":46,"wxxedu":132,"tangyuantyy":1}},{"path":"src/main/java/wingman/model/pilot/PilotRank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.exceptions.InvalidPilotRankException;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * Represents the rank of a pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"public enum PilotRank {","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    TRAINING_CAPTAIN,","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    CAPTAIN,","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    SENIOR_FIRST_OFFICER,","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    FIRST_OFFICER,","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    SECOND_OFFICER,","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    CADET;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    public static final String TRAINING_CAPTAIN_STRING \u003d \"Training Captain\";","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    public static final String CAPTAIN_STRING \u003d \"Captain\";","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public static final String SENIOR_FIRST_OFFICER_STRING \u003d \"Senior First Officer\";","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    public static final String FIRST_OFFICER_STRING \u003d \"First Officer\";","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    public static final String SECOND_OFFICER_STRING \u003d \"Second Officer\";","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    public static final String CADET_STRING \u003d \"Cadet\";","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * Returns the string representation of the pilot rank.","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * @return the string representation of the pilot rank","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"        switch (this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        case TRAINING_CAPTAIN:","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"            return TRAINING_CAPTAIN_STRING;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        case CAPTAIN:","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"            return CAPTAIN_STRING;","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"        case SENIOR_FIRST_OFFICER:","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"            return SENIOR_FIRST_OFFICER_STRING;","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        case FIRST_OFFICER:","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"            return FIRST_OFFICER_STRING;","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        case SECOND_OFFICER:","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"            return SECOND_OFFICER_STRING;","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        case CADET:","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"            return CADET_STRING;","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidPilotRankException(this);","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * Returns the pilot rank from the string representation.","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * @param rank the string representation of the pilot rank","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * @return the pilot rank","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    public static PilotRank fromString(String rank) {","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        switch (rank) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        case TRAINING_CAPTAIN_STRING:","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"            return TRAINING_CAPTAIN;","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        case CAPTAIN_STRING:","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"            return CAPTAIN;","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        case SENIOR_FIRST_OFFICER_STRING:","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"            return SENIOR_FIRST_OFFICER;","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        case FIRST_OFFICER_STRING:","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"            return FIRST_OFFICER;","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        case SECOND_OFFICER_STRING:","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"            return SECOND_OFFICER;","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        case CADET_STRING:","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"            return CADET;","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidPilotRankException(rank);","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     * Returns the index of the pilot rank in the enum.","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     * @return the index of the pilot rank in the enum","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    public int toIndex() {","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        switch (this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        case TRAINING_CAPTAIN:","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"            return 0;","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        case CAPTAIN:","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"            return 1;","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        case SENIOR_FIRST_OFFICER:","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"            return 2;","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        case FIRST_OFFICER:","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"            return 3;","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        case SECOND_OFFICER:","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"            return 4;","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        case CADET:","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"            return 5;","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidPilotRankException(this);","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"     * Returns the pilot rank from the index.","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"     * @param index the index of the pilot rank in the enum","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"     * @return the pilot rank","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"    public static PilotRank fromIndex(int index) {","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        switch (index) {","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        case 0:","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"            return TRAINING_CAPTAIN;","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"        case 1:","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"            return CAPTAIN;","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"        case 2:","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"            return SENIOR_FIRST_OFFICER;","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        case 3:","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"            return FIRST_OFFICER;","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"        case 4:","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"            return SECOND_OFFICER;","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        case 5:","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"            return CADET;","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidPilotRankException(index);","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":120}},{"path":"src/main/java/wingman/model/pilot/exceptions/InvalidGenderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.pilot.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * Represents an error that the gender specified is not valid.","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class InvalidGenderException extends RuntimeException {","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * Constructs a new {@code InvalidGenderException} with no detail message.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    public InvalidGenderException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"        super();","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * Constructs a new {@code InvalidGenderException} with the specified detail","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * message.","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    public InvalidGenderException(String message) {","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        super(message);","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":23}},{"path":"src/main/java/wingman/model/pilot/exceptions/InvalidPilotRankException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.pilot.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The exception thrown when the pilot rank is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class InvalidPilotRankException extends RuntimeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * Constructs a new {@code InvalidPilotRankException} with the specified","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     * detail {@code rank}.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     * @param rank the rank that is invalid, either an enum or a string.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    public InvalidPilotRankException(Object rank) {","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"        super(\"Invalid pilot rank\" + rank.toString());","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":16}},{"path":"src/main/java/wingman/model/pilot/exceptions/PilotNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.pilot.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":" * Signals that the pilot cannot be found in the list.","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"public class PilotNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"    public PilotNotFoundException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"        super(\"Plane not found in the list.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"cetigerlily":9,"wxxedu":1}},{"path":"src/main/java/wingman/model/plane/FlightPlaneType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":" * The type of link between a plane and a flight","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"public enum FlightPlaneType {","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"     * The plane being used","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"    PLANE_USING;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"        switch (this) {","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"        case PLANE_USING:","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"            return \"Plane\";","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"        default:","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"            return \"Unknown\";","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"BoAi01":1,"jishnu28":20,"wxxedu":1}},{"path":"src/main/java/wingman/model/plane/Plane.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import java.util.UUID;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.PlaneLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":" * Represents a plane in the Wingman app.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public class Plane implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"     * The shape of the link between plane and flight","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    public static final Map\u003cFlightPlaneType, Integer\u003e SHAPE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"            Map.of(FlightPlaneType.PLANE_USING, 1);","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     * THe shape of the link between plane and location.","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     * Here the number could be arbitrarily large values to","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     * indicate \"infinity\".","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"    public static final Map\u003cPlaneLocationType, Integer\u003e SHAPE_FOR_LOCATION \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"            Map.of(PlaneLocationType.LOCATION_USING, 1000000);","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    private static final String AGE_STRING \u003d \"Age\";","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    private static final String AVAILABILITY_STRING \u003d \"Status\";","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    private final String id;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"    private final String model;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    private final int age;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"    private boolean isAvailable;","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"     * Creates a plane with a random UUID as its id.","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"     * @param model the model of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"     * @param age   the age of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"    public Plane(String model, int age) {","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"        this.id \u003d UUID.randomUUID().toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d true;","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"     * Creates a plane with a specific given id.","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"     * @param model the model of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"     * @param age   the age of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"     * @param id    the id of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"    public Plane(String id, String model, int age) {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d true;","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"     * Returns the id of the plane.","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"     * @return the id of the plane.","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"cetigerlily"},"content":"    public String getId() {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"        return this.id;","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"cetigerlily"},"content":"     * Returns the model of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"cetigerlily"},"content":"     * @return the model of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"cetigerlily"},"content":"    public String getModel() {","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"cetigerlily"},"content":"        return this.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"cetigerlily"},"content":"     * Returns the age of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"cetigerlily"},"content":"     * @return the age of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"cetigerlily"},"content":"    public int getAge() {","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"cetigerlily"},"content":"        return this.age;","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"cetigerlily"},"content":"     * Returns the availability of the plane.","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"cetigerlily"},"content":"     * @return the availability of the plane.","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"cetigerlily"},"content":"    public boolean isAvailable() {","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"cetigerlily"},"content":"        return this.isAvailable;","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"cetigerlily"},"content":"     * Sets the availability of the plane to unavailable.","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"cetigerlily"},"content":"    public void setUnavailable() {","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d false;","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"cetigerlily"},"content":"     * Sets the availability of the plane to available.","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"cetigerlily"},"content":"    public void setAvailable() {","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d true;","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"cetigerlily"},"content":"     * Returns a String corresponding to the availability of the plane.","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"cetigerlily"},"content":"     * @return the availability of the plane as a String","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"cetigerlily"},"content":"    public String getAvailabilityString() {","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"cetigerlily"},"content":"        return (this.isAvailable)","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"cetigerlily"},"content":"                ? \"Available\"","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"cetigerlily"},"content":"                : \"Unavailable\";","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"cetigerlily"},"content":"    public List\u003cString\u003e getDisplayList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"BoAi01"},"content":"        return List.of(","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"tangyuantyy"},"content":"                String.format(\"%s\", model),","lastModifiedDate":"2023-03-26"},{"lineNumber":127,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", AGE_STRING, age)","lastModifiedDate":"2023-04-01"},{"lineNumber":128,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"        return getModel();","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":136,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":137,"author":{"gitId":"BoAi01"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-04-01"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-04-01"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"            return true;","lastModifiedDate":"2023-04-01"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"        if (!(obj instanceof Plane)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"            return false;","lastModifiedDate":"2023-04-01"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"        Plane other \u003d (Plane) obj;","lastModifiedDate":"2023-04-01"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"        return other.getModel().equals(getModel());","lastModifiedDate":"2023-04-01"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":150,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":27,"jishnu28":5,"cetigerlily":114,"wxxedu":3,"tangyuantyy":1}},{"path":"src/main/java/wingman/model/plane/exceptions/PlaneNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.plane.exceptions;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":" * Signals that the plane cannot be found in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"public class PlaneNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"    public PlaneNotFoundException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"        super(\"Plane not found in the list.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"cetigerlily":9,"wxxedu":1}},{"path":"src/main/java/wingman/storage/ItemStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" * Represents the interface for a storage that stores Item items.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":" * @param \u003cT\u003e The type of the item to be stored.","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"public interface ItemStorage\u003cT extends Item\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * @return the file path of the data file.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    Path getPath();","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * Reads the data from the file.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * @return the data from the file.","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * @throws DataConversionException if the data in storage is not in the","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     *                                 expected format.","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * @throws IOException             if there was any problem when reading","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     *                                 from the storage.","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cT\u003e\u003e read()","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @see #read()","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cT\u003e\u003e read(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"     * Saves the given {@link ReadOnlyItemManager} to the storage.","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"     * @param itemManager cannot be null.","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    void save(ReadOnlyItemManager\u003cT\u003e itemManager)","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"            throws IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"     * @see #save(ReadOnlyItemManager)","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    void save(ReadOnlyItemManager\u003cT\u003e itemManager, Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"            throws IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":10,"wxxedu":46}},{"path":"src/main/java/wingman/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.JsonUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.UserPrefs;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wxxedu":6,"-":41}},{"path":"src/main/java/wingman/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.UserPrefs;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"public interface Storage extends UserPrefsStorage {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Pilot methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * Returns the path to the pilot manager file.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @return the path to the pilot manager file.","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    Path getPilotManagerFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * Reads the pilot manager from the {@code Storage::getPilotManagerFilePath}","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * @return the pilot manager.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cPilot\u003e\u003e readPilotManager() throws DataConversionException,","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"                                                                             IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"     * Saves the pilot manager to the {@code Storage::getLocationManagerFilePath}","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    void savePilotManager(ReadOnlyItemManager\u003cPilot\u003e pilotManager) throws IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Location methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"     * Retrieves the file path to location manager.","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"     * @return the location manager file path","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"    Path getLocationManagerFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"     * Reads the location manager from the {@code Storage::getLocationManagerFilePath}","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"     * @return the location manager.","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cLocation\u003e\u003e readLocationManager() throws DataConversionException,","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"            IOException;","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"     * Saves the location manager to {@code Storage::getLocationManagerFilePath}","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"     * @param locationManager the location manager","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"     * @throws IOException when the file cannot be saved","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"    void saveLocationManager(ReadOnlyItemManager\u003cLocation\u003e locationManager) throws IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Crew methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the path to the crew manager file.","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"tangyuantyy"},"content":"     * @return the path to the crew manager file.","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"tangyuantyy"},"content":"    Path getCrewManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"tangyuantyy"},"content":"     * Reads the crew manager from the {@code Storage::getCrewManagerFilePath}","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"tangyuantyy"},"content":"     * @return the crew manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cCrew\u003e\u003e readCrewManager() throws DataConversionException,","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"tangyuantyy"},"content":"            IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"tangyuantyy"},"content":"     * Saves the crew manager to the {@code Storage::getCrewManagerFilePath}","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"    void saveCrewManager(ReadOnlyItemManager\u003cCrew\u003e crewManager) throws IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Plane methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"cetigerlily"},"content":"    Path getPlaneManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cPlane\u003e\u003e readPlaneManager() throws DataConversionException,","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"cetigerlily"},"content":"                                                                             IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"    void savePlaneManager(ReadOnlyItemManager\u003cPlane\u003e planeManager) throws IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Flight methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"     * Returns the path to the flight manager file.","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"jishnu28"},"content":"     * @return the path to the flight manager file.","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"jishnu28"},"content":"    Path getFlightManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"jishnu28"},"content":"     * Reads the flight manager from the {@code Storage::getFlightManagerFilePath}","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"jishnu28"},"content":"     * @return the flight manager","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"jishnu28"},"content":"     * @throws DataConversionException when the file cannot be converted","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"jishnu28"},"content":"     * @throws IOException when the file cannot be read","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cFlight\u003e\u003e readFlightManager() throws DataConversionException,","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"jishnu28"},"content":"                                                                               IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"jishnu28"},"content":"     * Saves the flight manager to the {@code Storage::getFlightManagerFilePath}","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"jishnu28"},"content":"     * @param flightManager the flight manager","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"jishnu28"},"content":"     * @throws IOException when the file cannot be saved","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"BoAi01"},"content":"    void saveFlightManager(ReadOnlyItemManager\u003cFlight\u003e flightManager) throws IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"BoAi01":30,"jishnu28":40,"cetigerlily":5,"wxxedu":26,"tangyuantyy":18,"-":17}},{"path":"src/main/java/wingman/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.UserPrefs;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    private final ItemStorage\u003cPilot\u003e pilotStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    private final ItemStorage\u003cLocation\u003e locationStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    private final ItemStorage\u003cCrew\u003e crewStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    private final ItemStorage\u003cPlane\u003e planeStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    private final ItemStorage\u003cFlight\u003e flightStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     * Creates a {@code StorageManager} with the given {@code UserPrefStorage} and {@code ItemStorages}.","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    public StorageManager(UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"                          ItemStorage\u003cPilot\u003e pilotStorage,","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"                          ItemStorage\u003cLocation\u003e locationStorage,","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"                          ItemStorage\u003cCrew\u003e crewStorage,","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"                          ItemStorage\u003cPlane\u003e planeStorage,","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"                          ItemStorage\u003cFlight\u003e flightStorage) {","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        this.pilotStorage \u003d pilotStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"        this.locationStorage \u003d locationStorage;","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"        this.crewStorage \u003d crewStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"        this.planeStorage \u003d planeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"        this.flightStorage \u003d flightStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Pilot methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    public Path getPilotManagerFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        return pilotStorage.getPath();","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cPilot\u003e\u003e readPilotManager()","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        return readPilotManager(pilotStorage.getPath());","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"     * Reads the pilot manager from the given file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"     * @param filePath the file path to read from","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"     * @return the pilot manager","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     * @throws IOException             if there was any problem when reading from the file.","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cPilot\u003e\u003e readPilotManager(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        return pilotStorage.read(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"    public void savePilotManager(ReadOnlyItemManager\u003cPilot\u003e pilotManager) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"        savePilotManager(pilotManager, pilotStorage.getPath());","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"     * Saves the pilot manager to the given file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"     * @param pilotManager the pilot manager to save","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"     * @param filePath     the file path to save to","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"    public void savePilotManager(ReadOnlyItemManager\u003cPilot\u003e pilotManager, Path filePath) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"        logger.fine(\"Attempting to saving pilots to data file: \" + filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"        pilotStorage.save(pilotManager, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Location methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"    public Path getLocationManagerFilePath() {","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"        return locationStorage.getPath();","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cLocation\u003e\u003e readLocationManager()","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"BoAi01"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"BoAi01"},"content":"        return readLocationManager(locationStorage.getPath());","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"BoAi01"},"content":"     * Reads the location manager from the given file path.","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"BoAi01"},"content":"     * @param filePath the file path to read from","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"BoAi01"},"content":"     * @return the location manager","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"BoAi01"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"     * @throws IOException             if there was any problem when reading from the file.","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cLocation\u003e\u003e readLocationManager(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"BoAi01"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"BoAi01"},"content":"        logger.fine(\"Attempting to read location manager from file: \" + filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"BoAi01"},"content":"        return locationStorage.read(filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"    public void saveLocationManager(ReadOnlyItemManager\u003cLocation\u003e locationManager) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"        saveLocationManager(locationManager, locationStorage.getPath());","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"     * Saves the location manager to the given file path.","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"     * @param locationManager the location manager to save","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"     * @param filePath the file path to save to","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"     * @throws IOException when there are errors writing to the file","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"BoAi01"},"content":"    public void saveLocationManager(ReadOnlyItemManager\u003cLocation\u003e locationManager, Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"BoAi01"},"content":"            throws IOException {","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"BoAi01"},"content":"        logger.fine(\"Attempting to saving locations to data file: \" + filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"BoAi01"},"content":"        locationStorage.save(locationManager, filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"tangyuantyy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Crew methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"tangyuantyy"},"content":"    public Path getCrewManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"tangyuantyy"},"content":"        return crewStorage.getPath();","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cCrew\u003e\u003e readCrewManager()","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"tangyuantyy"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"tangyuantyy"},"content":"        return readCrewManager(crewStorage.getPath());","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"tangyuantyy"},"content":"     * Reads the crew manager from the given file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"tangyuantyy"},"content":"     * @param filePath the file path to read from","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"tangyuantyy"},"content":"     * @return the crew manager","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"tangyuantyy"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"tangyuantyy"},"content":"     * @throws IOException             if there was any problem when reading from the file.","lastModifiedDate":"2023-03-06"},{"lineNumber":179,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cCrew\u003e\u003e readCrewManager(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"tangyuantyy"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"tangyuantyy"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"tangyuantyy"},"content":"        return crewStorage.read(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"BoAi01"},"content":"    public void saveCrewManager(ReadOnlyItemManager\u003cCrew\u003e crewManager) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"tangyuantyy"},"content":"        saveCrewManager(crewManager, crewStorage.getPath());","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"tangyuantyy"},"content":"     * Saves the crew manager to the given file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"tangyuantyy"},"content":"     * @param crewManager the pilot manager to save","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"tangyuantyy"},"content":"     * @param filePath     the file path to save to","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"tangyuantyy"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"BoAi01"},"content":"    public void saveCrewManager(ReadOnlyItemManager\u003cCrew\u003e crewManager, Path filePath) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":199,"author":{"gitId":"tangyuantyy"},"content":"        logger.fine(\"Attempting to saving crews to data file: \" + filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"tangyuantyy"},"content":"        crewStorage.save(crewManager, filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":203,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"cetigerlily"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Plane methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":206,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"cetigerlily"},"content":"    public Path getPlaneManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"cetigerlily"},"content":"        return planeStorage.getPath();","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":212,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cPlane\u003e\u003e readPlaneManager()","lastModifiedDate":"2023-03-07"},{"lineNumber":213,"author":{"gitId":"cetigerlily"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":214,"author":{"gitId":"cetigerlily"},"content":"        return readPlaneManager(planeStorage.getPath());","lastModifiedDate":"2023-03-06"},{"lineNumber":215,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":216,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":217,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":218,"author":{"gitId":"cetigerlily"},"content":"     * Reads the plane manager from the given file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":219,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":220,"author":{"gitId":"cetigerlily"},"content":"     * @param filePath                 the file path to read from.","lastModifiedDate":"2023-03-06"},{"lineNumber":221,"author":{"gitId":"cetigerlily"},"content":"     * @return                         the plane manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":222,"author":{"gitId":"cetigerlily"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-06"},{"lineNumber":223,"author":{"gitId":"cetigerlily"},"content":"     * @throws IOException             if there was any problem when reading from the file.","lastModifiedDate":"2023-03-06"},{"lineNumber":224,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":225,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cPlane\u003e\u003e readPlaneManager(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":226,"author":{"gitId":"cetigerlily"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":227,"author":{"gitId":"cetigerlily"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":228,"author":{"gitId":"cetigerlily"},"content":"        return planeStorage.read(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":229,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":230,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":231,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":232,"author":{"gitId":"BoAi01"},"content":"    public void savePlaneManager(ReadOnlyItemManager\u003cPlane\u003e planeManager) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":233,"author":{"gitId":"cetigerlily"},"content":"        savePlaneManager(planeManager, planeStorage.getPath());","lastModifiedDate":"2023-03-06"},{"lineNumber":234,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":235,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":236,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":237,"author":{"gitId":"cetigerlily"},"content":"     * Saves the plane manager to the given file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":238,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":239,"author":{"gitId":"cetigerlily"},"content":"     * @param planeManager the location manager to save","lastModifiedDate":"2023-03-06"},{"lineNumber":240,"author":{"gitId":"cetigerlily"},"content":"     * @param filePath     the file path to save to","lastModifiedDate":"2023-03-06"},{"lineNumber":241,"author":{"gitId":"cetigerlily"},"content":"     * @throws IOException when there are errors writing to the file","lastModifiedDate":"2023-03-06"},{"lineNumber":242,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":243,"author":{"gitId":"BoAi01"},"content":"    public void savePlaneManager(ReadOnlyItemManager\u003cPlane\u003e planeManager, Path filePath) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":244,"author":{"gitId":"cetigerlily"},"content":"        logger.fine(\"Attempting to saving pilots to data file: \" + filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":245,"author":{"gitId":"cetigerlily"},"content":"        planeStorage.save(planeManager, filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":246,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":247,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":248,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":249,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Flight methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":250,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":251,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":252,"author":{"gitId":"jishnu28"},"content":"    public Path getFlightManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":253,"author":{"gitId":"jishnu28"},"content":"        return flightStorage.getPath();","lastModifiedDate":"2023-03-06"},{"lineNumber":254,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":255,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":256,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cFlight\u003e\u003e readFlightManager()","lastModifiedDate":"2023-03-07"},{"lineNumber":258,"author":{"gitId":"jishnu28"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":259,"author":{"gitId":"jishnu28"},"content":"        return readFlightManager(flightStorage.getPath());","lastModifiedDate":"2023-03-06"},{"lineNumber":260,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":261,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":262,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":263,"author":{"gitId":"jishnu28"},"content":"     * Reads the flight manager from the given file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":264,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":265,"author":{"gitId":"jishnu28"},"content":"     * @param filePath the file path to read from","lastModifiedDate":"2023-03-06"},{"lineNumber":266,"author":{"gitId":"jishnu28"},"content":"     * @return the flight manager","lastModifiedDate":"2023-03-06"},{"lineNumber":267,"author":{"gitId":"jishnu28"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-06"},{"lineNumber":268,"author":{"gitId":"jishnu28"},"content":"     * @throws IOException             if there was any problem when reading from the file.","lastModifiedDate":"2023-03-06"},{"lineNumber":269,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":270,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cFlight\u003e\u003e readFlightManager(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":271,"author":{"gitId":"jishnu28"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":272,"author":{"gitId":"jishnu28"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":273,"author":{"gitId":"jishnu28"},"content":"        return flightStorage.read(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":274,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":275,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":276,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":277,"author":{"gitId":"BoAi01"},"content":"    public void saveFlightManager(ReadOnlyItemManager\u003cFlight\u003e flightManager) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":278,"author":{"gitId":"jishnu28"},"content":"        saveFlightManager(flightManager, flightStorage.getPath());","lastModifiedDate":"2023-03-06"},{"lineNumber":279,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":280,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":281,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":282,"author":{"gitId":"jishnu28"},"content":"     * Saves the flight manager to the given file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":283,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":284,"author":{"gitId":"jishnu28"},"content":"     * @param flightManager the flight manager to save","lastModifiedDate":"2023-03-06"},{"lineNumber":285,"author":{"gitId":"jishnu28"},"content":"     * @param filePath     the file path to save to","lastModifiedDate":"2023-03-06"},{"lineNumber":286,"author":{"gitId":"jishnu28"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-06"},{"lineNumber":287,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":288,"author":{"gitId":"BoAi01"},"content":"    public void saveFlightManager(ReadOnlyItemManager\u003cFlight\u003e flightManager, Path filePath) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":289,"author":{"gitId":"jishnu28"},"content":"        logger.fine(\"Attempting to saving flights to data file: \" + filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":290,"author":{"gitId":"jishnu28"},"content":"        flightStorage.save(flightManager, filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":291,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BoAi01":73,"jishnu28":49,"cetigerlily":40,"wxxedu":51,"tangyuantyy":41,"-":38}},{"path":"src/main/java/wingman/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.UserPrefs;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wxxedu":8,"-":30}},{"path":"src/main/java/wingman/storage/json/JsonAdaptedModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * A model that has been adapted to be stored in a JSON file.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e The type of the model.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"public interface JsonAdaptedModel\u003cT\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * Converts this JsonAdaptedModel into the model\u0027s {@code Identifiable}","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     * object.","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * @throws IllegalValueException if there were any data constraints","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     *                               violated in the adapted item.","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    T toModelType() throws IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":19}},{"path":"src/main/java/wingman/storage/json/JsonItemManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * Represents a manager that manages a list of {@code JsonAdaptedModel}","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" * objects. Implement this class and add Jackson annotations to allow","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * Jackson to convert the manager into a JSON file.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e The type of the model.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":" * @param \u003cF\u003e The type of the JsonAdaptedModel.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"public abstract class JsonItemManager\u003cT extends Item, F extends JsonAdaptedModel\u003cT\u003e\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"        implements JsonAdaptedModel\u003cItemManager\u003cT\u003e\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    public static final String MESSAGE_DUPLICATE_ITEMS \u003d \"Items list contains duplicate item(s).\";","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * The list of items to be stored.","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    protected final List\u003cF\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * The function to convert the item into a JsonAdaptedModel.","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * @param item The item to convert.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @return The JsonAdaptedModel.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    protected abstract F getJsonAdaptedModel(T item);","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * Reads the items from the manager and stores them in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * @param manager The manager to read from.","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    protected void readFromManager(ReadOnlyItemManager\u003cT\u003e manager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        items.addAll(manager.getItemList().stream()","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"                            .map(this::getJsonAdaptedModel)","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"                            .collect(Collectors.toList()));","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    public ItemManager\u003cT\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"        ItemManager\u003cT\u003e manager \u003d new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        for (F item : items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"            T modelItem \u003d item.toModelType();","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"            if (manager.hasItem(modelItem)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"                throw new IllegalValueException(","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"                        MESSAGE_DUPLICATE_ITEMS + \": \" + modelItem","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"                );","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"            manager.addItem(modelItem);","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        return manager;","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":5,"wxxedu":58}},{"path":"src/main/java/wingman/storage/json/JsonItemStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static wingman.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.FileHelper;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.JsonHelper;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.ItemStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":" * Represents the base class for the persistent storage of a","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":" * {@link ReadOnlyItemManager}. Extend this class to use the features","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":" * provided by this.","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":" * @param \u003cT\u003e the type of the {@link Item} to be stored.","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":" * @param \u003cF\u003e the type of the {@link JsonAdaptedModel} to be stored.","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":" * @param \u003cM\u003e the type of the {@link JsonItemManager} to be stored.","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"public abstract class JsonItemStorage\u003cT extends Item,","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"                                             F extends JsonAdaptedModel\u003cT\u003e,","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"                                             M extends JsonItemManager\u003cT, F\u003e\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"        implements ItemStorage\u003cT\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    private static final String ILLEGAL_VALUE_MESSAGE \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"            \"Illegal value found in %s: %s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     * The logger to be used by this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    private final Logger logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    private final Path filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     * The dependency to handle JSON operations, this is just so that we can","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * have better separation of concerns in unit testing.","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    private final JsonHelper jsonHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * The dependency to handle file operations, this is just so that we can","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     * have better separation of concerns in unit testing.","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    private final FileHelper fileHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"     * Creates a new JsonIdentifiableStorage object.","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"     * @param filePath the path to the file to be read from and written to.","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"    public JsonItemStorage(Path filePath) {","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"        this(","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"                filePath,","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"                JsonHelper.INSTANCE,","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"                FileHelper.INSTANCE,","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"                LogsCenter.getLogger(JsonItemStorage.class)","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"     * Creates a new JsonIdentifiableStorage object.","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     * @param filePath   the path to the file to be read from and written to.","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     * @param jsonHelper the JsonHelper to be used.","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     * @param fileHelper the FileHelper to be used.","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    protected JsonItemStorage(","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"            Path filePath, JsonHelper jsonHelper,","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"            FileHelper fileHelper, Logger logger","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        this.jsonHelper \u003d jsonHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        this.fileHelper \u003d fileHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        this.logger \u003d logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"     * Gets the class of the {@link JsonItemManager} that was used, i","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"     * .e. gets the class of the {@code M} type parameter. This is needed","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     * because the information about the type parameter is erased at runtime.","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"     * @return the class of the {@link JsonItemManager} that was used.","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    protected abstract Class\u003cM\u003e getManagerClass();","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"     * Creates a new {@link JsonItemManager} from the given","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"     * {@link ReadOnlyItemManager}. This is needed because we cannot","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"     * specify a constructor for the {@code M} type parameter.","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"     * @param modelManager the {@link ReadOnlyItemManager} to be used","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"     *                     to create the new {@link JsonItemManager}.","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"     * @return a new {@link JsonItemManager} created from the given","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"    protected abstract M createManager(ReadOnlyItemManager\u003cT\u003e modelManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"    public Path getPath() {","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"        return filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cT\u003e\u003e read()","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"        return read(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cT\u003e\u003e read(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cM\u003e jsonManager \u003d jsonHelper.readJsonFile(","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"                filePath,","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"                getManagerClass()","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"        if (jsonManager.isEmpty()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"            return Optional.of(jsonManager.get().toModelType());","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"            logger.warning(String.format(","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"                    ILLEGAL_VALUE_MESSAGE,","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"                    filePath,","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"                    ive.getMessage()","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"            ));","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"    public void save(ReadOnlyItemManager\u003cT\u003e itemManager)","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"            throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"        save(itemManager, filePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"    public void save(","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyItemManager\u003cT\u003e itemManager,","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"            Path filePath","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"    ) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"BoAi01"},"content":"        requireAllNonNull(itemManager, filePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"        fileHelper.createIfMissing(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":154,"author":{"gitId":"BoAi01"},"content":"        jsonHelper.saveJsonFile(createManager(itemManager), filePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":21,"wxxedu":135}},{"path":"src/main/java/wingman/storage/json/adapted/JsonAdaptedCrew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.adapted;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.CrewRank;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.exceptions.InvalidCrewRankException;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonAdaptedModel;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":" * Represents a Jackson-friendly version of a Crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"public class JsonAdaptedCrew implements JsonAdaptedModel\u003cCrew\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"            \"Crew\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"     * The id of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    private final String id;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"     * The name of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"    private final String name;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"     * The rank of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"    private final int rank;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"     * The availability of the crew.","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"    private boolean isAvailable;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"     * Constructs a {@code JsonAdaptedPilot} with the given crew details.","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"     * This is intended for Jackson to use.","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"     * @param id   The id of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"     * @param rank The rank of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    public JsonAdaptedCrew(","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"id\") String id,","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"tangyuantyy"},"content":"            @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"            @JsonProperty(\"rank\") int rank,","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"            @JsonProperty(\"isAvailable\") boolean isAvailable","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"tangyuantyy"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"tangyuantyy"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"tangyuantyy"},"content":"        this.rank \u003d rank;","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d isAvailable;","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"tangyuantyy"},"content":"     * Converts a given {@code Pilot} into this class for Jackson use.","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"tangyuantyy"},"content":"     * @param crew The crew to be converted.","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"tangyuantyy"},"content":"    public JsonAdaptedCrew(Crew crew) {","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"tangyuantyy"},"content":"        this.id \u003d crew.getId();","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"tangyuantyy"},"content":"        this.name \u003d crew.getName();","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"tangyuantyy"},"content":"        this.rank \u003d crew.getRank().toIndex();","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d crew.isAvailable();","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"tangyuantyy"},"content":"    public Crew toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"tangyuantyy"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, \"id\")","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"tangyuantyy"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, \"name\")","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"tangyuantyy"},"content":"        final CrewRank rank;","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"tangyuantyy"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"tangyuantyy"},"content":"            rank \u003d CrewRank.fromIndex(this.rank);","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"tangyuantyy"},"content":"        } catch (InvalidCrewRankException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"tangyuantyy"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"cetigerlily"},"content":"        Crew newCrew \u003d new Crew(id, name, rank);","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"cetigerlily"},"content":"        if (this.isAvailable) {","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"cetigerlily"},"content":"            newCrew.setAvailable();","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"cetigerlily"},"content":"            newCrew.setUnavailable();","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"cetigerlily"},"content":"        return newCrew;","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cetigerlily":16,"wxxedu":17,"tangyuantyy":69}},{"path":"src/main/java/wingman/storage/json/adapted/JsonAdaptedFlight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.adapted;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.FlightCrewType;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.Link;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.FlightLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.FlightPilotType;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.FlightPlaneType;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonAdaptedModel;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":" * Represents a Jackson-friendly version of a Flight","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"public class JsonAdaptedFlight implements JsonAdaptedModel\u003cFlight\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"            \"Flight\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     * The id of the flight.","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    private final String id;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"     * The code of the flight.","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"    private final String code;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    private Map\u003cFlightPilotType, Deque\u003cString\u003e\u003e pilotLink;","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"    private Map\u003cFlightCrewType, Deque\u003cString\u003e\u003e crewLink;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"    private Map\u003cFlightPlaneType, Deque\u003cString\u003e\u003e planeLink;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"    private Map\u003cFlightLocationType, Deque\u003cString\u003e\u003e locationLink;","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"     * Constructs a {@code JsonAdaptedFlight} with the given flight details.","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"     * This is intended for Jackson to use.","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"     * @param id           The id of the flight.","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"     * @param code         The name of the flight.","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"     * @param pilotLink    The link between pilot(s) and the flight","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"     * @param crewLink     The link between crew(s) and the flight","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"     * @param planeLink    The link between plane and the flight","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"     * @param locationLink The link between location(s) and the flight","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    public JsonAdaptedFlight(","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"id\") String id,","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"            @JsonProperty(\"code\") String code,","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"            @JsonProperty(\"pilotLink\") Map\u003cFlightPilotType, Deque\u003cString\u003e\u003e pilotLink,","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"            @JsonProperty(\"crewLink\") Map\u003cFlightCrewType, Deque\u003cString\u003e\u003e crewLink,","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"            @JsonProperty(\"planeLink\") Map\u003cFlightPlaneType, Deque\u003cString\u003e\u003e planeLink,","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"            @JsonProperty(\"locationLink\") Map\u003cFlightLocationType, Deque\u003cString\u003e\u003e locationLink","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        this.pilotLink \u003d pilotLink;","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"        this.crewLink \u003d crewLink;","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"        this.planeLink \u003d planeLink;","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"        this.locationLink \u003d locationLink;","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"     * Converts a given {@code Flight} into this class for Jackson use.","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"     * @param flight The flight to be converted.","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"jishnu28"},"content":"    public JsonAdaptedFlight(Flight flight) {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"        this.id \u003d flight.getId();","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"        this.code \u003d flight.getCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"        this.pilotLink \u003d flight.getPilotLink().getCopiedContents();","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"        this.crewLink \u003d flight.getCrewLink().getCopiedContents();","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"        this.planeLink \u003d flight.getPlaneLink().getCopiedContents();","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"        this.locationLink \u003d flight.getLocationLink().getCopiedContents();","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"jishnu28"},"content":"    public Flight toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"jishnu28"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, \"id\")","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"jishnu28"},"content":"        if (code \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, \"code\")","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"        Flight flight;","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"jishnu28"},"content":"        Link\u003cFlightPilotType, Pilot, ReadOnlyItemManager\u003cPilot\u003e\u003e linkPilot \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"                Link.fromOrCreate(Pilot.SHAPE, pilotLink,","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"                        GetUtil","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"                                .getLazy(Model.class)","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"                                .map(Model::getPilotManager)","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"                );","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"jishnu28"},"content":"        Link\u003cFlightCrewType, Crew, ReadOnlyItemManager\u003cCrew\u003e\u003e linkCrew \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"                Link.fromOrCreate(Crew.SHAPE, crewLink,","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"                        GetUtil","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"                                .getLazy(Model.class)","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"                                .map(Model::getCrewManager)","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"jishnu28"},"content":"                );","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"jishnu28"},"content":"        Link\u003cFlightPlaneType, Plane, ReadOnlyItemManager\u003cPlane\u003e\u003e linkPlane \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"                Link.fromOrCreate(Plane.SHAPE, planeLink,","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"jishnu28"},"content":"                        GetUtil","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"jishnu28"},"content":"                                .getLazy(Model.class)","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"jishnu28"},"content":"                                .map(Model::getPlaneManager)","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"jishnu28"},"content":"                );","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"jishnu28"},"content":"        Link\u003cFlightLocationType, Location, ReadOnlyItemManager\u003cLocation\u003e\u003e linkLocation \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"                Link.fromOrCreate(Location.SHAPE, locationLink,","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"jishnu28"},"content":"                        GetUtil","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"jishnu28"},"content":"                                .getLazy(Model.class)","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"jishnu28"},"content":"                                .map(Model::getLocationManager)","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"jishnu28"},"content":"                );","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"        flight \u003d new Flight(","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"                id,","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"                code,","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"                linkPilot,","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"                linkCrew,","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"                linkPlane,","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"                linkLocation","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"BoAi01"},"content":"        return flight;","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":6,"jishnu28":81,"cetigerlily":1,"wxxedu":50}},{"path":"src/main/java/wingman/storage/json/adapted/JsonAdaptedLocation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.adapted;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.GetUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.Link;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.CrewLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.PilotLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.PlaneLocationType;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonAdaptedModel;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":" * Represents a Jackson-friendly version of a Pilot.","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"public class JsonAdaptedLocation implements JsonAdaptedModel\u003cLocation\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"            \"Location\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     * The id of the location.","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    private final String id;","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     * The name of the location.","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"    private final String name;","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"     * Linked crews, i.e., crews that reside in this location.","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    private final Map\u003cCrewLocationType, Deque\u003cString\u003e\u003e crewLink;","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"     * Linked pilots","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    private final Map\u003cPilotLocationType, Deque\u003cString\u003e\u003e pilotLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"     * Linked planes","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"    private final Map\u003cPlaneLocationType, Deque\u003cString\u003e\u003e planeLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"     * Constructs a {@code JsonAdaptedLocation} with the given location details.","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"     * This is intended for Jackson to use.","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"     * @param id   The id of the location.","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"     * @param name The name of the location.","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"     * @param crewLink The link between locations to crews.","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"     * @param pilotLink The link between locations to pilots.","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"     * @param planeLink The link between locations to planes.","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    public JsonAdaptedLocation(","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"id\") String id,","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"            @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"            @JsonProperty(\"crewLink\") Map\u003cCrewLocationType, Deque\u003cString\u003e\u003e crewLink,","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"            @JsonProperty(\"pilotLink\") Map\u003cPilotLocationType, Deque\u003cString\u003e\u003e pilotLink,","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"            @JsonProperty(\"planeLink\") Map\u003cPlaneLocationType, Deque\u003cString\u003e\u003e planeLink","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"        this.crewLink \u003d crewLink;","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"        this.pilotLink \u003d pilotLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"        this.planeLink \u003d planeLink;","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"     * Converts a given {@code Location} into this class for Jackson use.","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"     * @param location The location to be converted.","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"    public JsonAdaptedLocation(Location location) {","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"        this.id \u003d location.getId();","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"        this.name \u003d location.getName();","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"        this.crewLink \u003d location.getCrewLink().getCopiedContents();","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"        this.pilotLink \u003d location.getPilotLink().getCopiedContents();","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"        this.planeLink \u003d location.getPlaneLink().getCopiedContents();","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"    public Location toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, \"id\")","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, \"name\")","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"        Location location;","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"        Link\u003cCrewLocationType, Crew, ReadOnlyItemManager\u003cCrew\u003e\u003e linkCrew \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"                Link.fromOrCreate(","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"                        Crew.SHAPE_FOR_LOCATION,","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"                        crewLink,","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"                        GetUtil.getLazy(Model.class)","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"                               .map(Model::getCrewManager)","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"                );","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"        Link\u003cPilotLocationType, Pilot, ReadOnlyItemManager\u003cPilot\u003e\u003e linkPilot \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"                Link.fromOrCreate(","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"                        Pilot.SHAPE_FOR_LOCATION,","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"                        pilotLink,","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"                        GetUtil.getLazy(Model.class)","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"BoAi01"},"content":"                                .map(Model::getPilotManager)","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"BoAi01"},"content":"                );","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"BoAi01"},"content":"        Link\u003cPlaneLocationType, Plane, ReadOnlyItemManager\u003cPlane\u003e\u003e linkPlane \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"                Link.fromOrCreate(","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"BoAi01"},"content":"                        Plane.SHAPE_FOR_LOCATION,","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"BoAi01"},"content":"                        planeLink,","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"BoAi01"},"content":"                        GetUtil.getLazy(Model.class)","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"BoAi01"},"content":"                                .map(Model::getPlaneManager)","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"BoAi01"},"content":"                );","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"BoAi01"},"content":"        location \u003d new Location(","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"BoAi01"},"content":"                id,","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"BoAi01"},"content":"                name,","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"BoAi01"},"content":"                linkCrew,","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"BoAi01"},"content":"                linkPilot,","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"                linkPlane","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"        return location;","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":118,"wxxedu":25}},{"path":"src/main/java/wingman/storage/json/adapted/JsonAdaptedPilot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.adapted;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Gender;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.PilotRank;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.exceptions.InvalidGenderException;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.exceptions.InvalidPilotRankException;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonAdaptedModel;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * Represents a Jackson-friendly version of a Pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"public class JsonAdaptedPilot implements JsonAdaptedModel\u003cPilot\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"            \"Pilot\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * The id of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    private final String id;","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * The name of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    private final String name;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * The rank of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    private final int rank;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * The age of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    private final int age;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     * The gender of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    private final int gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     * The flight hour of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    private final int flightHour;","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"     * The availability of the pilot.","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"    private boolean isAvailable;","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"     * Constructs a {@code JsonAdaptedPilot} with the given pilot details.","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"     * This is intended for Jackson to use.","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     * @param id   The id of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"     * @param rank The rank of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    public JsonAdaptedPilot(","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"id\") String id,","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"rank\") int rank,","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"age\") int age,","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"gender\") int gender,","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"cetigerlily"},"content":"            @JsonProperty(\"flightHour\") int flightHour,","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"cetigerlily"},"content":"            @JsonProperty(\"isAvailable\") boolean isAvailable","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        this.rank \u003d rank;","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        this.flightHour \u003d flightHour;","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d isAvailable;","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     * Converts a given {@code Pilot} into this class for Jackson use.","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"     * @param pilot The pilot to be converted.","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    public JsonAdaptedPilot(Pilot pilot) {","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        this.id \u003d pilot.getId();","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        this.name \u003d pilot.getName();","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        this.rank \u003d pilot.getRank().toIndex();","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        this.gender \u003d pilot.getGender().toIndex();","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        this.age \u003d pilot.getAge();","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"        this.flightHour \u003d pilot.getFlightHour();","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d pilot.isAvailable();","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"    public Pilot toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, \"id\")","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, \"name\")","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        final PilotRank rank;","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"            rank \u003d PilotRank.fromIndex(this.rank);","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        } catch (InvalidPilotRankException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"        final Gender gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"            gender \u003d Gender.fromIndex(this.gender);","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"        } catch (InvalidGenderException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"cetigerlily"},"content":"        Pilot newPilot \u003d new Pilot(id, name, age, gender, rank, flightHour);","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"cetigerlily"},"content":"        if (this.isAvailable) {","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"            newPilot.setAvailable();","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"            newPilot.setUnavailable();","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"cetigerlily"},"content":"        return newPilot;","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cetigerlily":17,"wxxedu":118}},{"path":"src/main/java/wingman/storage/json/adapted/JsonAdaptedPlane.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.adapted;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonAdaptedModel;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":" * Represents a Jackson-friendly version of a Plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"public class JsonAdaptedPlane implements JsonAdaptedModel\u003cPlane\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"            \"Plane\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"     * The id of the plane.","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    private final String id;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     * The model of the plane.","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    private final String model;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     * The age of the plane.","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    private final int age;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"     * The availability of the plane.","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    private boolean isAvailable;","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"     * Constructs a {@code JsonAdaptedPlane} with the given plane details.","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"     * This is intended for Jackson to use.","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"     * @param id    the id of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"     * @param model the model of the plane.","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"     * @param age   the age of the plane.","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    public JsonAdaptedPlane(","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"id\") String id,","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"            @JsonProperty(\"model\") String model,","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"            @JsonProperty(\"age\") int age","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d true;","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"     * Converts a given {@code Plane} into this class for Jackson use.","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"cetigerlily"},"content":"     * @param plane the plane to be converted.","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"cetigerlily"},"content":"    public JsonAdaptedPlane(Plane plane) {","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"cetigerlily"},"content":"        this.id \u003d plane.getId();","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"cetigerlily"},"content":"        this.model \u003d plane.getModel();","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"        this.age \u003d plane.getAge();","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"        this.isAvailable \u003d plane.isAvailable();","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"cetigerlily"},"content":"    public Plane toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"cetigerlily"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, \"id\")","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"cetigerlily"},"content":"        if (model \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, \"model\")","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"            );","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"cetigerlily"},"content":"        Plane newPlane \u003d new Plane(id, model, age);","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"cetigerlily"},"content":"        if (this.isAvailable) {","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"cetigerlily"},"content":"            newPlane.setAvailable();","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"cetigerlily"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"cetigerlily"},"content":"            newPlane.setUnavailable();","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"cetigerlily"},"content":"        return newPlane;","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cetigerlily":76,"wxxedu":15}},{"path":"src/main/java/wingman/storage/json/serializable/JsonSerializableCrewManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.serializable;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.adapted.JsonAdaptedCrew;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":" * Represents a serializable manager of crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"@JsonRootName(value \u003d \"crewmanager\")","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"public class JsonSerializableCrewManager","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        extends JsonItemManager\u003cCrew, JsonAdaptedCrew\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"    public JsonSerializableCrewManager(","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"items\") List\u003cJsonAdaptedCrew\u003e crew","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"        this.items.addAll(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a new JsonSerializableCrewManager from the given manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"     * @param manager the manager to create the JsonSerializableCrewManager","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     *                from, it should be a ReadOnlyItemManager","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"     *                \u0026lt;Crew\u0026gt;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"     * @return a new JsonSerializableCrewManager","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"    public static JsonSerializableCrewManager from(","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyItemManager\u003cCrew\u003e manager","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"        final JsonSerializableCrewManager res \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"                new JsonSerializableCrewManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"        res.readFromManager(manager);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"        return res;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"tangyuantyy"},"content":"    protected JsonAdaptedCrew getJsonAdaptedModel(Crew item) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"tangyuantyy"},"content":"        return new JsonAdaptedCrew(item);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":1,"wxxedu":11,"tangyuantyy":38}},{"path":"src/main/java/wingman/storage/json/serializable/JsonSerializableFlightManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.serializable;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.adapted.JsonAdaptedFlight;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":" * Represents a serializable manager of flights.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"@JsonRootName(value \u003d \"flightmanager\")","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"public class JsonSerializableFlightManager","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        extends JsonItemManager\u003cFlight, JsonAdaptedFlight\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"    public JsonSerializableFlightManager(","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"items\") List\u003cJsonAdaptedFlight\u003e flights","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"        this.items.addAll(flights);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"     * Creates a new JsonSerializableFlightManager from the given manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     * @param manager the manager to create the JsonSerializableFlightManager","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     *                from, it should be a ReadOnlyItemManager","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"     *                \u0026lt;Flight\u0026gt;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"     * @return a new JsonSerializableFlightManager","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"    public static JsonSerializableFlightManager from(","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyItemManager\u003cFlight\u003e manager","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"        final JsonSerializableFlightManager res \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"                new JsonSerializableFlightManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"        res.readFromManager(manager);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"        return res;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"    protected JsonAdaptedFlight getJsonAdaptedModel(Flight item) {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"        return new JsonAdaptedFlight(item);","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":1,"jishnu28":39,"wxxedu":11}},{"path":"src/main/java/wingman/storage/json/serializable/JsonSerializableLocationManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.serializable;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.adapted.JsonAdaptedLocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":" * Represents a serializable manager of locations.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"@JsonRootName(value \u003d \"locationmanager\")","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"public class JsonSerializableLocationManager","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        extends JsonItemManager\u003cLocation, JsonAdaptedLocation\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    public JsonSerializableLocationManager(","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"items\") List\u003cJsonAdaptedLocation\u003e location","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"        this.items.addAll(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"     * Creates a new JsonSerializablePilotManager from the given manager.","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     * @param manager the manager to create the JsonSerializablePilotManager","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     *                from, it should be a ReadOnlyItemManager","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     *                \u0026lt;Pilot\u0026gt;","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     * @return a new JsonSerializablePilotManager","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    public static JsonSerializableLocationManager from(ReadOnlyItemManager\u003cLocation\u003e manager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"        final JsonSerializableLocationManager res \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"                new JsonSerializableLocationManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"        res.readFromManager(manager);","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"        return res;","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    protected JsonAdaptedLocation getJsonAdaptedModel(Location item) {","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        return new JsonAdaptedLocation(item);","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":39,"wxxedu":9}},{"path":"src/main/java/wingman/storage/json/serializable/JsonSerializablePilotManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.serializable;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.adapted.JsonAdaptedPilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" * Represents a serializable manager of pilots.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"@JsonRootName(value \u003d \"pilotmanager\")","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"public class JsonSerializablePilotManager","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        extends JsonItemManager\u003cPilot, JsonAdaptedPilot\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    public JsonSerializablePilotManager(","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"items\") List\u003cJsonAdaptedPilot\u003e pilots","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        this.items.addAll(pilots);","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * Creates a new JsonSerializablePilotManager from the given manager.","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * @param manager the manager to create the JsonSerializablePilotManager","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     *                from, it should be a ReadOnlyItemManager","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     *                \u0026lt;Pilot\u0026gt;","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * @return a new JsonSerializablePilotManager","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    public static JsonSerializablePilotManager from(","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyItemManager\u003cPilot\u003e manager","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        final JsonSerializablePilotManager res \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"                new JsonSerializablePilotManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        res.readFromManager(manager);","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        return res;","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    protected JsonAdaptedPilot getJsonAdaptedModel(Pilot item) {","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        return new JsonAdaptedPilot(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":1,"wxxedu":49}},{"path":"src/main/java/wingman/storage/json/serializable/JsonSerializablePlaneManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.serializable;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.adapted.JsonAdaptedPlane;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":" * Represents a serializable manager of planes.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"@JsonRootName(value \u003d \"planemanager\")","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"public class JsonSerializablePlaneManager","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        extends JsonItemManager\u003cPlane, JsonAdaptedPlane\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"    public JsonSerializablePlaneManager(","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"            @JsonProperty(\"items\") List\u003cJsonAdaptedPlane\u003e planes","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"        this.items.addAll(planes);","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"     * Creates a new JsonSerializablePlaneManager from the given manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"     * @param manager the manager to create the JsonSerializablePlaneManager","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     *                from, it should be a ReadOnlyItemManager","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"     *                \u0026lt;Plane\u0026gt;","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"     * @return a new JsonSerializablePilotManager.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    public static JsonSerializablePlaneManager from(","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyItemManager\u003cPlane\u003e manager","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"        final JsonSerializablePlaneManager res \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"                new JsonSerializablePlaneManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"        res.readFromManager(manager);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"        return res;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"    protected JsonAdaptedPlane getJsonAdaptedModel(Plane item) {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"        return new JsonAdaptedPlane(item);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":1,"cetigerlily":36,"wxxedu":12}},{"path":"src/main/java/wingman/storage/json/storage/JsonCrewManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.storage;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonItemStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.adapted.JsonAdaptedCrew;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.serializable.JsonSerializableCrewManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":" * Represents a storage for {@link Crew}s.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"public class JsonCrewManagerStorage","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"        extends JsonItemStorage\u003cCrew, JsonAdaptedCrew, JsonSerializableCrewManager\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a new JsonIdentifiableStorage object.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"     * @param filePath the path to the file to be read from and written to.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"    public JsonCrewManagerStorage(Path filePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"        super(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"    protected Class\u003cJsonSerializableCrewManager\u003e getManagerClass() {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"        return JsonSerializableCrewManager.class;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    protected JsonSerializableCrewManager createManager(","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyItemManager\u003cCrew\u003e modelManager","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"        return JsonSerializableCrewManager.from(modelManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"wxxedu":11,"tangyuantyy":25}},{"path":"src/main/java/wingman/storage/json/storage/JsonFlightManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.storage;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonItemStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.adapted.JsonAdaptedFlight;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.serializable.JsonSerializableFlightManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":" * Represents a storage for {@link Flight}s.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"public class JsonFlightManagerStorage","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"        extends JsonItemStorage\u003cFlight, JsonAdaptedFlight, JsonSerializableFlightManager\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"     * Creates a new JsonIdentifiableStorage object.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"     * @param filePath the path to the file to be read from and written to.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"    public JsonFlightManagerStorage(Path filePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"        super(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    protected Class\u003cJsonSerializableFlightManager\u003e getManagerClass() {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"        return JsonSerializableFlightManager.class;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    protected JsonSerializableFlightManager createManager(","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyItemManager\u003cFlight\u003e modelManager","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"        return JsonSerializableFlightManager.from(modelManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"jishnu28":26,"wxxedu":11}},{"path":"src/main/java/wingman/storage/json/storage/JsonLocationManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.storage;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonItemStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.adapted.JsonAdaptedLocation;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.serializable.JsonSerializableLocationManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" * Represents a storage for {@link Location}s.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"public class JsonLocationManagerStorage","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"        extends JsonItemStorage\u003cLocation, JsonAdaptedLocation, JsonSerializableLocationManager\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     * Creates a new JsonIdentifiableStorage object.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * @param filePath the path to the file to be read from and written to.","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    public JsonLocationManagerStorage(Path filePath) {","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"        super(filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    protected Class\u003cJsonSerializableLocationManager\u003e getManagerClass() {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        return JsonSerializableLocationManager.class;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    protected JsonSerializableLocationManager createManager(","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyItemManager\u003cLocation\u003e modelManager","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"        return JsonSerializableLocationManager.from(modelManager);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":25,"wxxedu":11}},{"path":"src/main/java/wingman/storage/json/storage/JsonPilotManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.storage;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonItemStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.adapted.JsonAdaptedPilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.serializable.JsonSerializablePilotManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * Represents a storage for {@link Pilot}s.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"public class JsonPilotManagerStorage","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"        extends JsonItemStorage\u003cPilot, JsonAdaptedPilot, JsonSerializablePilotManager\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * Creates a new JsonIdentifiableStorage object.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * @param filePath the path to the file to be read from and written to.","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    public JsonPilotManagerStorage(Path filePath) {","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"        super(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    protected Class\u003cJsonSerializablePilotManager\u003e getManagerClass() {","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"        return JsonSerializablePilotManager.class;","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    protected JsonSerializablePilotManager createManager(","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyItemManager\u003cPilot\u003e modelManager","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"        return JsonSerializablePilotManager.from(modelManager);","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":36}},{"path":"src/main/java/wingman/storage/json/storage/JsonPlaneManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json.storage;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonItemStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.adapted.JsonAdaptedPlane;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.serializable.JsonSerializablePlaneManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":" * Represents a storage for {@link Plane}s.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"public class JsonPlaneManagerStorage","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"        extends JsonItemStorage\u003cPlane, JsonAdaptedPlane, JsonSerializablePlaneManager\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    public JsonPlaneManagerStorage(Path filePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"        super(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"    protected Class\u003cJsonSerializablePlaneManager\u003e getManagerClass() {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"        return JsonSerializablePlaneManager.class;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    protected JsonSerializablePlaneManager createManager(","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"            ReadOnlyItemManager\u003cPlane\u003e modelManager","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"        return JsonSerializablePlaneManager.from(modelManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cetigerlily":20,"wxxedu":11}},{"path":"src/main/java/wingman/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.Logic;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"wxxedu":6,"-":80}},{"path":"src/main/java/wingman/ui/CrewCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":" * A generic view for crew.","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"public class CrewCard extends UiPart\u003cVBox\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"CrewCard.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    private final Crew crew;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"    private final int displayedIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    private VBox cardPane;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"    private Label id;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a view for the given crew. The crew is an identifiable object","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"     * that can be displayed in a list.","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"     * @param crew The crew to be displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"    public CrewCard(Crew crew, int displayedIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"        this.crew \u003d crew;","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"        this.displayedIndex \u003d displayedIndex - 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"        for (String line : crew.getDisplayList()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"            Label label \u003d new Label(line);","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"            cardPane.getChildren().add(label);","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the crew that is being displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"     * @return The crew that is being displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"    public Crew getCrew() {","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"        return crew;","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wxxedu":2,"tangyuantyy":44}},{"path":"src/main/java/wingman/ui/CrewListCell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":" * The cell that displays the crew in the list.","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":" *","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":" * @param \u003cCrew\u003e The type of Item to display.","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"public class CrewListCell\u003cCrew extends Item\u003e extends ListCell\u003cCrew\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"CrewListCell.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    protected void updateItem(Crew crew, boolean empty) {","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"        super.updateItem(crew, empty);","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"        if (empty || crew \u003d\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"            setGraphic(null);","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"            setText(null);","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"        } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"            setGraphic(new CrewCard(","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"                    (wingman.model.crew.Crew) crew, getIndex() + 1)","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"                    .getRoot());","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"BoAi01":2,"wxxedu":3,"tangyuantyy":22}},{"path":"src/main/java/wingman/ui/CrewListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.crew.Crew;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":" * A generic panel for displaying a list of crew.","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"public class CrewListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"CrewListPanel.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    private final Logger logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    private ListView\u003cCrew\u003e crewList;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    public CrewListPanel(ObservableList\u003cCrew\u003e crewList) {","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"        this(LogsCenter.getLogger(CrewListPanel.class), crewList);","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a {@code CrewListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"     * @param logger     The logger to be used.","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"     * @param crewList The list of Crews to be displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"    public CrewListPanel(","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"            Logger logger,","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"            ObservableList\u003cCrew\u003e crewList","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"    ) {","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"        this.logger \u003d logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"        this.crewList.setItems(crewList);","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"        this.crewList.setCellFactory(listView -\u003e new CrewListCell());","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wxxedu":3,"tangyuantyy":41}},{"path":"src/main/java/wingman/ui/FlightCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":" * A generic view for a flight.","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"public class FlightCard extends UiPart\u003cVBox\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"FlightCard.fxml\";","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    private final Flight flight;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"    private final int displayedIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    private VBox cardPane;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"    private Label id;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a view for the given flight. The flight is an identifiable object","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"     * that can be displayed in a list.","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"     * @param flight The flight to be displayed.","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    public FlightCard(Flight flight, int displayedIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"        this.displayedIndex \u003d displayedIndex - 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"        for (String line : flight.getDisplayList()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"            Label label \u003d new Label(line);","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"            cardPane.getChildren().add(label);","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the flight that is being displayed.","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"     * @return The flight that is being displayed.","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"    public Flight getFlight() {","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"        return flight;","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"wxxedu":2,"tangyuantyy":45}},{"path":"src/main/java/wingman/ui/FlightListCell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":" * The cell that displays the flights in the list.","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":" *","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":" * @param \u003cFlight\u003e The type of Item to display.","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"public class FlightListCell\u003cFlight extends Item\u003e extends ListCell\u003cFlight\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"FlightListCell.fxml\";","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    protected void updateItem(Flight flight, boolean empty) {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"        super.updateItem(flight, empty);","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"        if (empty || flight \u003d\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"            setGraphic(null);","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"            setText(null);","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"        } else {","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"            setGraphic(new FlightCard((wingman.model.flight.Flight) flight, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"wxxedu":3,"tangyuantyy":22}},{"path":"src/main/java/wingman/ui/FlightListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.flight.Flight;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":" * A generic panel for displaying a list of flights.","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"public class FlightListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"FlightListPanel.fxml\";","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    private final Logger logger;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    private ListView\u003cFlight\u003e flightList;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    public FlightListPanel(ObservableList\u003cFlight\u003e flightList) {","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"        this(LogsCenter.getLogger(FlightListPanel.class), flightList);","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a {@code FlightListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"     * @param logger     The logger to be used.","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"     * @param flightList The list of flights to be displayed.","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    public FlightListPanel(","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"            Logger logger,","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"            ObservableList\u003cFlight\u003e flightList","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"        this.logger \u003d logger;","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"        this.flightList.setItems(flightList);","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"        this.flightList.setCellFactory(listView -\u003e new FlightListCell());","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"wxxedu":8,"tangyuantyy":36}},{"path":"src/main/java/wingman/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.AppUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-w11-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    public static final String HELP_TABLE \u003d \"/images/helptable.png\";","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"    private ImageView helpTable;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        helpTable.setImage(AppUtil.getImage(HELP_TABLE));","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"        helpTable.setFitHeight(620);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"BoAi01":1,"wxxedu":4,"tangyuantyy":6,"-":99}},{"path":"src/main/java/wingman/ui/LocationCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":" * A generic view for a location.","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"public class LocationCard extends UiPart\u003cVBox\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"LocationCard.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    private final Location location;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"    private final int displayedIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    private VBox cardPane;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"    private Label id;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a view for the given location. The location is an identifiable object","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"     * that can be displayed in a list.","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"     * @param location The location to be displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    public LocationCard(Location location, int displayedIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"        this.displayedIndex \u003d displayedIndex - 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"        for (String line : location.getDisplayList()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"            Label label \u003d new Label(line);","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"            cardPane.getChildren().add(label);","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the location that is being displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"     * @return The location that is being displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"    public Location getLocation() {","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"        return location;","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wxxedu":2,"tangyuantyy":45}},{"path":"src/main/java/wingman/ui/LocationListCell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":" * The cell that displays the locations in the list.","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":" *","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":" * @param \u003cLocation\u003e The location to display.","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"public class LocationListCell\u003cLocation extends Item\u003e extends ListCell\u003cLocation\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"LocationListCell.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    protected void updateItem(Location location, boolean empty) {","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"        super.updateItem(location, empty);","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"        if (empty || location \u003d\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"            setGraphic(null);","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"            setText(null);","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"        } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"            setGraphic(new LocationCard((wingman.model.location.Location) location, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wxxedu":3,"tangyuantyy":22}},{"path":"src/main/java/wingman/ui/LocationListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.location.Location;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":" * A generic panel for displaying a list of Locations.","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"public class LocationListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"LocationListPanel.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    private final Logger logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    private ListView\u003cLocation\u003e locationList;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    public LocationListPanel(ObservableList\u003cLocation\u003e locationList) {","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"        this(LogsCenter.getLogger(LocationListPanel.class), locationList);","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a {@code LocationListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"     * @param logger     The logger to be used.","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"     * @param locationList The list of locations to be displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"    public LocationListPanel(","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"            Logger logger,","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"            ObservableList\u003cLocation\u003e locationList","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"    ) {","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"        this.logger \u003d logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"        this.locationList.setItems(locationList);","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"        this.locationList.setCellFactory(listView -\u003e new LocationListCell());","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wxxedu":3,"tangyuantyy":41}},{"path":"src/main/java/wingman/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.GuiSettings;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.AppUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.Logic;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"    private static final String WINGMAN_LOGO \u003d \"/images/Wingman.png\";","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"    private FlightListPanel flightListPanel;","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"    private CrewListPanel crewListPanel;","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"    private PlaneListPanel planeListPanel;","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"    private PilotListPanel pilotListPanel;","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"    private LocationListPanel locationListPanel;","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"tangyuantyy"},"content":"    private ImageView wingmanLogo;","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"tangyuantyy"},"content":"    private StackPane menuBarPlaceholder;","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"tangyuantyy"},"content":"    private StackPane flightListPanelPlaceholder;","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"tangyuantyy"},"content":"    private StackPane crewListPanelPlaceholder;","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"tangyuantyy"},"content":"    private StackPane pilotListPanelPlaceholder;","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"tangyuantyy"},"content":"    private StackPane planeListPanelPlaceholder;","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"tangyuantyy"},"content":"    private StackPane locationListPanelPlaceholder;","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"    private void setAccelerator(","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"            MenuItem menuItem,","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"            KeyCombination keyCombination","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"    ) {","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"                    event)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"        wingmanLogo.setImage(AppUtil.getImage(WINGMAN_LOGO));","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"        StatusBarFooter statusBarFooter \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"                new StatusBarFooter(logic.getOperationMode());","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":153,"author":{"gitId":"tangyuantyy"},"content":"        MenuBar menuBar \u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"tangyuantyy"},"content":"                new MenuBar();","lastModifiedDate":"2023-03-26"},{"lineNumber":155,"author":{"gitId":"tangyuantyy"},"content":"        menuBarPlaceholder.getChildren().add(menuBar.getRoot());","lastModifiedDate":"2023-03-26"},{"lineNumber":156,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":159,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":160,"author":{"gitId":"tangyuantyy"},"content":"        flightListPanel \u003d new FlightListPanel(logic.getFilteredFlightList());","lastModifiedDate":"2023-03-19"},{"lineNumber":161,"author":{"gitId":"tangyuantyy"},"content":"        Region flight \u003d flightListPanel.getRoot();","lastModifiedDate":"2023-03-19"},{"lineNumber":162,"author":{"gitId":"tangyuantyy"},"content":"        flightListPanelPlaceholder.getChildren().add(flight);","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"tangyuantyy"},"content":"        crewListPanel \u003d new CrewListPanel(logic.getFilteredCrewList());","lastModifiedDate":"2023-03-26"},{"lineNumber":165,"author":{"gitId":"tangyuantyy"},"content":"        Region crew \u003d crewListPanel.getRoot();","lastModifiedDate":"2023-03-26"},{"lineNumber":166,"author":{"gitId":"tangyuantyy"},"content":"        crewListPanelPlaceholder.getChildren().add(crew);","lastModifiedDate":"2023-03-26"},{"lineNumber":167,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":168,"author":{"gitId":"tangyuantyy"},"content":"        planeListPanel \u003d new PlaneListPanel(logic.getFilteredPlaneList());","lastModifiedDate":"2023-03-26"},{"lineNumber":169,"author":{"gitId":"tangyuantyy"},"content":"        Region plane \u003d planeListPanel.getRoot();","lastModifiedDate":"2023-03-26"},{"lineNumber":170,"author":{"gitId":"tangyuantyy"},"content":"        planeListPanelPlaceholder.getChildren().add(plane);","lastModifiedDate":"2023-03-26"},{"lineNumber":171,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":172,"author":{"gitId":"tangyuantyy"},"content":"        pilotListPanel \u003d new PilotListPanel(logic.getFilteredPilotList());","lastModifiedDate":"2023-03-26"},{"lineNumber":173,"author":{"gitId":"tangyuantyy"},"content":"        Region pilot \u003d pilotListPanel.getRoot();","lastModifiedDate":"2023-03-26"},{"lineNumber":174,"author":{"gitId":"tangyuantyy"},"content":"        pilotListPanelPlaceholder.getChildren().add(pilot);","lastModifiedDate":"2023-03-26"},{"lineNumber":175,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":176,"author":{"gitId":"tangyuantyy"},"content":"        locationListPanel \u003d new LocationListPanel(logic.getFilteredLocationList());","lastModifiedDate":"2023-03-26"},{"lineNumber":177,"author":{"gitId":"tangyuantyy"},"content":"        Region location \u003d locationListPanel.getRoot();","lastModifiedDate":"2023-03-26"},{"lineNumber":178,"author":{"gitId":"tangyuantyy"},"content":"        locationListPanelPlaceholder.getChildren().add(location);","lastModifiedDate":"2023-03-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"wxxedu"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(","lastModifiedDate":"2023-03-31"},{"lineNumber":215,"author":{"gitId":"wxxedu"},"content":"                primaryStage.getWidth(),","lastModifiedDate":"2023-03-31"},{"lineNumber":216,"author":{"gitId":"wxxedu"},"content":"                primaryStage.getHeight(),","lastModifiedDate":"2023-03-31"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"                (int) primaryStage.getX(),","lastModifiedDate":"2023-03-31"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"                (int) primaryStage.getY()","lastModifiedDate":"2023-03-31"},{"lineNumber":219,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2023-03-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"tangyuantyy"},"content":"            StatusBarFooter statusBarFooter \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":237,"author":{"gitId":"tangyuantyy"},"content":"                    new StatusBarFooter(logic.getOperationMode());","lastModifiedDate":"2023-03-12"},{"lineNumber":238,"author":{"gitId":"tangyuantyy"},"content":"            statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2023-03-12"},{"lineNumber":239,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":240,"author":{"gitId":"tangyuantyy"},"content":"            MenuBar menuBar \u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":241,"author":{"gitId":"tangyuantyy"},"content":"                    new MenuBar();","lastModifiedDate":"2023-03-26"},{"lineNumber":242,"author":{"gitId":"tangyuantyy"},"content":"            menuBarPlaceholder.getChildren().add(menuBar.getRoot());","lastModifiedDate":"2023-03-26"},{"lineNumber":243,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":244,"author":{"gitId":"tangyuantyy"},"content":"            flightListPanel \u003d new FlightListPanel(logic.getFilteredFlightList());","lastModifiedDate":"2023-03-19"},{"lineNumber":245,"author":{"gitId":"tangyuantyy"},"content":"            Region flight \u003d flightListPanel.getRoot();","lastModifiedDate":"2023-03-19"},{"lineNumber":246,"author":{"gitId":"tangyuantyy"},"content":"            flightListPanelPlaceholder.getChildren().add(flight);","lastModifiedDate":"2023-03-19"},{"lineNumber":247,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":248,"author":{"gitId":"tangyuantyy"},"content":"            crewListPanel \u003d new CrewListPanel(logic.getFilteredCrewList());","lastModifiedDate":"2023-03-26"},{"lineNumber":249,"author":{"gitId":"tangyuantyy"},"content":"            Region crew \u003d crewListPanel.getRoot();","lastModifiedDate":"2023-03-26"},{"lineNumber":250,"author":{"gitId":"tangyuantyy"},"content":"            crewListPanelPlaceholder.getChildren().add(crew);","lastModifiedDate":"2023-03-26"},{"lineNumber":251,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"tangyuantyy"},"content":"            planeListPanel \u003d new PlaneListPanel(logic.getFilteredPlaneList());","lastModifiedDate":"2023-03-26"},{"lineNumber":253,"author":{"gitId":"tangyuantyy"},"content":"            Region plane \u003d planeListPanel.getRoot();","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"tangyuantyy"},"content":"            planeListPanelPlaceholder.getChildren().add(plane);","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":256,"author":{"gitId":"tangyuantyy"},"content":"            pilotListPanel \u003d new PilotListPanel(logic.getFilteredPilotList());","lastModifiedDate":"2023-03-26"},{"lineNumber":257,"author":{"gitId":"tangyuantyy"},"content":"            Region pilot \u003d pilotListPanel.getRoot();","lastModifiedDate":"2023-03-26"},{"lineNumber":258,"author":{"gitId":"tangyuantyy"},"content":"            pilotListPanelPlaceholder.getChildren().add(pilot);","lastModifiedDate":"2023-03-26"},{"lineNumber":259,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":260,"author":{"gitId":"tangyuantyy"},"content":"            locationListPanel \u003d new LocationListPanel(logic.getFilteredLocationList());","lastModifiedDate":"2023-03-26"},{"lineNumber":261,"author":{"gitId":"tangyuantyy"},"content":"            Region location \u003d locationListPanel.getRoot();","lastModifiedDate":"2023-03-26"},{"lineNumber":262,"author":{"gitId":"tangyuantyy"},"content":"            locationListPanelPlaceholder.getChildren().add(location);","lastModifiedDate":"2023-03-26"},{"lineNumber":263,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wxxedu":26,"tangyuantyy":78,"-":175}},{"path":"src/main/java/wingman/ui/MenuBar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"public class MenuBar extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"MenuBar.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"    private Label modeStatus;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"    public MenuBar() {","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"        modeStatus.setText(\"Flight                                 Crew                                   Plane\"","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"                + \"       \" + \"                          Pilot                                   \"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"                + \"Location                                 \");","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wxxedu":1,"tangyuantyy":26}},{"path":"src/main/java/wingman/ui/PilotCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":" * A generic view for a flight.","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"public class PilotCard extends UiPart\u003cVBox\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"FlightCard.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    private final Pilot pilot;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"    private final int displayedIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    private VBox cardPane;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"    private Label id;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a view for the given pilot. The pilot is an identifiable object","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"     * that can be displayed in a list.","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"     * @param pilot The pilot to be displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    public PilotCard(Pilot pilot, int displayedIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"        this.pilot \u003d pilot;","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"        this.displayedIndex \u003d displayedIndex - 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"        for (String line : pilot.getDisplayList()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"            Label label \u003d new Label(line);","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"            cardPane.getChildren().add(label);","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the pilot that is being displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"     * @return The pilot that is being displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"    public Pilot getFlight() {","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"        return pilot;","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wxxedu":2,"tangyuantyy":45}},{"path":"src/main/java/wingman/ui/PilotListCell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":" * The cell that displays the pilots in the list.","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":" *","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":" * @param \u003cPilot\u003e The type of Item to display.","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"public class PilotListCell\u003cPilot extends Item\u003e extends ListCell\u003cPilot\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"PilotListCell.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    protected void updateItem(Pilot pilot, boolean empty) {","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"        super.updateItem(pilot, empty);","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"        if (empty || pilot \u003d\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"            setGraphic(null);","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"            setText(null);","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"        } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"            setGraphic(new PilotCard((wingman.model.pilot.Pilot) pilot, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wxxedu":3,"tangyuantyy":22}},{"path":"src/main/java/wingman/ui/PilotListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.pilot.Pilot;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":" * A generic panel for displaying a list of pilots.","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"public class PilotListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"PilotListPanel.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    private final Logger logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    private ListView\u003cPilot\u003e pilotList;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    public PilotListPanel(ObservableList\u003cPilot\u003e pilotList) {","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"        this(LogsCenter.getLogger(PilotListPanel.class), pilotList);","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a {@code PilotListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"     * @param logger     The logger to be used.","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"     * @param pilotList The list of pilots to be displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"    public PilotListPanel(","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"            Logger logger,","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"            ObservableList\u003cPilot\u003e pilotList","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"    ) {","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"        this.logger \u003d logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"        this.pilotList.setItems(pilotList);","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"        this.pilotList.setCellFactory(listView -\u003e new PilotListCell());","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wxxedu":3,"tangyuantyy":41}},{"path":"src/main/java/wingman/ui/PlaneCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":" * A generic view for a plane.","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"public class PlaneCard extends UiPart\u003cVBox\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"PlaneCard.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    private final Plane plane;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"    private final int displayedIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    private VBox cardPane;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"    private Label id;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a view for the given plane. The plane is an identifiable object","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"     * that can be displayed in a list.","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"     * @param plane The plane to be displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    public PlaneCard(Plane plane, int displayedIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"        this.plane \u003d plane;","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"        this.displayedIndex \u003d displayedIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"        for (String line : plane.getDisplayList()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"            Label label \u003d new Label(line);","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"            cardPane.getChildren().add(label);","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the plane that is being displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"     * @return The plane that is being displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"    public Plane getPlane() {","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"        return plane;","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wxxedu":2,"tangyuantyy":45}},{"path":"src/main/java/wingman/ui/PlaneListCell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":" * The cell that displays the planes in the list.","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":" *","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":" * @param \u003cPlane\u003e The type of Item to display.","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"public class PlaneListCell\u003cPlane extends Item\u003e extends ListCell\u003cPlane\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"PlaneListCell.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    protected void updateItem(Plane plane, boolean empty) {","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"        super.updateItem(plane, empty);","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"        if (empty || plane \u003d\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"            setGraphic(null);","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"            setText(null);","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"        } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"            setGraphic(new PlaneCard((wingman.model.plane.Plane) plane, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wxxedu":3,"tangyuantyy":22}},{"path":"src/main/java/wingman/ui/PlaneListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.model.plane.Plane;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":" * A generic panel for displaying a list of planes.","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"public class PlaneListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    private static final String FXML \u003d \"PlaneListPanel.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    private final Logger logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    private ListView\u003cPlane\u003e planeList;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    public PlaneListPanel(ObservableList\u003cPlane\u003e planeList) {","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"        this(LogsCenter.getLogger(PlaneListPanel.class), planeList);","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a {@code PlaneListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"     * @param logger     The logger to be used.","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"     * @param planeList The list of planes to be displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"    public PlaneListPanel(","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"            Logger logger,","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"            ObservableList\u003cPlane\u003e planeList","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"    ) {","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"        this.logger \u003d logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"        this.planeList.setItems(planeList);","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"        this.planeList.setCellFactory(listView -\u003e new PlaneListCell());","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wxxedu":3,"tangyuantyy":41}},{"path":"src/main/java/wingman/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wxxedu":1,"-":27}},{"path":"src/main/java/wingman/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.model.OperationMode;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    private Label modeStatus;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    public StatusBarFooter(OperationMode mode) {","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"        modeStatus.setText(\"Mode: \" + mode.toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":5,"-":21}},{"path":"src/main/java/wingman/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wxxedu":1,"-":12}},{"path":"src/main/java/wingman/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.MainApp;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.StringUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.Logic;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wxxedu":5,"-":83}},{"path":"src/main/java/wingman/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.MainApp;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wxxedu":2,"-":86}},{"path":"src/main/resources/view/CrewCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    \u003cVBox fx:id\u003d\"cardPane\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"        \u003cLabel fx:id\u003d\"crew\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tangyuantyy":18}},{"path":"src/main/resources/view/CrewListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"    \u003cListView fx:id\u003d\"crewList\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"tangyuantyy":11}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"    background-color: #DAE3E6; /* Used in the default.html file */","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-family: \"Courier New\";","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-family: \"Courier New\";","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-family: \"Courier New\";","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-family: \"Courier New\";","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"    -fx-base: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"    -fx-control-inner-background: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-family: \"Courier New\";","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-color: transparent transparent transparent #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-color: derive(#DAE3E6, 10%) #DAE3E6 derive(#DAE3E6, 10%) #DAE3E6;","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-color: derive(#DAE3E6, 10%) #DAE3E6 derive(#DAE3E6, 10%) #DAE3E6;","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"tangyuantyy"},"content":"    -fx-text-fill: #6E6D6E;","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"tangyuantyy"},"content":" .list-pane {","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"tangyuantyy"},"content":"      -fx-background-color: derive(#DAE3E6, 10%);","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"tangyuantyy"},"content":"      -fx-background-radius: 8;","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"tangyuantyy"},"content":"      -fx-border-top-width: 1px;","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-family: \"Courier New\";","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-family: \"Courier New\";","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":148,"author":{"gitId":"tangyuantyy"},"content":"     -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":152,"author":{"gitId":"tangyuantyy"},"content":"     -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"tangyuantyy"},"content":"     -fx-border-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: derive(#6E6D6E, 30%);","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-family: \"Courier New\";","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"tangyuantyy"},"content":"    -fx-text-fill: #6E6D6E;","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-family: \"Courier New\";","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"tangyuantyy"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"tangyuantyy"},"content":"    -fx-pref-height: 60px;","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-color: derive(white, 25%);","lastModifiedDate":"2023-03-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"tangyuantyy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: derive(#DAE3E6, 30%);","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-color: derive(white, 30%);","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":198,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: derive(#DAE3E6, 30%);","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: derive(#DAE3E6, 50%);","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"tangyuantyy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: derive(#DAE3E6, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-family: \"Courier New\";","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-12"},{"lineNumber":218,"author":{"gitId":"tangyuantyy"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-03-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":236,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-family: \"Courier New\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"tangyuantyy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: derive(#DAE3E6, 25%);","lastModifiedDate":"2023-03-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"tangyuantyy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: derive(#6E6D6E, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: derive(#6E6D6E, 50%);","lastModifiedDate":"2023-03-12"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-color: #DAE3E6 #DAE3E6 #6E6D6E #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-width: 4;","lastModifiedDate":"2023-03-12"},{"lineNumber":341,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2023-03-12"},{"lineNumber":342,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-family: \"Courier New\";","lastModifiedDate":"2023-03-12"},{"lineNumber":343,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-12"},{"lineNumber":344,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-12"},{"lineNumber":345,"author":{"gitId":"tangyuantyy"},"content":"    -fx-text-fill: #6E6D6E;","lastModifiedDate":"2023-03-12"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":354,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":355,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-insets: 5;","lastModifiedDate":"2023-03-12"},{"lineNumber":356,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2023-03-12"},{"lineNumber":357,"author":{"gitId":"tangyuantyy"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-12"},{"lineNumber":358,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-12"},{"lineNumber":359,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-12"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #DAE3E6;","lastModifiedDate":"2023-03-12"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":376,"author":{"gitId":"tangyuantyy"},"content":".secondary-button {","lastModifiedDate":"2023-03-12"},{"lineNumber":377,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background-color: #B1C5C3;","lastModifiedDate":"2023-03-12"},{"lineNumber":378,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-family: \"Courier New\";","lastModifiedDate":"2023-03-12"},{"lineNumber":379,"author":{"gitId":"tangyuantyy"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-12"},{"lineNumber":380,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"tangyuantyy":93,"-":287}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"    -fx-background: #C3E0E5;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tangyuantyy":1,"-":19}},{"path":"src/main/resources/view/FlightCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    \u003cVBox fx:id\u003d\"cardPane\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"        \u003cLabel fx:id\u003d\"flight\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tangyuantyy":17}},{"path":"src/main/resources/view/FlightListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"    \u003cListView fx:id\u003d\"flightList\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"tangyuantyy":11}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"      \u003cVBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"      \u003cImageView fx:id\u003d\"helpTable\" fitWidth\u003d\"600.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"      \u003cVBox alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"50.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"tangyuantyy":7,"-":42}},{"path":"src/main/resources/view/LocationCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    \u003cVBox fx:id\u003d\"cardPane\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"        \u003cLabel fx:id\u003d\"location\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tangyuantyy":17}},{"path":"src/main/resources/view/LocationListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"    \u003cListView fx:id\u003d\"locationList\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"tangyuantyy":12}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"         title\u003d\"Wingman App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" style\u003d\"-fx-padding: 10 10 0 10;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" style\u003d\"-fx-background-color: #6E6D6E\" text\u003d\"File\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" styleClass\u003d\"secondary-button\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" style\u003d\"-fx-background-color: derive(#6E6D6E, 30%); -fx-background-radius: 0 10 0 0;\" text\u003d\"Help\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" styleClass\u003d\"secondary-button\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"        \u003cHBox style\u003d\"-fx-background-color:#DAE3E6\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"          \u003cStackPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"            \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\"  VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"            \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"80\" minHeight\u003d\"80\" prefHeight\u003d\"80\" VBox.vgrow\u003d\"NEVER\" styleClass\u003d\"result-bar\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"tangyuantyy"},"content":"          \u003cStackPane alignment\u003d\"CENTER\" styleClass\u003d\"image-view\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"tangyuantyy"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"tangyuantyy"},"content":"              \u003cImageView fx:id\u003d\"wingmanLogo\" fitWidth\u003d\"140\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"tangyuantyy"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"tangyuantyy"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"tangyuantyy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"tangyuantyy"},"content":"          \u003cListView VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"tangyuantyy"},"content":"              \u003cStackPane fx:id\u003d\"menuBarPlaceholder\" maxHeight\u003d\"20\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"tangyuantyy"},"content":"          \u003cListView orientation\u003d\"HORIZONTAL\" style\u003d\"-fx-background-color: #DAE3E6\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"tangyuantyy"},"content":"                    HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"tangyuantyy"},"content":"            \u003cVBox fx:id\u003d\"flightList\" styleClass\u003d\"list-pane\" minWidth\u003d\"240\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"tangyuantyy"},"content":"                  HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"tangyuantyy"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"tangyuantyy"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"1\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"tangyuantyy"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"tangyuantyy"},"content":"          \u003cStackPane fx:id\u003d\"flightListPanelPlaceholder\" minWidth\u003d\"240\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"tangyuantyy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"tangyuantyy"},"content":"        \u003cVBox fx:id\u003d\"crewList\" styleClass\u003d\"list-pane\" minWidth\u003d\"240\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"tangyuantyy"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"1\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"tangyuantyy"},"content":"          \u003cStackPane fx:id\u003d\"crewListPanelPlaceholder\" minWidth\u003d\"240\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"tangyuantyy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"tangyuantyy"},"content":"        \u003cVBox fx:id\u003d\"planeList\" styleClass\u003d\"list-pane\" minWidth\u003d\"240\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"tangyuantyy"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"1\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"tangyuantyy"},"content":"          \u003cStackPane fx:id\u003d\"planeListPanelPlaceholder\" minWidth\u003d\"240\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"tangyuantyy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"tangyuantyy"},"content":"        \u003cVBox fx:id\u003d\"pilotList\" styleClass\u003d\"list-pane\" minWidth\u003d\"240\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"tangyuantyy"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"1\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"tangyuantyy"},"content":"          \u003cStackPane fx:id\u003d\"pilotListPanelPlaceholder\" minWidth\u003d\"240\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"tangyuantyy"},"content":"        \u003cVBox fx:id\u003d\"locationList\" styleClass\u003d\"list-pane\" minWidth\u003d\"240\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"tangyuantyy"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":91,"author":{"gitId":"tangyuantyy"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"1\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"tangyuantyy"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"tangyuantyy"},"content":"          \u003cStackPane fx:id\u003d\"locationListPanelPlaceholder\" minWidth\u003d\"240\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"tangyuantyy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"tangyuantyy"},"content":"      \u003c/ListView\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"tangyuantyy"},"content":"          \u003c/ListView\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"tangyuantyy":56,"-":45}},{"path":"src/main/resources/view/MenuBar.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"          xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    \u003cLabel fx:id\u003d\"modeStatus\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"tangyuantyy":13}},{"path":"src/main/resources/view/PilotCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    \u003cVBox fx:id\u003d\"cardPane\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"        \u003cLabel fx:id\u003d\"pilot\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tangyuantyy":17}},{"path":"src/main/resources/view/PilotListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"    \u003cListView fx:id\u003d\"pilotList\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"tangyuantyy":11}},{"path":"src/main/resources/view/PlaneCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    \u003cVBox fx:id\u003d\"cardPane\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"        \u003cLabel fx:id\u003d\"plane\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"tangyuantyy":17}},{"path":"src/main/resources/view/PlaneListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"    \u003cListView fx:id\u003d\"planeList\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"tangyuantyy":11}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"          xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"        \u003cColumnConstraints hgrow\u003d\"NEVER\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    \u003cLabel fx:id\u003d\"modeStatus\"/\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"wxxedu":3,"tangyuantyy":1,"-":10}},{"path":"src/test/java/wingman/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"wxxedu":1,"-":57}},{"path":"src/test/java/wingman/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"wxxedu":2,"-":26}},{"path":"src/test/java/wingman/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":4,"-":132}},{"path":"src/test/java/wingman/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.core.index;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"wxxedu":5,"-":56}},{"path":"src/test/java/wingman/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"                NullPointerException.class, () -\u003e AppUtil.getImage(null)","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"                IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"                    AppUtil.checkArgument(false);","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"                IllegalArgumentException.class,","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"                errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage)","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"wxxedu":15,"-":31}},{"path":"src/test/java/wingman/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import static wingman.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"wxxedu":6,"-":103}},{"path":"src/test/java/wingman/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.Config;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wxxedu":8,"-":108}},{"path":"src/test/java/wingman/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":4,"-":20}},{"path":"src/test/java/wingman/commons/util/GetUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * Tests the service locator class {@link GetUtil}.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"public class GetUtilTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    void setUp() {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        GetUtil.clear();","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    void get_nullSupplied_shouldThrowNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e GetUtil.get(null));","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    void get_notRegistered_shouldThrowGetException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(GetUtil.GetException.class, () -\u003e GetUtil.get(Stub.class));","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    void put_nullSupplied_shouldThrowNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e GetUtil.put(null, new Stub()));","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e GetUtil.put(Stub.class, null));","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    void put_alreadyPut_shouldThrowGetException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        GetUtil.put(Stub.class, new Stub());","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(GetUtil.GetException.class, () -\u003e GetUtil.put(Stub.class, new Stub()));","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        GetUtil.clear();","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        GetUtil.putLazy(Stub.class, Stub::new);","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(GetUtil.GetException.class, () -\u003e GetUtil.put(Stub.class, new Stub()));","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    void putForce_alreadyPut_shouldReplaceOriginal() {","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        Stub stub1 \u003d new Stub();","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"        Stub stub2 \u003d new Stub();","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(stub1, stub2);","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        GetUtil.put(Stub.class, stub1);","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        assertEquals(stub1, GetUtil.get(Stub.class));","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(stub2, GetUtil.get(Stub.class));","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        assertDoesNotThrow(() -\u003e GetUtil.putForce(Stub.class, stub2));","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(stub1, GetUtil.get(Stub.class));","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        assertEquals(stub2, GetUtil.get(Stub.class));","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    void putLazy_nullSupplied_shouldThrowNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e GetUtil.putLazy(null, Stub::new));","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e GetUtil.putLazy(Stub.class, null));","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    void putLazy_thenGet_shouldReturnNewStub() {","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        GetUtil.putLazy(Stub.class, Stub::new);","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertDoesNotThrow(() -\u003e GetUtil.get(Stub.class));","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        assertNotNull(GetUtil.get(Stub.class));","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    void putLazy_alreadyPut_shouldThrowGetException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        GetUtil.putLazy(Stub.class, Stub::new);","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(GetUtil.GetException.class, () -\u003e GetUtil.putLazy(Stub.class, Stub::new));","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        GetUtil.clear();","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        GetUtil.put(Stub.class, new Stub());","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(GetUtil.GetException.class, () -\u003e GetUtil.putLazy(Stub.class, Stub::new));","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"    void putLazyForce_alreadyPut_shouldReplacePrevious() {","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        Stub stub \u003d new Stub();","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        GetUtil.put(Stub.class, stub);","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        assertDoesNotThrow(() -\u003e GetUtil.putLazyForce(Stub.class, Stub::new));","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(stub, GetUtil.get(Stub.class));","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    private static class Stub {","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"        public Stub() {","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"wxxedu":98}},{"path":"src/test/java/wingman/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.TestUtil;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":3,"-":42}},{"path":"src/test/java/wingman/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.commons.util;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"                NullPointerException.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"                    StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"                            \"typical sentence\", null);","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"                IllegalArgumentException.class,","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"                \"Word parameter cannot be empty\", () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"                    StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"                            \"typical sentence\",","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"                            \"  \"","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"                    );","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"                IllegalArgumentException.class,","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"                \"Word parameter should be a single word\", () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"                    StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"                            \"typical sentence\",","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"                            \"aaa BBB\"","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"                    );","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"                NullPointerException.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"                    StringUtil.containsWordIgnoreCase(null, \"abc\");","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"                \"\",","lastModifiedDate":"2023-03-31"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"                \"abc\"","lastModifiedDate":"2023-03-31"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"        )); // Boundary case","lastModifiedDate":"2023-03-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"                \"aaa bbb ccc\",","lastModifiedDate":"2023-03-31"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"                \"bb\"","lastModifiedDate":"2023-03-31"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"        )); // Sentence word bigger than query word","lastModifiedDate":"2023-03-31"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"                \"aaa bbb ccc\",","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"                \"bbbb\"","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"        )); // Query word bigger than sentence word","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"                \"aaa bBb ccc\",","lastModifiedDate":"2023-03-31"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"                \"Bbb\"","lastModifiedDate":"2023-03-31"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"        )); // First word (boundary case)","lastModifiedDate":"2023-03-31"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"                \"aaa bBb ccc@1\",","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"                \"CCc@1\"","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"        )); // Last word (boundary case)","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"                \"  AAA   bBb   ccc  \",","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"                \"aaa\"","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"        )); // Sentence has extra spaces","lastModifiedDate":"2023-03-31"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"                \"Aaa\",","lastModifiedDate":"2023-03-31"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"                \"aaa\"","lastModifiedDate":"2023-03-31"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"        )); // Only one word in sentence (boundary case)","lastModifiedDate":"2023-03-31"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"                \"aaa bbb ccc\",","lastModifiedDate":"2023-03-31"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"                \"  ccc  \"","lastModifiedDate":"2023-03-31"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"        )); // Leading/trailing spaces","lastModifiedDate":"2023-03-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"                \"AAA bBb ccc  bbb\",","lastModifiedDate":"2023-03-31"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"                \"bbB\"","lastModifiedDate":"2023-03-31"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"        ));","lastModifiedDate":"2023-03-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"        assertTrue(StringUtil","lastModifiedDate":"2023-03-31"},{"lineNumber":186,"author":{"gitId":"wxxedu"},"content":"                           .getDetails(new FileNotFoundException(","lastModifiedDate":"2023-03-31"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"                                   \"file not found\"))","lastModifiedDate":"2023-03-31"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"                           .contains(","lastModifiedDate":"2023-03-31"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"                                   \"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":194,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"                NullPointerException.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"                    StringUtil.getDetails(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"wxxedu":78,"-":123}},{"path":"src/test/java/wingman/logic/core/CommandGroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.model.OperationMode;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":" * Tests for {@link CommandGroup}.","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"public class CommandGroupTest extends LogicCoreParserTestBase {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    void getOperationMode_void_returnsOperationMode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"        CommandGroup commandGroup1 \u003d new CommandGroup(OperationMode.PILOT,","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"            commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        CommandGroup commandGroup2 \u003d new CommandGroup(OperationMode.CREW,","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"            commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        CommandGroup commandGroup3 \u003d new CommandGroup(OperationMode.FLIGHT,","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"            commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"        CommandGroup commandGroup4 \u003d new CommandGroup(OperationMode.LOCATION,","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"            commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        CommandGroup commandGroup5 \u003d new CommandGroup(OperationMode.PLANE,","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"            commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        assertEquals(OperationMode.PILOT, commandGroup1.getOperationMode());","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        assertEquals(OperationMode.CREW, commandGroup2.getOperationMode());","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        assertEquals(OperationMode.FLIGHT, commandGroup3.getOperationMode());","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        assertEquals(OperationMode.LOCATION, commandGroup4.getOperationMode());","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        assertEquals(OperationMode.PLANE, commandGroup5.getOperationMode());","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    void getCommandFactory_void_returnsCommandFactory() {","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        assertEquals(commandFactories, commandGroup.getFactories());","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    void parse_nullTokens_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        assertThrows(NullPointerException.class, () -\u003e commandGroup.parse(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    void parse_emptyTokens_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        Deque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ParseException.class, () -\u003e commandGroup.parse(tokens));","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    void parse_invalidTokens_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        Deque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e(List.of(\"invalid\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ParseException.class, () -\u003e commandGroup.parse(tokens));","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"    void parse_validTokens1_returnsCommand() throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"        Deque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e(List.of(COMMAND_WORD1, \"arg1\", \"arg2\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        CommandParam commandParam \u003d new CommandParam(Optional.of(\"arg1 arg2\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"            Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        assertEquals(command1, commandGroup.parse(tokens));","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory1).createCommand(commandParam);","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"    void parse_validTokens2_returnsCommand() throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        Deque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e(List.of(COMMAND_WORD2, \"arg1\",","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"            \"arg2\", \"arg3\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        CommandParam commandParam \u003d new CommandParam(Optional.of(\"arg1 arg2 arg3\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"            Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        assertEquals(command2, commandGroup.parse(tokens));","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory2).createCommand(commandParam);","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":2,"wxxedu":84}},{"path":"src/test/java/wingman/logic/core/CommandParamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":" * TODO: write more tests for CommandParam.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"public class CommandParamTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    private static final String PREFIX_A \u003d \"/a\";","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    private static final String PREFIX_B \u003d \"/b\";","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    private static final String PREFIX_C \u003d \"/c\";","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    private static final String PREFIX_D \u003d \"/d\";","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    private final Set\u003cString\u003e prefixes \u003d Set.of(PREFIX_A, PREFIX_B, PREFIX_C, PREFIX_D);","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    private Deque\u003cString\u003e tokens;","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    void setUp() {","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        tokens \u003d new ArrayDeque\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    void from_emptyTokenEmptyPrefixes_returnsEmpty() {","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d CommandParam.from(tokens, Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        assertFalse(param.getUnnamedValue().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        assertFalse(param.getNamedValues().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    void from_emptyTokenNonEmptyPrefixes_returnsEmpty() {","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d CommandParam.from(tokens, Optional.of(prefixes));","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        assertFalse(param.getUnnamedValue().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        assertFalse(param.getNamedValues().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    void from_nonEmptyTokenEmptyPrefixes_returnsUnnamedValue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(List.of(\"token\", \"token2\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d CommandParam.from(tokens, Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        assertTrue(param.getUnnamedValue().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        assertEquals(\"token token2\", param.getUnnamedValue().get());","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        assertFalse(param.getNamedValues().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    void from_nonEmptyTokenNonEmptyPrefixes_returnsNamedValues() {","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(List.of(\"token1\", \"token2\", PREFIX_A, \"value1\", \"value2\",","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"            PREFIX_B, \"value2\", PREFIX_C, \"value3\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d CommandParam.from(tokens, Optional.of(prefixes));","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        assertTrue(param.getUnnamedValue().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        assertEquals(\"token1 token2\", param.getUnnamedValue().get());","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        assertTrue(param.getNamedValues().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e namedValues \u003d param.getNamedValues().get();","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        assertEquals(4, namedValues.size());","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"            assertTrue(namedValues.containsKey(prefix));","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value1 value2\"), namedValues.get(PREFIX_A));","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value2\"), namedValues.get(PREFIX_B));","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value3\"), namedValues.get(PREFIX_C));","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.empty(), namedValues.get(PREFIX_D));","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"    void parseUnnamedValue_emptyToken_returnEmptyResult() {","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e result \u003d CommandParam.parseUnnamedValue(tokens, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"    void parseUnnamedValue_nonEmptyTokenNoPrefix_returnFullString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        final String expected \u003d \"hello world how are you\";","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(Arrays.asList(expected.split(\" \")));","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e result \u003d CommandParam.parseUnnamedValue(tokens, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"        assertTrue(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"        assertEquals(expected, result.get());","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"    void parseUnnamedValue_nonEmptyTokenWithPrefix_returnStringBeforePrefix() {","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"        final String expected \u003d \"hello world how are you\";","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(Arrays.asList(expected.split(\" \")));","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(List.of(PREFIX_A, \"value1\", \"value2\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e result \u003d CommandParam.parseUnnamedValue(tokens, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"        assertTrue(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"        assertEquals(expected, result.get());","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"    void parseNamedValues_emptyTokenNonEmptyPrefixes_returnResultOfSizePrefixes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e result \u003d CommandParam.parseNamedValues(tokens, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.isEmpty());","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"        assertEquals(prefixes.size(), result.size());","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"            assertTrue(result.containsKey(prefix));","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"            assertFalse(result.get(prefix).isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"    void parseNamedValues_nonEmptyTokenNonEmptyPrefixes_returnResultOfSizePrefixes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(List.of(PREFIX_A, \"value1\", \"value2\", PREFIX_B, \"value2\", PREFIX_C, \"value3\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e result \u003d CommandParam.parseNamedValues(tokens, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.isEmpty());","lastModifiedDate":"2023-03-04"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"        assertEquals(prefixes.size(), result.size());","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"            assertTrue(result.containsKey(prefix));","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value1 value2\"), result.get(PREFIX_A));","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value2\"), result.get(PREFIX_B));","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value3\"), result.get(PREFIX_C));","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.empty(), result.get(PREFIX_D));","lastModifiedDate":"2023-03-04"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"    void parseNamedValues_unnamedNotRemoved_shouldRemoveUnnamedAndReturnCorrectValues() {","lastModifiedDate":"2023-03-04"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(List.of(\"hello\", \"world\", PREFIX_A, \"value1\", \"value2\", PREFIX_B, \"value2\", PREFIX_C, \"value3\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e result \u003d CommandParam.parseNamedValues(tokens, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.isEmpty());","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"        assertEquals(prefixes.size(), result.size());","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"            assertTrue(result.containsKey(prefix));","lastModifiedDate":"2023-03-04"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value1 value2\"), result.get(PREFIX_A));","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value2\"), result.get(PREFIX_B));","lastModifiedDate":"2023-03-04"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value3\"), result.get(PREFIX_C));","lastModifiedDate":"2023-03-04"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.empty(), result.get(PREFIX_D));","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":186,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"    void getUnnamedValue_emptyToken_returnEmpty() {","lastModifiedDate":"2023-03-04"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e result \u003d param.getUnnamedValue();","lastModifiedDate":"2023-03-04"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":193,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":194,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"    void getUnnamedValue_nonEmptyToken_returnToken() {","lastModifiedDate":"2023-03-04"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e expected \u003d Optional.of(\"token\");","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(expected, Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":203,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e result \u003d param.getUnnamedValue();","lastModifiedDate":"2023-03-04"},{"lineNumber":204,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":205,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"        assertTrue(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"wxxedu"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":208,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":209,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":210,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":211,"author":{"gitId":"wxxedu"},"content":"    void getUnnamedValueOrThrow_emptyToken_throwsException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":213,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":214,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":215,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(ParseException.class, param::getUnnamedValueOrThrow);","lastModifiedDate":"2023-03-31"},{"lineNumber":216,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":219,"author":{"gitId":"wxxedu"},"content":"    void getNamedValues_emptyToken_returnEmpty() {","lastModifiedDate":"2023-03-04"},{"lineNumber":220,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":221,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":222,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":223,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cMap\u003cString, Optional\u003cString\u003e\u003e\u003e result \u003d param.getNamedValues();","lastModifiedDate":"2023-03-04"},{"lineNumber":224,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":225,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":226,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":227,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":229,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":230,"author":{"gitId":"wxxedu"},"content":"    void getNamedValues_nonEmptyToken_returnToken() {","lastModifiedDate":"2023-03-04"},{"lineNumber":231,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":232,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cMap\u003cString, Optional\u003cString\u003e\u003e\u003e expected \u003d Optional.of(new HashMap\u003c\u003e());","lastModifiedDate":"2023-03-04"},{"lineNumber":233,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), expected);","lastModifiedDate":"2023-03-04"},{"lineNumber":234,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":235,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cMap\u003cString, Optional\u003cString\u003e\u003e\u003e result \u003d param.getNamedValues();","lastModifiedDate":"2023-03-04"},{"lineNumber":236,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":237,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":238,"author":{"gitId":"wxxedu"},"content":"        assertTrue(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":239,"author":{"gitId":"wxxedu"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":240,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":241,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":242,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":243,"author":{"gitId":"wxxedu"},"content":"    void getNamedValuesOrThrow_emptyToken_throwsException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":244,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":245,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":246,"author":{"gitId":"wxxedu"},"content":"        CommandParam param2 \u003d new CommandParam(Optional.of(\"token\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":247,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.empty())));","lastModifiedDate":"2023-03-04"},{"lineNumber":248,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":249,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e param.getNamedValuesOrThrow(PREFIX_A));","lastModifiedDate":"2023-03-31"},{"lineNumber":250,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e param2.getNamedValuesOrThrow(PREFIX_A));","lastModifiedDate":"2023-03-31"},{"lineNumber":251,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":252,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":253,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":254,"author":{"gitId":"wxxedu"},"content":"    void getUnnamedIntOrThrow_emptyToken_throwsException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":255,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":256,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":257,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":258,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(ParseException.class, param::getUnnamedIntOrThrow);","lastModifiedDate":"2023-03-31"},{"lineNumber":259,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":260,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":261,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":262,"author":{"gitId":"wxxedu"},"content":"    void getUnnamedIntOrThrow_nonEmptyTokenNonInt_throwsException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":263,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":264,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"token\"), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":265,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":266,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(ParseException.class, param::getUnnamedIntOrThrow);","lastModifiedDate":"2023-03-31"},{"lineNumber":267,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":268,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":269,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":270,"author":{"gitId":"wxxedu"},"content":"    void getUnnamedIntOrThrow_nonEmptyTokenInt_returnInt() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":271,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":272,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"1\"), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":273,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":274,"author":{"gitId":"wxxedu"},"content":"        int result \u003d param.getUnnamedIntOrThrow();","lastModifiedDate":"2023-03-04"},{"lineNumber":275,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":276,"author":{"gitId":"wxxedu"},"content":"        assertEquals(1, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":277,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":278,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":279,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":280,"author":{"gitId":"wxxedu"},"content":"    void getNamedIntOrThrow_emptyToken_throwsException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":281,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":282,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":283,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":284,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e param.getNamedIntOrThrow(PREFIX_A));","lastModifiedDate":"2023-03-31"},{"lineNumber":285,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":286,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":287,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":288,"author":{"gitId":"wxxedu"},"content":"    void getNamedIntOrThrow_nonEmptyTokenNonInt_throwsException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":289,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":290,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(),","lastModifiedDate":"2023-03-04"},{"lineNumber":291,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"token\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":292,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":293,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e param.getNamedIntOrThrow(PREFIX_A));","lastModifiedDate":"2023-03-31"},{"lineNumber":294,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":295,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":296,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":297,"author":{"gitId":"wxxedu"},"content":"    void getNamedIntOrThrow_nonEmptyTokenInt_returnInt() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":298,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":299,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(),","lastModifiedDate":"2023-03-04"},{"lineNumber":300,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"1\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":301,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":302,"author":{"gitId":"wxxedu"},"content":"        int result \u003d param.getNamedIntOrThrow(PREFIX_A);","lastModifiedDate":"2023-03-04"},{"lineNumber":303,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":304,"author":{"gitId":"wxxedu"},"content":"        assertEquals(1, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":305,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":306,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":307,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":308,"author":{"gitId":"wxxedu"},"content":"    void equals_sameObject_returnTrue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":309,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":310,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"token\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":311,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"value\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":312,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":313,"author":{"gitId":"wxxedu"},"content":"        assertEquals(param, param);","lastModifiedDate":"2023-03-04"},{"lineNumber":314,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":315,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":316,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":317,"author":{"gitId":"wxxedu"},"content":"    void equals_nullObject_returnFalse() {","lastModifiedDate":"2023-03-04"},{"lineNumber":318,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":319,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"token\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":320,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"value\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":321,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":322,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(param, null);","lastModifiedDate":"2023-03-04"},{"lineNumber":323,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":324,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":325,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":326,"author":{"gitId":"wxxedu"},"content":"    void equals_differentClass_returnFalse() {","lastModifiedDate":"2023-03-04"},{"lineNumber":327,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":328,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"token\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":329,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"value\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":330,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":331,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(param, new Object());","lastModifiedDate":"2023-03-04"},{"lineNumber":332,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":333,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":334,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":335,"author":{"gitId":"wxxedu"},"content":"    void equals_sameTokenDifferentInstance_returnTrue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":336,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":337,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"token\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":338,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"value\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":339,"author":{"gitId":"wxxedu"},"content":"        CommandParam param2 \u003d new CommandParam(Optional.of(\"token\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":340,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"value\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":341,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":342,"author":{"gitId":"wxxedu"},"content":"        assertEquals(param, param2);","lastModifiedDate":"2023-03-04"},{"lineNumber":343,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":344,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":344}},{"path":"src/test/java/wingman/logic/core/FactoryParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"public class FactoryParserTest extends LogicCoreParserTestBase {","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    private FactoryParserStub factoryParser;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    void setUpChild() {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"        factoryParser \u003d new FactoryParserStub();","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    void parseFactory_nullTokens_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e factoryParser.parseFactory(null));","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    void parseFactory_emptyTokens_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e factoryParser.parseFactory(new ArrayDeque\u003c\u003e()));","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"    void parseFactory_invalidTokens_returnsEmpty() throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        // set up","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        ArrayDeque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e(List.of(\"invalid\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cCommand\u003e command \u003d factoryParser.parseFactory(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        assertFalse(command.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory1, Mockito.never()).createCommand(param);","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory2, Mockito.never()).createCommand(param);","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    void parseFactory_validTokens1_returnValidCommand() throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        // set up","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        ArrayDeque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e(List.of(COMMAND_WORD1, \"arg1\", \"arg2\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"arg1 arg2\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"            Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cCommand\u003e command \u003d factoryParser.parseFactory(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        assertTrue(command.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        assertEquals(command1, command.get());","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory1, Mockito.times(1)).createCommand(param);","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory2, Mockito.never()).createCommand(param);","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"    void parseFactory_validTokens2_returnValidCommand() throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        // set up","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        ArrayDeque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e(List.of(COMMAND_WORD2, \"arg1\", \"arg2\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"arg1 arg2\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"            Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cCommand\u003e command \u003d factoryParser.parseFactory(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        assertTrue(command.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        assertEquals(command2, command.get());","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory1, Mockito.never()).createCommand(param);","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory2, Mockito.times(1)).createCommand(param);","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"    private class FactoryParserStub extends FactoryParser {","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        protected List\u003cCommandFactory\u003c?\u003e\u003e getFactories() {","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"            return commandFactories;","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":3,"wxxedu":88}},{"path":"src/test/java/wingman/logic/core/LogicCoreParserTestBase.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mock;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.model.OperationMode;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" * Base class for {@link CommandGroup} tests, basically setting up some","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":" * common mocks to be used by the subclasses.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"public abstract class LogicCoreParserTestBase {","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    protected static final String COMMAND_WORD1 \u003d \"command1\";","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    protected static final String COMMAND_WORD2 \u003d \"command2\";","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    protected Command command1;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    protected Command command2;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    protected CommandFactory\u003cCommand\u003e commandFactory1;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    protected CommandFactory\u003cCommand\u003e commandFactory2;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    protected List\u003cCommandFactory\u003c?\u003e\u003e commandFactories;","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    protected CommandGroup commandGroup;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    void setUp() throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        Mockito","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"            .lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"            .when(commandFactory1.getCommandWord())","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(COMMAND_WORD1);","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        Mockito","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"            .lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"            .when(commandFactory2.getCommandWord())","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(COMMAND_WORD2);","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        Mockito","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"            .lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"            .when(commandFactory1.getPrefixes())","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        Mockito","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"            .lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"            .when(commandFactory2.getPrefixes())","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        Mockito","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"            .lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"            .when(commandFactory1.createCommand(Mockito.any()))","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(command1);","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        Mockito","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"            .lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"            .when(commandFactory2.createCommand(Mockito.any()))","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(command2);","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"        commandFactories \u003d List.of(commandFactory1, commandFactory2);","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        commandGroup \u003d new CommandGroup(OperationMode.PILOT, commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":1,"wxxedu":65}},{"path":"src/test/java/wingman/logic/core/WingmanParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.logic.core;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mock;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.model.OperationMode;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":" * A test class for {@code WingmanParser}.","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"public class WingmanParserTest extends LogicCoreParserTestBase {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    static final OperationMode GROUP1_MODE \u003d OperationMode.PILOT;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    static final OperationMode GROUP2_MODE \u003d OperationMode.CREW;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    private CommandGroup commandGroup1;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    private CommandGroup commandGroup2;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    private Command group1Command;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    private Command group2Command;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    private List\u003cCommandGroup\u003e commandGroups;","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    private WingmanParser parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"    void setUpGroups() throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        Mockito.lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"            .when(commandGroup1.getOperationMode())","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(GROUP1_MODE);","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        Mockito.lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"            .when(commandGroup2.getOperationMode())","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(GROUP2_MODE);","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        Mockito.lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"            .when(commandGroup1.parse(Mockito.any()))","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(group1Command);","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        Mockito.lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"            .when(commandGroup2.parse(Mockito.any()))","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(group2Command);","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        commandGroups \u003d List.of(commandGroup1, commandGroup2);","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        parser \u003d new WingmanParser(commandGroups, commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    void parse_unknownOperationMode_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"        parser \u003d new WingmanParser(commandGroups, List.of());","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        final String input \u003d \"unknown command\";","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e parser.parse(OperationMode.PLANE,","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"            input));","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"    void parse_knownOperationMode_returnsCommand() throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        final String input \u003d \"command\";","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"        final Command result1 \u003d parser.parse(GROUP1_MODE, input);","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        final Command result2 \u003d parser.parse(GROUP2_MODE, input);","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        assertEquals(group1Command, result1);","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        assertEquals(group2Command, result2);","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"    void parse_topLevelCommand_returnsTopLevelCommandButNotGroupCommand() throws ParseException, CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        final Command result \u003d parser.parse(GROUP1_MODE, COMMAND_WORD1);","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        assertEquals(command1, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(group1Command, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(group2Command, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":3,"wxxedu":89}},{"path":"src/test/java/wingman/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"wxxedu":4,"-":12}},{"path":"src/test/java/wingman/model/item/ItemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.item;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"public class ItemTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    void isSame_sameObject_returnsTrue() {","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"        ItemStub1 a \u003d new ItemStub1(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"        assertTrue(Item.isSame(a, a));","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    void isSame_sameId_returnsTrue() {","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        ItemStub1 a \u003d new ItemStub1(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"        ItemStub1 b \u003d new ItemStub1(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"        assertTrue(Item.isSame(a, b));","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    void isSame_differentId_returnsFalse() {","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"        ItemStub1 a \u003d new ItemStub1(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"        ItemStub1 b \u003d new ItemStub1(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        assertFalse(Item.isSame(a, b));","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    void isSame_differentClass_returnsFalse() {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"        ItemStub1 a \u003d new ItemStub1(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"        ItemStub2 b \u003d new ItemStub2(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"        assertFalse(Item.isSame(a, b));","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"    private static class ItemStub1 implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        private final String id;","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"        public ItemStub1(String id) {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        public String getId() {","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"            return id;","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"    private static class ItemStub2 implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"        private final String id;","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"        public ItemStub2(String id) {","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"        public String getId() {","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"            return id;","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"BoAi01":62,"wxxedu":1}},{"path":"src/test/java/wingman/model/item/UniqueListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.item;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"import wingman.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"public class UniqueListTest {","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    private UniqueList\u003cItemStub\u003e list;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    void setUp() {","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"        list \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    void constructor_shouldCreateEmptyList() {","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        UniqueList\u003cItemStub\u003e list \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"        assertTrue(list.asUnmodifiableObservableList().isEmpty());","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    void fromObservableList_validList_shouldCreateListWithSameElements() {","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e observableList \u003d FXCollections.observableArrayList(","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"                new ItemStub(\"a\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"                new ItemStub(\"b\")","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"        UniqueList\u003cItemStub\u003e list \u003d UniqueList.fromObservableList(observableList);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        assertEquals(2, list.asUnmodifiableObservableList().size());","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    void fromObservableList_duplicatedList_shouldThrowItemDuplicateException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e observableList \u003d FXCollections.observableArrayList(","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"                new ItemStub(\"a\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"                new ItemStub(\"a\")","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"        Assert.assertThrows(DuplicateItemException.class, () -\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"                UniqueList.fromObservableList(observableList));","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"            UniqueList.fromObservableList(observableList);","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"        } catch (DuplicateItemException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"            assertEquals(ItemStub.class, e.getDuplicatedClass());","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"    void fromObservableList_nullList_shouldThrowNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e UniqueList.fromObservableList(null));","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    void fromObservableList_nullItem_shouldThrowNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e observableList \u003d FXCollections.observableArrayList(","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"                new ItemStub(\"a\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"                null","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"                UniqueList.fromObservableList(observableList));","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"    void add_validItem_shouldAddItem() {","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"        this.list.add(new ItemStub(\"a\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        assertEquals(1, this.list.asUnmodifiableObservableList().size());","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    void add_duplicatedItem_shouldThrowItemDuplicateException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"        this.list.add(new ItemStub(\"a\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"        Assert.assertThrows(DuplicateItemException.class, () -\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"                this.list.add(new ItemStub(\"a\")));","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"            this.list.add(new ItemStub(\"a\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"        } catch (DuplicateItemException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"            assertEquals(ItemStub.class, e.getDuplicatedClass());","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"    void add_nullItem_shouldThrowNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e this.list.add(null));","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"    void contains_validItem_shouldReturnTrue() {","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"        assertTrue(this.list.contains(item));","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"    void contains_nullItem_shouldThrowNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e this.list.contains((ItemStub) null));","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"    void setItem_validItem_shouldReplaceItem() {","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"        ItemStub newItem \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"        this.list.setItem(item, newItem);","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"        assertTrue(this.list.contains(newItem));","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        assertFalse(this.list.contains(item));","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"    void setItem_nullItem_shouldThrowNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"        ItemStub target \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"        ItemStub editedItem \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e this.list.setItem(target,","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"                null));","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e this.list.setItem(null,","lastModifiedDate":"2023-03-31"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"                editedItem));","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e this.list.setItem(null,","lastModifiedDate":"2023-03-31"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"                null));","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"    void setItem_itemNotInList_shouldThrowItemNotFoundException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"BoAi01"},"content":"        ItemStub target \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"        ItemStub editedItem \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(ItemNotFoundException.class, () -\u003e this.list.setItem(target,","lastModifiedDate":"2023-03-31"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"                editedItem));","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"    void setItem_sameItem_shouldNotThrowException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        assertDoesNotThrow(() -\u003e this.list.setItem(item, item));","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"    void setItem_itemAlreadyInList_shouldThrowItemDuplicateException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"        ItemStub item2 \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item2);","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"        Assert.assertThrows(DuplicateItemException.class, () -\u003e this.list.setItem(item,","lastModifiedDate":"2023-04-01"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"                item2));","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"            this.list.setItem(item, item2);","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"BoAi01"},"content":"        } catch (DuplicateItemException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":155,"author":{"gitId":"BoAi01"},"content":"            assertEquals(ItemStub.class, e.getDuplicatedClass());","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"    void remove_validItem_shouldRemoveItem() {","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"        this.list.remove(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"        assertFalse(this.list.contains(item));","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"    void remove_nullItem_shouldThrowNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e this.list.remove((ItemStub) null));","lastModifiedDate":"2023-03-31"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"    void remove_itemNotInList_shouldThrowItemNotFoundException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(ItemNotFoundException.class, () -\u003e this.list.remove(item));","lastModifiedDate":"2023-03-31"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"    void setItems_validItems_shouldReplaceItems() {","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"        ItemStub item2 \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item2);","lastModifiedDate":"2023-02-22"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":185,"author":{"gitId":"BoAi01"},"content":"        ItemStub newItem \u003d new ItemStub(\"c\");","lastModifiedDate":"2023-03-07"},{"lineNumber":186,"author":{"gitId":"BoAi01"},"content":"        ItemStub newItem2 \u003d new ItemStub(\"d\");","lastModifiedDate":"2023-03-07"},{"lineNumber":187,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e items \u003d FXCollections.observableArrayList(","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"                newItem,","lastModifiedDate":"2023-02-22"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"                newItem2","lastModifiedDate":"2023-02-22"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"        this.list.setItems(items);","lastModifiedDate":"2023-02-22"},{"lineNumber":193,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":194,"author":{"gitId":"wxxedu"},"content":"        assertTrue(this.list.contains(newItem));","lastModifiedDate":"2023-02-22"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"        assertTrue(this.list.contains(newItem2));","lastModifiedDate":"2023-02-22"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"        assertFalse(this.list.contains(item));","lastModifiedDate":"2023-02-22"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"        assertFalse(this.list.contains(item2));","lastModifiedDate":"2023-02-22"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"    void setItems_uniqueList_shouldReplaceItems() {","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":203,"author":{"gitId":"BoAi01"},"content":"        ItemStub item2 \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":204,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item2);","lastModifiedDate":"2023-02-22"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":207,"author":{"gitId":"BoAi01"},"content":"        ItemStub newItem \u003d new ItemStub(\"c\");","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"BoAi01"},"content":"        ItemStub newItem2 \u003d new ItemStub(\"d\");","lastModifiedDate":"2023-03-07"},{"lineNumber":209,"author":{"gitId":"BoAi01"},"content":"        UniqueList\u003cItemStub\u003e items \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":210,"author":{"gitId":"wxxedu"},"content":"        items.add(newItem);","lastModifiedDate":"2023-02-22"},{"lineNumber":211,"author":{"gitId":"wxxedu"},"content":"        items.add(newItem2);","lastModifiedDate":"2023-02-22"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":213,"author":{"gitId":"wxxedu"},"content":"        this.list.setItems(items);","lastModifiedDate":"2023-02-22"},{"lineNumber":214,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":215,"author":{"gitId":"wxxedu"},"content":"        assertTrue(this.list.contains(newItem));","lastModifiedDate":"2023-02-22"},{"lineNumber":216,"author":{"gitId":"wxxedu"},"content":"        assertTrue(this.list.contains(newItem2));","lastModifiedDate":"2023-02-22"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"        assertFalse(this.list.contains(item));","lastModifiedDate":"2023-02-22"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"        assertFalse(this.list.contains(item2));","lastModifiedDate":"2023-02-22"},{"lineNumber":219,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":220,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":221,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":222,"author":{"gitId":"wxxedu"},"content":"    void itemsHaveDuplicate_hasDuplicate_shouldReturnTrue() {","lastModifiedDate":"2023-02-22"},{"lineNumber":223,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":224,"author":{"gitId":"BoAi01"},"content":"        ItemStub item2 \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":225,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e items \u003d FXCollections.observableArrayList(","lastModifiedDate":"2023-03-07"},{"lineNumber":226,"author":{"gitId":"wxxedu"},"content":"                item,","lastModifiedDate":"2023-02-22"},{"lineNumber":227,"author":{"gitId":"wxxedu"},"content":"                item2","lastModifiedDate":"2023-02-22"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":229,"author":{"gitId":"wxxedu"},"content":"        assertTrue(UniqueList.itemsHaveDuplicate(items));","lastModifiedDate":"2023-02-22"},{"lineNumber":230,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":231,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":232,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":233,"author":{"gitId":"wxxedu"},"content":"    void itemsHaveDuplicate_noDuplicate_shouldReturnFalse() {","lastModifiedDate":"2023-02-22"},{"lineNumber":234,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":235,"author":{"gitId":"BoAi01"},"content":"        ItemStub item2 \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":236,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e items \u003d FXCollections.observableArrayList(","lastModifiedDate":"2023-03-07"},{"lineNumber":237,"author":{"gitId":"wxxedu"},"content":"                item,","lastModifiedDate":"2023-02-22"},{"lineNumber":238,"author":{"gitId":"wxxedu"},"content":"                item2","lastModifiedDate":"2023-02-22"},{"lineNumber":239,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":240,"author":{"gitId":"wxxedu"},"content":"        assertFalse(UniqueList.itemsHaveDuplicate(items));","lastModifiedDate":"2023-02-22"},{"lineNumber":241,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":242,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":243,"author":{"gitId":"BoAi01"},"content":"    private static class ItemStub implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":244,"author":{"gitId":"wxxedu"},"content":"        private final String id;","lastModifiedDate":"2023-02-22"},{"lineNumber":245,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":246,"author":{"gitId":"BoAi01"},"content":"        public ItemStub(String id) {","lastModifiedDate":"2023-03-07"},{"lineNumber":247,"author":{"gitId":"wxxedu"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-02-22"},{"lineNumber":248,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":249,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":250,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":251,"author":{"gitId":"wxxedu"},"content":"        public String getId() {","lastModifiedDate":"2023-02-22"},{"lineNumber":252,"author":{"gitId":"wxxedu"},"content":"            return id;","lastModifiedDate":"2023-02-22"},{"lineNumber":253,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":254,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":255,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"BoAi01":55,"wxxedu":200}},{"path":"src/test/java/wingman/model/link/LinkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.model.link;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import static org.mockito.ArgumentMatchers.any;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mock;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.fp.Lazy;","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkDuplicateException;","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkException;","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"import wingman.model.link.exceptions.LinkItemNotFoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"public class LinkTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    private ReadOnlyItemManager\u003cItemStub\u003e manager;","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    private ItemStub testItem;","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    private Link\u003cCategoryStub, ItemStub, ReadOnlyItemManager\u003cItemStub\u003e\u003e sut;","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    private Map\u003cCategoryStub, Integer\u003e shape;","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    private Map\u003cCategoryStub, Deque\u003cString\u003e\u003e contents;","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    void setUp() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        testItem \u003d new ItemStub(\"test-id\");","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        Mockito","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"                .lenient()","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"                .when(manager.getItemOptional(any()))","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"                .thenReturn(Optional.of(testItem));","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        contents \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        contents.put(CategoryStub.CATEGORY_A, new ArrayDeque\u003c\u003e());","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"        contents.put(CategoryStub.CATEGORY_B, new ArrayDeque\u003c\u003e());","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        shape \u003d Map.of(CategoryStub.CATEGORY_A, 1, CategoryStub.CATEGORY_B, 2);","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        sut \u003d new Link\u003c\u003e(shape, contents, Lazy.of(manager));","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"    void setUpLinkAsFull() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        contents.get(CategoryStub.CATEGORY_A).push(\"test-id-1\");","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        contents.get(CategoryStub.CATEGORY_B).push(\"test-id-2\");","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        contents.get(CategoryStub.CATEGORY_B).push(\"test-id-3\");","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        sut \u003d new Link\u003c\u003e(shape, contents, Lazy.of(manager));","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    void constructor_twoValidParam_shouldCreateNewInstance() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        final Link\u003cCategoryStub, ItemStub, ReadOnlyItemManager\u003cItemStub\u003e\u003e result \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"                new Link\u003c\u003e(shape, Lazy.of(manager));","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        assertNotNull(result);","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        for (CategoryStub key : shape.keySet()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"            assertTrue(result.getUnmodifiableContents().containsKey(key));","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"    void constructor_threeValidParam_shouldCreateNewInstance() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        final Link\u003cCategoryStub, ItemStub, ReadOnlyItemManager\u003cItemStub\u003e\u003e result \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"                new Link\u003c\u003e(shape, contents, Lazy.of(manager));","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        assertNotNull(result);","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        for (CategoryStub key : shape.keySet()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"            assertTrue(result.getUnmodifiableContents().containsKey(key));","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"    void constructor_threeParamUnspecifiedKey_shouldThrowLinkException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        contents.put(CategoryStub.UNSUPPORTED, new ArrayDeque\u003c\u003e());","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        assertThrows(LinkException.class, () -\u003e new Link\u003c\u003e(shape, contents,","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"                Lazy.of(manager)","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        ));","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"    void constructor_threeParamInvalidSize_shouldThrowLinkException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"        contents.get(CategoryStub.CATEGORY_A).push(\"test-id-1\");","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"        contents.get(CategoryStub.CATEGORY_A).push(\"test-id-2\");","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"        contents.get(CategoryStub.CATEGORY_A).push(\"test-id-3\");","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"        assertThrows(LinkException.class, () -\u003e new Link\u003c\u003e(shape, contents,","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"                Lazy.of(manager)","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"        ));","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"    void constructor_threeValidParam_shouldNotResultInAliasing() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(sut.getUnmodifiableContents(), contents);","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(sut.getCopiedContents(), contents);","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"        contents.get(CategoryStub.CATEGORY_A).push(\"hello\");","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"        final Deque\u003cString\u003e result \u003d sut","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"                                             .getCopiedContents()","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"                                             .get(CategoryStub.CATEGORY_A);","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.contains(\"hello\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"    void getUnmodifiableContents_nothing_returnsMapWithCorrectKeysAndValues() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        setUpLinkAsFull();","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"        Map\u003cCategoryStub, Collection\u003cString\u003e\u003e result \u003d sut.getUnmodifiableContents();","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"        assertTrue(result.containsKey(CategoryStub.CATEGORY_A));","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"        assertTrue(result.containsKey(CategoryStub.CATEGORY_B));","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.containsKey(CategoryStub.UNSUPPORTED));","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"        assertEquals(result.get(CategoryStub.CATEGORY_A).size(), 1);","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        assertEquals(result.get(CategoryStub.CATEGORY_B).size(), 2);","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"        assertTrue(result.get(CategoryStub.CATEGORY_A).contains(\"test-id-1\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"        assertTrue(result.get(CategoryStub.CATEGORY_B).contains(\"test-id-2\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"        assertTrue(result.get(CategoryStub.CATEGORY_B).contains(\"test-id-3\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"    void getUnmodifiableContents_tryModify_throwsException() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"        setUpLinkAsFull();","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"        Map\u003cCategoryStub, Collection\u003cString\u003e\u003e result \u003d sut.getUnmodifiableContents();","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"        assertThrows(","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"                UnsupportedOperationException.class, () -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"                    result.put(CategoryStub.UNSUPPORTED, new ArrayDeque\u003c\u003e());","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"        assertThrows(","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"                UnsupportedOperationException.class, () -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"                    result.get(CategoryStub.CATEGORY_A).add(\"test-id-4\");","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"    void getRemainingSizeOfKey_invalidKey_throwsLinkException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"        assertThrows(","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"                LinkException.class, () -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"                    sut.getRemainingSizeOfKey(CategoryStub.UNSUPPORTED);","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"    void getRemainingSizeOfKey_empty_returnCorrectSize() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"        int aSize \u003d sut.getRemainingSizeOfKey(CategoryStub.CATEGORY_A);","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"        assertEquals(aSize, shape.get(CategoryStub.CATEGORY_A));","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"        int bSize \u003d sut.getRemainingSizeOfKey(CategoryStub.CATEGORY_B);","lastModifiedDate":"2023-03-16"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"        assertEquals(bSize, shape.get(CategoryStub.CATEGORY_B));","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"    void getRemainingSizeOfKey_full_returnSizeZero() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"        setUpLinkAsFull();","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"        int aSize \u003d sut.getRemainingSizeOfKey(CategoryStub.CATEGORY_A);","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"        assertEquals(aSize, 0);","lastModifiedDate":"2023-03-16"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"        int bSize \u003d sut.getRemainingSizeOfKey(CategoryStub.CATEGORY_B);","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"        assertEquals(bSize, 0);","lastModifiedDate":"2023-03-16"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"    void put_invalidKey_throwsLinkException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"        assertThrows(","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"                LinkException.class, () -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"                    sut.put(CategoryStub.UNSUPPORTED, \"hello\");","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"    void put_alreadyFull_throwsLinkException() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"wxxedu"},"content":"        setUpLinkAsFull();","lastModifiedDate":"2023-03-16"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"        assertThrows(","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"                LinkException.class, () -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"                    sut.put(CategoryStub.CATEGORY_A, \"hello\");","lastModifiedDate":"2023-03-18"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"        assertThrows(","lastModifiedDate":"2023-03-16"},{"lineNumber":193,"author":{"gitId":"wxxedu"},"content":"                LinkException.class, () -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":194,"author":{"gitId":"wxxedu"},"content":"                    sut.put(CategoryStub.CATEGORY_B, \"hello\");","lastModifiedDate":"2023-03-18"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"    void put_hasDuplicate_throwsLinkDuplicateException() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"        sut.put(CategoryStub.CATEGORY_B, \"hello\");","lastModifiedDate":"2023-03-16"},{"lineNumber":202,"author":{"gitId":"wxxedu"},"content":"        assertThrows(","lastModifiedDate":"2023-03-16"},{"lineNumber":203,"author":{"gitId":"wxxedu"},"content":"                LinkDuplicateException.class, () -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":204,"author":{"gitId":"wxxedu"},"content":"                    sut.put(CategoryStub.CATEGORY_B, \"hello\");","lastModifiedDate":"2023-03-18"},{"lineNumber":205,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":208,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":209,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":210,"author":{"gitId":"wxxedu"},"content":"    void put_validInput_putsItemIntoLink() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":211,"author":{"gitId":"wxxedu"},"content":"        assertEquals(sut.get(CategoryStub.CATEGORY_A).size(), 0);","lastModifiedDate":"2023-03-16"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"        assertEquals(sut.get(CategoryStub.CATEGORY_B).size(), 0);","lastModifiedDate":"2023-03-16"},{"lineNumber":213,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":214,"author":{"gitId":"wxxedu"},"content":"        sut.put(CategoryStub.CATEGORY_A, \"hello\");","lastModifiedDate":"2023-03-16"},{"lineNumber":215,"author":{"gitId":"wxxedu"},"content":"        sut.put(CategoryStub.CATEGORY_B, \"hello\");","lastModifiedDate":"2023-03-16"},{"lineNumber":216,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"        assertEquals(sut.get(CategoryStub.CATEGORY_A).size(), 1);","lastModifiedDate":"2023-03-16"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"        assertEquals(sut.get(CategoryStub.CATEGORY_B).size(), 1);","lastModifiedDate":"2023-03-16"},{"lineNumber":219,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":220,"author":{"gitId":"wxxedu"},"content":"        sut.put(CategoryStub.CATEGORY_B, \"hello2\");","lastModifiedDate":"2023-03-16"},{"lineNumber":221,"author":{"gitId":"wxxedu"},"content":"        assertEquals(sut.get(CategoryStub.CATEGORY_B).size(), 2);","lastModifiedDate":"2023-03-16"},{"lineNumber":222,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":223,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":224,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":225,"author":{"gitId":"wxxedu"},"content":"    void putRevolve_full_shouldRevolveInAFifoManner() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":226,"author":{"gitId":"wxxedu"},"content":"        setUpLinkAsFull();","lastModifiedDate":"2023-03-16"},{"lineNumber":227,"author":{"gitId":"wxxedu"},"content":"        Map\u003cCategoryStub, Deque\u003cString\u003e\u003e before \u003d sut.getCopiedContents();","lastModifiedDate":"2023-03-16"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":229,"author":{"gitId":"wxxedu"},"content":"        assertDoesNotThrow(() -\u003e sut.putRevolve(","lastModifiedDate":"2023-03-18"},{"lineNumber":230,"author":{"gitId":"wxxedu"},"content":"                CategoryStub.CATEGORY_A,","lastModifiedDate":"2023-03-18"},{"lineNumber":231,"author":{"gitId":"wxxedu"},"content":"                \"new-id\"","lastModifiedDate":"2023-03-18"},{"lineNumber":232,"author":{"gitId":"wxxedu"},"content":"        ));","lastModifiedDate":"2023-03-18"},{"lineNumber":233,"author":{"gitId":"wxxedu"},"content":"        assertDoesNotThrow(() -\u003e sut.putRevolve(","lastModifiedDate":"2023-03-18"},{"lineNumber":234,"author":{"gitId":"wxxedu"},"content":"                CategoryStub.CATEGORY_B,","lastModifiedDate":"2023-03-18"},{"lineNumber":235,"author":{"gitId":"wxxedu"},"content":"                \"new-id\"","lastModifiedDate":"2023-03-18"},{"lineNumber":236,"author":{"gitId":"wxxedu"},"content":"        ));","lastModifiedDate":"2023-03-18"},{"lineNumber":237,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":238,"author":{"gitId":"wxxedu"},"content":"        Map\u003cCategoryStub, Deque\u003cString\u003e\u003e after \u003d sut.getCopiedContents();","lastModifiedDate":"2023-03-16"},{"lineNumber":239,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":240,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(","lastModifiedDate":"2023-03-16"},{"lineNumber":241,"author":{"gitId":"wxxedu"},"content":"                after.get(CategoryStub.CATEGORY_A).getFirst(),","lastModifiedDate":"2023-03-16"},{"lineNumber":242,"author":{"gitId":"wxxedu"},"content":"                before.get(CategoryStub.CATEGORY_A).getFirst()","lastModifiedDate":"2023-03-16"},{"lineNumber":243,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":244,"author":{"gitId":"wxxedu"},"content":"        assertEquals(","lastModifiedDate":"2023-03-16"},{"lineNumber":245,"author":{"gitId":"wxxedu"},"content":"                before.get(CategoryStub.CATEGORY_B).getLast(),","lastModifiedDate":"2023-03-16"},{"lineNumber":246,"author":{"gitId":"wxxedu"},"content":"                after.get(CategoryStub.CATEGORY_B).getFirst()","lastModifiedDate":"2023-03-16"},{"lineNumber":247,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":248,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(","lastModifiedDate":"2023-03-16"},{"lineNumber":249,"author":{"gitId":"wxxedu"},"content":"                before.get(CategoryStub.CATEGORY_B).getFirst(),","lastModifiedDate":"2023-03-16"},{"lineNumber":250,"author":{"gitId":"wxxedu"},"content":"                after.get(CategoryStub.CATEGORY_B).getFirst()","lastModifiedDate":"2023-03-16"},{"lineNumber":251,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":252,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(","lastModifiedDate":"2023-03-16"},{"lineNumber":253,"author":{"gitId":"wxxedu"},"content":"                before.get(CategoryStub.CATEGORY_B).getLast(),","lastModifiedDate":"2023-03-16"},{"lineNumber":254,"author":{"gitId":"wxxedu"},"content":"                after.get(CategoryStub.CATEGORY_B).getLast()","lastModifiedDate":"2023-03-16"},{"lineNumber":255,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":256,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":257,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":258,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":259,"author":{"gitId":"wxxedu"},"content":"    void clear_invalidKeySpecified_throwsLinkException() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":260,"author":{"gitId":"wxxedu"},"content":"        setUpLinkAsFull();","lastModifiedDate":"2023-03-16"},{"lineNumber":261,"author":{"gitId":"wxxedu"},"content":"        assertThrows(","lastModifiedDate":"2023-03-18"},{"lineNumber":262,"author":{"gitId":"wxxedu"},"content":"                LinkException.class, () -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":263,"author":{"gitId":"wxxedu"},"content":"                    sut.clear(CategoryStub.UNSUPPORTED);","lastModifiedDate":"2023-03-18"},{"lineNumber":264,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":265,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-18"},{"lineNumber":266,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":267,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":268,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":269,"author":{"gitId":"wxxedu"},"content":"    void clear_validKeySpecified_clearsTheKey() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":270,"author":{"gitId":"wxxedu"},"content":"        setUpLinkAsFull();","lastModifiedDate":"2023-03-16"},{"lineNumber":271,"author":{"gitId":"wxxedu"},"content":"        assertFalse(","lastModifiedDate":"2023-03-16"},{"lineNumber":272,"author":{"gitId":"wxxedu"},"content":"                sut.getCopiedContents().get(CategoryStub.CATEGORY_A).isEmpty()","lastModifiedDate":"2023-03-16"},{"lineNumber":273,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":274,"author":{"gitId":"wxxedu"},"content":"        assertDoesNotThrow(() -\u003e sut.clear(CategoryStub.CATEGORY_A));","lastModifiedDate":"2023-03-16"},{"lineNumber":275,"author":{"gitId":"wxxedu"},"content":"        assertTrue(","lastModifiedDate":"2023-03-16"},{"lineNumber":276,"author":{"gitId":"wxxedu"},"content":"                sut.getCopiedContents().get(CategoryStub.CATEGORY_A).isEmpty()","lastModifiedDate":"2023-03-16"},{"lineNumber":277,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":278,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":279,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":280,"author":{"gitId":"wxxedu"},"content":"        assertFalse(","lastModifiedDate":"2023-03-16"},{"lineNumber":281,"author":{"gitId":"wxxedu"},"content":"                sut.getCopiedContents().get(CategoryStub.CATEGORY_B).isEmpty()","lastModifiedDate":"2023-03-16"},{"lineNumber":282,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":283,"author":{"gitId":"wxxedu"},"content":"        assertDoesNotThrow(() -\u003e sut.clear(CategoryStub.CATEGORY_B));","lastModifiedDate":"2023-03-16"},{"lineNumber":284,"author":{"gitId":"wxxedu"},"content":"        assertTrue(","lastModifiedDate":"2023-03-16"},{"lineNumber":285,"author":{"gitId":"wxxedu"},"content":"                sut.getCopiedContents().get(CategoryStub.CATEGORY_B).isEmpty()","lastModifiedDate":"2023-03-16"},{"lineNumber":286,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":287,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":288,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":289,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":290,"author":{"gitId":"wxxedu"},"content":"    void clear_noKeySpecified_clearsEverything() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":291,"author":{"gitId":"wxxedu"},"content":"        setUpLinkAsFull();","lastModifiedDate":"2023-03-16"},{"lineNumber":292,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":293,"author":{"gitId":"wxxedu"},"content":"        Map\u003cCategoryStub, Deque\u003cString\u003e\u003e before \u003d sut.getCopiedContents();","lastModifiedDate":"2023-03-16"},{"lineNumber":294,"author":{"gitId":"wxxedu"},"content":"        assertFalse(before.get(CategoryStub.CATEGORY_A).isEmpty());","lastModifiedDate":"2023-03-16"},{"lineNumber":295,"author":{"gitId":"wxxedu"},"content":"        assertFalse(before.get(CategoryStub.CATEGORY_B).isEmpty());","lastModifiedDate":"2023-03-16"},{"lineNumber":296,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":297,"author":{"gitId":"wxxedu"},"content":"        sut.clear();","lastModifiedDate":"2023-03-16"},{"lineNumber":298,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":299,"author":{"gitId":"wxxedu"},"content":"        Map\u003cCategoryStub, Deque\u003cString\u003e\u003e after \u003d sut.getCopiedContents();","lastModifiedDate":"2023-03-16"},{"lineNumber":300,"author":{"gitId":"wxxedu"},"content":"        assertTrue(after.get(CategoryStub.CATEGORY_A).isEmpty());","lastModifiedDate":"2023-03-16"},{"lineNumber":301,"author":{"gitId":"wxxedu"},"content":"        assertTrue(after.get(CategoryStub.CATEGORY_B).isEmpty());","lastModifiedDate":"2023-03-16"},{"lineNumber":302,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":303,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":304,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":305,"author":{"gitId":"wxxedu"},"content":"    void delete_invalidKey_throwsLinkException() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":306,"author":{"gitId":"wxxedu"},"content":"        setUpLinkAsFull();","lastModifiedDate":"2023-03-16"},{"lineNumber":307,"author":{"gitId":"wxxedu"},"content":"        assertThrows(","lastModifiedDate":"2023-03-16"},{"lineNumber":308,"author":{"gitId":"wxxedu"},"content":"                LinkException.class, () -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":309,"author":{"gitId":"wxxedu"},"content":"                    sut.delete(CategoryStub.UNSUPPORTED, \"test-id-1\");","lastModifiedDate":"2023-03-18"},{"lineNumber":310,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":311,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":312,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":313,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":314,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":315,"author":{"gitId":"wxxedu"},"content":"    void delete_itemNotContained_throwsLinkItemNotFoundException() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":316,"author":{"gitId":"wxxedu"},"content":"        setUpLinkAsFull();","lastModifiedDate":"2023-03-16"},{"lineNumber":317,"author":{"gitId":"wxxedu"},"content":"        assertThrows(","lastModifiedDate":"2023-03-16"},{"lineNumber":318,"author":{"gitId":"wxxedu"},"content":"                LinkItemNotFoundException.class, () -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":319,"author":{"gitId":"wxxedu"},"content":"                    sut.delete(CategoryStub.CATEGORY_A, \"hello-world\");","lastModifiedDate":"2023-03-18"},{"lineNumber":320,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":321,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":322,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":323,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":324,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":325,"author":{"gitId":"wxxedu"},"content":"    void delete_validItem_removesTheItem() throws LinkException {","lastModifiedDate":"2023-03-16"},{"lineNumber":326,"author":{"gitId":"wxxedu"},"content":"        setUpLinkAsFull();","lastModifiedDate":"2023-03-16"},{"lineNumber":327,"author":{"gitId":"wxxedu"},"content":"        assertDoesNotThrow(() -\u003e sut.delete(","lastModifiedDate":"2023-03-18"},{"lineNumber":328,"author":{"gitId":"wxxedu"},"content":"                CategoryStub.CATEGORY_A,","lastModifiedDate":"2023-03-18"},{"lineNumber":329,"author":{"gitId":"wxxedu"},"content":"                \"test-id-1\"","lastModifiedDate":"2023-03-18"},{"lineNumber":330,"author":{"gitId":"wxxedu"},"content":"        ));","lastModifiedDate":"2023-03-18"},{"lineNumber":331,"author":{"gitId":"wxxedu"},"content":"        assertTrue(sut","lastModifiedDate":"2023-03-18"},{"lineNumber":332,"author":{"gitId":"wxxedu"},"content":"                           .getCopiedContents()","lastModifiedDate":"2023-03-18"},{"lineNumber":333,"author":{"gitId":"wxxedu"},"content":"                           .get(CategoryStub.CATEGORY_A)","lastModifiedDate":"2023-03-18"},{"lineNumber":334,"author":{"gitId":"wxxedu"},"content":"                           .isEmpty());","lastModifiedDate":"2023-03-18"},{"lineNumber":335,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":336,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":337,"author":{"gitId":"wxxedu"},"content":"    private enum CategoryStub {","lastModifiedDate":"2023-03-16"},{"lineNumber":338,"author":{"gitId":"wxxedu"},"content":"        CATEGORY_A,","lastModifiedDate":"2023-03-16"},{"lineNumber":339,"author":{"gitId":"wxxedu"},"content":"        CATEGORY_B,","lastModifiedDate":"2023-03-16"},{"lineNumber":340,"author":{"gitId":"wxxedu"},"content":"        UNSUPPORTED,","lastModifiedDate":"2023-03-16"},{"lineNumber":341,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":342,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":343,"author":{"gitId":"wxxedu"},"content":"    private static class ItemStub implements Item {","lastModifiedDate":"2023-03-16"},{"lineNumber":344,"author":{"gitId":"wxxedu"},"content":"        private final String id;","lastModifiedDate":"2023-03-16"},{"lineNumber":345,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":346,"author":{"gitId":"wxxedu"},"content":"        public ItemStub(String id) {","lastModifiedDate":"2023-03-16"},{"lineNumber":347,"author":{"gitId":"wxxedu"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-03-16"},{"lineNumber":348,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":349,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":350,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":351,"author":{"gitId":"wxxedu"},"content":"        public String getId() {","lastModifiedDate":"2023-03-16"},{"lineNumber":352,"author":{"gitId":"wxxedu"},"content":"            return id;","lastModifiedDate":"2023-03-16"},{"lineNumber":353,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":354,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":355,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"wxxedu":355}},{"path":"src/test/java/wingman/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.GuiSettings;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.model.UserPrefs;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"            \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jishnu28":2,"wxxedu":9,"-":112}},{"path":"src/test/java/wingman/storage/json/JsonItemManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mock;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.stubs.ItemStub;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.stubs.JsonAdaptedIdentifiableStub;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.stubs.JsonItemManagerStub;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"public class JsonItemManagerTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    private ItemStub model;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    private JsonAdaptedIdentifiableStub jsonModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    private ReadOnlyItemManager\u003cItemStub\u003e manager;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    private JsonItemManagerStub jsonManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    void setUp() {","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"        model \u003d new ItemStub(\"test_id\");","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"        jsonManager \u003d new JsonItemManagerStub();","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    void readFromManager_validManager_success() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        // Arrange","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e items \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"                FXCollections.observableArrayList(model);","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(manager.getItemList()).thenReturn(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        // Act","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        jsonManager.readFromManager(manager);","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        // Assert","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertEquals(1, jsonManager.items.size());","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    void toModelType_emptyItems_equalsEmptyManager() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        // Act","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        final ItemManager\u003cItemStub\u003e res \u003d jsonManager.toModelType();","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        // Assert","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertNotNull(res);","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"        Assertions.assertEquals(res, new ItemManager\u003cItemStub\u003e());","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    void toModelType_modelThrows_shouldThrowIllegalValueException() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        // Arrange","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        final IllegalValueException exception \u003d new IllegalValueException(","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"                \"Test Message\");","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(jsonModel.toModelType()).thenThrow(exception);","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        jsonManager.items.add(jsonModel);","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        // Assert","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertThrows(","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"                IllegalValueException.class, () -\u003e jsonManager.toModelType());","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    void toModelType_whenDuplicate_shouldThrowIllegalValueException() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"        // Arrange","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        jsonManager.items.add(new JsonAdaptedIdentifiableStub(\"test\"));","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        jsonManager.items.add(new JsonAdaptedIdentifiableStub(\"test\"));","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        // Assert","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertThrows(","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"                IllegalValueException.class, () -\u003e jsonManager.toModelType());","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":9,"wxxedu":75}},{"path":"src/test/java/wingman/storage/json/JsonItemStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.json;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mock;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.FileHelper;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.JsonHelper;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.stubs.JsonItemManagerStub;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.stubs.JsonItemStorageStub;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"public class JsonItemStorageTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    private JsonHelper jsonHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    private FileHelper fileHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    private Path filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"    private JsonItemManagerStub jsonManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    private Logger logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    private JsonItemStorageStub storage;","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    void setUp() throws DataConversionException, IOException, IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        filePath \u003d Path.of(\"test\", \"path\");","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"        storage \u003d new JsonItemStorageStub(","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"                filePath, jsonHelper, fileHelper, logger);","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"        Mockito.lenient()","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"                .when(jsonManager.toModelType())","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"                .thenReturn(new ItemManager\u003c\u003e());","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        Mockito.lenient()","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"                .when(jsonHelper.readJsonFile(Mockito.any(), Mockito.any()))","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"                .thenReturn(Optional.of(jsonManager));","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    void read_noArgs_shouldCallWithDefaultPath()","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        storage.read();","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(jsonHelper, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"                .readJsonFile(filePath, JsonItemManagerStub.class);","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    void read_hasPath_shouldCallWithThePathGiven()","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        final Path newPath \u003d Path.of(\"Hello\", \"World\");","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        storage.read(newPath);","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(jsonHelper, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"                .readJsonFile(newPath, JsonItemManagerStub.class);","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(jsonHelper, Mockito.never())","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"                .readJsonFile(filePath, JsonItemManagerStub.class);","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"    void read_fileEmpty_shouldReturnOptionalEmpty()","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(jsonHelper.readJsonFile(Mockito.any(), Mockito.any()))","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"                .thenReturn(Optional.empty());","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        assert storage.read().isEmpty();","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"    void read_modelCannotConvert_throwDataConversionException()","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException, IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(jsonManager.toModelType()).thenThrow(new IllegalValueException(\"Test\"));","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertThrows(DataConversionException.class, () -\u003e storage.read());","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"    void read_modelCannotConvert_shouldWriteWarningToLogger()","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException, IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(jsonManager.toModelType()).thenThrow(new IllegalValueException(\"Test\"));","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"            storage.read();","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"            Mockito.verify(logger, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"                    .warning(Mockito.anyString());","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"    void save_noPath_shouldCallWithDefaultPath() throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"        storage.save(new ItemManager\u003c\u003e());","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(jsonHelper, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"                .saveJsonFile(Mockito.any(), Mockito.eq(filePath));","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(fileHelper, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"                .createIfMissing(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"    void save_withPath_shouldCallWithPathProvided() throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"        final Path newPath \u003d Path.of(\"Hello\", \"World\");","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"        storage.save(new ItemManager\u003c\u003e(), newPath);","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(jsonHelper, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"                .saveJsonFile(Mockito.any(), Mockito.eq(newPath));","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(fileHelper, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"                .createIfMissing(newPath);","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(jsonHelper, Mockito.never())","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"                .saveJsonFile(Mockito.any(), Mockito.eq(filePath));","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(fileHelper, Mockito.never())","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"                .createIfMissing(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":10,"wxxedu":119}},{"path":"src/test/java/wingman/storage/stubs/ItemStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.stubs;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.model.item.Item;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * Represents the stub for an {@code Identifiable} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"public class ItemStub implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * The id of the {@code Identifiable} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    private final String id;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * Creates a new {@code IdentifiableStub} object with the given id.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * @param id The id of the {@code Identifiable} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    public ItemStub(String id) {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public String getId() {","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        return id;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":2,"wxxedu":25}},{"path":"src/test/java/wingman/storage/stubs/JsonAdaptedIdentifiableStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.stubs;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonAdaptedModel;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * Represents the stub for a {@code JsonAdaptedModel} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"public class JsonAdaptedIdentifiableStub","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"        implements JsonAdaptedModel\u003cItemStub\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * The id of the {@code JsonAdaptedModel} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    private final String id;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * Creates a new {@code JsonAdaptedIdentifiableStub} object with the","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * given id.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * @param id The id of the {@code JsonAdaptedModel} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    public JsonAdaptedIdentifiableStub(String id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    public ItemStub toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        return new ItemStub(this.id);","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":3,"wxxedu":27}},{"path":"src/test/java/wingman/storage/stubs/JsonItemManagerStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.stubs;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":" * Represents the stub for a {@code JsonItemManager} object.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"public class JsonItemManagerStub extends","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"        JsonItemManager\u003cItemStub, JsonAdaptedIdentifiableStub\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"     * Creates a new {@code JsonItemManagerStub} object.","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"     * @param modelManager The {@code ReadOnlyItemManager} object","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"     * @return The {@code JsonItemManagerStub} object","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    static JsonItemManagerStub from(","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cItemStub\u003e modelManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"        final JsonItemManagerStub res \u003d new JsonItemManagerStub();","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"        res.readFromManager(modelManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"        return res;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"    protected JsonAdaptedIdentifiableStub getJsonAdaptedModel(","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"            ItemStub item) {","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        return new JsonAdaptedIdentifiableStub(item.getId());","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"BoAi01":26,"wxxedu":3}},{"path":"src/test/java/wingman/storage/stubs/JsonItemStorageStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.storage.stubs;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.FileHelper;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.util.JsonHelper;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import wingman.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import wingman.storage.json.JsonItemStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" * A stub class for {@link JsonItemStorage} that is used for testing.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"public class JsonItemStorageStub extends","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"        JsonItemStorage\u003cItemStub, JsonAdaptedIdentifiableStub, JsonItemManagerStub\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     * Creates a new {@code JsonIdentifiableStorageStub} object.","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * @param filePath   The path to the file to be read from and written to.","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     * @param jsonHelper The {@link JsonHelper} to be used.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     * @param fileHelper The {@link FileHelper} to be used.","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     * @param logger     The {@link Logger} to be used.","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    public JsonItemStorageStub(Path filePath, JsonHelper jsonHelper,","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"                               FileHelper fileHelper, Logger logger) {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"        super(filePath, jsonHelper, fileHelper, logger);","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    protected Class\u003cJsonItemManagerStub\u003e getManagerClass() {","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"        return JsonItemManagerStub.class;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"    protected JsonItemManagerStub createManager(","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cItemStub\u003e modelManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"        return JsonItemManagerStub.from(modelManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"BoAi01":35,"wxxedu":5}},{"path":"src/test/java/wingman/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.testutil;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"wxxedu":1,"-":33}},{"path":"src/test/java/wingman/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.testutil;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":1,"-":71}},{"path":"src/test/java/wingman/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.testutil;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":1,"-":29}},{"path":"src/test/java/wingman/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.testutil;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import wingman.commons.core.index.Index;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"wxxedu":2,"-":10}},{"path":"src/test/java/wingman/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    public TestFxmlObject() {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                   || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                           \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"wxxedu":3,"-":33}},{"path":"src/test/java/wingman/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package wingman.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import wingman.MainApp;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import wingman.testutil.Assert;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"            \"Hello World!\");","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"                NullPointerException.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"                    new TestUiPart\u003cObject\u003e((URL) null);","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"                NullPointerException.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"                    new TestUiPart\u003cObject\u003e((URL) null, new Object());","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        URL missingFileUrl \u003d new URL(","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"                testFolder.toUri().toURL(),","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"                MISSING_FILE_PATH","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"                AssertionError.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"                    new TestUiPart\u003cObject\u003e(missingFileUrl);","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"                AssertionError.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"                    new TestUiPart\u003cObject\u003e(missingFileUrl, new Object());","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"                AssertionError.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"                    new TestUiPart\u003cObject\u003e(invalidFileUrl);","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"                AssertionError.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"                    new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object());","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        assertEquals(","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"                VALID_FILE_ROOT,","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"                new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot()","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"                NullPointerException.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"                    new TestUiPart\u003cObject\u003e((String) null);","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"                NullPointerException.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"                    new TestUiPart\u003cObject\u003e((String) null, new Object());","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"                NullPointerException.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"                    new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH);","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"                NullPointerException.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"                    new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object());","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"                AssertionError.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"                    new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH);","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"        Assert.assertThrows(","lastModifiedDate":"2023-03-31"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"                AssertionError.class, () -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"                    new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object());","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"wxxedu":73,"-":89}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"\u003c?import wingman.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"wxxedu":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"\u003cfx:root type\u003d\"TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"wxxedu":1,"-":5}}]
