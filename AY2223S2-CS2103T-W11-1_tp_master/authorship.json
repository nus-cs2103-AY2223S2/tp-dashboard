[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W11-1/tp.git)","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"* Wingman is a modal manager for managing airplanes, pilots, crews, flights, and locations. It seeks to provide a highly efficient way of resource management for airline managers, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"* For the detailed documentation of this project, see our [User Guide](https://github.com/AY2223S2-CS2103T-W11-1/tp/blob/master/docs/UserGuide.md) and [Developer Guide](https://github.com/AY2223S2-CS2103T-W11-1/tp/blob/master/docs/DeveloperGuide.md). ","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"tangyuantyy":4,"-":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    testImplementation \"org.mockito:mockito-core:3.+\"","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    testImplementation \u0027org.mockito:mockito-junit-jupiter:3.+\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wxxedu":3,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"# About Us","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"We are a team based in","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"You can reach us at the","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"email [support@parkourlabs.io](mailto:support@parkourlabs.io)","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"### Ai Bo","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/BoAi01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"[[github](https://github.com/BoAi01)]","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"[[portfolio](team/boai01.md)]","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"* Role: Team Lead","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"### Celeste Cheah","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/cetigerlily.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"[[github](https://github.com/cetigerlily)]","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"[[portfolio](team/cetigerlily.md)]","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"* Role: Developer","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"### Jishnu","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/jishnu28.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"[[github](https://github.com/jishnu28)]","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"[[portfolio](team/jishnu28.md)]","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"* Responsibilities: Deliverables and deadlines \u0026 Scheduling and tracking","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"### Xiuxuan","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/wxxedu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"[[github](https://github.com/wxxedu)]","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"[[portfolio](team/wxxedu.md)]","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"tangyuantyy"},"content":"* Responsibilities: Testing + Integration","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"tangyuantyy"},"content":"### Yuanyuan","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"\u003cimg src\u003d\"images/tangyuantyy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"tangyuantyy"},"content":"[[github](http://github.com/tangyuantyy)]","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"tangyuantyy"},"content":"[[portfolio](team/tangyuantyy.md)]","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"jishnu28":5,"tangyuantyy":23,"wxxedu":4,"-":28}},{"path":"docs/CheckList.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"# Check List ","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"Here are some of the problems that we will need to look through.","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"- [ ] The equality comparison of `ModelManager`","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"wxxedu":5}},{"path":"docs/Configuration.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-06-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Configuration guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"Certain properties of the application can be controlled (e.g user","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"preferences file location, logging level) through the configuration file","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"(default: `config.json`).","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"wxxedu":3,"-":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"## User Guide","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"* has a need to manage a significant number of flights, pilots and crews","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"**Value proposition**: Airline managers will be able to take labor, welfare, and","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"resource optimization","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"into consideration such that they can assign tasks to the most appropriate crew","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"based on their location","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"and availability while optimizing their staff’s physical well-being.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"unlikely to have) - `*`","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"| Priority | As a …​         | I want to …​                                                    | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"| -------- |-----------------|-----------------------------------------------------------------| ---------------------------------------------------------------------- |","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"| `* * *`  | airline manager | add new locations to the list of locations where we operate     | I can assign new departing locations and arrival locations |","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"| `* * *`  | airline manager | list old locations from the locations where we were operating   |    I can view all the locations    |","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"| `* * *`  | airline manager | remove old locations from the locations where we were operating | I can update departing locations and arrival locations |","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"| `* * *`  | airline manager | add crew to our workforce                                       | I can assign them to flights |","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"| `* * *`  | airline manager | list crew from our workforce                                    | I can view all the crew |","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"| `* * *`  | airline manager | delete crew from our workforce                                  | I can remove them from flights |","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"| `* * *`  | airline manager | add new planes to our fleet                                     | I can assign them to flights                               |","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"| `* * *`  | airline manager | list planes from our fleet                                      | I can view all the planes in our fleet                     |","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"| `* * *`  | airline manager | remove old planes from our fleet                                | I can update planes which can be used for flights          |","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"| `* * *`  | airline manager | add new pilots to the crew list                                 | I can assign flights to pilots                             |","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"| `* * *`  | airline manager | remove pilots from the locations                                | I can retire some pilots                                   |","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | add a new flight to the scheduled flights                       | know what flights are upcoming                 |","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | remove a flight from the scheduled flights                      | know what flights are upcoming                 |","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"| `* * *`  | airline manager | list the scheduled flights                                      | view all the upcoming flights                  |","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"(For all use cases below, the **System** is the `Wingman` and the **Actor**","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"tangyuantyy"},"content":"**Use case: Delete a location**","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"tangyuantyy"},"content":"1.  User requests to list locations","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"tangyuantyy"},"content":"2.  Wingman shows a list of locations","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"tangyuantyy"},"content":"3. User requests to delete a specific location in the list","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"tangyuantyy"},"content":"4. Wingman deletes the location","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"tangyuantyy"},"content":"5. User request to add a location","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"tangyuantyy"},"content":"6. Wingman adds the location","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"tangyuantyy"},"content":"* 3a. The given location is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"tangyuantyy"},"content":"* 5b. The given location is a duplicate of an existing one","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"tangyuantyy"},"content":"    * 5b1. Wingman shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"tangyuantyy"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"tangyuantyy"},"content":"**Use case: Delete a crew**","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"tangyuantyy"},"content":"**MSS**","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"tangyuantyy"},"content":"1.  User requests to list crew","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"tangyuantyy"},"content":"2.  Wingman shows a list of crew","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"tangyuantyy"},"content":"3.  User requests to delete a specific crew in the list","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"tangyuantyy"},"content":"4.  Wingman deletes the crew","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"tangyuantyy"},"content":"5.  User request to add a crew","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"tangyuantyy"},"content":"6.  Wingman adds the crew","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"tangyuantyy"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"tangyuantyy"},"content":"**Extensions**","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"tangyuantyy"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"tangyuantyy"},"content":"  Use case ends.","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"tangyuantyy"},"content":"* 3a. The given crew is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"tangyuantyy"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"tangyuantyy"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"tangyuantyy"},"content":"* 5b. The given crew is a duplicate of an existing one","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"tangyuantyy"},"content":"    *  5b1. Wingman shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"tangyuantyy"},"content":"       Use case resumes at step 4.","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"tangyuantyy"},"content":"    *  5b1. Wingman shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"tangyuantyy"},"content":"       Use case resumes at step 4.","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"cetigerlily"},"content":"**Use case: Delete a plane**","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"cetigerlily"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"cetigerlily"},"content":"1.  User requests to list planes","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"cetigerlily"},"content":"2.  Wingman shows a list of planes","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"cetigerlily"},"content":"3.  User requests to delete a specific plane in the list","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"cetigerlily"},"content":"4.  Wingman deletes the plane","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"cetigerlily"},"content":"5.  User request to add a plane","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"cetigerlily"},"content":"6.  Wingman adds the plane","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"cetigerlily"},"content":"    Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"cetigerlily"},"content":"**Extensions**","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"cetigerlily"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"cetigerlily"},"content":"  Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"cetigerlily"},"content":"* 3a. The given plane is invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"cetigerlily"},"content":"    * 3a1. The AddressBook shows an error message. Use case resumes at step 2.","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"cetigerlily"},"content":"* 5b. The given plane is a duplicate of an existing plane.","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"cetigerlily"},"content":"    * 5b1. Wingman shows an error message. Use case resumes at step 4.","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"**Use case: Add a pilot**","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"1. User requests to add a pilot","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"2. User specifies the basic information of the pilot","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"3. Wingman adds the pilot","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"* 2a. The given pilot is invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"    * 2a1. Wingman shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"* 3a. The given pilot is a duplicate of an existing one","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"    * 3a1. Wingman shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"**Use case: Delete a pilot**","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"1. User requests to delete a specific pilot in the list","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"2. Wingman deletes the pilot","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"3. User request to add a pilot","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"4. Wingman adds the pilot","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"jishnu28"},"content":"**Use case: Add a flight**","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"jishnu28"},"content":"**MSS:**","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"jishnu28"},"content":"1.  User chooses \u0027flight\u0027 mode","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"jishnu28"},"content":"2.  Wingman shows a list of scheduled flights","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"jishnu28"},"content":"3.  User enters details of the new flight to add to schedule","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"jishnu28"},"content":"4.  Wingman adds the details of the new flight to list of scheduled flights","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"jishnu28"},"content":"**Extensions:**","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"jishnu28"},"content":"* 3a. The given flight details are invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"jishnu28"},"content":"    * 3a1. Wingman shows an error message and an example of a correct command.","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      *{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-02-27"},{"lineNumber":175,"author":{"gitId":"tangyuantyy"},"content":"2.  Should be able to hold up to 100 flights, crews, and pilots without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-02-27"},{"lineNumber":177,"author":{"gitId":"tangyuantyy"},"content":"4.  The system should respond within a second.","lastModifiedDate":"2023-02-27"},{"lineNumber":178,"author":{"gitId":"tangyuantyy"},"content":"5.  The data should be stored locally and should be in a human editable text file.","lastModifiedDate":"2023-02-27"},{"lineNumber":179,"author":{"gitId":"jishnu28"},"content":"6. Should work without requiring an installer or a remote server","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"jishnu28"},"content":"7. Should be for a single user and should not have any shared file storage mechanism","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"BoAi01"},"content":"* **Location**: A unit place that flights may depart from or arrive at.","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"tangyuantyy"},"content":"* **Crew**: A unit person who can be added to or deleted from a flight.","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"* **Pilot**: Someone that is certified to fly an aircraft.","lastModifiedDate":"2023-02-28"},{"lineNumber":189,"author":{"gitId":"tangyuantyy"},"content":"* **Plane**: A unit plane which can be assigned to flights.","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"jishnu28"},"content":"* **Flight**: An activity with start and end locations, to which pilots, planes and crew can be assigned.","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"BoAi01":7,"jishnu28":16,"cetigerlily":19,"wxxedu":27,"tangyuantyy":39,"-":84}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"Wingman is a **modal** manager for managing airplanes, pilots, crews, flights,","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"and locations. It seeks to provide a highly efficient way of resource","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"management for airline managers.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"-------------------------------------------------------------------------------","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"## Modal Editing","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"In Wingman, there are 5 different modes underwhich the app is operating:","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"- `location` mode: the mode in which an airline manager manages the","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"  locations that the company is operating at.","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"- `plane` mode: the mode in which an airline manager manages the planes","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"  that the company is operating.","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"- `flight` mode: the mode in which the airline manager manages the flights","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"  that the company will carry out.","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"- `pilot` mode: the mode in which the airline manager manages its pilots.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"- `crew` mode: the mode in which the airline manager manages its crews.","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"Different modes offer similar APIs, with differences catered to the subject","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"that the mode is managing. Users can switch to different modes by typing the","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"corresponding mode name in the very beginning. For example:","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"plane","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"would switch the user to the plane mode.","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"## Shared Commands","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"### `add [{param_type} {param_val}]`","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"This commands adds an entity of the current mode to the database. For example,","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"if the user is currently in the `plane` mode, then this command will add a new","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"`plane` to the database. It shall be noted, however, that the params passed in","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"in different modes are different.","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"#### Add a `location`","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"To add a `location` to the locations on which the airline is currently","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"operating, the user will need to ensure that he is in the `location` mode.","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"Params:","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"- `/name`: the name of the location.","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"Example:","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"add /name SIN","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"add /name ZRH","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"add /name KUL","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"add /name PVG","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"add /name NKG","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"#### Add a `plane`","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"To add a `plane` to the fleet, the user will need to ensure that he is in the","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"`plane` mode.","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"Params:","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"- `/model`: the model of the plane.","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"- `/mdate`: the date that this plane was manufactured. This should be of the","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"  format `YYYY-MM-DD`, i.e. `2023-01-01`.","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"add /model B737 /mdate 2023-01-01","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"add /model A380 /mdate 2012-07-21","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"#### Add a `flight`","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"To add a `flight` to the fleet, the user will need to ensure that the software","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"is in the `flight` mode.","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"Params:","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"- `/num`: the flight number of the flight.","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"add /num SQ830","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"add /num LX200","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"add /num NH802","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"#### Add a `pilot`","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"To add a `pilot` to the fleet, the user will need to ensure that the software","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"is in the `pilot` mode.","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"Params:","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"- `/name`: the name of the pilot.","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"Optional Params:","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"- `/rank`: the rank of the pilot. Possible values:","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"    - `1`: Training Captain,","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"    - `2`: Captain,","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    - `3`: Senior,","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"    - `4`: First Officer,","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"    - `5`: Second Officer,","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"    - `6`: Cadet.","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"- `/age`: the age of the captain.","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"- `/gender`: the gender of the pilot. Possible values:","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"    - `male`","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"    - `female`","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"    - `other`","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"- `/fh`: the flight hours of the pilot.","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"Examples:","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"add /name Len Beong /rank 1","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"add /name Hartin Menz /rank 2 /age 39 /gender male /fh 5000","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"#### Add a `crew`","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"TO add a `crew` to the fleet, the user will need to ensure that the software is","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"in the `crew` mode.","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"Params:","lastModifiedDate":"2023-02-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"- `/name`: the name of the crew","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"Optional Params:","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"- `/age`: the age of the crew","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"- `/gender`: the gender of the crew. Possible values:","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"    - `male`","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"    - `female`","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"    - `other`","lastModifiedDate":"2023-02-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"### `delete {index}`","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"This command will delete the corresponding model from the database. For","lastModifiedDate":"2023-02-19"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"example, if the user wishes to delete the first plane, then he will need to","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"make sure that the software is in the `plane` mode, and then he will need to","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"type the command:","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"delete 1","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"Then the plane would be removed from the fleet.","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"## Mode-specific Commands","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"\u003e This part is beyond the scope of v1.2, and we will update this once we build","lastModifiedDate":"2023-02-19"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"\u003e features related to this part.","lastModifiedDate":"2023-02-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"## Application Commands","lastModifiedDate":"2023-02-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"### `exit`","lastModifiedDate":"2023-02-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"This will exit the program.","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"Ask us questions so that we can have a FAQ.","lastModifiedDate":"2023-02-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"## Command Summary","lastModifiedDate":"2023-02-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"| **Action** | **Format**                               | **Examples**    |","lastModifiedDate":"2023-02-19"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"|------------|------------------------------------------|-----------------|","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"| Add        | `add [{parameter_type} {parameter_val}]` | `add /name Bob` |","lastModifiedDate":"2023-02-19"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"| Delete     | `delete {index}`                         | `delete 1`      |","lastModifiedDate":"2023-02-19"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"| Exit       | `exit`                                   | `exit`          |","lastModifiedDate":"2023-02-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"wxxedu":118,"-":67}},{"path":"docs/dev/Parsing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"# Parsing","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"## Overview","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"At its core, Wingman is a modal editor for managing planes, pilots, crew,","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"flights, and locations. To achieve this modal approach,","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"Wingman adopts a 2-level parsing strategy. The top level is managed inside a","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"class called `WingmanParser`. Inside this class, it does two types of parsing:","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"1. Top-level command parsing: parses the commands that do not follow any","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"   logical grouping. For example, since Wingman is a `modal` editor, the","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"   change of mode does not belong to any logical grouping, therefore it","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"   should be parsed at the top level.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"2. Grouped command parsing: delegates the parsing of the commands that","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"   belong to a certain logical grouping to the `CommandGroup` class of that","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"   logical grouping.","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"The second level of parsing happens inside the `CommandGroup` class. This","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"class does a parsing of the commands similar to the 1. above. Because the","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"features are similar, a base class `FactoryParser` is created to reduce code","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"duplication.","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"In designing the parsing logic, composition is preferred over inheritance,","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"as inheritance makes the code less readable, increases the coupling between","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"different classes, and makes it harder to test.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"## Parsing Logic","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"### Step 1: Tokenization","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"The first step in the parsing process is to \"tokenize\" the input string into","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"a list of tokens. Here, since our parsing logic is simple, we do the","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"tokenization simply by splitting the input string by white spaces.","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"We use a `Deque` structure to store the tokens. The benefit of this is that","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"we can easily pop the first token from the list, and this would take $O(1)$","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"time as compared to $O(n)$ time for a `List`.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"The tokenization process is done in the `WingmanParser` class, inside the","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"private method `tokenize`.","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"### Step 2: Delegating to the `CommandGroup` class","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"If we ignore the top-level commands, the next step in the parsing process is","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"to delegate the parsing logic to the `CommandGroup` class. This is done","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"based on the current `OperationMode` of the application. The `OperationMode`","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"is an enum that represents the current mode of the application. It has five","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"different values:","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"- `PILOT`: the application is used to manage pilots.","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"- `PLANE`: the application is used to manage planes.","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"- `CREW`: the application is used to manage crew.","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"- `FLIGHT`: the application is used to manage flights.","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"- `LOCATION`: the application is used to manage locations.","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"If the current `OperationMode` is `PILOT`, then the tokens would be passed","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"down to the `CommandGroup` class of the `PILOT` mode.","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"### Step 3: Delegating to the `CommandFactory` class","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"Our next step is to delegate the parsing logic to the `CommandFactory`","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"objects. A `CommandFactory` object is a class that is responsible for","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"creating new `Command` objects. They are responsible for parsing the tokens","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"that are needed for the creation of the `Command` object, and then create","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"the respective `Command` object.","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"The logic of this delegation process is done in the super class, in a method","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"called `parseFactory`. This method takes in a `Deque` of tokens, peeks at","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"the top of the `Deque` as the command word, and matches it with the","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"`getCommandWord()` method of the `CommandFactory` objects. If there is a","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"match, it would pass the `Deque` of tokens and the `getPrefixes()` method of","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"the `CommandFactory` object to the `from` factory constructor of the","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"`CommandParam` class.","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"### Step 4: Extracting the values of prefixes","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"This step is done in the `CommandParam` class. More specifically, it is done","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"statically in the `from` factory constructor. It will take an optional set","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"of tokens and a deque of prefixes, and return a `CommandParam` object that","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"contains the unnamed and named parameters.","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"The unnamed parameters are extracted by reading from the start of the `Deque`","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"of tokens until either the end of the `Deque` is reached, or a token that","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"matches a prefix is found. The named parameters are extracted by reading from","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"the start of the `Deque` of tokens until either the end of the `Deque` is","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"reached, or a token that matches another prefix is found. **Currently,","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"duplicated prefixes are not allowed.**","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"### Step 5: Creating the `Command` object","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"This step is done in the `CommandFactory` class. More specifically, it is","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"done in the `create` method. It takes in a `CommandParam` object, and then","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"it will create the respective `Command` object.","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"## Implementing a new command","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"To implement a new command, we need to do the following:","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"1. Create a new `Command` class that extends the `Command` class.","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"2. Create a new `CommandFactory` class that extends the `CommandFactory`","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"   class with a generic type of the command class that we created in step 1.","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"3. Add the `CommandFactory` object to the `CommandGroup` class of the","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"   respective mode, which can be found in the `WingmanParser` class.","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":103}},{"path":"docs/team/boai01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"layout: page","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"title: Ai Bo\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"### Project: Wingman","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"Wingman - Wingman is an application designed to help airline managers efficiently manage the allocation of their resources.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":" ---  the rest are not updated","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"* **New Feature**: NA.","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"* **New Feature**: NA.","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"*","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dboai01\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"* **Project management**:","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"  * NA","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"  * NA","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"  * User Guide: NA","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"* **Community**: NA","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"* **Tools**: NA","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"BoAi01":49}},{"path":"docs/team/cetigerlily.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"layout: page","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"title: Celeste Cheah\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"### Project: Wingman","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"Wingman is an application designed to help airline managers efficiently manage the allocation of their resources.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"cetigerlily":9}},{"path":"docs/team/jishnu28.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"layout: page","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"title: Jishnu\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"# Project: Wingman","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"## Overview:","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"Wingman is an application designed to help airline managers efficiently manage the allocation of their resources.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"## Summary of Contributions","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"### Code contributed:","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"### Enhancements implemented:","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"### Contributions to the UG:","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"### Contributions to the DG:","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"### Contributions to team-based-tasks:","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"TBC","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"* Link to PPP requirements: https://nus-cs2103-ay2223s2.github.io/website/schedule/week7/project.html#4-add-a-skeletal-ppp","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"* _{you can add/remove categories in the list below}","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"* **Project management**:","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"  * User Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"jishnu28"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"jishnu28"},"content":"* **Community**:","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"jishnu28"},"content":"* **Tools**:","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"jishnu28"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"jishnu28"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo_","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jishnu28":73}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"title: Xiuxuan Wang\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"### Project: Wingman","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"Wingman is an application designed to help airline managers efficiently manage","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"the allocation of their resources.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"**Code Contributed**:","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"[Click Here](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dwxxedu\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"* **New Feature**:","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"* **Code contributed**:","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wxxedu":8,"-":19}},{"path":"docs/team/tangyuantyy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"# Yuanyuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"### Project: Wingman","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"Wingman is an application designed to help airline managers efficiently manage the allocation of their resources.","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"* **Project management**:","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"  * User Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"* **Community**:","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"* **Tools**:","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"tangyuantyy":43}},{"path":"docs/team/wxxedu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"layout: page","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"title: Wang Xiuxuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"* **Project management**:","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"  * User Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"* **Community**:","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"* **Tools**:","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"wxxedu":46}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"wxxedu":1,"-":400}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.Crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"import seedu.address.model.flight.Flight;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.location.Location;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.Pilot;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.model.plane.Plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.ItemStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.storage.json.storage.JsonCrewManagerStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"import seedu.address.storage.json.storage.JsonFlightManagerStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.storage.JsonLocationManagerStorage;","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"import seedu.address.storage.json.storage.JsonPilotManagerStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.storage.json.storage.JsonPlaneManagerStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Wingman ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"        ItemStorage\u003cPilot\u003e pilotStorage \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"            new JsonPilotManagerStorage(userPrefs.getPilotManagerFilePath());","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"        ItemStorage\u003cLocation\u003e locationStorage \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"                new JsonLocationManagerStorage(userPrefs.getLocationManagerFilePath());","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"        ItemStorage\u003cCrew\u003e crewStorage \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"tangyuantyy"},"content":"                new JsonCrewManagerStorage(userPrefs.getCrewManagerFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"        ItemStorage\u003cPlane\u003e planeStorage \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"cetigerlily"},"content":"                new JsonPlaneManagerStorage(userPrefs.getPlaneManagerFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"        ItemStorage\u003cFlight\u003e flightStorage \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"                new JsonFlightManagerStorage(userPrefs.getFlightManagerFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"        storage \u003d new StorageManager(userPrefsStorage, pilotStorage, locationStorage,","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"jishnu28"},"content":"                crewStorage, planeStorage, flightStorage);","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"     * Read pilot manager from data.","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"     * @param storage the storage object","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"     * @return the pilot manager","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"    private ReadOnlyItemManager\u003cPilot\u003e readPilotManager(Storage storage) {","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"        ReadOnlyItemManager\u003cPilot\u003e pilotManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"        Optional\u003c? extends ReadOnlyItemManager\u003cPilot\u003e\u003e pilotManagerOptional;","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"            pilotManagerOptional \u003d storage.readPilotManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"            if (pilotManagerOptional.isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"                logger.info(\"Data file for pilot manager not found.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"                pilotManager \u003d new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"            } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"                pilotManager \u003d pilotManagerOptional.get();","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"        } catch (DataConversionException | IOException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"            logger.info(\"Exception caught while reading data file for storage manager: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"                    + e.toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"            pilotManager \u003d new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"        return pilotManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"     * Read location manager from data.","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"     * @param storage the storage object","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"     * @return the location manager","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"    private ReadOnlyItemManager\u003cLocation\u003e readLocationManager(Storage storage) {","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"        ReadOnlyItemManager\u003cLocation\u003e locationManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"        Optional\u003c? extends ReadOnlyItemManager\u003cLocation\u003e\u003e locationManagerOptional;","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"BoAi01"},"content":"            locationManagerOptional \u003d storage.readLocationManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"BoAi01"},"content":"            if (locationManagerOptional.isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"BoAi01"},"content":"                logger.info(\"Data file for location manager not found.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"BoAi01"},"content":"                locationManager \u003d new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"            } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"BoAi01"},"content":"                locationManager \u003d locationManagerOptional.get();","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"BoAi01"},"content":"        } catch (DataConversionException | IOException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"BoAi01"},"content":"            logger.info(\"Exception caught while reading data file for location manager: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"BoAi01"},"content":"                    + e.toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"            locationManager \u003d new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"BoAi01"},"content":"        return locationManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"     * Read crew manager from data.","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"     * @param storage the storage object","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"     * @return the crew manager","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"    private ReadOnlyItemManager\u003cCrew\u003e readCrewManager(Storage storage) {","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"        ReadOnlyItemManager\u003cCrew\u003e crewManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"        Optional\u003c? extends ReadOnlyItemManager\u003cCrew\u003e\u003e crewManagerOptional;","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"            crewManagerOptional \u003d storage.readCrewManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"            if (crewManagerOptional.isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"                logger.info(\"Data file for crew manager not found.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"                crewManager \u003d new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"            } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"BoAi01"},"content":"                crewManager \u003d crewManagerOptional.get();","lastModifiedDate":"2023-03-07"},{"lineNumber":152,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"BoAi01"},"content":"        } catch (DataConversionException | IOException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":154,"author":{"gitId":"BoAi01"},"content":"            logger.info(\"Exception caught while reading data file for crew manager: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"BoAi01"},"content":"                    + e.toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"BoAi01"},"content":"            crewManager \u003d new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":158,"author":{"gitId":"BoAi01"},"content":"        return crewManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":160,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"BoAi01"},"content":"     * Read plane manager from data.","lastModifiedDate":"2023-03-07"},{"lineNumber":163,"author":{"gitId":"BoAi01"},"content":"     * @param storage the storage object","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"BoAi01"},"content":"     * @return the plane manager","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"BoAi01"},"content":"    private ReadOnlyItemManager\u003cPlane\u003e readPlaneManager(Storage storage) {","lastModifiedDate":"2023-03-07"},{"lineNumber":167,"author":{"gitId":"BoAi01"},"content":"        ReadOnlyItemManager\u003cPlane\u003e planeManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"BoAi01"},"content":"        Optional\u003c? extends ReadOnlyItemManager\u003cPlane\u003e\u003e crewManagerOptional;","lastModifiedDate":"2023-03-07"},{"lineNumber":169,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":170,"author":{"gitId":"BoAi01"},"content":"            crewManagerOptional \u003d storage.readPlaneManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"            if (crewManagerOptional.isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":172,"author":{"gitId":"BoAi01"},"content":"                logger.info(\"Data file for plane manager not found.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"BoAi01"},"content":"                planeManager \u003d new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"            } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"BoAi01"},"content":"                planeManager \u003d crewManagerOptional.get();","lastModifiedDate":"2023-03-07"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":177,"author":{"gitId":"BoAi01"},"content":"        } catch (DataConversionException | IOException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"BoAi01"},"content":"            logger.info(\"Exception caught while reading data file for plane manager: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"                    + e.toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"            planeManager \u003d new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"BoAi01"},"content":"        return planeManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":183,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":184,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":185,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":186,"author":{"gitId":"BoAi01"},"content":"     * Read flight manager from data.","lastModifiedDate":"2023-03-07"},{"lineNumber":187,"author":{"gitId":"BoAi01"},"content":"     * @param storage the storage object","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"BoAi01"},"content":"     * @return flight plane manager","lastModifiedDate":"2023-03-07"},{"lineNumber":189,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":190,"author":{"gitId":"BoAi01"},"content":"    private ReadOnlyItemManager\u003cFlight\u003e readFlightManager(Storage storage) {","lastModifiedDate":"2023-03-07"},{"lineNumber":191,"author":{"gitId":"BoAi01"},"content":"        ReadOnlyItemManager\u003cFlight\u003e flightManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":192,"author":{"gitId":"BoAi01"},"content":"        Optional\u003c? extends ReadOnlyItemManager\u003cFlight\u003e\u003e flightManagerOptional;","lastModifiedDate":"2023-03-07"},{"lineNumber":193,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":194,"author":{"gitId":"BoAi01"},"content":"            flightManagerOptional \u003d storage.readFlightManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":195,"author":{"gitId":"BoAi01"},"content":"            if (flightManagerOptional.isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":196,"author":{"gitId":"BoAi01"},"content":"                logger.info(\"Data file for flight manager not found.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"BoAi01"},"content":"                flightManager \u003d new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":198,"author":{"gitId":"BoAi01"},"content":"            } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":199,"author":{"gitId":"BoAi01"},"content":"                flightManager \u003d flightManagerOptional.get();","lastModifiedDate":"2023-03-07"},{"lineNumber":200,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":201,"author":{"gitId":"BoAi01"},"content":"        } catch (DataConversionException | IOException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":202,"author":{"gitId":"BoAi01"},"content":"            logger.info(\"Exception caught while reading data file for flight manager: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"BoAi01"},"content":"                    + e.toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"BoAi01"},"content":"            flightManager \u003d new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":205,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":206,"author":{"gitId":"BoAi01"},"content":"        return flightManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":207,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"BoAi01"},"content":"        ReadOnlyItemManager\u003cPilot\u003e pilotManager \u003d readPilotManager(storage);","lastModifiedDate":"2023-03-07"},{"lineNumber":217,"author":{"gitId":"BoAi01"},"content":"        ReadOnlyItemManager\u003cLocation\u003e locationManager \u003d readLocationManager(storage);","lastModifiedDate":"2023-03-07"},{"lineNumber":218,"author":{"gitId":"BoAi01"},"content":"        ReadOnlyItemManager\u003cCrew\u003e crewManager \u003d readCrewManager(storage);","lastModifiedDate":"2023-03-07"},{"lineNumber":219,"author":{"gitId":"BoAi01"},"content":"        ReadOnlyItemManager\u003cPlane\u003e planeManager \u003d readPlaneManager(storage);","lastModifiedDate":"2023-03-07"},{"lineNumber":220,"author":{"gitId":"BoAi01"},"content":"        ReadOnlyItemManager\u003cFlight\u003e flightManager \u003d readFlightManager(storage);","lastModifiedDate":"2023-03-07"},{"lineNumber":221,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":222,"author":{"gitId":"jishnu28"},"content":"        return new ModelManager(userPrefs,","lastModifiedDate":"2023-03-11"},{"lineNumber":223,"author":{"gitId":"jishnu28"},"content":"                                pilotManager, locationManager, crewManager, planeManager, flightManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                               + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                               + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"jishnu28"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Wingman ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-11"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BoAi01":136,"jishnu28":9,"cetigerlily":4,"tangyuantyy":3,"wxxedu":3,"-":158}},{"path":"src/main/java/seedu/address/commons/models/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.commons.models;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * Represents a pair of objects.","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * @param \u003cA\u003e the type of the first object","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * @param \u003cB\u003e the type of the second object","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"public class Pair\u003cA, B\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    private final A first;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    private final B second;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * Creates a pair of objects.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * @param first  the first object","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * @param second the second object","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    public Pair(A first, B second) {","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        this.first \u003d first;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        this.second \u003d second;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * Returns the first object.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * @return the first object","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public A getFirst() {","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        return first;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * Returns the second object.","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @return the second object","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    public B getSecond() {","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        return second;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":41}},{"path":"src/main/java/seedu/address/commons/util/AppHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * This class is here to replace the {@code AppUtil} class in the original","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * AB3 codebase. It will not use static methods, and will instead use","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * a singleton pattern.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"public class AppHelper {","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     * The singleton instance of this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    public static final AppHelper INSTANCE;","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    static {","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"        INSTANCE \u003d new AppHelper();","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    private AppHelper() {","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * @see AppUtil#getImage(String)","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    public Image getImage(String imagePath) {","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"        return AppUtil.getImage(imagePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * @see AppUtil#checkArgument(Boolean)","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    public void checkArgument(Boolean condition) {","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        AppUtil.checkArgument(condition);","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * @see AppUtil#checkArgument(Boolean)","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    public void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        AppUtil.checkArgument(condition, errorMessage);","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":44}},{"path":"src/main/java/seedu/address/commons/util/CollectionHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * The singleton instance that wraps around the {@code CollectionUtil} class.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"public class CollectionHelper {","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * The singleton instance of this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    public static final CollectionHelper INSTANCE;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    static {","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"        INSTANCE \u003d new CollectionHelper();","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    private CollectionHelper() {","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * @see CollectionUtil#requireAllNonNull(Object...)","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public void requireAllNonNull(Object... items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        CollectionUtil.requireAllNonNull(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * @see CollectionUtil#requireAllNonNull(Collection)","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    public void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        CollectionUtil.requireAllNonNull(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @see CollectionUtil#isAnyNonNull(Object...)","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    public boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        return CollectionUtil.isAnyNonNull(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":41}},{"path":"src/main/java/seedu/address/commons/util/ConfigHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * The singleton instance that wraps around the {@code ConfigUtil} class.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"public class ConfigHelper {","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * The singleton instance of this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    public static final ConfigHelper INSTANCE;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    static {","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        INSTANCE \u003d new ConfigHelper();","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    private ConfigHelper() {","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * @see ConfigUtil#readConfig(Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @see ConfigUtil#saveConfig(Config, Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    public void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":39}},{"path":"src/main/java/seedu/address/commons/util/FileHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * The singleton instance that wraps around the {@code FileUtil} class.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"public class FileHelper {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     * The singleton instance of this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    public static final FileHelper INSTANCE;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    static {","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"        INSTANCE \u003d new FileHelper();","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    private FileHelper() {","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#isFileExists(Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    public boolean isFileExists(Path filePath) {","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        return FileUtil.isFileExists(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#isValidPath(String)","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    public boolean isValidPath(String filePath) {","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"        return FileUtil.isValidPath(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#createIfMissing(Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    public void createIfMissing(Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#createFile(Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    public void createFile(Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createFile(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#createParentDirsOfFile(Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    public void createParentDirsOfFile(Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        FileUtil.createParentDirsOfFile(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#readFromFile(Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    public String readFromFile(Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        return FileUtil.readFromFile(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     * @see FileUtil#writeToFile(Path, String)","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    public void writeToFile(Path filePath, String content) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        FileUtil.writeToFile(filePath, content);","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":70}},{"path":"src/main/java/seedu/address/commons/util/JsonHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * The singleton instance that wraps around the {@code JsonUtil} class.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"public class JsonHelper {","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * The singleton instance of this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public static final JsonHelper INSTANCE;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    static {","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        INSTANCE \u003d new JsonHelper();","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    private JsonHelper() {","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * @see JsonUtil#readJsonFile(Path, Class)","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    public \u003cT\u003e Optional\u003cT\u003e readJsonFile(Path filePath, Class\u003cT\u003e clazz)","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException {","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        return JsonUtil.readJsonFile(filePath, clazz);","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @see JsonUtil#saveJsonFile(Object, Path)","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    public \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        JsonUtil.saveJsonFile(jsonFile, filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * @see JsonUtil#fromJsonString(String, Class)","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    public \u003cT\u003e T fromJsonString(String jsonString, Class\u003cT\u003e clazz) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        return JsonUtil.fromJsonString(jsonString, clazz);","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * @see JsonUtil#toJsonString(Object)","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    public \u003cT\u003e String toJsonString(T jsonFile) throws JsonProcessingException {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        return JsonUtil.toJsonString(jsonFile);","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":55}},{"path":"src/main/java/seedu/address/commons/util/StringHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The singleton instance that wraps around the {@code StringUtil} class.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class StringHelper {","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * The singleton instance of this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    public static final StringHelper INSTANCE;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    static {","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"        INSTANCE \u003d new StringHelper();","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    private StringHelper() {","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * @see StringUtil#containsWordIgnoreCase(String, String)","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    public boolean containsWordIgnoreCase(String source, String word) {","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"        return StringUtil.containsWordIgnoreCase(source, word);","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * @see StringUtil#getDetails(Throwable)","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public String getDetails(Throwable throwable) {","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        return StringUtil.getDetails(throwable);","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @see StringUtil#isNonZeroUnsignedInteger(String)","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    public boolean isNonZeroUnsignedInteger(String test) {","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        return StringUtil.isNonZeroUnsignedInteger(test);","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":39}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.OperationMode;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * Gets the filtered list of items.","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     * @return the filtered list of items.","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    ObservableList\u003cItem\u003e getFilteredItemList();","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * Gets the current operation mode.","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     * @return the current operation mode.","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    OperationMode getOperationMode();","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"BoAi01":2,"wxxedu":12,"-":34}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.Command;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.WingmanParser;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.OperationMode;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":" * TODO: remove the magic literals.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    private final WingmanParser parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * {@code Storage}.","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * @param model   the model to use.","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @param storage the storage to use.","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @param parser  the parser to use.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    public LogicManager(Model model, Storage storage, WingmanParser parser) {","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     * {@code Storage}, using the default {@code WingmanParser}.","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     * @param model   the model to use.","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * @param storage the storage to use.","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        this(model, storage, new WingmanParser());","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        final Command command \u003d parser.parse(getOperationMode(), commandText);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        final CommandResult result \u003d command.execute(model);","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        this.save();","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        return result;","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     * Saves the current state of the application to the storage.","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"     * @throws CommandException if there was an error during saving.","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    private void save() throws CommandException {","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"            switch (getOperationMode()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"            case PILOT:","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"                storage.savePilotManager(model.getPilotManager());","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"                break;","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"            case LOCATION:","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"                storage.saveLocationManager(model.getLocationManager());","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"                break;","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"            case PLANE:","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"cetigerlily"},"content":"                storage.savePlaneManager(model.getPlaneManager());","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"cetigerlily"},"content":"                break;","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"            case FLIGHT:","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"jishnu28"},"content":"                storage.saveFlightManager(model.getFlightManager());","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"jishnu28"},"content":"                break;","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"            case CREW:","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"tangyuantyy"},"content":"                storage.saveCrewManager(model.getCrewManager());","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"tangyuantyy"},"content":"                break;","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"            default:","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"                throw new CommandException(\"Unknown operation mode\");","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + e, e);","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"    public ObservableList\u003cItem\u003e getFilteredItemList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"        logger.info(\"Getting filtered item list: \" + model.getItemsList().size() + \" \"","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"                        + \"items\");","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        return model.getItemsList();","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"    public OperationMode getOperationMode() {","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"        return model.getOperationMode();","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"BoAi01":5,"jishnu28":2,"cetigerlily":2,"wxxedu":57,"tangyuantyy":2,"-":49}},{"path":"src/main/java/seedu/address/logic/core/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"public interface Command {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wxxedu":4,"-":14}},{"path":"src/main/java/seedu/address/logic/core/CommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * The factory that\u0027s responsible for creating a command.","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e the type of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"public interface CommandFactory\u003cT extends Command\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * Returns the command word of the command. For example, if the command","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * is to add an entity, then the command word may be \"add\". Every command","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * should have a command word.","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * @return the command word of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    String getCommandWord();","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * Gets the prefixes of the command. Prefixes are used to identify the","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * arguments of the command. If the command does not have any prefixes,","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * then return {@code Optional.empty()}.","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * @return the prefixes of the command, or {@code Optional.empty()} if","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     *     the command does not have any prefixes.","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    Optional\u003cSet\u003cString\u003e\u003e getPrefixes();","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * Creates a command with the given parameters.","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @param param the parameters of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @return the command created.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if the parameters are invalid.","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    T createCommand(CommandParam param) throws ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":41}},{"path":"src/main/java/seedu/address/logic/core/CommandGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.OperationMode;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * The group of commands.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"public class CommandGroup extends FactoryParser {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * The mode at which the command is executed.","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    private final OperationMode mode;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * The list of factories responsible for creating commands.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * Since we won\u0027t be having too many commands, using a list would be","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * faster than using a map.","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    private final List\u003cCommandFactory\u003c?\u003e\u003e factories;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * Creates a command group with the given mode and list of factories. A","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * command groups provides a logical grouping of the commands. Which","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * command group to use is determined by the current mode of the","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * software, hence this software being \"modal\". The specific resolution","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * of the command is handled inside the command group via its array of","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * factories.","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @param mode      the mode at which the command is executed.","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @param factories the list of factories responsible for creating commands.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    public CommandGroup(OperationMode mode, List\u003cCommandFactory\u003c?\u003e\u003e factories) {","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        this.mode \u003d mode;","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        this.factories \u003d factories;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"     * Parses the command and returns the resulting command object.","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     * @param tokens the tokens of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    public Command parse(Deque\u003cString\u003e tokens) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"        if (tokens.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(\"Tokens is empty\");","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        final Optional\u003cCommand\u003e result \u003d this.parseFactory(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        if (result.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(\"Unknown command in \" + this.mode);","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        return result.get();","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     * Returns the mode at which the command is executed.","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     * @return the mode at which the command is executed.","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    public OperationMode getOperationMode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        return mode;","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    protected List\u003cCommandFactory\u003c?\u003e\u003e getFactories() {","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        return factories;","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":74}},{"path":"src/main/java/seedu/address/logic/core/CommandParam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * Represents the parameters of a command.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"public class CommandParam {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * The unnamed token of the command, which is the part right after","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * command word and before the first prefix.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    private final Optional\u003cString\u003e unnamedValue;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * The named token of the command, which is the part right after","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * one prefix and before the next prefix.","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    private final Optional\u003cMap\u003cString, Optional\u003cString\u003e\u003e\u003e namedValues;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * Creates a command parameter from the given tokens. Note that this","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * function will not throw parser exception, but will instead return a","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * {@code CommandParam} with empty optional fields. It is the caller\u0027s","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * responsibility to check if the returned command parameter is valid,","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * because this class does not have enough context to provide a","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * meaningful exception message.","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * @param unnamedValue the unnamed token of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @param namedValues  the named token of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    public CommandParam(Optional\u003cString\u003e unnamedValue,","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cMap\u003cString, Optional\u003cString\u003e\u003e\u003e namedValues) {","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        this.unnamedValue \u003d unnamedValue;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        this.namedValues \u003d namedValues;","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * Creates a command parameter from the given tokens. Note that this","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     * function will not throw parser exception, but will instead return a","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * {@code CommandParam} with empty optional fields. It is the caller\u0027s","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     * responsibility to check if the returned command parameter is valid,","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * because this class does not have enough context to provide a","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * meaningful exception message.","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * @param tokens   the tokens of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     * @param prefixes the prefixes of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     * @return the command parameter created.","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    public static CommandParam from(Deque\u003cString\u003e tokens,","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cSet\u003cString\u003e\u003e prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        // special cases","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        if (tokens.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"            return new CommandParam(Optional.empty(),","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"                Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        if (prefixes.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"            return new CommandParam(","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"                Optional.of(String.join(\" \", tokens)),","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"                Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        // set up","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"        Set\u003cString\u003e prefixMap \u003d prefixes.get();","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        // handle the unnamed token","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e unnamedValue \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"            parseUnnamedValue(tokens, prefixMap);","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        // handle the named tokens","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e namedValues \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"            parseNamedValues(tokens, prefixMap);","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        return new CommandParam(unnamedValue, Optional.of(namedValues));","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"     * Parses the unnamed value from the given tokens. The unnamed value is","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"     * the part right after the command word and before the first prefix.","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     * Note that it is assumed that the tokens already have the command word","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"     * removed. The prefix set is used to determine when the unnamed value","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"     * ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     * @param tokens   the tokens of the command, with the command word","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     *                 removed.","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"     * @param prefixes the prefixes of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     * @return the unnamed value parsed.","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"    public static Optional\u003cString\u003e parseUnnamedValue(Deque\u003cString\u003e tokens,","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"        Set\u003cString\u003e prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"        if (tokens.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"        while (tokens.size() \u003e 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"            if (prefixes.contains(tokens.peek())) {","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"                break;","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"            builder.append(tokens.pop()).append(\" \");","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        if (builder.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"        return Optional.of(builder.toString().trim());","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"     * Parses the named values from the given tokens. The named values are","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"     * the parts right after the prefixes and before the next prefix. Note","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"     * that it is assumed that the tokens already have the command word","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"     * and the unnamed value removed.","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"     * @param tokens   the tokens of the command, with the command word and","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"     *                 the unnamed value removed.","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"     * @param prefixes the prefixes of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"     * @return the named values parsed.","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"    public static Map\u003cString, Optional\u003cString\u003e\u003e parseNamedValues(Deque\u003cString\u003e tokens,","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"        Set\u003cString\u003e prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        if (tokens.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"            return padNamedValues(new HashMap\u003c\u003e(), prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e namedValues \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"        String prefix \u003d tokens.pop();","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"        // just to be defensive, despite the assumption","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"        while (!prefixes.contains(prefix)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"            prefix \u003d tokens.pop();","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"        while (tokens.size() \u003e 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"            if (!prefixes.contains(tokens.peek())) {","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"                builder.append(tokens.pop()).append(\" \");","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"                continue;","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"            namedValues.put(prefix, Optional.of(builder.toString().trim()));","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"            prefix \u003d tokens.pop();","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"            builder.setLength(0);","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"        if (builder.length() \u003e 0) {","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"            namedValues.put(prefix, Optional.of(builder.toString().trim()));","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"        return padNamedValues(namedValues, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"     * Pad the named values with empty values for the prefixes that are not","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"     * present in the named values.","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"     * @param namedValues the named values to pad.","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"     * @param prefixes    the prefixes to pad.","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"     * @return the named values padded.","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"    private static Map\u003cString, Optional\u003cString\u003e\u003e padNamedValues(","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e namedValues, Set\u003cString\u003e prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"        for (String p : prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"            if (!namedValues.containsKey(p)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"                namedValues.put(p, Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"        return namedValues;","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"     * Returns the unnamed token of the command, which is the part right after","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"     * command word and before the first prefix.","lastModifiedDate":"2023-03-04"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"     * @return the unnamed token of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cString\u003e getUnnamedValue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"        return unnamedValue;","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"     * Gets the unnamed token of the command or throws an exception.","lastModifiedDate":"2023-03-04"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"    public String getUnnamedValueOrThrow(String message) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"        if (unnamedValue.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(message);","lastModifiedDate":"2023-03-04"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"        return unnamedValue.get();","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":186,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"     * Gets the unnamed token of the command or throws an exception.","lastModifiedDate":"2023-03-04"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"     * @return the unnamed token of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"     * @throws CommandException if the unnamed token is not present.","lastModifiedDate":"2023-03-04"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":193,"author":{"gitId":"wxxedu"},"content":"    public String getUnnamedValueOrThrow() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":194,"author":{"gitId":"wxxedu"},"content":"        return getUnnamedValueOrThrow(\"Missing unnamed value\");","lastModifiedDate":"2023-03-04"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"     * Returns the named token of the command, which is the part right after","lastModifiedDate":"2023-03-04"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"     * one prefix and before the next prefix.","lastModifiedDate":"2023-03-04"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"     * @return the named token of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":203,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cMap\u003cString, Optional\u003cString\u003e\u003e\u003e getNamedValues() {","lastModifiedDate":"2023-03-04"},{"lineNumber":204,"author":{"gitId":"wxxedu"},"content":"        // so that the caller cannot modify the named token","lastModifiedDate":"2023-03-04"},{"lineNumber":205,"author":{"gitId":"wxxedu"},"content":"        return namedValues.map(Map::copyOf);","lastModifiedDate":"2023-03-04"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":208,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":209,"author":{"gitId":"wxxedu"},"content":"     * Gets the value of the named token with the given prefix.","lastModifiedDate":"2023-03-04"},{"lineNumber":210,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":211,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cString\u003e getNamedValues(String prefix) {","lastModifiedDate":"2023-03-04"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"        if (namedValues.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":213,"author":{"gitId":"wxxedu"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":214,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":215,"author":{"gitId":"wxxedu"},"content":"        return namedValues.get().get(prefix);","lastModifiedDate":"2023-03-04"},{"lineNumber":216,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":219,"author":{"gitId":"wxxedu"},"content":"     * Gets the value of the named token with the given prefix or throws an exception.","lastModifiedDate":"2023-03-04"},{"lineNumber":220,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":221,"author":{"gitId":"wxxedu"},"content":"    public String getNamedValuesOrThrow(String prefix, String message) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":222,"author":{"gitId":"wxxedu"},"content":"        final Optional\u003cString\u003e value \u003d getNamedValues(prefix);","lastModifiedDate":"2023-03-04"},{"lineNumber":223,"author":{"gitId":"wxxedu"},"content":"        if (value.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":224,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(message);","lastModifiedDate":"2023-03-04"},{"lineNumber":225,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":226,"author":{"gitId":"wxxedu"},"content":"        return value.get();","lastModifiedDate":"2023-03-04"},{"lineNumber":227,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":229,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":230,"author":{"gitId":"wxxedu"},"content":"     * Gets the value of the named token with the given prefix or throws an exception.","lastModifiedDate":"2023-03-04"},{"lineNumber":231,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":232,"author":{"gitId":"wxxedu"},"content":"     * @see #getNamedValuesOrThrow(String, String)","lastModifiedDate":"2023-03-04"},{"lineNumber":233,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":234,"author":{"gitId":"wxxedu"},"content":"    public String getNamedValuesOrThrow(String prefix) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":235,"author":{"gitId":"wxxedu"},"content":"        return getNamedValuesOrThrow(prefix, \"Missing value for prefix \" + prefix);","lastModifiedDate":"2023-03-04"},{"lineNumber":236,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":237,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":238,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":239,"author":{"gitId":"wxxedu"},"content":"     * Gets the integer value of the unnamed token with the given prefix,","lastModifiedDate":"2023-03-04"},{"lineNumber":240,"author":{"gitId":"wxxedu"},"content":"     * else throws a {@code ParseException} with the given message.","lastModifiedDate":"2023-03-04"},{"lineNumber":241,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":242,"author":{"gitId":"wxxedu"},"content":"    public int getUnnamedIntOrThrow(String message) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":243,"author":{"gitId":"wxxedu"},"content":"        final String value \u003d getUnnamedValueOrThrow(message);","lastModifiedDate":"2023-03-04"},{"lineNumber":244,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":245,"author":{"gitId":"wxxedu"},"content":"            return Integer.parseInt(value);","lastModifiedDate":"2023-03-04"},{"lineNumber":246,"author":{"gitId":"wxxedu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":247,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(\"Invalid value for unnamed token: cannot \"","lastModifiedDate":"2023-03-04"},{"lineNumber":248,"author":{"gitId":"wxxedu"},"content":"                                         + \"parse \" + value + \" as integer: \" + e.getMessage());","lastModifiedDate":"2023-03-04"},{"lineNumber":249,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":250,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":251,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":252,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":253,"author":{"gitId":"wxxedu"},"content":"     * Gets the integer value of the unnamed token with the given prefix,","lastModifiedDate":"2023-03-04"},{"lineNumber":254,"author":{"gitId":"wxxedu"},"content":"     * else throws a {@code ParseException} with the given message.","lastModifiedDate":"2023-03-04"},{"lineNumber":255,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":256,"author":{"gitId":"wxxedu"},"content":"    public int getUnnamedIntOrThrow() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":257,"author":{"gitId":"wxxedu"},"content":"        return getUnnamedIntOrThrow(\"Missing unnamed value\");","lastModifiedDate":"2023-03-04"},{"lineNumber":258,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":259,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":260,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":261,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":262,"author":{"gitId":"wxxedu"},"content":"     * Gets the integer value of the named token with the given prefix or throws an exception.","lastModifiedDate":"2023-03-04"},{"lineNumber":263,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":264,"author":{"gitId":"wxxedu"},"content":"    public int getNamedIntOrThrow(String prefix, String message) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":265,"author":{"gitId":"wxxedu"},"content":"        final String value \u003d getNamedValuesOrThrow(prefix, message);","lastModifiedDate":"2023-03-04"},{"lineNumber":266,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":267,"author":{"gitId":"wxxedu"},"content":"            return Integer.parseInt(value);","lastModifiedDate":"2023-03-04"},{"lineNumber":268,"author":{"gitId":"wxxedu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":269,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(\"Invalid value for prefix \" + prefix + \": cannot \"","lastModifiedDate":"2023-03-04"},{"lineNumber":270,"author":{"gitId":"wxxedu"},"content":"                                         + \"parse \" + value + \" as integer: \" + e.getMessage());","lastModifiedDate":"2023-03-04"},{"lineNumber":271,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":272,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":273,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":274,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":275,"author":{"gitId":"wxxedu"},"content":"     * Gets the integer value of the named token with the given prefix or throws an exception.","lastModifiedDate":"2023-03-04"},{"lineNumber":276,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":277,"author":{"gitId":"wxxedu"},"content":"     * @see #getNamedIntOrThrow(String, String)","lastModifiedDate":"2023-03-04"},{"lineNumber":278,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":279,"author":{"gitId":"wxxedu"},"content":"    public int getNamedIntOrThrow(String prefix) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":280,"author":{"gitId":"wxxedu"},"content":"        return getNamedIntOrThrow(prefix, \"Missing value for prefix \" + prefix);","lastModifiedDate":"2023-03-04"},{"lineNumber":281,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":282,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":283,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":284,"author":{"gitId":"wxxedu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":285,"author":{"gitId":"wxxedu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":286,"author":{"gitId":"wxxedu"},"content":"            return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":287,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":288,"author":{"gitId":"wxxedu"},"content":"        if (!(other instanceof CommandParam)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":289,"author":{"gitId":"wxxedu"},"content":"            return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":290,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":291,"author":{"gitId":"wxxedu"},"content":"        CommandParam otherCommandParam \u003d (CommandParam) other;","lastModifiedDate":"2023-03-04"},{"lineNumber":292,"author":{"gitId":"wxxedu"},"content":"        return unnamedValue.equals(otherCommandParam.unnamedValue)","lastModifiedDate":"2023-03-04"},{"lineNumber":293,"author":{"gitId":"wxxedu"},"content":"                   \u0026\u0026 namedValues.equals(otherCommandParam.namedValues);","lastModifiedDate":"2023-03-04"},{"lineNumber":294,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":295,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":295}},{"path":"src/main/java/seedu/address/logic/core/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wxxedu":1,"-":70}},{"path":"src/main/java/seedu/address/logic/core/FactoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * The parser that delegates the parsing of the commands to the specific","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * factories.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"public abstract class FactoryParser {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * Gets the list of factories that this parser handles.","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * @return the list of factories that this parser handles.","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    protected abstract List\u003cCommandFactory\u003c?\u003e\u003e getFactories();","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * Parses the given tokens and returns the corresponding command. If","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * there is no command that matches the tokens, an empty optional is","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * returned.","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * @param tokens the tokens of the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * @return the command that matches the tokens.","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if the command is invalid.","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cCommand\u003e parseFactory(Deque\u003cString\u003e tokens) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"        if (tokens.isEmpty()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(\"Tokens is empty\");","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        String commandWord \u003d tokens.peek();","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        for (CommandFactory\u003c?\u003e factory : getFactories()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"            if (commandWord.equals(factory.getCommandWord())) {","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"                tokens.pop();","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"                final CommandParam param \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"                    CommandParam.from(tokens, factory.getPrefixes());","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"                return Optional.of(factory.createCommand(param));","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":48}},{"path":"src/main/java/seedu/address/logic/core/WingmanParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.crew.addcrew.AddCrewCommandFactory;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.crew.deletecrew.DeleteCrewCommandFactory;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.flight.addflight.AddFlightCommandFactory;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.flight.deleteflight.DeleteFlightCommandFactory;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.location.addlocation.AddLocationCommandFactory;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.location.deletelocation.DeleteLocationCommandFactory;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.pilot.addpilot.AddPilotCommandFactory;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.pilot.deletepilot.DeletePilotCommandFactory;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.plane.addplane.AddPlaneCommandFactory;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.plane.deleteplane.DeletePlaneCommandFactory;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.toplevel.changemode.ChangeModeCommandFactory;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.OperationMode;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":" * The parser that\u0027s responsible for parsing the user input and handling the","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":" * commands.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"public class WingmanParser extends FactoryParser {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * The command groups that are available in the application.","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    private static final List\u003cCommandGroup\u003e COMMAND_GROUPS \u003d List.of(","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        new CommandGroup(OperationMode.PILOT, List.of(","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"            new AddPilotCommandFactory(),","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"            new DeletePilotCommandFactory()","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        )),","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"        new CommandGroup(OperationMode.CREW, List.of(","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"                new AddCrewCommandFactory(),","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"                new DeleteCrewCommandFactory()","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"        )),","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"        new CommandGroup(OperationMode.PLANE, List.of(","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"                new AddPlaneCommandFactory(),","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"                new DeletePlaneCommandFactory()","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"        )),","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"        new CommandGroup(OperationMode.LOCATION, List.of(","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"                new AddLocationCommandFactory(),","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"                new DeleteLocationCommandFactory()","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"        )),","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"        new CommandGroup(OperationMode.FLIGHT, List.of(","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"                new AddFlightCommandFactory(),","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"                new DeleteFlightCommandFactory()","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"        ))","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    );","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     * The top level command factories that are available in the application.","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    private static final List\u003cCommandFactory\u003c?\u003e\u003e COMMAND_FACTORIES \u003d List.of(","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        new ChangeModeCommandFactory()","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    );","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     * The command groups that are available in the application.","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"    private final List\u003cCommandGroup\u003e groups;","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"     * The list of top-level factories that produces commands.","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    private final List\u003cCommandFactory\u003c?\u003e\u003e factories;","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"     * Constructs a {@code WingmanParser} with the command groups given.","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     * @param commandGroups the command groups that are available in the","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     *                      application.","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     * @param factories     the top-level factories that are responsible","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"     *                      for parsing of top-level features.","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    public WingmanParser(List\u003cCommandGroup\u003e commandGroups,","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        List\u003cCommandFactory\u003c?\u003e\u003e factories) {","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        this.groups \u003d commandGroups;","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        this.factories \u003d factories;","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     * Constructs a {@code WingmanParser} with the default {@code","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     * COMMAND_GROUPS} and {@code  COMMAND_FACTORIES}","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"    public WingmanParser() {","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        this(COMMAND_GROUPS, COMMAND_FACTORIES);","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"     * Tokenizes the user input into a {@code Deque} of {@code String}s. It","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"     * splits the user input by whitespace. This may result in the token","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"     * being unable to recover back to the original user input, i.e. if the","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"     * user used different whitespace characters other than spaces. However,","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"     * for the purpose of this application, this is acceptable.","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"     * @param userInput the user input to tokenize.","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"     * @return a {@code Deque} of {@code String}s that contains the tokens.","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"    private static Deque\u003cString\u003e tokenize(String userInput) {","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        return new ArrayDeque\u003c\u003e(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"     * @param operationMode the operation mode at which the command is","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"     *                      executed.","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"     * @param userInput     the user input to parse.","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"     * @return the command that corresponds to the user input.","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if a parsing error exists, or if no command is","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"     *                        found in the parser.","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"    public Command parse(OperationMode operationMode, String userInput) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"        final Deque\u003cString\u003e tokens \u003d tokenize(userInput);","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"        final Optional\u003cCommand\u003e topCommand \u003d this.parseFactory(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"        if (topCommand.isPresent()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"            return topCommand.get();","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"        final Optional\u003cCommand\u003e groupedCommand \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"            this.parseGroup(operationMode, tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"        if (groupedCommand.isPresent()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"            return groupedCommand.get();","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"        throw new ParseException(\"No command group found for operation mode \"","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"                                     + operationMode);","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"     * Helps to delegate the parsing to each command group. This is","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"     * abstracted out so that we can have single level of abstraction in","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"     * the {@code parse} method.","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"     * @param operationMode the operation mode at which the command is","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"     * @param tokens        the tokens to parse.","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"     * @return the command that corresponds to the user input.","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"     * @throws ParseException if a parsing error exists. Note that if no","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"     *                        group is found, this method will simply return an","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"     *                        empty {@code Optional}.","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"    private Optional\u003cCommand\u003e parseGroup(OperationMode operationMode,","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"        Deque\u003cString\u003e tokens) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"        for (CommandGroup commandGroup : this.groups) {","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"            if (!commandGroup.getOperationMode().equals(operationMode)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"                continue;","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"            return Optional.of(commandGroup.parse(tokens));","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"    protected List\u003cCommandFactory\u003c?\u003e\u003e getFactories() {","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"        return this.factories;","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":6,"jishnu28":7,"cetigerlily":5,"wxxedu":140,"tangyuantyy":6}},{"path":"src/main/java/seedu/address/logic/core/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core.exceptions;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"wxxedu":1,"-":16}},{"path":"src/main/java/seedu/address/logic/core/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core.exceptions;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"wxxedu":1,"-":16}},{"path":"src/main/java/seedu/address/logic/crew/addcrew/AddCrewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"package seedu.address.logic.crew.addcrew;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.core.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.Crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":" * The command that adds a crew to Wingman.","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"public class AddCrewCommand implements Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    private final Crew crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a executable command that add a crew to the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"     * @param crew the location to add.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"    public AddCrewCommand(Crew crew) {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"        this.crew \u003d crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"        model.addCrew(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"        return new CommandResult(\"Added Crew: \" + crew.getName());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"tangyuantyy":31}},{"path":"src/main/java/seedu/address/logic/crew/addcrew/AddCrewCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"package seedu.address.logic.crew.addcrew;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.core.CommandFactory;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.core.CommandParam;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.Crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.CrewRank;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":" * The factory that creates {@code AddLocationCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"public class AddCrewCommandFactory implements CommandFactory\u003cAddCrewCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"    public static final String PREFIX_NAME \u003d \"/name\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    public static final String PREFIX_RANK \u003d \"/rank\";","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"        return Optional.of(Set.of(PREFIX_NAME, PREFIX_RANK));","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"    public AddCrewCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"        final String name \u003d param.getNamedValuesOrThrow(PREFIX_NAME);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"        final int rankId \u003d param.getNamedIntOrThrow(PREFIX_RANK);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"        final CrewRank rank \u003d CrewRank.fromIndex(rankId);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"        final Crew crew \u003d new Crew(name, rank);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"        return new AddCrewCommand(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"tangyuantyy":39}},{"path":"src/main/java/seedu/address/logic/crew/deletecrew/DeleteCrewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"package seedu.address.logic.crew.deletecrew;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.core.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.Crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":" * The command that deletes a crew from the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"public class DeleteCrewCommand implements Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"     * The UUID of the crew to be deleted.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"    private final String uuid;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"     * This can be used to undo the deletion.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"    private Optional\u003cCrew\u003e crewToDelete;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a command that, when executed, deletes the pilot with the","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"     * given uuid.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"     * @param uuid The index of the pilot to be deleted.","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"    public DeleteCrewCommand(String uuid) {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"        crewToDelete \u003d model.getCrewManager().getItem(uuid);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"        model.deleteCrew(uuid);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"        return new CommandResult(\"Deleted crew: \" + uuid);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"tangyuantyy":41}},{"path":"src/main/java/seedu/address/logic/crew/deletecrew/DeleteCrewCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"package seedu.address.logic.crew.deletecrew;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.core.CommandFactory;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.core.CommandParam;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":" * The factory that\u0027s responsible for creating a {@code DeleteCrewCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"public class DeleteCrewCommandFactory implements CommandFactory\u003cDeleteCrewCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"    public DeleteCrewCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"        final String id \u003d param.getUnnamedValueOrThrow();","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"        return new DeleteCrewCommand(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"tangyuantyy":31}},{"path":"src/main/java/seedu/address/logic/flight/addflight/AddFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package seedu.address.logic.flight.addflight;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.core.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"import seedu.address.model.flight.Flight;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":" * The command that adds a flight to Wingman","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"public class AddFlightCommand implements Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"     * The flight to be added","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"    private final Flight flight;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"     * Creates a command that, when executed, adds the flight to Wingman","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"     * @param flight The flight to be added","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    public AddFlightCommand(Flight flight) {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"        this.flight \u003d flight;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"        model.addFlight(flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"        // TODO: better message","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"        return new CommandResult(\"Added flight: \" + flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"jishnu28":33}},{"path":"src/main/java/seedu/address/logic/flight/addflight/AddFlightCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package seedu.address.logic.flight.addflight;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.core.CommandFactory;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.core.CommandParam;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"import seedu.address.model.flight.Flight;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":" * The factory that creates {@code AddLocationCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"public class AddFlightCommandFactory implements CommandFactory\u003cAddFlightCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    public static final String PREFIX_CODE \u003d \"/code\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"        return Optional.of(Set.of(PREFIX_CODE));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    public AddFlightCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"        final String code \u003d param.getNamedValuesOrThrow(PREFIX_CODE);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"        final Flight flight \u003d new Flight(code);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"        return new AddFlightCommand(flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"jishnu28":36}},{"path":"src/main/java/seedu/address/logic/flight/deleteflight/DeleteFlightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package seedu.address.logic.flight.deleteflight;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.core.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"import seedu.address.model.flight.Flight;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":" * The command that deletes a flight from Wingman","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"public class DeleteFlightCommand implements Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"     * The UUID of the flight to be deleted","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    private final String uuid;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"     * This can be used to undo the deletion.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    private Optional\u003cFlight\u003e flightToDelete;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"     * Creates a command that, when executed, deletes the flight with the","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"     * given uuid.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"     * @param uuid The index of the flight to be deleted.","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    public DeleteFlightCommand(String uuid) {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"        flightToDelete \u003d model.getFlightManager().getItem(uuid);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"        model.deleteFlight(uuid);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"        return new CommandResult(\"Deleted flight: \" + uuid);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"jishnu28":41}},{"path":"src/main/java/seedu/address/logic/flight/deleteflight/DeleteFlightCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package seedu.address.logic.flight.deleteflight;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.core.CommandFactory;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.core.CommandParam;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":" * The factory that\u0027s responsible for creating a {@code DeleteFlightCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"public class DeleteFlightCommandFactory implements CommandFactory\u003cDeleteFlightCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    public DeleteFlightCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"        final String id \u003d param.getUnnamedValueOrThrow();","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"        return new DeleteFlightCommand(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"jishnu28":32}},{"path":"src/main/java/seedu/address/logic/location/addlocation/AddLocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package seedu.address.logic.location.addlocation;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.core.Command;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.location.Location;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":" * The command that adds a location to Wingman.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"public class AddLocationCommand implements Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    private final Location location;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     * Creates a executable command that add a location to the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     * @param location the location to add.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    public AddLocationCommand(Location location) {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"        model.addLocation(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"        return new CommandResult(\"Added location: \" + location);","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":29}},{"path":"src/main/java/seedu/address/logic/location/addlocation/AddLocationCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package seedu.address.logic.location.addlocation;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.core.CommandFactory;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.core.CommandParam;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.location.Location;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" * The factory that creates {@code AddLocationCommand}.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"public class AddLocationCommandFactory implements CommandFactory\u003cAddLocationCommand\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    public static final String PREFIX_NAME \u003d \"/name\";","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"        return Optional.of(Set.of(PREFIX_NAME));","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    public AddLocationCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        final String name \u003d param.getNamedValuesOrThrow(PREFIX_NAME);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"        final Location location \u003d new Location(name);","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"        return new AddLocationCommand(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":34}},{"path":"src/main/java/seedu/address/logic/location/deletelocation/DeleteLocationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package seedu.address.logic.location.deletelocation;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.core.Command;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.location.Location;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" * The command that deletes a pilot from Wingman.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"public class DeleteLocationCommand implements Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    private final String uuid;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    private Optional\u003cLocation\u003e locationToDelete;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * Creates a command that deletes the location from the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     * @param uuid the uuid of the location to be deleted.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    public DeleteLocationCommand(String uuid) {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        locationToDelete \u003d model.getLocationManager().getItem(uuid);","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        model.deleteLocation(uuid);","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        return new CommandResult(\"Deleted location: \" + uuid);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":32}},{"path":"src/main/java/seedu/address/logic/location/deletelocation/DeleteLocationCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package seedu.address.logic.location.deletelocation;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.core.CommandFactory;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.core.CommandParam;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" * The factory that creates a {@code DeleteLocationCommand}.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public class DeleteLocationCommandFactory implements CommandFactory\u003cDeleteLocationCommand\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    public DeleteLocationCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        final String id \u003d param.getUnnamedValueOrThrow();","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        return new DeleteLocationCommand(id);","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":31}},{"path":"src/main/java/seedu/address/logic/pilot/addpilot/AddPilotCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.pilot.addpilot;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.Command;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.Pilot;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * The command that adds a pilot to the address book.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"public class AddPilotCommand implements Command {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * The pilot to be added.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    private final Pilot pilot;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * Creates a command that, when executed, adds the pilot to the address","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * book.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * @param pilot The pilot to be added.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public AddPilotCommand(Pilot pilot) {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        this.pilot \u003d pilot;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        model.addPilot(pilot);","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"        // TODO: better message","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        return new CommandResult(\"Added pilot: \" + pilot);","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":34}},{"path":"src/main/java/seedu/address/logic/pilot/addpilot/AddPilotCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.pilot.addpilot;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.CommandFactory;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.CommandParam;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.Gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.Pilot;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.PilotRank;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" * The factory that\u0027s responsible for creating a {@code AddPilotCommand}.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"public class AddPilotCommandFactory implements CommandFactory\u003cAddPilotCommand\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_NAME \u003d \"/name\";","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_RANK \u003d \"/rank\";","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_AGE \u003d \"/age\";","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_GENDER \u003d \"/gender\";","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    public static final String PREFIX_FLIGHT_HOUR \u003d \"/fh\";","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"        return Optional.of(Set.of(PREFIX_NAME, PREFIX_RANK, PREFIX_AGE,","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"            PREFIX_GENDER, PREFIX_FLIGHT_HOUR));","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    public AddPilotCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        final String name \u003d param.getNamedValuesOrThrow(PREFIX_NAME);","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        final int rankId \u003d param.getNamedIntOrThrow(PREFIX_RANK);","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        final PilotRank rank \u003d PilotRank.fromIndex(rankId);","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        final int age \u003d param.getNamedIntOrThrow(PREFIX_AGE);","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        final int genderIdx \u003d param.getNamedIntOrThrow(PREFIX_GENDER);","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        final Gender gender \u003d Gender.fromIndex(genderIdx);","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        final int flightHour \u003d param.getNamedIntOrThrow(PREFIX_FLIGHT_HOUR);","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        final Pilot pilot \u003d new Pilot(name, age, gender, rank, flightHour);","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        return new AddPilotCommand(pilot);","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":49}},{"path":"src/main/java/seedu/address/logic/pilot/deletepilot/DeletePilotCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.pilot.deletepilot;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.Command;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.Pilot;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * The command that deletes a pilot from the address book.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"public class DeletePilotCommand implements Command {","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * The UUID of the pilot to be deleted.","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    private final String uuid;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * This can be used to undo the deletion.","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    private Optional\u003cPilot\u003e pilotToDelete;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * Creates a command that, when executed, deletes the pilot with the","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * given uuid.","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * @param uuid The index of the pilot to be deleted.","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    public DeletePilotCommand(String uuid) {","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"        pilotToDelete \u003d model.getPilotManager().getItem(uuid);","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        model.deletePilot(uuid);","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        return new CommandResult(\"Deleted pilot: \" + uuid);","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":2,"wxxedu":39}},{"path":"src/main/java/seedu/address/logic/pilot/deletepilot/DeletePilotCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.pilot.deletepilot;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.CommandFactory;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.CommandParam;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" * The factory that\u0027s responsible for creating a {@code DeletePilotCommand}.","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"public class DeletePilotCommandFactory implements CommandFactory\u003cDeletePilotCommand\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    public DeletePilotCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"        final String id \u003d param.getUnnamedValueOrThrow();","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"        return new DeletePilotCommand(id);","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":31}},{"path":"src/main/java/seedu/address/logic/plane/addplane/AddPlaneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package seedu.address.logic.plane.addplane;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.core.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.model.plane.Plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":" * The command that adds a plane to the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":"public class AddPlaneCommand implements Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"     * The Plane to be added.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    private final Plane plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"     * Creates a command that, when executed, adds the plane to the address","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     * book.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     * @param plane The pilot to be added.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"    public AddPlaneCommand(Plane plane) {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"        this.plane \u003d plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"        model.addPlane(plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"        return new CommandResult(\"Added plane: \" + plane.toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cetigerlily":33}},{"path":"src/main/java/seedu/address/logic/plane/addplane/AddPlaneCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package seedu.address.logic.plane.addplane;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.core.CommandFactory;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.core.CommandParam;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.model.plane.Plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":" * The factory that\u0027s responsible for creating a {@code AddPlaneCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"public class AddPlaneCommandFactory implements CommandFactory\u003cAddPlaneCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    public static final String PREFIX_MODEL \u003d \"/model\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    public static final String PREFIX_AGE \u003d \"/age\";","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"        return Optional.of(Set.of(PREFIX_MODEL, PREFIX_AGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    public AddPlaneCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"        String model \u003d param.getNamedValuesOrThrow(PREFIX_MODEL);","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"        int age \u003d param.getNamedIntOrThrow(PREFIX_AGE);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"        final Plane plane \u003d new Plane(model, age);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"        return new AddPlaneCommand(plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cetigerlily":37}},{"path":"src/main/java/seedu/address/logic/plane/deleteplane/DeletePlaneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package seedu.address.logic.plane.deleteplane;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.core.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.model.plane.Plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":" * The command that deletes a plane from the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"public class DeletePlaneCommand implements Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"     * The UUID of the plane to be deleted.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    private final String uuid;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     * This can be used to undo the deletion.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"    private Optional\u003cPlane\u003e planeToDelete;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"     * Creates a command that, when executed, deletes the plane with the","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     * given UUID.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"     * @param uuid The index of the plane to be deleted.","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"    public DeletePlaneCommand(String uuid) {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"        planeToDelete \u003d model.getPlaneManager().getItem(uuid);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"        model.deletePlane(uuid);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"        return new CommandResult(\"Deleted plane: \" + uuid);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cetigerlily":41}},{"path":"src/main/java/seedu/address/logic/plane/deleteplane/DeletePlaneCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package seedu.address.logic.plane.deleteplane;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.core.CommandFactory;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.core.CommandParam;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":" * The factory that\u0027s responsible for creating a {@code DeletePlaneCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"public class DeletePlaneCommandFactory implements CommandFactory\u003cDeletePlaneCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    public DeletePlaneCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"        final String id \u003d param.getUnnamedValueOrThrow();","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"        return new DeletePlaneCommand(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cetigerlily":31}},{"path":"src/main/java/seedu/address/logic/toplevel/changemode/ChangeModeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.toplevel.changemode;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.Command;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.OperationMode;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * The command that changes the operation mode of the application.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"public class ChangeModeCommand implements Command {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * The mode to change to.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    private final OperationMode mode;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public ChangeModeCommand(OperationMode mode) {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"        this.mode \u003d mode;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"        model.setOperationMode(mode);","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        return new CommandResult(\"Changed mode to \" + mode);","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":27}},{"path":"src/main/java/seedu/address/logic/toplevel/changemode/ChangeModeCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.toplevel.changemode;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.CommandFactory;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.CommandParam;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.OperationMode;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * The factory that\u0027s responsible for creating a {@code ChangeModeCommand}.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"public class ChangeModeCommandFactory implements CommandFactory\u003cChangeModeCommand\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    public static final String COMMAND_WORD \u003d \"mode\";","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cSet\u003cString\u003e\u003e getPrefixes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    public ChangeModeCommand createCommand(CommandParam param) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"        final String modeStr \u003d param.getUnnamedValueOrThrow();","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        final OperationMode mode;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"            mode \u003d OperationMode.fromString(modeStr);","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"            throw new ParseException(\"Invalid mode: \" + modeStr);","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        return new ChangeModeCommand(mode);","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":38}},{"path":"src/main/java/seedu/address/model/ItemManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.item.UniqueList;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":" * Implementation of a read-only item manager, this has other methods","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * that allows for the modification of the manager.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"public class ItemManager\u003cT extends Item\u003e implements","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        ReadOnlyItemManager\u003cT\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * The internal list responsible for holding the items.","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    private final UniqueList\u003cT\u003e items;","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    {","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        items \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"     * Initializes an empty {@code ItemManager}.","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    public ItemManager() {","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     * Creates a {@code ItemManager} from the given list of items.","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * Please make sure that the items in the list are unique.","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * @param toBeCopied the list of items out of which the {@code","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"     *                   ItemManager} will be created.","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"    public ItemManager(ReadOnlyItemManager\u003cT\u003e toBeCopied) {","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        this();","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * Replaces the contents of the item list with {@code items}.","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * @param items the list of items to replace the current list with.","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    public void setItems(List\u003cT\u003e items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        this.items.setItems(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"     * Resets the existing data of this {@code ItemManager} with","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"     * {@code newData}.","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"     * @param newData the new data to be used.","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"    public void resetData(ReadOnlyItemManager\u003cT\u003e newData) {","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        setItems(newData.getItemList());","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"     * Checks if the item is in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"     * @param item the item to check","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     * @return true if the item is in the list, false otherwise.","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    public boolean hasItem(T item) {","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        return items.contains(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"     * Checks if the item with the given ID is in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"     * @param id the ID of the item to check","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"     * @return true if the item is in the list, false otherwise.","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"    public boolean hasItem(String id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        return items.contains(id);","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"     * Adds an item to the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"     * @param item the item to add","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"    public void addItem(T item) {","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"        items.add(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"     * Replaces the given item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"     * @param target     the item to be replaced","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"     * @param editedItem the item to replace with","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"    public void setItem(T target, T editedItem) {","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"        items.setItem(target, editedItem);","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"     * Removes {@code key} from this {@code ItemManager}.","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"     * @param item the item to remove","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"    public void removeItem(T item) {","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"        items.remove(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"    public void removeItem(String id) {","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"        items.remove(id);","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"    public Optional\u003cT\u003e getItem(String id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"        for (T item : items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"            if (item.getId().equals(id)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"                return Optional.of(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"        return Optional.empty();","lastModifiedDate":"2023-02-23"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"    public int size() {","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"        return this.items.size();","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"    public ObservableList\u003cT\u003e getItemList() {","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"        return this.items.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"        // TODO: refine later","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"        return this.size() + \" items\";","lastModifiedDate":"2023-02-23"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"            return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":156,"author":{"gitId":"BoAi01"},"content":"        if (!(other instanceof ItemManager\u003c?\u003e)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"            return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":159,"author":{"gitId":"BoAi01"},"content":"        ItemManager\u003c?\u003e otherItemManager \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":160,"author":{"gitId":"BoAi01"},"content":"                (ItemManager\u003c?\u003e) other;","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"BoAi01"},"content":"        return items.equals(otherItemManager.items);","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"        return items.hashCode();","lastModifiedDate":"2023-02-23"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":168,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":16,"cetigerlily":1,"wxxedu":152}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.Crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"import seedu.address.model.flight.Flight;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.location.Location;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.Pilot;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.model.plane.Plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * {@code Predicate} that always evaluate to false","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    Predicate\u003cPilot\u003e PREDICATE_SHOW_ALL_PILOTS \u003d unused -\u003e false;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"     * {@code Predicate} that always evaluate to false","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    Predicate\u003cCrew\u003e PREDICATE_SHOW_ALL_CREW \u003d unused -\u003e false;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * Returns the user prefs\u0027 operation mode.","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    OperationMode getOperationMode();","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * Sets the user prefs\u0027 operation mode to {@code operationMode}.","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * @param operationMode The new operation mode.","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    void setOperationMode(OperationMode operationMode);","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"     * Returns the list of items.","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    ObservableList\u003cItem\u003e getItemsList();","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Pilot methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"     * Returns the person manager.","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     * @return the person manager.","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"    ReadOnlyItemManager\u003cPilot\u003e getPilotManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     * Returns the pilot manager file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"     * @return the pilot manager file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    Path getPilotManagerFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"     * Sets the pilot manager file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     * @param pilotManagerFilePath the pilot manager file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"    void setPilotManagerFilePath(Path pilotManagerFilePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"     * Replaces pilot manager data with the data in {@code pilotManager}.","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"     * @param pilotManager the pilot manager to replace with.","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"    void setPilotManager(ReadOnlyItemManager\u003cPilot\u003e pilotManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"     * Returns true if a pilot with the same identity as {@code pilot} exists","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"     * in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"     * @param pilot the pilot to check.","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"     * @return true if the pilot exists, false otherwise.","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"    boolean hasPilot(Pilot pilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"     * Deletes the given pilot.","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"     * The pilot must exist in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"     * @param target the pilot to delete.","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"    void deletePilot(Pilot target);","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"     * Deletes the pilot with the given id.","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"    void deletePilot(String id);","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"     * Adds the given pilot.","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"     * @param pilot the pilot to add.","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"    void addPilot(Pilot pilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"     * Replaces the given pilot {@code target} with {@code editedPilot}.","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"     * The pilot identity of {@code editedPilot} must not be the same as another existing pilot in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"     * @param target      the pilot to replace.","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"     * @param editedPilot the pilot to replace with.","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"    void setPilot(Pilot target, Pilot editedPilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"     * Returns an unmodifiable view of the filtered pilot list","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"    ObservableList\u003cPilot\u003e getFilteredPilotList();","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"     * Updates the filter of the filtered pilot list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"    void updateFilteredPilotList(Predicate\u003cPilot\u003e predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Location methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"BoAi01"},"content":"     * Returns true if the location is in the location list","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"BoAi01"},"content":"     * @param location a location object to be checked","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"BoAi01"},"content":"     * @return true if the location has already been in the list","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"BoAi01"},"content":"    boolean hasLocation(Location location);","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"BoAi01"},"content":"     * Delete a location from the location list","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"BoAi01"},"content":"     * @param uuid the id of the location to be deleted","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"BoAi01"},"content":"    void deleteLocation(String uuid);","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"BoAi01"},"content":"     * Add a location to the location list","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"BoAi01"},"content":"     * @param location the location to be added","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"BoAi01"},"content":"    void addLocation(Location location);","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"    void setLocationManagerFilePath(Path pilotManagerFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"    ReadOnlyItemManager\u003cLocation\u003e getLocationManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":177,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"BoAi01"},"content":"    Path getLocationManagerFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"    void setLocationManager(ReadOnlyItemManager\u003cLocation\u003e locationManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"BoAi01"},"content":"    void setLocation(Location target, Location editedLocation);","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"BoAi01"},"content":"    ObservableList\u003cLocation\u003e getFilteredLocationList();","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"BoAi01"},"content":"    void updateFilteredLocationList(Predicate\u003cLocation\u003e predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":189,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Crew methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":190,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the crew manager file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"tangyuantyy"},"content":"     * @return the crew manager file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"tangyuantyy"},"content":"    Path getCrewManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"tangyuantyy"},"content":"     * Sets the crew manager file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"tangyuantyy"},"content":"     * @param crewManagerFilePath the crew manager file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":203,"author":{"gitId":"tangyuantyy"},"content":"    void setCrewManagerFilePath(Path crewManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"BoAi01"},"content":"    void setCrewManager(ReadOnlyItemManager\u003cCrew\u003e manager);","lastModifiedDate":"2023-03-07"},{"lineNumber":206,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the crew manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"tangyuantyy"},"content":"     * @return the crew manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":212,"author":{"gitId":"BoAi01"},"content":"    ReadOnlyItemManager\u003cCrew\u003e getCrewManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":213,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":214,"author":{"gitId":"tangyuantyy"},"content":"    boolean hasCrew(Crew crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":215,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":216,"author":{"gitId":"tangyuantyy"},"content":"    boolean hasCrew(String id);","lastModifiedDate":"2023-03-06"},{"lineNumber":217,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":218,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":219,"author":{"gitId":"tangyuantyy"},"content":"     * Add a crew to the crew list.","lastModifiedDate":"2023-03-06"},{"lineNumber":220,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":221,"author":{"gitId":"tangyuantyy"},"content":"     * @param crew the crew to be added.","lastModifiedDate":"2023-03-06"},{"lineNumber":222,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":223,"author":{"gitId":"tangyuantyy"},"content":"    void addCrew(Crew crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":224,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":225,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":226,"author":{"gitId":"tangyuantyy"},"content":"     * Deletes a crew to the crew list.","lastModifiedDate":"2023-03-06"},{"lineNumber":227,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":228,"author":{"gitId":"tangyuantyy"},"content":"     * @param crew the crew to be deleted.","lastModifiedDate":"2023-03-06"},{"lineNumber":229,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":230,"author":{"gitId":"tangyuantyy"},"content":"    void deleteCrew(Crew crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":231,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":232,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":233,"author":{"gitId":"tangyuantyy"},"content":"     * Deletes a crew to the crew list.","lastModifiedDate":"2023-03-06"},{"lineNumber":234,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":235,"author":{"gitId":"tangyuantyy"},"content":"     * @param id the id of the crew to be deleted.","lastModifiedDate":"2023-03-06"},{"lineNumber":236,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":237,"author":{"gitId":"tangyuantyy"},"content":"    void deleteCrew(String id);","lastModifiedDate":"2023-03-06"},{"lineNumber":238,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":239,"author":{"gitId":"tangyuantyy"},"content":"    void setCrew(Crew target, Crew editedCrew);","lastModifiedDate":"2023-03-06"},{"lineNumber":240,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":241,"author":{"gitId":"tangyuantyy"},"content":"    void updateFilteredCrewList(Predicate\u003cCrew\u003e predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":242,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":243,"author":{"gitId":"tangyuantyy"},"content":"    ObservableList\u003cCrew\u003e getFilteredCrewList();","lastModifiedDate":"2023-03-06"},{"lineNumber":244,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":245,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":246,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Plane methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":247,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":248,"author":{"gitId":"BoAi01"},"content":"    void setPlaneManager(ReadOnlyItemManager\u003cPlane\u003e manager);","lastModifiedDate":"2023-03-07"},{"lineNumber":249,"author":{"gitId":"BoAi01"},"content":"    ReadOnlyItemManager\u003cPlane\u003e getPlaneManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":250,"author":{"gitId":"cetigerlily"},"content":"    void addPlane(Plane plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":251,"author":{"gitId":"cetigerlily"},"content":"    void deletePlane(Plane plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":252,"author":{"gitId":"cetigerlily"},"content":"    void deletePlane(String id);","lastModifiedDate":"2023-03-06"},{"lineNumber":253,"author":{"gitId":"cetigerlily"},"content":"    boolean hasPlane(Plane plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":254,"author":{"gitId":"cetigerlily"},"content":"    boolean hasPlane(String id);","lastModifiedDate":"2023-03-06"},{"lineNumber":255,"author":{"gitId":"cetigerlily"},"content":"    void setPlane(Plane target, Plane editedPlane);","lastModifiedDate":"2023-03-06"},{"lineNumber":256,"author":{"gitId":"cetigerlily"},"content":"    ObservableList\u003cPlane\u003e getFilteredPlaneList();","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"cetigerlily"},"content":"    void updateFilteredPlaneList(Predicate\u003cPlane\u003e predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":258,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":259,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":260,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Flight methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":261,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":262,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":263,"author":{"gitId":"jishnu28"},"content":"     * Returns the flight manager","lastModifiedDate":"2023-03-06"},{"lineNumber":264,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":265,"author":{"gitId":"jishnu28"},"content":"     * @return flight manager","lastModifiedDate":"2023-03-06"},{"lineNumber":266,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":267,"author":{"gitId":"BoAi01"},"content":"    ReadOnlyItemManager\u003cFlight\u003e getFlightManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":268,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":269,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":270,"author":{"gitId":"jishnu28"},"content":"     * Returns the flight manager file path","lastModifiedDate":"2023-03-06"},{"lineNumber":271,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":272,"author":{"gitId":"jishnu28"},"content":"     * @return flight manager file path","lastModifiedDate":"2023-03-06"},{"lineNumber":273,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":274,"author":{"gitId":"jishnu28"},"content":"    Path getFlightManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":275,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":276,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":277,"author":{"gitId":"jishnu28"},"content":"     * Sets the flight manager file path","lastModifiedDate":"2023-03-06"},{"lineNumber":278,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":279,"author":{"gitId":"jishnu28"},"content":"     * @param flightManagerFilePath flight manager file path","lastModifiedDate":"2023-03-07"},{"lineNumber":280,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":281,"author":{"gitId":"jishnu28"},"content":"    void setFlightManagerFilePath(Path flightManagerFilePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":282,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":283,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":284,"author":{"gitId":"jishnu28"},"content":"     * Replaces the current flight manager\u0027s data with data in {@code flightManager}","lastModifiedDate":"2023-03-06"},{"lineNumber":285,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":286,"author":{"gitId":"jishnu28"},"content":"     * @param flightManager the flight manager to replace with","lastModifiedDate":"2023-03-06"},{"lineNumber":287,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":288,"author":{"gitId":"BoAi01"},"content":"    void setFlightManager(ReadOnlyItemManager\u003cFlight\u003e flightManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":289,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":290,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":291,"author":{"gitId":"jishnu28"},"content":"     * Returns true if a flight with the same identity as {@code flight} exists in Wingman","lastModifiedDate":"2023-03-06"},{"lineNumber":292,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":293,"author":{"gitId":"jishnu28"},"content":"     * @param flight","lastModifiedDate":"2023-03-06"},{"lineNumber":294,"author":{"gitId":"jishnu28"},"content":"     * @return true if flight exists, false otherwise","lastModifiedDate":"2023-03-06"},{"lineNumber":295,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":296,"author":{"gitId":"jishnu28"},"content":"    boolean hasFlight(Flight flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":297,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":298,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":299,"author":{"gitId":"jishnu28"},"content":"     * Deletes the given flight, if the flight exists in Wingman","lastModifiedDate":"2023-03-06"},{"lineNumber":300,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":301,"author":{"gitId":"jishnu28"},"content":"     * @param target flight to be deleted","lastModifiedDate":"2023-03-06"},{"lineNumber":302,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":303,"author":{"gitId":"jishnu28"},"content":"    void deleteFlight(Flight target);","lastModifiedDate":"2023-03-06"},{"lineNumber":304,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":305,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":306,"author":{"gitId":"jishnu28"},"content":"     * Deletes the flight with the given id","lastModifiedDate":"2023-03-06"},{"lineNumber":307,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":308,"author":{"gitId":"jishnu28"},"content":"     * @param id identifier of flight to be deleted","lastModifiedDate":"2023-03-06"},{"lineNumber":309,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":310,"author":{"gitId":"jishnu28"},"content":"    void deleteFlight(String id);","lastModifiedDate":"2023-03-06"},{"lineNumber":311,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":312,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":313,"author":{"gitId":"jishnu28"},"content":"     * Adds the given flight","lastModifiedDate":"2023-03-06"},{"lineNumber":314,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":315,"author":{"gitId":"jishnu28"},"content":"     * @param flight flight to be added","lastModifiedDate":"2023-03-06"},{"lineNumber":316,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":317,"author":{"gitId":"jishnu28"},"content":"    void addFlight(Flight flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":318,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":319,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":320,"author":{"gitId":"jishnu28"},"content":"     * Replaces the given flight {@code target} with {@code editedFlight}","lastModifiedDate":"2023-03-06"},{"lineNumber":321,"author":{"gitId":"jishnu28"},"content":"     * {@code target} must exist in Wingman","lastModifiedDate":"2023-03-06"},{"lineNumber":322,"author":{"gitId":"jishnu28"},"content":"     * The flight identity of {@code editedFlight} must not be the same as another existing flight in Wingman","lastModifiedDate":"2023-03-06"},{"lineNumber":323,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":324,"author":{"gitId":"jishnu28"},"content":"     * @param target the flight to be replaced","lastModifiedDate":"2023-03-06"},{"lineNumber":325,"author":{"gitId":"jishnu28"},"content":"     * @param editedFlight the flight to replace with","lastModifiedDate":"2023-03-06"},{"lineNumber":326,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":327,"author":{"gitId":"jishnu28"},"content":"    void setFlight(Flight target, Flight editedFlight);","lastModifiedDate":"2023-03-06"},{"lineNumber":328,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":329,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":330,"author":{"gitId":"jishnu28"},"content":"     * Returns an unmodifiable view of the filtered flight list","lastModifiedDate":"2023-03-06"},{"lineNumber":331,"author":{"gitId":"jishnu28"},"content":"     * @return unmodifiable view of the filtered flight list","lastModifiedDate":"2023-03-06"},{"lineNumber":332,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":333,"author":{"gitId":"jishnu28"},"content":"    ObservableList\u003cFlight\u003e getFilteredFlightList();","lastModifiedDate":"2023-03-06"},{"lineNumber":334,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":335,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":336,"author":{"gitId":"jishnu28"},"content":"     * Updates the filter of the filtered flight list to filter by the given {@code predicate}","lastModifiedDate":"2023-03-06"},{"lineNumber":337,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":338,"author":{"gitId":"jishnu28"},"content":"     * @param predicate the new predicate to use","lastModifiedDate":"2023-03-06"},{"lineNumber":339,"author":{"gitId":"jishnu28"},"content":"     * @throws NullPointerException if {@code predicate} is null","lastModifiedDate":"2023-03-06"},{"lineNumber":340,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":341,"author":{"gitId":"jishnu28"},"content":"    void updateFilteredFlightList(Predicate\u003cFlight\u003e predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"BoAi01":52,"jishnu28":91,"cetigerlily":10,"tangyuantyy":57,"wxxedu":70,"-":62}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.Crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"import seedu.address.model.flight.Flight;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.location.Location;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.Pilot;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.model.plane.Plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    // pilot manager","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    private final ItemManager\u003cPilot\u003e pilotManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    private final FilteredList\u003cPilot\u003e filteredPilots;","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    // TODO: migrate this to the ui layer -\u003e this probably should be there.","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    // location manager","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"    private final ItemManager\u003cLocation\u003e locationManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"    private final FilteredList\u003cLocation\u003e filteredLocations;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"    // crew manager","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"    private final ItemManager\u003cCrew\u003e crewManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"    private final FilteredList\u003cCrew\u003e filteredCrew;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"    // plane manager","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"    private final ItemManager\u003cPlane\u003e planeManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"    private final FilteredList\u003cPlane\u003e filteredPlanes;","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"    // flight manager","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    private final ItemManager\u003cFlight\u003e flightManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"    private final FilteredList\u003cFlight\u003e filteredFlights;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"    // general utilities","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    private final ObservableList\u003cItem\u003e itemsList;","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    private Optional\u003cObservableList\u003c? extends Item\u003e\u003e lastBoundList \u003d Optional.empty();","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"    public ModelManager(ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"                        ReadOnlyItemManager\u003cPilot\u003e pilotManager,","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"                        ReadOnlyItemManager\u003cLocation\u003e locationManager,","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"                        ReadOnlyItemManager\u003cCrew\u003e crewManager,","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"                        ReadOnlyItemManager\u003cPlane\u003e planeManager,","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"                        ReadOnlyItemManager\u003cFlight\u003e flightManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"jishnu28"},"content":"        requireAllNonNull(userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"jishnu28"},"content":"        logger.fine(\"Initializing with Wingman storage(pilot, location, crew, plane, flight)\"","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"jishnu28"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"        this.pilotManager \u003d new ItemManager\u003c\u003e(pilotManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        filteredPilots \u003d new FilteredList\u003c\u003e(this.pilotManager.getItemList());","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"        this.locationManager \u003d new ItemManager\u003c\u003e(locationManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"        filteredLocations \u003d new FilteredList\u003c\u003e(this.locationManager.getItemList());","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"        this.crewManager \u003d new ItemManager\u003c\u003e(crewManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"tangyuantyy"},"content":"        filteredCrew \u003d new FilteredList\u003c\u003e(this.crewManager.getItemList());","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"        this.planeManager \u003d new ItemManager\u003c\u003e(planeManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"cetigerlily"},"content":"        filteredPlanes \u003d new FilteredList\u003c\u003e(this.planeManager.getItemList());","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"        this.flightManager \u003d new ItemManager\u003c\u003e(flightManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"jishnu28"},"content":"        filteredFlights \u003d new FilteredList\u003c\u003e(this.flightManager.getItemList());","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        itemsList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        setOperationMode(userPrefs.getOperationMode());","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"cetigerlily"},"content":"     * Initializes a ModelManager","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":96,"author":{"gitId":"jishnu28"},"content":"        this(new UserPrefs(), new ItemManager\u003c\u003e(),","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"                new ItemManager\u003c\u003e(), new ItemManager\u003c\u003e(),","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"                new ItemManager\u003c\u003e(), new ItemManager\u003c\u003e());","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    public OperationMode getOperationMode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"        return userPrefs.getOperationMode();","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"     * Sets the operation mode of the app.","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"     * @param mode the new operation mode","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"    public void setOperationMode(OperationMode mode) {","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"        this.userPrefs.setOperationMode(mode);","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"        switch (mode) {","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"        case PILOT:","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"            rebind(filteredPilots);","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"        case PLANE:","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"            rebind(filteredPlanes);","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"jishnu28"},"content":"        case FLIGHT:","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"jishnu28"},"content":"            rebind(filteredFlights);","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"jishnu28"},"content":"            break;","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"jishnu28"},"content":"        case CREW:","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"tangyuantyy"},"content":"            rebind(filteredCrew);","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"tangyuantyy"},"content":"            break;","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"        case LOCATION:","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"            rebind(filteredLocations);","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"            logger.warning(\"Unknown operation mode: \" + mode);","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"    private void rebind(ObservableList\u003c? extends Item\u003e list) {","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"        if (lastBoundList.isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"BoAi01"},"content":"            final ObservableList\u003c? extends Item\u003e lastBound \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"                    lastBoundList.get();","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"            Bindings.unbindContent(itemsList, lastBound);","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"        Bindings.bindContent(itemsList, list);","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"        lastBoundList \u003d Optional.of(list);","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"BoAi01"},"content":"    public ObservableList\u003cItem\u003e getItemsList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"        return itemsList;","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Pilot \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"    public ReadOnlyItemManager\u003cPilot\u003e getPilotManager() {","lastModifiedDate":"2023-03-07"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"        return pilotManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"    public Path getPilotManagerFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"        return userPrefs.getPilotManagerFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"    public void setPilotManagerFilePath(Path pilotManagerFilePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(pilotManagerFilePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"        userPrefs.setPilotManagerFilePath(pilotManagerFilePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"BoAi01"},"content":"    public void setPilotManager(ReadOnlyItemManager\u003cPilot\u003e pilotManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"        this.pilotManager.resetData(pilotManager);","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"    public boolean hasPilot(Pilot pilot) {","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(pilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"wxxedu"},"content":"        return pilotManager.hasItem(pilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"    public void deletePilot(Pilot target) {","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"wxxedu"},"content":"        pilotManager.removeItem(target);","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":211,"author":{"gitId":"wxxedu"},"content":"    public void deletePilot(String id) {","lastModifiedDate":"2023-03-04"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"        pilotManager.removeItem(id);","lastModifiedDate":"2023-03-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"wxxedu"},"content":"    public void addPilot(Pilot pilot) {","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(pilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"        pilotManager.addItem(pilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"wxxedu"},"content":"    public void setPilot(Pilot target, Pilot editedPilot) {","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"wxxedu"},"content":"        requireAllNonNull(target, editedPilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"wxxedu"},"content":"        pilotManager.setItem(target, editedPilot);","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"    public ObservableList\u003cPilot\u003e getFilteredPilotList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"wxxedu"},"content":"        return filteredPilots;","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"wxxedu"},"content":"    public void updateFilteredPilotList(Predicate\u003cPilot\u003e predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"wxxedu"},"content":"        filteredPilots.setPredicate(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":239,"author":{"gitId":"BoAi01"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Location \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":240,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":241,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":242,"author":{"gitId":"BoAi01"},"content":"    public ReadOnlyItemManager\u003cLocation\u003e getLocationManager() {","lastModifiedDate":"2023-03-07"},{"lineNumber":243,"author":{"gitId":"BoAi01"},"content":"        return locationManager;","lastModifiedDate":"2023-03-05"},{"lineNumber":244,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":245,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":246,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":247,"author":{"gitId":"BoAi01"},"content":"    public Path getLocationManagerFilePath() {","lastModifiedDate":"2023-03-05"},{"lineNumber":248,"author":{"gitId":"BoAi01"},"content":"        return userPrefs.getPilotManagerFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":249,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":250,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":251,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":252,"author":{"gitId":"BoAi01"},"content":"    public void setLocationManagerFilePath(Path locationManagerFilePath) {","lastModifiedDate":"2023-03-05"},{"lineNumber":253,"author":{"gitId":"BoAi01"},"content":"        requireNonNull(locationManagerFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":254,"author":{"gitId":"BoAi01"},"content":"        userPrefs.setPilotManagerFilePath(locationManagerFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":255,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":256,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":257,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":258,"author":{"gitId":"BoAi01"},"content":"    public void setLocationManager(ReadOnlyItemManager\u003cLocation\u003e locationManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":259,"author":{"gitId":"BoAi01"},"content":"        this.locationManager.resetData(locationManager);","lastModifiedDate":"2023-03-05"},{"lineNumber":260,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":261,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":262,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":263,"author":{"gitId":"BoAi01"},"content":"    public boolean hasLocation(Location location) {","lastModifiedDate":"2023-03-05"},{"lineNumber":264,"author":{"gitId":"BoAi01"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":265,"author":{"gitId":"BoAi01"},"content":"        return locationManager.hasItem(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":266,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":267,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":268,"author":{"gitId":"BoAi01"},"content":"    public void deleteLocation(Location location) {","lastModifiedDate":"2023-03-05"},{"lineNumber":269,"author":{"gitId":"BoAi01"},"content":"        locationManager.removeItem(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":270,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":271,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":272,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":273,"author":{"gitId":"BoAi01"},"content":"    public void deleteLocation(String id) {","lastModifiedDate":"2023-03-05"},{"lineNumber":274,"author":{"gitId":"BoAi01"},"content":"        locationManager.removeItem(id);","lastModifiedDate":"2023-03-05"},{"lineNumber":275,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":276,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":277,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":278,"author":{"gitId":"BoAi01"},"content":"    public void addLocation(Location location) {","lastModifiedDate":"2023-03-05"},{"lineNumber":279,"author":{"gitId":"BoAi01"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":280,"author":{"gitId":"BoAi01"},"content":"        locationManager.addItem(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":281,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":282,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":283,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":284,"author":{"gitId":"BoAi01"},"content":"    public void setLocation(Location target, Location editedLocation) {","lastModifiedDate":"2023-03-05"},{"lineNumber":285,"author":{"gitId":"BoAi01"},"content":"        requireAllNonNull(target, editedLocation);","lastModifiedDate":"2023-03-05"},{"lineNumber":286,"author":{"gitId":"BoAi01"},"content":"        locationManager.setItem(target, editedLocation);","lastModifiedDate":"2023-03-05"},{"lineNumber":287,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":288,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":289,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":290,"author":{"gitId":"BoAi01"},"content":"    public ObservableList\u003cLocation\u003e getFilteredLocationList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":291,"author":{"gitId":"BoAi01"},"content":"        return filteredLocations;","lastModifiedDate":"2023-03-05"},{"lineNumber":292,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":293,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":294,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":295,"author":{"gitId":"BoAi01"},"content":"    public void updateFilteredLocationList(Predicate\u003cLocation\u003e predicate) {","lastModifiedDate":"2023-03-05"},{"lineNumber":296,"author":{"gitId":"BoAi01"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":297,"author":{"gitId":"BoAi01"},"content":"        filteredLocations.setPredicate(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":298,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":299,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":300,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":301,"author":{"gitId":"jishnu28"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Crew \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":302,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":303,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":304,"author":{"gitId":"BoAi01"},"content":"    public void setCrewManager(ReadOnlyItemManager\u003cCrew\u003e crewManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":305,"author":{"gitId":"tangyuantyy"},"content":"        requireNonNull(crewManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":306,"author":{"gitId":"tangyuantyy"},"content":"        this.crewManager.resetData(crewManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":307,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":308,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":309,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":310,"author":{"gitId":"BoAi01"},"content":"    public ReadOnlyItemManager\u003cCrew\u003e getCrewManager() {","lastModifiedDate":"2023-03-07"},{"lineNumber":311,"author":{"gitId":"tangyuantyy"},"content":"        return crewManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":312,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":313,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":314,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":315,"author":{"gitId":"tangyuantyy"},"content":"    public Path getCrewManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":316,"author":{"gitId":"tangyuantyy"},"content":"        return userPrefs.getCrewManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":317,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":318,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":319,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":320,"author":{"gitId":"tangyuantyy"},"content":"    public void setCrewManagerFilePath(Path crewManagerFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":321,"author":{"gitId":"tangyuantyy"},"content":"        requireNonNull(crewManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":322,"author":{"gitId":"tangyuantyy"},"content":"        userPrefs.setCrewManagerFilePath(crewManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":323,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":324,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":325,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":326,"author":{"gitId":"tangyuantyy"},"content":"    public boolean hasCrew(Crew crew) {","lastModifiedDate":"2023-03-06"},{"lineNumber":327,"author":{"gitId":"tangyuantyy"},"content":"        requireNonNull(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":328,"author":{"gitId":"tangyuantyy"},"content":"        return this.crewManager.hasItem(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":329,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":330,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":331,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":332,"author":{"gitId":"tangyuantyy"},"content":"    public boolean hasCrew(String id) {","lastModifiedDate":"2023-03-06"},{"lineNumber":333,"author":{"gitId":"tangyuantyy"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":334,"author":{"gitId":"tangyuantyy"},"content":"        return this.crewManager.hasItem(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":335,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":336,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":337,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":338,"author":{"gitId":"tangyuantyy"},"content":"    public void addCrew(Crew crew) {","lastModifiedDate":"2023-03-06"},{"lineNumber":339,"author":{"gitId":"tangyuantyy"},"content":"        requireNonNull(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":340,"author":{"gitId":"tangyuantyy"},"content":"        crewManager.addItem(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":341,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":342,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":343,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":344,"author":{"gitId":"tangyuantyy"},"content":"    public void deleteCrew(Crew crew) {","lastModifiedDate":"2023-03-06"},{"lineNumber":345,"author":{"gitId":"tangyuantyy"},"content":"        crewManager.removeItem(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":346,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":347,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":348,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":349,"author":{"gitId":"tangyuantyy"},"content":"    public void deleteCrew(String id) {","lastModifiedDate":"2023-03-06"},{"lineNumber":350,"author":{"gitId":"tangyuantyy"},"content":"        crewManager.removeItem(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":351,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":354,"author":{"gitId":"tangyuantyy"},"content":"    public void setCrew(Crew target, Crew editedCrew) {","lastModifiedDate":"2023-03-06"},{"lineNumber":355,"author":{"gitId":"tangyuantyy"},"content":"        requireAllNonNull(target, editedCrew);","lastModifiedDate":"2023-03-06"},{"lineNumber":356,"author":{"gitId":"tangyuantyy"},"content":"        crewManager.setItem(target, editedCrew);","lastModifiedDate":"2023-03-06"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":360,"author":{"gitId":"tangyuantyy"},"content":"    public ObservableList\u003cCrew\u003e getFilteredCrewList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":361,"author":{"gitId":"tangyuantyy"},"content":"        return filteredCrew;","lastModifiedDate":"2023-03-06"},{"lineNumber":362,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":363,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":364,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":365,"author":{"gitId":"tangyuantyy"},"content":"    public void updateFilteredCrewList(Predicate\u003cCrew\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":367,"author":{"gitId":"tangyuantyy"},"content":"        filteredCrew.setPredicate(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":368,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":369,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":370,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":371,"author":{"gitId":"cetigerlily"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Plane \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":372,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":373,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":374,"author":{"gitId":"BoAi01"},"content":"    public void setPlaneManager(ReadOnlyItemManager\u003cPlane\u003e planeManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":375,"author":{"gitId":"cetigerlily"},"content":"        this.planeManager.resetData(planeManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":376,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":377,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":378,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":379,"author":{"gitId":"BoAi01"},"content":"    public ReadOnlyItemManager\u003cPlane\u003e getPlaneManager() {","lastModifiedDate":"2023-03-07"},{"lineNumber":380,"author":{"gitId":"cetigerlily"},"content":"        return this.planeManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":383,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":384,"author":{"gitId":"cetigerlily"},"content":"    public void addPlane(Plane plane) {","lastModifiedDate":"2023-03-06"},{"lineNumber":385,"author":{"gitId":"cetigerlily"},"content":"        requireAllNonNull(plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":386,"author":{"gitId":"cetigerlily"},"content":"        planeManager.addItem(plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":387,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":388,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":389,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":390,"author":{"gitId":"cetigerlily"},"content":"    public void deletePlane(Plane plane) {","lastModifiedDate":"2023-03-06"},{"lineNumber":391,"author":{"gitId":"cetigerlily"},"content":"        planeManager.removeItem(plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":392,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":393,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":394,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":395,"author":{"gitId":"cetigerlily"},"content":"    public void deletePlane(String id) {","lastModifiedDate":"2023-03-06"},{"lineNumber":396,"author":{"gitId":"cetigerlily"},"content":"        planeManager.removeItem(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":397,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":398,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":399,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":400,"author":{"gitId":"cetigerlily"},"content":"    public boolean hasPlane(Plane plane) {","lastModifiedDate":"2023-03-06"},{"lineNumber":401,"author":{"gitId":"cetigerlily"},"content":"        requireNonNull(plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":402,"author":{"gitId":"cetigerlily"},"content":"        return planeManager.hasItem(plane);","lastModifiedDate":"2023-03-06"},{"lineNumber":403,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":404,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":405,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":406,"author":{"gitId":"cetigerlily"},"content":"    public boolean hasPlane(String id) {","lastModifiedDate":"2023-03-06"},{"lineNumber":407,"author":{"gitId":"cetigerlily"},"content":"        return planeManager.hasItem(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":408,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":409,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":410,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":411,"author":{"gitId":"cetigerlily"},"content":"    public void setPlane(Plane target, Plane editedPlane) {","lastModifiedDate":"2023-03-06"},{"lineNumber":412,"author":{"gitId":"cetigerlily"},"content":"        requireAllNonNull(target, editedPlane);","lastModifiedDate":"2023-03-06"},{"lineNumber":413,"author":{"gitId":"cetigerlily"},"content":"        planeManager.setItem(target, editedPlane);","lastModifiedDate":"2023-03-06"},{"lineNumber":414,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":415,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":416,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":417,"author":{"gitId":"cetigerlily"},"content":"    public ObservableList\u003cPlane\u003e getFilteredPlaneList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":418,"author":{"gitId":"cetigerlily"},"content":"        return filteredPlanes;","lastModifiedDate":"2023-03-06"},{"lineNumber":419,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":420,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":421,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":422,"author":{"gitId":"cetigerlily"},"content":"    public void updateFilteredPlaneList(Predicate\u003cPlane\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":423,"author":{"gitId":"cetigerlily"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":424,"author":{"gitId":"cetigerlily"},"content":"        filteredPlanes.setPredicate(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":425,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":426,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":427,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":428,"author":{"gitId":"jishnu28"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Flight \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":429,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":430,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":431,"author":{"gitId":"BoAi01"},"content":"    public ReadOnlyItemManager\u003cFlight\u003e getFlightManager() {","lastModifiedDate":"2023-03-07"},{"lineNumber":432,"author":{"gitId":"jishnu28"},"content":"        return flightManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":433,"author":{"gitId":"jishnu28"},"content":"    };","lastModifiedDate":"2023-03-06"},{"lineNumber":434,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":435,"author":{"gitId":"jishnu28"},"content":"    public Path getFlightManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":436,"author":{"gitId":"jishnu28"},"content":"        return userPrefs.getFlightManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":437,"author":{"gitId":"jishnu28"},"content":"    };","lastModifiedDate":"2023-03-06"},{"lineNumber":438,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":439,"author":{"gitId":"jishnu28"},"content":"    public void setFlightManagerFilePath(Path flightManagerFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":440,"author":{"gitId":"jishnu28"},"content":"        requireNonNull(flightManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":441,"author":{"gitId":"jishnu28"},"content":"        userPrefs.setFlightManagerFilePath(flightManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":442,"author":{"gitId":"jishnu28"},"content":"    };","lastModifiedDate":"2023-03-06"},{"lineNumber":443,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":444,"author":{"gitId":"BoAi01"},"content":"    public void setFlightManager(ReadOnlyItemManager\u003cFlight\u003e flightManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":445,"author":{"gitId":"jishnu28"},"content":"        this.flightManager.resetData(flightManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":446,"author":{"gitId":"jishnu28"},"content":"    };","lastModifiedDate":"2023-03-06"},{"lineNumber":447,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":448,"author":{"gitId":"jishnu28"},"content":"    public boolean hasFlight(Flight flight) {","lastModifiedDate":"2023-03-06"},{"lineNumber":449,"author":{"gitId":"jishnu28"},"content":"        requireNonNull(flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":450,"author":{"gitId":"jishnu28"},"content":"        return flightManager.hasItem(flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":451,"author":{"gitId":"jishnu28"},"content":"    };","lastModifiedDate":"2023-03-06"},{"lineNumber":452,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":453,"author":{"gitId":"jishnu28"},"content":"    public void deleteFlight(Flight target) {","lastModifiedDate":"2023-03-06"},{"lineNumber":454,"author":{"gitId":"jishnu28"},"content":"        flightManager.removeItem(target);","lastModifiedDate":"2023-03-06"},{"lineNumber":455,"author":{"gitId":"jishnu28"},"content":"    };","lastModifiedDate":"2023-03-06"},{"lineNumber":456,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":457,"author":{"gitId":"jishnu28"},"content":"    public void deleteFlight(String id) {","lastModifiedDate":"2023-03-06"},{"lineNumber":458,"author":{"gitId":"jishnu28"},"content":"        flightManager.removeItem(id);","lastModifiedDate":"2023-03-06"},{"lineNumber":459,"author":{"gitId":"jishnu28"},"content":"    };","lastModifiedDate":"2023-03-06"},{"lineNumber":460,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":461,"author":{"gitId":"jishnu28"},"content":"    public void addFlight(Flight flight) {","lastModifiedDate":"2023-03-06"},{"lineNumber":462,"author":{"gitId":"jishnu28"},"content":"        requireNonNull(flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":463,"author":{"gitId":"jishnu28"},"content":"        flightManager.addItem(flight);","lastModifiedDate":"2023-03-06"},{"lineNumber":464,"author":{"gitId":"jishnu28"},"content":"    };","lastModifiedDate":"2023-03-06"},{"lineNumber":465,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":466,"author":{"gitId":"jishnu28"},"content":"    public void setFlight(Flight target, Flight editedFlight) {","lastModifiedDate":"2023-03-06"},{"lineNumber":467,"author":{"gitId":"jishnu28"},"content":"        requireAllNonNull(target, editedFlight);","lastModifiedDate":"2023-03-06"},{"lineNumber":468,"author":{"gitId":"jishnu28"},"content":"        flightManager.setItem(target, editedFlight);","lastModifiedDate":"2023-03-06"},{"lineNumber":469,"author":{"gitId":"jishnu28"},"content":"    };","lastModifiedDate":"2023-03-06"},{"lineNumber":470,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":471,"author":{"gitId":"jishnu28"},"content":"    public ObservableList\u003cFlight\u003e getFilteredFlightList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":472,"author":{"gitId":"jishnu28"},"content":"        return filteredFlights;","lastModifiedDate":"2023-03-06"},{"lineNumber":473,"author":{"gitId":"jishnu28"},"content":"    };","lastModifiedDate":"2023-03-06"},{"lineNumber":474,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":475,"author":{"gitId":"jishnu28"},"content":"    public void updateFilteredFlightList(Predicate\u003cFlight\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":476,"author":{"gitId":"jishnu28"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":477,"author":{"gitId":"jishnu28"},"content":"        filteredFlights.setPredicate(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":478,"author":{"gitId":"jishnu28"},"content":"    };","lastModifiedDate":"2023-03-06"},{"lineNumber":479,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":480,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":481,"author":{"gitId":"BoAi01"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Generic \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":482,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":487,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":490,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":492,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":497,"author":{"gitId":"jishnu28"},"content":"        return userPrefs.equals(other.userPrefs)","lastModifiedDate":"2023-03-11"},{"lineNumber":498,"author":{"gitId":"tangyuantyy"},"content":"                \u0026\u0026 pilotManager.equals(other.pilotManager)","lastModifiedDate":"2023-03-06"},{"lineNumber":499,"author":{"gitId":"jishnu28"},"content":"                \u0026\u0026 crewManager.equals(other.crewManager)","lastModifiedDate":"2023-03-11"},{"lineNumber":500,"author":{"gitId":"jishnu28"},"content":"                \u0026\u0026 planeManager.equals(other.planeManager)","lastModifiedDate":"2023-03-11"},{"lineNumber":501,"author":{"gitId":"jishnu28"},"content":"                \u0026\u0026 flightManager.equals(other.flightManager)","lastModifiedDate":"2023-03-11"},{"lineNumber":502,"author":{"gitId":"jishnu28"},"content":"                \u0026\u0026 locationManager.equals(other.locationManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":504,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BoAi01":103,"jishnu28":78,"cetigerlily":61,"wxxedu":87,"tangyuantyy":68,"-":107}},{"path":"src/main/java/seedu/address/model/OperationMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The mode at which the command is executed.","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public enum OperationMode {","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * The manager is currently managing pilots.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    PILOT,","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * The manager is currently managing planes.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    PLANE,","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * The manager is currently managing flights.","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    FLIGHT,","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * The manager is currently managing crew.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    CREW,","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * The manager is currently managing locations.","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    LOCATION;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * Converts an integer to a mode.","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * @param i the integer to convert, should be between 0 and 4.","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * @return the mode corresponding to the integer.","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    public static OperationMode fromInt(int i) throws IllegalArgumentException {","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        switch (i) {","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        case 0:","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"            return PILOT;","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        case 1:","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"            return PLANE;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        case 2:","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"            return FLIGHT;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        case 3:","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"            return CREW;","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        case 4:","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"            return LOCATION;","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"                \"Invalid mode index: \" + i + \", should be between 0 and 4\");","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * Converts a string to a mode.","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     * @param s the string to convert, should be one of pilot, plane, flight, crew, location.","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     * @return the mode corresponding to the string.","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"     * @throws IllegalArgumentException if the string is not one of the valid modes.","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    public static OperationMode fromString(String s) throws IllegalArgumentException {","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        switch (s.toLowerCase()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        case \"pilot\":","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"            return PILOT;","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        case \"plane\":","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"            return PLANE;","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        case \"flight\":","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"            return FLIGHT;","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        case \"crew\":","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"            return CREW;","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        case \"location\":","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"            return LOCATION;","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"                \"Invalid mode string: \" + s + \", should be one of pilot, plane, flight, crew, location\");","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     * Converts the mode to an integer, for storage.","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"     * @return the integer representation of the mode.","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    public int toInt() {","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        switch (this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        case PILOT:","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"            return 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        case PLANE:","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"            return 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        case FLIGHT:","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"            return 2;","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        case CREW:","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"            return 3;","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        case LOCATION:","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"            return 4;","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalArgumentException(\"Invalid mode: \" + this);","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"        switch (this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"        case PILOT:","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"            return \"Pilot\";","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        case PLANE:","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"            return \"Plane\";","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"        case FLIGHT:","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"            return \"Flight\";","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"        case CREW:","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"            return \"Crew\";","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        case LOCATION:","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"            return \"Location\";","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalArgumentException(\"Invalid mode: \" + this);","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":116}},{"path":"src/main/java/seedu/address/model/ReadOnlyItemManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":" * Unmodifiable view of an item manager.","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" * @param \u003cT\u003e the type of the item items","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public interface ReadOnlyItemManager\u003cT extends Item\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * Returns true if an item with the same identity as {@code item} exists","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * @param item the item to check","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * @return true if an item with the same identity as {@code item} exists","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    boolean hasItem(T item);","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * Returns true if an item with the given ID exists in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * @param id the ID of the item to check","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * @return true if an item with the given ID exists in the address book","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    boolean hasItem(String id);","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * Returns the item with the given ID.","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @param id the ID of the item to get","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * @return the item with the given ID","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    Optional\u003cT\u003e getItem(String id);","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     * Returns the number of items in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     * @return the number of items in the address book","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    int size();","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     * Returns an unmodifiable view of the items list. This list will not","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * contain any duplicate items.","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * @return an unmodifiable view of the items list","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    ObservableList\u003cT\u003e getItemList();","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":4,"wxxedu":49,"tangyuantyy":1}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    OperationMode getOperationMode();","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"     * Returns the file path of the pilotManager","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"     * @return file path of the pilotManager","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    Path getPilotManagerFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"     * Sets the user prefs\u0027 pilot manager file path.","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"     * @param pilotManagerFilePath the new pilot manager file path","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    void setPilotManagerFilePath(Path pilotManagerFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"     * Returns the file path of the locationManager","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"     * @return file path of the locationManager","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    Path getLocationManagerFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"     * Sets the user prefs\u0027 location manager file path.","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"     * @param locationManagerFilePath the new location manager file path","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    void setLocationManagerFilePath(Path locationManagerFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"    Path getCrewManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"    void setCrewManagerFilePath(Path crewManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"    Path getPlaneManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"    void setPlaneManagerFilePath(Path planeManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"     * Returns the file path of the flightManager","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"     * @return file path of the flightManager","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"    Path getFlightManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"     * Sets the user prefs\u0027 flight manager file path.","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"     * @param flightManagerFilePath the new flight manager file path","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"    void setFlightManagerFilePath(Path flightManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"BoAi01":4,"jishnu28":35,"cetigerlily":2,"wxxedu":3,"tangyuantyy":3,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    private Path pilotManagerFilePath \u003d Paths.get(\"data\", \"pilotmanager.json\");","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    private Path locationManagerFilePath \u003d Paths.get(\"data\", \"locationmanager.json\");","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    private Path crewManagerFilePath \u003d Paths.get(\"data\", \"crewmanager.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    private Path planeManagerFilePath \u003d Paths.get(\"data\", \"planemanager.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    private Path flightManagerFilePath \u003d Paths.get(\"data\", \"flightmanager.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    private int operationModeId \u003d 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        setPilotManagerFilePath(newUserPrefs.getPilotManagerFilePath());","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"        setLocationManagerFilePath(newUserPrefs.getLocationManagerFilePath());","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"        setCrewManagerFilePath(newUserPrefs.getCrewManagerFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"        setPlaneManagerFilePath(newUserPrefs.getPlaneManagerFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"        setFlightManagerFilePath(newUserPrefs.getFlightManagerFilePath());","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OperationMode \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     * Returns the operation mode of the application.","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     * @return the operation mode of the application","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    public OperationMode getOperationMode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        return OperationMode.fromInt(operationModeId);","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"     * Sets the operation mode of the application.","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     * @param operationMode the new operation mode of the application","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    public void setOperationMode(OperationMode operationMode) {","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(operationMode);","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        this.operationModeId \u003d operationMode.toInt();","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PilotManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"    public Path getPilotManagerFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        return this.pilotManagerFilePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"    public void setPilotManagerFilePath(Path pilotManagerFilePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(pilotManagerFilePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        this.pilotManagerFilePath \u003d pilotManagerFilePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d LocationManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"    public Path getLocationManagerFilePath() {","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"        return locationManagerFilePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"    public void setLocationManagerFilePath(Path locationManagerFilePath) {","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"        requireNonNull(locationManagerFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"        this.locationManagerFilePath \u003d locationManagerFilePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"tangyuantyy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CrewManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"tangyuantyy"},"content":"    public Path getCrewManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"tangyuantyy"},"content":"        return this.crewManagerFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"tangyuantyy"},"content":"     * Sets the user prefs\u0027 crew manager file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"tangyuantyy"},"content":"     * @param crewManagerFilePath the new crew manager file path","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"tangyuantyy"},"content":"    public void setCrewManagerFilePath(Path crewManagerFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"tangyuantyy"},"content":"        requireNonNull(crewManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"tangyuantyy"},"content":"        this.crewManagerFilePath \u003d crewManagerFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"cetigerlily"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PlaneManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"cetigerlily"},"content":"    public Path getPlaneManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"cetigerlily"},"content":"        return this.planeManagerFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"cetigerlily"},"content":"    public void setPlaneManagerFilePath(Path planeManagerFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"cetigerlily"},"content":"        requireNonNull(planeManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"cetigerlily"},"content":"        this.planeManagerFilePath \u003d planeManagerFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FlightManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"jishnu28"},"content":"    public Path getFlightManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"jishnu28"},"content":"        return this.flightManagerFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"jishnu28"},"content":"    public void setFlightManagerFilePath(Path flightManagerFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"jishnu28"},"content":"        requireNonNull(flightManagerFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"jishnu28"},"content":"        this.flightManagerFilePath \u003d flightManagerFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"BoAi01"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Generic \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"jishnu28"},"content":"        return guiSettings.equals(o.guiSettings);","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"jishnu28"},"content":"        return Objects.hash(guiSettings);","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BoAi01":14,"jishnu28":28,"cetigerlily":12,"wxxedu":37,"tangyuantyy":17,"-":75}},{"path":"src/main/java/seedu/address/model/crew/Crew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"package seedu.address.model.crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import java.util.UUID;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":" * Represents a Crew in the Wingman app.","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"public class Crew implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    private static final String ID_STRING \u003d \"ID\";","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    private static final String NAME_STRING \u003d \"Name\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    private static final String RANK_STRING \u003d \"Rank\";","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"    private final String id;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    private final String name;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    private final CrewRank rank;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a crew with a random UUID as its id.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"     * @param name the name of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"     * @param rank the rank of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"    public Crew(String name, CrewRank rank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"        this(UUID.randomUUID().toString(), name, rank);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"     * @param id the id of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"     * @param name the name of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"     * @param rank the rank of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"    public Crew(String id, String name, CrewRank rank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"        this.rank \u003d rank;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the name of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"     * @return the name of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"tangyuantyy"},"content":"    public String getName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"tangyuantyy"},"content":"        return name;","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the rank of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"tangyuantyy"},"content":"     * @return the rank of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"tangyuantyy"},"content":"    public CrewRank getRank() {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"tangyuantyy"},"content":"        return rank;","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the id of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"tangyuantyy"},"content":"     * @return the id of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"tangyuantyy"},"content":"    public String getId() {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"tangyuantyy"},"content":"        return id;","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"tangyuantyy"},"content":"    public List\u003cString\u003e getDisplayList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"        return List.of(","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", ID_STRING, id),","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", NAME_STRING, name),","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", RANK_STRING, rank));","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":9,"tangyuantyy":68}},{"path":"src/main/java/seedu/address/model/crew/CrewRank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"package seedu.address.model.crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.exceptions.InvalidCrewRankException;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.pilot.exceptions.InvalidPilotRankException;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":" * Represents the rank of a crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"public enum CrewRank {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"    CABIN_SERVICE_DIRECTOR,","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"    SENIOR_FLIGHT_ATTENDANT,","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"    FLIGHT_ATTENDANT,","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    TRAINEE;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"    public static final String CABIN_SERVICE_DIRECTOR_STRING \u003d \"Cabin Service Director\";","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    public static final String SENIOR_FLIGHT_ATTENDANT_STRING \u003d \"Senior Flight Attendant\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"    public static final String FLIGHT_ATTENDANT_STRING \u003d \"Flight Attendant\";","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"    public static final String TRAINEE_STRING \u003d \"Trainee\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the string representation of the crew rank.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"     * @return the string representation of the crew rank","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"        switch (this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"        case CABIN_SERVICE_DIRECTOR:","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"            return CABIN_SERVICE_DIRECTOR_STRING;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"        case SENIOR_FLIGHT_ATTENDANT:","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"            return SENIOR_FLIGHT_ATTENDANT_STRING;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"        case FLIGHT_ATTENDANT:","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"            return FLIGHT_ATTENDANT_STRING;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"        case TRAINEE:","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"            return TRAINEE_STRING;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"        default:","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"            throw new InvalidPilotRankException(this);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the crew rank from the string representation.","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"     * @param rank the string representation of the crew rank","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"     * @return the crew rank","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"    public static CrewRank fromString(String rank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"tangyuantyy"},"content":"        switch (rank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"tangyuantyy"},"content":"        case CABIN_SERVICE_DIRECTOR_STRING:","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"tangyuantyy"},"content":"            return CABIN_SERVICE_DIRECTOR;","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"tangyuantyy"},"content":"        case SENIOR_FLIGHT_ATTENDANT_STRING:","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"tangyuantyy"},"content":"            return SENIOR_FLIGHT_ATTENDANT;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"tangyuantyy"},"content":"        case FLIGHT_ATTENDANT_STRING:","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"tangyuantyy"},"content":"            return FLIGHT_ATTENDANT;","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"tangyuantyy"},"content":"        case TRAINEE_STRING:","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"tangyuantyy"},"content":"            return TRAINEE;","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"tangyuantyy"},"content":"        default:","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"tangyuantyy"},"content":"            throw new InvalidCrewRankException(rank);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the index of the crew rank in the enum.","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"tangyuantyy"},"content":"     * @return the index of the crew rank in the enum","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"tangyuantyy"},"content":"    public int toIndex() {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"tangyuantyy"},"content":"        switch (this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"tangyuantyy"},"content":"        case CABIN_SERVICE_DIRECTOR:","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"tangyuantyy"},"content":"            return 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"tangyuantyy"},"content":"        case SENIOR_FLIGHT_ATTENDANT:","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"tangyuantyy"},"content":"            return 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"tangyuantyy"},"content":"        case FLIGHT_ATTENDANT:","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"tangyuantyy"},"content":"            return 2;","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"tangyuantyy"},"content":"        case TRAINEE:","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"tangyuantyy"},"content":"            return 3;","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"tangyuantyy"},"content":"        default:","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"tangyuantyy"},"content":"            throw new InvalidCrewRankException(this);","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the crew rank from the index.","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"tangyuantyy"},"content":"     * @param index the index of the crew rank in the enum","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"tangyuantyy"},"content":"     * @return the crew rank","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"tangyuantyy"},"content":"    public static CrewRank fromIndex(int index) {","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"tangyuantyy"},"content":"        switch (index) {","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"tangyuantyy"},"content":"        case 0:","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"tangyuantyy"},"content":"            return CABIN_SERVICE_DIRECTOR;","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"tangyuantyy"},"content":"        case 1:","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"tangyuantyy"},"content":"            return SENIOR_FLIGHT_ATTENDANT;","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"tangyuantyy"},"content":"        case 2:","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"tangyuantyy"},"content":"            return FLIGHT_ATTENDANT;","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"tangyuantyy"},"content":"        case 3:","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"tangyuantyy"},"content":"            return TRAINEE;","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"tangyuantyy"},"content":"        default:","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"tangyuantyy"},"content":"            throw new InvalidCrewRankException(index);","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"tangyuantyy":101}},{"path":"src/main/java/seedu/address/model/crew/exceptions/InvalidCrewRankException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"package seedu.address.model.crew.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":" * The exception thrown when the pilot rank is invalid.","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"public class InvalidCrewRankException extends RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"     * Constructs a new {@code InvalidPilotRankException} with the specified","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"     * detail {@code rank}.","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"     * @param rank the rank that is invalid, either an enum or a string.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"    public InvalidCrewRankException(Object rank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"        super(\"Invalid crew rank\" + rank.toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"tangyuantyy":17}},{"path":"src/main/java/seedu/address/model/flight/Flight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package seedu.address.model.flight;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.UUID;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":" * Represents a flight object in wingman","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"public class Flight implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    private static final String UUID_STRING \u003d \"UUID\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    private static final String CODE_STRING \u003d \"Code\";","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    private final String code;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"    private final String id;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    //TODO: Add departure and arrival locations","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"    //TODO: Add exceptions to ensure departure and arrival locations are distinct","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"     * Creates a flight with a random UUID as its id","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"     * @param code the code of the flight","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"    public Flight(String code) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"        this.id \u003d UUID.randomUUID().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"     * Creates a flight with a given id as its id","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"     * @param id the id for the flight","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"     * @param code the code of the flight","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"    public Flight(String id, String code) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"    public String getCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"        return this.code;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"    public List\u003cString\u003e getDisplayList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"        return List.of(","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", UUID_STRING, id),","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", CODE_STRING, code)","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"        );","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"    public String getId() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"        return this.id;","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":6,"jishnu28":52}},{"path":"src/main/java/seedu/address/model/item/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.model.item;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * The interface for objects that are identifiable by a unique ID.","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"public interface Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * Returns the ID of the object.","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * @return the ID of the object","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    String getId();","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * Returns the display list of the object. This will be used for display","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * in JavaFX. Doing so would make it easier for us to work on the","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * \"back-end\" part of the application first without worrying much about","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * the front-end, and it significantly reduces the amount of work we will","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * need to do. However, this also means that we won\u0027t have as much","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     * flexibility in the front-end.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * @return the display list of the object","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    default List\u003cString\u003e getDisplayList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"        return List.of(\"ID: \" + getId(), \"NOT IMPLEMENTED\");","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * Returns true if the two objects are the same.","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * @param a the first object","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @param b the second object","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * @return true if the two objects are the same type and have the same ID","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    static boolean isSame(Item a, Item b) {","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        if (a \u003d\u003d b) {","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"            return true;","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        return a.getClass().equals(b.getClass()) \u0026\u0026 a.getId().equals(b.getId());","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"BoAi01":2,"wxxedu":41}},{"path":"src/main/java/seedu/address/model/item/UniqueList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.model.item;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.item.exceptions.ItemDuplicateException;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * The class that resembles a list of items that are unique.","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e the type of item in the list. They must implement the {@code","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":" *            Item} interface so that they can be identified by their","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":" *            unique ID.","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"public class UniqueList\u003cT extends Item\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * The internal list responsible for holding the items.","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    private final ObservableList\u003cT\u003e internalList;","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     * The unmodifiable view of the {@code internalList}.","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList;","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * Creates a {@code UniqueList} from the given list of items. Please make","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * sure that the items in the list are unique.","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @param internalList the list of items out of which the {@code UniqueList}","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     *                     will be created.","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    private UniqueList(ObservableList\u003cT\u003e internalList) {","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        this.internalList \u003d internalList;","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * Creates an empty {@code UniqueList}.","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    public UniqueList() {","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        this(FXCollections.observableArrayList());","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * Creates a {@code UniqueList} from the given list of items. Please make","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     * sure that the items in the list are unique.","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     * @param internalList the list of items out of which the {@code UniqueList}","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"     *                     will be created.","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"     * @param \u003cT\u003e          the type of item in the list. They must implement the","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"     *                     {@code Item} interface so that they can be","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"     *                     identified by their unique ID.","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"     * @return a {@code UniqueList} from the given list of items.","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"    public static \u003cT extends Item\u003e UniqueList\u003cT\u003e fromObservableList(ObservableList\u003cT\u003e internalList) {","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(internalList);","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        requireAllNonNull(internalList.toArray());","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"        if (!internalList.isEmpty() \u0026\u0026 itemsHaveDuplicate(internalList)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"            throw new ItemDuplicateException(internalList.get(0).getClass());","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        return new UniqueList\u003c\u003e(internalList);","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     * Returns true if the list contains an equivalent {@code T} as the given","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     * argument.","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     * @return true if the list contains an equivalent {@code T} as the given","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"     *         argument.","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        return this.contains(toCheck.getId());","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"     * Returns true if the list contains an item with the given ID.","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     * @param id the ID to check","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     * @return true if the list contains an item with the given ID.","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"    public boolean contains(String id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        return internalList.stream().anyMatch((val) -\u003e val.getId().equals(id));","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"     * Adds a {@code T} to the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"     * The {@code T} must not already exist in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"            throw new ItemDuplicateException(toAdd.getClass());","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"     * Replaces the {@code T} {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"     * @param target     the {@code T} to be replaced.","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"     * @param editedItem the {@code T} to replace the target with.","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"    public void setItem(T target, T editedItem) {","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"            throw new ItemNotFoundException(target);","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"        if (!Item.isSame(target, editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"            throw new ItemDuplicateException(editedItem.getClass());","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"     * Removes the equivalent {@code T} from the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"     * The {@code T} must exist in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"        this.remove(toRemove.getId());","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"     * Removes the item with the given ID from the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"     * The item with the given ID must exist in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"    public void remove(String id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"        if (!internalList.removeIf((val) -\u003e val.getId().equals(id))) {","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"            throw new ItemNotFoundException(id);","lastModifiedDate":"2023-02-23"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"     * Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"     * @param replacement the replacement list.","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"    public void setItems(List\u003cT\u003e replacement) {","lastModifiedDate":"2023-02-23"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"        if (UniqueList.itemsHaveDuplicate(replacement)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"            throw new ItemDuplicateException(replacement.get(0).getClass());","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"        internalList.setAll(replacement);","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"     * Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2023-02-22"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"     * {@code replacement} must not contain duplicate items.","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"     * @param replacement the replacement list.","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"    public void setItems(UniqueList\u003cT\u003e replacement) {","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"        setItems(replacement.internalList);","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"     * The size of the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"     * @return the size of the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"    public int size() {","lastModifiedDate":"2023-02-23"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"        return internalList.size();","lastModifiedDate":"2023-02-23"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-22"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-22"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-22"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":186,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2023-02-22"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-22"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-22"},{"lineNumber":193,"author":{"gitId":"wxxedu"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-02-22"},{"lineNumber":194,"author":{"gitId":"wxxedu"},"content":"            return true;","lastModifiedDate":"2023-02-22"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"        if (!(other instanceof UniqueList\u003c?\u003e)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"            return false;","lastModifiedDate":"2023-02-22"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"        UniqueList\u003c?\u003e otherList \u003d (UniqueList\u003c?\u003e) other;","lastModifiedDate":"2023-02-22"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"        return internalList.equals(otherList.internalList);","lastModifiedDate":"2023-02-22"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":203,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":204,"author":{"gitId":"wxxedu"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"wxxedu"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-22"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":207,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":208,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":209,"author":{"gitId":"wxxedu"},"content":"     * Returns true if {@code items} contains only unique items.","lastModifiedDate":"2023-02-22"},{"lineNumber":210,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":211,"author":{"gitId":"wxxedu"},"content":"     * @param items the list of items to be checked.","lastModifiedDate":"2023-02-22"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":213,"author":{"gitId":"BoAi01"},"content":"    public static \u003cT extends Item\u003e boolean itemsHaveDuplicate(List\u003cT\u003e items) {","lastModifiedDate":"2023-03-07"},{"lineNumber":214,"author":{"gitId":"wxxedu"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2023-02-22"},{"lineNumber":215,"author":{"gitId":"wxxedu"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2023-02-22"},{"lineNumber":216,"author":{"gitId":"BoAi01"},"content":"                if (Item.isSame(items.get(i), items.get(j))) {","lastModifiedDate":"2023-03-07"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"                    return true;","lastModifiedDate":"2023-02-22"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"                }","lastModifiedDate":"2023-02-22"},{"lineNumber":219,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":220,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":221,"author":{"gitId":"wxxedu"},"content":"        return false;","lastModifiedDate":"2023-02-22"},{"lineNumber":222,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":223,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"BoAi01":7,"wxxedu":216}},{"path":"src/main/java/seedu/address/model/item/exceptions/ItemDuplicateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.model.item.exceptions;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The exception thrown when an operation would result in duplicate objects.","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class ItemDuplicateException extends RuntimeException {","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * The class of the object that is duplicated.","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    private final Class\u003c?\u003e clazz;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     * Creates a new {@code ItemDuplicateException} that has the {@code clazz} of","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * the object that is duplicated.","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * @param clazz","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public ItemDuplicateException(Class\u003c?\u003e clazz) {","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"        super(\"Operation would result in duplicate \" + clazz.getSimpleName()","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"                + \"s\");","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        this.clazz \u003d clazz;","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * Returns the class of the object that is duplicated.","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * @return the class of the object that is duplicated","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    public Class\u003c?\u003e getDuplicatedClass() {","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        return clazz;","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"wxxedu":32}},{"path":"src/main/java/seedu/address/model/item/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.model.item.exceptions;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The exception thrown when an operation cannot find the specified item.","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class ItemNotFoundException extends RuntimeException {","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * Constructs a new {@code ItemNotFoundException} with the specified detail","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     * {@code item}.","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     * @param item the item that was not found","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    public ItemNotFoundException(Object item) {","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"        super(\"Item of class \" + item.getClass().getSimpleName() + \"not found: \" + item);","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"wxxedu":16}},{"path":"src/main/java/seedu/address/model/location/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package seedu.address.model.location;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.UUID;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":" * Location is a unit place that the flight can travel to or","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":" *  arrive at.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"public class Location implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    private static final String NAME_STRING \u003d \"Name\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    private static final String ID_STRING \u003d \"ID\";","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    private final String name;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    private final String id;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * Creates a Location object with the given name.","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     * @param name name of the location","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    public Location(String name) {","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"        this(UUID.randomUUID().toString(), name);","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"     * Creates a Location object from the given id and name","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"     * @param id a unique id assigned to the location","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     * @param name the name of the location","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    public Location(String id, String name) {","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     * Returns the name of the location in string.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     * @return the name of the location","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    public String getName() {","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"        return name;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        return getName();","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    public String getId() {","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"        return id;","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    public List\u003cString\u003e getDisplayList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        return List.of(","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", NAME_STRING, name),","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", ID_STRING, id));","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"     * Returns true if both locations have the same name.","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"     * This defines a weaker notion of equality between two locations.","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"    public boolean isSameLocation(Location otherLocation) {","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"        if (otherLocation \u003d\u003d this) {","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"            return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"        return otherLocation !\u003d null","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"                \u0026\u0026 otherLocation.getName().equals(getName());","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":73}},{"path":"src/main/java/seedu/address/model/location/exceptions/DuplicateLocationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package seedu.address.model.location.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * Signals that the operation would result in duplicate locations.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"public class DuplicateLocationException extends RuntimeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"    public DuplicateLocationException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"        super(\"Operation would result in duplicate locations\");","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":10}},{"path":"src/main/java/seedu/address/model/location/exceptions/LocationNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package seedu.address.model.location.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * Signals that the location cannot be found in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"public class LocationNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"    public LocationNotFoundException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"        super(\"Location not found in the list. \");","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":10}},{"path":"src/main/java/seedu/address/model/pilot/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.model.pilot;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.exceptions.InvalidGenderException;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * The gender.","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"public enum Gender {","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    MALE,","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    FEMALE,","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    OTHER;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * Converts the gender to index for Json storage.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * @return the gender.","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public int toIndex() {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"        switch (this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        case MALE:","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"            return 0;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"        case FEMALE:","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"            return 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"        case OTHER:","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"            return 2;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidGenderException();","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * Converts the gender from index.","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @param index the index","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * @return gender.","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    public static Gender fromIndex(int index) {","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        switch (index) {","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        case 0:","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"            return MALE;","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        case 1:","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"            return FEMALE;","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        case 2:","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"            return OTHER;","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidGenderException();","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":49}},{"path":"src/main/java/seedu/address/model/pilot/Pilot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.model.pilot;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.UUID;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * Represents a Pilot in the Wingman app.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"public class Pilot implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    private static final String UUID_STRING \u003d \"UUID\";","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    private static final String NAME_STRING \u003d \"Name\";","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    private static final String GENDER_STRING \u003d \"Gender\";","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    private static final String AGE_STRING \u003d \"Age\";","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    private static final String RANK_STRING \u003d \"Rank\";","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    private static final String FLIGHT_HR_STRING \u003d \"Flight Hour\";","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    private final String name;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    private final int age;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    private final Gender gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    private final int flightHour;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    private final PilotRank rank;","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    private final String id;","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * Creates a pilot with a random UUID as its id.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * @param name       the name of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     * @param age        the age of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * @param gender     the gender of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     * @param rank       the rank of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * @param flightHour the flight hour of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    public Pilot(String name, int age, Gender gender, PilotRank rank, int flightHour) {","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        this(UUID.randomUUID().toString(), name, age, gender, rank, flightHour);","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * Creates a pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     * @param id         the id of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     * @param name       the name of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     * @param age        the age of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     * @param gender     the gender of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     * @param rank       the rank of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"     * @param flightHour the flight hour of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    public Pilot(String id, String name, int age, Gender gender, PilotRank rank, int flightHour) {","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        this.rank \u003d rank;","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        this.flightHour \u003d flightHour;","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"     * Returns the name of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"     * @return the name of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"    public String getName() {","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        return name;","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"     * Returns the rank of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"     * @return the rank of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    public PilotRank getRank() {","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        return rank;","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     * Returns the age of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"     * @return the age of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"    public int getAge() {","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        return age;","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"     * Gets the gender of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"     * @return the gender of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"        return gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"     * Gets the flight hour of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"     * @return the flight hour of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"    public int getFlightHour() {","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        return flightHour;","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"    public List\u003cString\u003e getDisplayList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"        return List.of(","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"            String.format(\"%s: %s\", UUID_STRING, id),","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"            String.format(\"%s: %s\", NAME_STRING, name),","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"            String.format(\"%s: %s\", GENDER_STRING, gender),","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"            String.format(\"%s: %s\", AGE_STRING, age),","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"            String.format(\"%s: %s\", RANK_STRING, rank),","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"            String.format(\"%s: %s\", FLIGHT_HR_STRING, flightHour)","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"    public String getId() {","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"        return id;","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":20,"wxxedu":109}},{"path":"src/main/java/seedu/address/model/pilot/PilotRank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.model.pilot;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.exceptions.InvalidPilotRankException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * Represents the rank of a pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"public enum PilotRank {","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    TRAINING_CAPTAIN,","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    CAPTAIN,","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    SENIOR_FIRST_OFFICER,","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    FIRST_OFFICER,","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    SECOND_OFFICER,","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    CADET;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    public static final String TRAINING_CAPTAIN_STRING \u003d \"Training Captain\";","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    public static final String CAPTAIN_STRING \u003d \"Captain\";","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public static final String SENIOR_FIRST_OFFICER_STRING \u003d \"Senior First Officer\";","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    public static final String FIRST_OFFICER_STRING \u003d \"First Officer\";","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    public static final String SECOND_OFFICER_STRING \u003d \"Second Officer\";","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    public static final String CADET_STRING \u003d \"Cadet\";","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     * Returns the string representation of the pilot rank.","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * @return the string representation of the pilot rank","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"        switch (this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        case TRAINING_CAPTAIN:","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"            return TRAINING_CAPTAIN_STRING;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        case CAPTAIN:","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"            return CAPTAIN_STRING;","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"        case SENIOR_FIRST_OFFICER:","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"            return SENIOR_FIRST_OFFICER_STRING;","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"        case FIRST_OFFICER:","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"            return FIRST_OFFICER_STRING;","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        case SECOND_OFFICER:","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"            return SECOND_OFFICER_STRING;","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        case CADET:","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"            return CADET_STRING;","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidPilotRankException(this);","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * Returns the pilot rank from the string representation.","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     * @param rank the string representation of the pilot rank","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * @return the pilot rank","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    public static PilotRank fromString(String rank) {","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        switch (rank) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        case TRAINING_CAPTAIN_STRING:","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"            return TRAINING_CAPTAIN;","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        case CAPTAIN_STRING:","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"            return CAPTAIN;","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        case SENIOR_FIRST_OFFICER_STRING:","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"            return SENIOR_FIRST_OFFICER;","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        case FIRST_OFFICER_STRING:","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"            return FIRST_OFFICER;","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        case SECOND_OFFICER_STRING:","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"            return SECOND_OFFICER;","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        case CADET_STRING:","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"            return CADET;","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidPilotRankException(rank);","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"     * Returns the index of the pilot rank in the enum.","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     * @return the index of the pilot rank in the enum","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    public int toIndex() {","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        switch (this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        case TRAINING_CAPTAIN:","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"            return 0;","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        case CAPTAIN:","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"            return 1;","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        case SENIOR_FIRST_OFFICER:","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"            return 2;","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        case FIRST_OFFICER:","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"            return 3;","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        case SECOND_OFFICER:","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"            return 4;","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        case CADET:","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"            return 5;","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidPilotRankException(this);","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"     * Returns the pilot rank from the index.","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"     * @param index the index of the pilot rank in the enum","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"     * @return the pilot rank","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"    public static PilotRank fromIndex(int index) {","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        switch (index) {","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        case 0:","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"            return TRAINING_CAPTAIN;","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"        case 1:","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"            return CAPTAIN;","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"        case 2:","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"            return SENIOR_FIRST_OFFICER;","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        case 3:","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"            return FIRST_OFFICER;","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"        case 4:","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"            return SECOND_OFFICER;","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        case 5:","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"            return CADET;","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"        default:","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"            throw new InvalidPilotRankException(index);","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":120}},{"path":"src/main/java/seedu/address/model/pilot/exceptions/InvalidGenderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.model.pilot.exceptions;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * Represents an error that the gender specified is not valid.","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class InvalidGenderException extends RuntimeException {","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * Constructs a new {@code InvalidGenderException} with no detail message.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"    public InvalidGenderException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"        super();","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * Constructs a new {@code InvalidGenderException} with the specified detail","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     * message.","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * @param message The detail message.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    public InvalidGenderException(String message) {","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        super(message);","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":23}},{"path":"src/main/java/seedu/address/model/pilot/exceptions/InvalidPilotRankException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.model.pilot.exceptions;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":" * The exception thrown when the pilot rank is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"public class InvalidPilotRankException extends RuntimeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"     * Constructs a new {@code InvalidPilotRankException} with the specified","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"     * detail {@code rank}.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     * @param rank the rank that is invalid, either an enum or a string.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    public InvalidPilotRankException(Object rank) {","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"        super(\"Invalid pilot rank\" + rank.toString());","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":16}},{"path":"src/main/java/seedu/address/model/plane/Plane.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package seedu.address.model.plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.util.UUID;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":" * Represents a plane in the Wingman app.","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"public class Plane implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    private static final String UUID_STRING \u003d \"UUID\";","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    private static final String MODEL_STRING \u003d \"Model\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    private static final String AGE_STRING \u003d \"Age\";","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"    private final String id;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    private final String model;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    private final int age;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     * Creates a plane with a random UUID as its id.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     * @param model the model of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     * @param age   the age of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"    public Plane(String model, int age) {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"        this.id \u003d UUID.randomUUID().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"     * Creates a plane with a specific given id.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"     * @param model the model of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"     * @param age   the age of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"     * @param id    the id of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"    public Plane(String id, String model, int age) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"     * Returns the model of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"     * @return the model of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"    public String getModel() {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"        return this.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"     * Returns the age of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"     * @return the age of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"    public int getAge() {","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"        return this.age;","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"    public List\u003cString\u003e getDisplayList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"        return List.of(","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", UUID_STRING, id),","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", MODEL_STRING, model),","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"                String.format(\"%s: %s\", AGE_STRING, age)","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"cetigerlily"},"content":"    public String getId() {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"cetigerlily"},"content":"        return this.id;","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"cetigerlily"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"%s: %s %s: %s %s: %s\",","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"                UUID_STRING, id, MODEL_STRING, model, AGE_STRING, age);","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":12,"cetigerlily":63}},{"path":"src/main/java/seedu/address/storage/ItemStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" * Represents the interface for a storage that stores Item items.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":" * @param \u003cT\u003e The type of the item to be stored.","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"public interface ItemStorage\u003cT extends Item\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * @return the file path of the data file.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    Path getPath();","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"     * Reads the data from the file.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     * @return the data from the file.","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * @throws DataConversionException if the data in storage is not in the","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     *                                 expected format.","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * @throws IOException             if there was any problem when reading","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     *                                 from the storage.","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cT\u003e\u003e read()","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @see #read()","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cT\u003e\u003e read(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"     * Saves the given {@link ReadOnlyItemManager} to the storage.","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"     * @param itemManager cannot be null.","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    void save(ReadOnlyItemManager\u003cT\u003e itemManager)","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"            throws IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"     * @see #save(ReadOnlyItemManager)","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    void save(ReadOnlyItemManager\u003cT\u003e itemManager, Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"            throws IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":12,"wxxedu":44}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wxxedu":1,"-":46}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.Crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"import seedu.address.model.flight.Flight;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.location.Location;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.Pilot;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.model.plane.Plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"public interface Storage extends UserPrefsStorage {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Pilot methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     * Returns the path to the pilot manager file.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @return the path to the pilot manager file.","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    Path getPilotManagerFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * Reads the pilot manager from the {@code Storage::getPilotManagerFilePath}","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * @return the pilot manager.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cPilot\u003e\u003e readPilotManager() throws DataConversionException,","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"                                                         IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"     * Saves the pilot manager to the {@code Storage::getLocationManagerFilePath}","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    void savePilotManager(ReadOnlyItemManager\u003cPilot\u003e pilotManager) throws IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Location methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"     * Retrieves the file path to location manager.","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"     * @return the location manager file path","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"    Path getLocationManagerFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"     * Reads the location manager from the {@code Storage::getLocationManagerFilePath}","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"     * @return the location manager.","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cLocation\u003e\u003e readLocationManager() throws DataConversionException,","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"            IOException;","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"     * Saves the location manager to {@code Storage::getLocationManagerFilePath}","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"     * @param locationManager the location manager","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"     * @throws IOException when the file cannot be saved","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"    void saveLocationManager(ReadOnlyItemManager\u003cLocation\u003e locationManager) throws IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Crew methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"tangyuantyy"},"content":"     * Returns the path to the crew manager file.","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"tangyuantyy"},"content":"     * @return the path to the crew manager file.","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"tangyuantyy"},"content":"    Path getCrewManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"tangyuantyy"},"content":"     * Reads the crew manager from the {@code Storage::getCrewManagerFilePath}","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"tangyuantyy"},"content":"     * @return the crew manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cCrew\u003e\u003e readCrewManager() throws DataConversionException,","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"tangyuantyy"},"content":"            IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"tangyuantyy"},"content":"     * Saves the crew manager to the {@code Storage::getCrewManagerFilePath}","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"    void saveCrewManager(ReadOnlyItemManager\u003cCrew\u003e crewManager) throws IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Plane methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"cetigerlily"},"content":"    Path getPlaneManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cPlane\u003e\u003e readPlaneManager() throws DataConversionException,","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"cetigerlily"},"content":"            IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"    void savePlaneManager(ReadOnlyItemManager\u003cPlane\u003e planeManager) throws IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Flight methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"jishnu28"},"content":"     * Returns the path to the flight manager file.","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"jishnu28"},"content":"     * @return the path to the flight manager file.","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"jishnu28"},"content":"    Path getFlightManagerFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"jishnu28"},"content":"     * Reads the flight manager from the {@code Storage::getFlightManagerFilePath}","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"jishnu28"},"content":"     * @return the flight manager","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"jishnu28"},"content":"     * @throws DataConversionException when the file cannot be converted","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"jishnu28"},"content":"     * @throws IOException when the file cannot be read","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"    Optional\u003c? extends ReadOnlyItemManager\u003cFlight\u003e\u003e readFlightManager() throws DataConversionException,","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"jishnu28"},"content":"            IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"jishnu28"},"content":"     * Saves the flight manager to the {@code Storage::getFlightManagerFilePath}","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"jishnu28"},"content":"     * @param flightManager the flight manager","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"jishnu28"},"content":"     * @throws IOException when the file cannot be saved","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"BoAi01"},"content":"    void saveFlightManager(ReadOnlyItemManager\u003cFlight\u003e flightManager) throws IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"BoAi01":32,"jishnu28":38,"cetigerlily":6,"tangyuantyy":19,"wxxedu":17,"-":24}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.Crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"import seedu.address.model.flight.Flight;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.location.Location;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.Pilot;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.model.plane.Plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    private final ItemStorage\u003cPilot\u003e pilotStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    private final ItemStorage\u003cLocation\u003e locationStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    private final ItemStorage\u003cCrew\u003e crewStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    private final ItemStorage\u003cPlane\u003e planeStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    private final ItemStorage\u003cFlight\u003e flightStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     * Creates a {@code StorageManager} with the given {@code UserPrefStorage} and {@code ItemStorages}.","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    public StorageManager(UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"                          ItemStorage\u003cPilot\u003e pilotStorage,","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"                          ItemStorage\u003cLocation\u003e locationStorage,","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"                          ItemStorage\u003cCrew\u003e crewStorage,","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"                          ItemStorage\u003cPlane\u003e planeStorage,","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"                          ItemStorage\u003cFlight\u003e flightStorage) {","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        this.pilotStorage \u003d pilotStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"        this.locationStorage \u003d locationStorage;","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"        this.crewStorage \u003d crewStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"        this.planeStorage \u003d planeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"        this.flightStorage \u003d flightStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Pilot methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"    public Path getPilotManagerFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        return pilotStorage.getPath();","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cPilot\u003e\u003e readPilotManager()","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        return readPilotManager(pilotStorage.getPath());","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"     * Reads the pilot manager from the given file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"     * @param filePath the file path to read from","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"     * @return the pilot manager","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"     * @throws IOException             if there was any problem when reading from the file.","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cPilot\u003e\u003e readPilotManager(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        return pilotStorage.read(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"    public void savePilotManager(ReadOnlyItemManager\u003cPilot\u003e pilotManager) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"        savePilotManager(pilotManager, pilotStorage.getPath());","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"     * Saves the pilot manager to the given file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"     * @param pilotManager the pilot manager to save","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"     * @param filePath     the file path to save to","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"    public void savePilotManager(ReadOnlyItemManager\u003cPilot\u003e pilotManager, Path filePath) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"        logger.fine(\"Attempting to saving pilots to data file: \" + filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"        pilotStorage.save(pilotManager, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Location methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"    public Path getLocationManagerFilePath() {","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"        return locationStorage.getPath();","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cLocation\u003e\u003e readLocationManager()","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"BoAi01"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"BoAi01"},"content":"        return readLocationManager(locationStorage.getPath());","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"BoAi01"},"content":"     * Reads the location manager from the given file path.","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"BoAi01"},"content":"     * @param filePath the file path to read from","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"BoAi01"},"content":"     * @return the location manager","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"BoAi01"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"     * @throws IOException             if there was any problem when reading from the file.","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cLocation\u003e\u003e readLocationManager(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"BoAi01"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"BoAi01"},"content":"        logger.fine(\"Attempting to read location manager from file: \" + filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"BoAi01"},"content":"        return locationStorage.read(filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"    public void saveLocationManager(ReadOnlyItemManager\u003cLocation\u003e locationManager) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"        saveLocationManager(locationManager, locationStorage.getPath());","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"     * Saves the location manager to the given file path.","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"     * @param locationManager the location manager to save","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"     * @param filePath the file path to save to","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"     * @throws IOException when there are errors writing to the file","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"BoAi01"},"content":"    public void saveLocationManager(ReadOnlyItemManager\u003cLocation\u003e locationManager, Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"BoAi01"},"content":"            throws IOException {","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"BoAi01"},"content":"        logger.fine(\"Attempting to saving locations to data file: \" + filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"BoAi01"},"content":"        locationStorage.save(locationManager, filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"tangyuantyy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Crew methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"tangyuantyy"},"content":"    public Path getCrewManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"tangyuantyy"},"content":"        return crewStorage.getPath();","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cCrew\u003e\u003e readCrewManager()","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"tangyuantyy"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"tangyuantyy"},"content":"        return readCrewManager(crewStorage.getPath());","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"tangyuantyy"},"content":"     * Reads the crew manager from the given file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"tangyuantyy"},"content":"     * @param filePath the file path to read from","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"tangyuantyy"},"content":"     * @return the crew manager","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"tangyuantyy"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"tangyuantyy"},"content":"     * @throws IOException             if there was any problem when reading from the file.","lastModifiedDate":"2023-03-06"},{"lineNumber":179,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cCrew\u003e\u003e readCrewManager(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"tangyuantyy"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"tangyuantyy"},"content":"        return crewStorage.read(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"BoAi01"},"content":"    public void saveCrewManager(ReadOnlyItemManager\u003cCrew\u003e crewManager) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"tangyuantyy"},"content":"        saveCrewManager(crewManager, crewStorage.getPath());","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"tangyuantyy"},"content":"     * Saves the crew manager to the given file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"tangyuantyy"},"content":"     * @param crewManager the pilot manager to save","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"tangyuantyy"},"content":"     * @param filePath     the file path to save to","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"tangyuantyy"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"BoAi01"},"content":"    public void saveCrewManager(ReadOnlyItemManager\u003cCrew\u003e crewManager, Path filePath) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":199,"author":{"gitId":"tangyuantyy"},"content":"        logger.fine(\"Attempting to saving crews to data file: \" + filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"tangyuantyy"},"content":"        crewStorage.save(crewManager, filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":203,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"cetigerlily"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Plane methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":206,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"cetigerlily"},"content":"    public Path getPlaneManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"cetigerlily"},"content":"        return planeStorage.getPath();","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":212,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cPlane\u003e\u003e readPlaneManager()","lastModifiedDate":"2023-03-07"},{"lineNumber":213,"author":{"gitId":"cetigerlily"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":214,"author":{"gitId":"cetigerlily"},"content":"        return readPlaneManager(planeStorage.getPath());","lastModifiedDate":"2023-03-06"},{"lineNumber":215,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":216,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":217,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":218,"author":{"gitId":"cetigerlily"},"content":"     * Reads the plane manager from the given file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":219,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":220,"author":{"gitId":"cetigerlily"},"content":"     * @param filePath                 the file path to read from.","lastModifiedDate":"2023-03-06"},{"lineNumber":221,"author":{"gitId":"cetigerlily"},"content":"     * @return                         the plane manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":222,"author":{"gitId":"cetigerlily"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-06"},{"lineNumber":223,"author":{"gitId":"cetigerlily"},"content":"     * @throws IOException             if there was any problem when reading from the file.","lastModifiedDate":"2023-03-06"},{"lineNumber":224,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":225,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cPlane\u003e\u003e readPlaneManager(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":226,"author":{"gitId":"cetigerlily"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":227,"author":{"gitId":"cetigerlily"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":228,"author":{"gitId":"cetigerlily"},"content":"        return planeStorage.read(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":229,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":230,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":231,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":232,"author":{"gitId":"BoAi01"},"content":"    public void savePlaneManager(ReadOnlyItemManager\u003cPlane\u003e planeManager) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":233,"author":{"gitId":"cetigerlily"},"content":"        savePlaneManager(planeManager, planeStorage.getPath());","lastModifiedDate":"2023-03-06"},{"lineNumber":234,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":235,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":236,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":237,"author":{"gitId":"cetigerlily"},"content":"     * Saves the plane manager to the given file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":238,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":239,"author":{"gitId":"cetigerlily"},"content":"     * @param planeManager the location manager to save","lastModifiedDate":"2023-03-06"},{"lineNumber":240,"author":{"gitId":"cetigerlily"},"content":"     * @param filePath     the file path to save to","lastModifiedDate":"2023-03-06"},{"lineNumber":241,"author":{"gitId":"cetigerlily"},"content":"     * @throws IOException when there are errors writing to the file","lastModifiedDate":"2023-03-06"},{"lineNumber":242,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":243,"author":{"gitId":"BoAi01"},"content":"    public void savePlaneManager(ReadOnlyItemManager\u003cPlane\u003e planeManager, Path filePath) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":244,"author":{"gitId":"cetigerlily"},"content":"        logger.fine(\"Attempting to saving pilots to data file: \" + filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":245,"author":{"gitId":"cetigerlily"},"content":"        planeStorage.save(planeManager, filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":246,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":247,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":248,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":249,"author":{"gitId":"jishnu28"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Flight methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":250,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":251,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":252,"author":{"gitId":"jishnu28"},"content":"    public Path getFlightManagerFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":253,"author":{"gitId":"jishnu28"},"content":"        return flightStorage.getPath();","lastModifiedDate":"2023-03-06"},{"lineNumber":254,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":255,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":256,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cFlight\u003e\u003e readFlightManager()","lastModifiedDate":"2023-03-07"},{"lineNumber":258,"author":{"gitId":"jishnu28"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":259,"author":{"gitId":"jishnu28"},"content":"        return readFlightManager(flightStorage.getPath());","lastModifiedDate":"2023-03-06"},{"lineNumber":260,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":261,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":262,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":263,"author":{"gitId":"jishnu28"},"content":"     * Reads the flight manager from the given file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":264,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":265,"author":{"gitId":"jishnu28"},"content":"     * @param filePath the file path to read from","lastModifiedDate":"2023-03-06"},{"lineNumber":266,"author":{"gitId":"jishnu28"},"content":"     * @return the flight manager","lastModifiedDate":"2023-03-06"},{"lineNumber":267,"author":{"gitId":"jishnu28"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-06"},{"lineNumber":268,"author":{"gitId":"jishnu28"},"content":"     * @throws IOException             if there was any problem when reading from the file.","lastModifiedDate":"2023-03-06"},{"lineNumber":269,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":270,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cFlight\u003e\u003e readFlightManager(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":271,"author":{"gitId":"jishnu28"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":272,"author":{"gitId":"jishnu28"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":273,"author":{"gitId":"jishnu28"},"content":"        return flightStorage.read(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":277,"author":{"gitId":"BoAi01"},"content":"    public void saveFlightManager(ReadOnlyItemManager\u003cFlight\u003e flightManager) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":278,"author":{"gitId":"jishnu28"},"content":"        saveFlightManager(flightManager, flightStorage.getPath());","lastModifiedDate":"2023-03-06"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":281,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":282,"author":{"gitId":"jishnu28"},"content":"     * Saves the flight manager to the given file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":283,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":284,"author":{"gitId":"jishnu28"},"content":"     * @param flightManager the flight manager to save","lastModifiedDate":"2023-03-06"},{"lineNumber":285,"author":{"gitId":"jishnu28"},"content":"     * @param filePath     the file path to save to","lastModifiedDate":"2023-03-06"},{"lineNumber":286,"author":{"gitId":"jishnu28"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-06"},{"lineNumber":287,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":288,"author":{"gitId":"BoAi01"},"content":"    public void saveFlightManager(ReadOnlyItemManager\u003cFlight\u003e flightManager, Path filePath) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":289,"author":{"gitId":"jishnu28"},"content":"        logger.fine(\"Attempting to saving flights to data file: \" + filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":290,"author":{"gitId":"jishnu28"},"content":"        flightStorage.save(flightManager, filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":291,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BoAi01":75,"jishnu28":45,"cetigerlily":41,"tangyuantyy":38,"wxxedu":33,"-":60}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefs}.","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wxxedu":2,"-":36}},{"path":"src/main/java/seedu/address/storage/json/JsonAdaptedModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.storage.json;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * A model that has been adapted to be stored in a JSON file.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e The type of the model.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"public interface JsonAdaptedModel\u003cT\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * Converts this JsonAdaptedModel into the model\u0027s {@code Identifiable} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted item.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    T toModelType() throws IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":17}},{"path":"src/main/java/seedu/address/storage/json/JsonItemManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.storage.json;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" * Represents a manager that manages a list of {@code JsonAdaptedModel}","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":" * objects. Implement this class and add Jackson annotations to allow","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * Jackson to convert the manager into a JSON file.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e The type of the model.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":" * @param \u003cF\u003e The type of the JsonAdaptedModel.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"public abstract class JsonItemManager\u003cT extends Item, F extends JsonAdaptedModel\u003cT\u003e\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"        implements JsonAdaptedModel\u003cItemManager\u003cT\u003e\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    public static final String MESSAGE_DUPLICATE_ITEMS \u003d \"Items list contains duplicate item(s).\";","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * The list of items to be stored.","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    protected final List\u003cF\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * The function to convert the item into a JsonAdaptedModel.","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * @param item The item to convert.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     * @return The JsonAdaptedModel.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    protected abstract F getJsonAdaptedModel(T item);","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     * Reads the items from the manager and stores them in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * @param manager The manager to read from.","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    protected void readFromManager(ReadOnlyItemManager\u003cT\u003e manager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        items.addAll(manager.getItemList().stream()","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"                .map(this::getJsonAdaptedModel)","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    public ItemManager\u003cT\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"        ItemManager\u003cT\u003e manager \u003d new ItemManager\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        for (F item : items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"            T modelItem \u003d item.toModelType();","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"            if (manager.hasItem(modelItem)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ITEMS + \": \" + modelItem);","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"            manager.addItem(modelItem);","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        return manager;","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":8,"wxxedu":53}},{"path":"src/main/java/seedu/address/storage/json/JsonItemStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.storage.json;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.util.FileHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.util.JsonHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.ItemStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":" * Represents the base class for the persistent storage of a","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":" * {@link ReadOnlyItemManager}. Extend this class to use the features","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":" * provided by this.","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":" * @param \u003cT\u003e the type of the {@link Item} to be stored.","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":" * @param \u003cF\u003e the type of the {@link JsonAdaptedModel} to be stored.","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":" * @param \u003cM\u003e the type of the {@link JsonItemManager} to be stored.","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"public abstract class JsonItemStorage\u003cT extends Item,","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"        F extends JsonAdaptedModel\u003cT\u003e,","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"        M extends JsonItemManager\u003cT, F\u003e\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"        implements ItemStorage\u003cT\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * The logger to be used by this class.","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    private final Logger logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    private final Path filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     * The dependency to handle JSON operations, this is just so that we can","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"     * have better separation of concerns in unit testing.","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    private final JsonHelper jsonHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"     * The dependency to handle file operations, this is just so that we can","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"     * have better separation of concerns in unit testing.","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    private final FileHelper fileHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     * Creates a new JsonIdentifiableStorage object.","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     * @param filePath the path to the file to be read from and written to.","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"    public JsonItemStorage(Path filePath) {","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"        this(filePath, JsonHelper.INSTANCE, FileHelper.INSTANCE, LogsCenter.getLogger(JsonItemStorage.class));","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"     * Creates a new JsonIdentifiableStorage object.","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"     * @param filePath   the path to the file to be read from and written to.","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"     * @param jsonHelper the JsonHelper to be used.","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"     * @param fileHelper the FileHelper to be used.","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"    protected JsonItemStorage(Path filePath, JsonHelper jsonHelper,","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"                              FileHelper fileHelper, Logger logger) {","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        this.jsonHelper \u003d jsonHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        this.fileHelper \u003d fileHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        this.logger \u003d logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"     * Gets the class of the {@link JsonItemManager} that was used, i","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"     * .e. gets the class of the {@code M} type parameter. This is needed","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"     * because the information about the type parameter is erased at runtime.","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"     * @return the class of the {@link JsonItemManager} that was used.","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"    protected abstract Class\u003cM\u003e getManagerClass();","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"     * Creates a new {@link JsonItemManager} from the given","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"     * {@link ReadOnlyItemManager}. This is needed because we cannot","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"     * specify a constructor for the {@code M} type parameter.","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"     * @param modelManager the {@link ReadOnlyItemManager} to be used","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"     *                     to create the new {@link JsonItemManager}.","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"     * @return a new {@link JsonItemManager} created from the given","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"    protected abstract M createManager(ReadOnlyItemManager\u003cT\u003e modelManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"    public Path getPath() {","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"        return filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cT\u003e\u003e read()","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"        return read(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"    public Optional\u003c? extends ReadOnlyItemManager\u003cT\u003e\u003e read(Path filePath)","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cM\u003e jsonManager \u003d jsonHelper.readJsonFile(filePath, getManagerClass());","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"        if (jsonManager.isEmpty()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"            return Optional.of(jsonManager.get().toModelType());","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"            logger.warning(\"Illegal values found in \" + filePath + \": \"","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"                                + ive.getMessage());","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"    public void save(ReadOnlyItemManager\u003cT\u003e itemManager)","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"            throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"BoAi01"},"content":"        save(itemManager, filePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"    public void save(ReadOnlyItemManager\u003cT\u003e itemManager,","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"                     Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"BoAi01"},"content":"        requireAllNonNull(itemManager, filePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"        fileHelper.createIfMissing(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"BoAi01"},"content":"        jsonHelper.saveJsonFile(createManager(itemManager), filePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":27,"wxxedu":111}},{"path":"src/main/java/seedu/address/storage/json/adapted/JsonAdaptedCrew.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"package seedu.address.storage.json.adapted;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.Crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.CrewRank;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.exceptions.InvalidCrewRankException;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.storage.json.JsonAdaptedModel;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":" * Represents a Jackson-friendly version of a Crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"public class JsonAdaptedCrew implements JsonAdaptedModel\u003cCrew\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Crew\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"     * The id of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"    private final String id;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"     * The name of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"    private final String name;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"     * The rank of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"tangyuantyy"},"content":"    private final int rank;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"     * Constructs a {@code JsonAdaptedPilot} with the given crew details.","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"tangyuantyy"},"content":"     * This is intended for Jackson to use.","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"     * @param id   The id of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"     * @param rank The rank of the crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"    public JsonAdaptedCrew(@JsonProperty(\"id\") String id,","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"                            @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"                            @JsonProperty(\"rank\") int rank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"tangyuantyy"},"content":"        this.rank \u003d rank;","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"tangyuantyy"},"content":"     * Converts a given {@code Pilot} into this class for Jackson use.","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"tangyuantyy"},"content":"     * @param crew The crew to be converted.","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"tangyuantyy"},"content":"    public JsonAdaptedCrew(Crew crew) {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"tangyuantyy"},"content":"        this.id \u003d crew.getId();","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"tangyuantyy"},"content":"        this.name \u003d crew.getName();","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"tangyuantyy"},"content":"        this.rank \u003d crew.getRank().toIndex();","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"tangyuantyy"},"content":"    public Crew toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"tangyuantyy"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"tangyuantyy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"id\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"tangyuantyy"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"tangyuantyy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"name\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"tangyuantyy"},"content":"        final CrewRank rank;","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"tangyuantyy"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"tangyuantyy"},"content":"            rank \u003d CrewRank.fromIndex(this.rank);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"tangyuantyy"},"content":"        } catch (InvalidCrewRankException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"tangyuantyy"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"tangyuantyy"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"tangyuantyy"},"content":"        return new Crew(id, name, rank);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"tangyuantyy":81}},{"path":"src/main/java/seedu/address/storage/json/adapted/JsonAdaptedFlight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package seedu.address.storage.json.adapted;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"import seedu.address.model.flight.Flight;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"import seedu.address.storage.json.JsonAdaptedModel;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":" * Represents a Jackson-friendly version of a Flight","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"public class JsonAdaptedFlight implements JsonAdaptedModel\u003cFlight\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Flight\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"     * The id of the flight.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"    private final String id;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"     * The code of the flight.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    private final String code;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"     * Constructs a {@code JsonAdaptedFlight} with the given flight details.","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"     * This is intended for Jackson to use.","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"     * @param id   The id of the flight.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"     * @param code The name of the flight.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    public JsonAdaptedFlight(@JsonProperty(\"id\") String id,","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"                               @JsonProperty(\"code\") String code) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"jishnu28"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"     * Converts a given {@code Flight} into this class for Jackson use.","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"     * @param flight The flight to be converted.","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"    public JsonAdaptedFlight(Flight flight) {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"        this.id \u003d flight.getId();","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"        this.code \u003d flight.getCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"jishnu28"},"content":"    public Flight toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"jishnu28"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"jishnu28"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"id\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"jishnu28"},"content":"        if (code \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"jishnu28"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"code\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"jishnu28"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"jishnu28"},"content":"        return new Flight(id, code);","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"jishnu28":62}},{"path":"src/main/java/seedu/address/storage/json/adapted/JsonAdaptedLocation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package seedu.address.storage.json.adapted;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.location.Location;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.JsonAdaptedModel;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" * Represents a Jackson-friendly version of a Pilot.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public class JsonAdaptedLocation implements JsonAdaptedModel\u003cLocation\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Location\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     * The id of the location.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    private final String id;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     * The name of the location.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    private final String name;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"     * Constructs a {@code JsonAdaptedLocation} with the given location details.","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"     * This is intended for Jackson to use.","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"     * @param id   The id of the location.","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     * @param name The name of the location.","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    public JsonAdaptedLocation(@JsonProperty(\"id\") String id,","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"                               @JsonProperty(\"name\") String name) {","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"     * Converts a given {@code Location} into this class for Jackson use.","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"     * @param location The location to be converted.","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    public JsonAdaptedLocation(Location location) {","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        this.id \u003d location.getId();","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"        this.name \u003d location.getName();","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"    public Location toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"id\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"name\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"        return new Location(id, name);","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":61}},{"path":"src/main/java/seedu/address/storage/json/adapted/JsonAdaptedPilot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.storage.json.adapted;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.Gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.Pilot;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.PilotRank;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.exceptions.InvalidGenderException;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.exceptions.InvalidPilotRankException;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import seedu.address.storage.json.JsonAdaptedModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * Represents a Jackson-friendly version of a Pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"public class JsonAdaptedPilot implements JsonAdaptedModel\u003cPilot\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Pilot\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * The id of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    private final String id;","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * The name of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    private final String name;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"     * The rank of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    private final int rank;","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     * The age of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    private final int age;","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"     * The gender of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    private final int gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"     * The flight hour of the pilot.","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    private final int flightHour;","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"     * Constructs a {@code JsonAdaptedPilot} with the given pilot details.","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"     * This is intended for Jackson to use.","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"     * @param id   The id of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"     * @param rank The rank of the pilot.","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"    public JsonAdaptedPilot(@JsonProperty(\"id\") String id,","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        @JsonProperty(\"rank\") int rank,","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        @JsonProperty(\"age\") int age,","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"        @JsonProperty(\"gender\") int gender,","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        @JsonProperty(\"flightHour\") int flightHour) {","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"        this.rank \u003d rank;","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        this.flightHour \u003d flightHour;","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"     * Converts a given {@code Pilot} into this class for Jackson use.","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"     * @param pilot The pilot to be converted.","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"    public JsonAdaptedPilot(Pilot pilot) {","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        this.id \u003d pilot.getId();","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        this.name \u003d pilot.getName();","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        this.rank \u003d pilot.getRank().toIndex();","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        this.gender \u003d pilot.getGender().toIndex();","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        this.age \u003d pilot.getAge();","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        this.flightHour \u003d pilot.getFlightHour();","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"    public Pilot toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"id\"));","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"name\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"        final PilotRank rank;","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"            rank \u003d PilotRank.fromIndex(this.rank);","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        } catch (InvalidPilotRankException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        final Gender gender;","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"            gender \u003d Gender.fromIndex(this.gender);","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"        } catch (InvalidGenderException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"        return new Pilot(id, name, age, gender, rank, flightHour);","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"wxxedu":114}},{"path":"src/main/java/seedu/address/storage/json/adapted/JsonAdaptedPlane.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package seedu.address.storage.json.adapted;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.model.plane.Plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.storage.json.JsonAdaptedModel;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":" * Represents a Jackson-friendly version of a Plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"public class JsonAdaptedPlane implements JsonAdaptedModel\u003cPlane\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Plane\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"    private final String id;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    private final String planeModel;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"    private final int planeAge;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"     * Constructs a {@code JsonAdaptedPlane} with the given plane details.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"     * This is intended for Jackson to use.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"     * @param id         the id of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"     * @param planeModel the model of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"     * @param planeAge   the age of the plane.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    public JsonAdaptedPlane(@JsonProperty(\"id\") String id,","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"                            @JsonProperty(\"planeModel\") String planeModel,","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cetigerlily"},"content":"                            @JsonProperty(\"planeAge\") int planeAge) {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"        this.planeModel \u003d planeModel;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"        this.planeAge \u003d planeAge;","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"     * Converts a given {@code Plane} into this class for Jackson use.","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"     * @param plane the plane to be converted.","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"    public JsonAdaptedPlane(Plane plane) {","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"        this.id \u003d plane.getId();","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"        this.planeModel \u003d plane.getModel();","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"        this.planeAge \u003d plane.getAge();","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"cetigerlily"},"content":"    public Plane toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"cetigerlily"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"cetigerlily"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"id\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"cetigerlily"},"content":"        if (planeModel \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"cetigerlily"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"model\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"cetigerlily"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"cetigerlily"},"content":"        return new Plane(id, planeModel, planeAge);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cetigerlily":59}},{"path":"src/main/java/seedu/address/storage/json/serializable/JsonSerializableCrewManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"package seedu.address.storage.json.serializable;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"tangyuantyy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.Crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.JsonItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.storage.json.adapted.JsonAdaptedCrew;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":" * Represents a serializable manager of crew.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"@JsonRootName(value \u003d \"crewmanager\")","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"public class JsonSerializableCrewManager extends JsonItemManager\u003cCrew, JsonAdaptedCrew\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"    public JsonSerializableCrewManager(","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"            @JsonProperty(\"items\") List\u003cJsonAdaptedCrew\u003e crew) {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"        this.items.addAll(crew);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a new JsonSerializableCrewManager from the given manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"     * @param manager the manager to create the JsonSerializableCrewManager","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     *                from, it should be a ReadOnlyItemManager","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"     *                \u0026lt;Crew\u0026gt;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"     * @return a new JsonSerializableCrewManager","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"tangyuantyy"},"content":"    public static JsonSerializableCrewManager from(","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cCrew\u003e manager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"tangyuantyy"},"content":"        final JsonSerializableCrewManager res \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"tangyuantyy"},"content":"                new JsonSerializableCrewManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"tangyuantyy"},"content":"        res.readFromManager(manager);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"tangyuantyy"},"content":"        return res;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"tangyuantyy"},"content":"    protected JsonAdaptedCrew getJsonAdaptedModel(Crew item) {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"tangyuantyy"},"content":"        return new JsonAdaptedCrew(item);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":5,"tangyuantyy":42}},{"path":"src/main/java/seedu/address/storage/json/serializable/JsonSerializableFlightManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package seedu.address.storage.json.serializable;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"jishnu28"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"import seedu.address.model.flight.Flight;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.JsonItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"import seedu.address.storage.json.adapted.JsonAdaptedFlight;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":" * Represents a serializable manager of flights.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"@JsonRootName(value \u003d \"flightmanager\")","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"public class JsonSerializableFlightManager extends JsonItemManager\u003cFlight, JsonAdaptedFlight\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"    public JsonSerializableFlightManager(","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"            @JsonProperty(\"items\") List\u003cJsonAdaptedFlight\u003e flights) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"        this.items.addAll(flights);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"     * Creates a new JsonSerializableFlightManager from the given manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"     * @param manager the manager to create the JsonSerializableFlightManager","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     *                from, it should be a ReadOnlyItemManager","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"     *                \u0026lt;Flight\u0026gt;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"     * @return a new JsonSerializableFlightManager","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"jishnu28"},"content":"    public static JsonSerializableFlightManager from(","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cFlight\u003e manager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"jishnu28"},"content":"        final JsonSerializableFlightManager res \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"jishnu28"},"content":"                new JsonSerializableFlightManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"jishnu28"},"content":"        res.readFromManager(manager);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"jishnu28"},"content":"        return res;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"jishnu28"},"content":"    protected JsonAdaptedFlight getJsonAdaptedModel(Flight item) {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"jishnu28"},"content":"        return new JsonAdaptedFlight(item);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":5,"jishnu28":44}},{"path":"src/main/java/seedu/address/storage/json/serializable/JsonSerializableLocationManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package seedu.address.storage.json.serializable;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.location.Location;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.JsonItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.adapted.JsonAdaptedLocation;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":" * Represents a serializable manager of locations.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"@JsonRootName(value \u003d \"locationmanager\")","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"public class JsonSerializableLocationManager extends JsonItemManager\u003cLocation, JsonAdaptedLocation\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    public JsonSerializableLocationManager(","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"        @JsonProperty(\"items\") List\u003cJsonAdaptedLocation\u003e location) {","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"        this.items.addAll(location);","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"     * Creates a new JsonSerializablePilotManager from the given manager.","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"     * @param manager the manager to create the JsonSerializablePilotManager","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     *                from, it should be a ReadOnlyItemManager","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     *                \u0026lt;Pilot\u0026gt;","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     * @return a new JsonSerializablePilotManager","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"    public static JsonSerializableLocationManager from(ReadOnlyItemManager\u003cLocation\u003e manager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"        final JsonSerializableLocationManager res \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"            new JsonSerializableLocationManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"        res.readFromManager(manager);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        return res;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    protected JsonAdaptedLocation getJsonAdaptedModel(Location item) {","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"        return new JsonAdaptedLocation(item);","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":46}},{"path":"src/main/java/seedu/address/storage/json/serializable/JsonSerializablePilotManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.storage.json.serializable;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.Pilot;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.JsonItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import seedu.address.storage.json.adapted.JsonAdaptedPilot;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" * Represents a serializable manager of pilots.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"@JsonRootName(value \u003d \"pilotmanager\")","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"public class JsonSerializablePilotManager extends JsonItemManager\u003cPilot, JsonAdaptedPilot\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    public JsonSerializablePilotManager(","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"        @JsonProperty(\"items\") List\u003cJsonAdaptedPilot\u003e pilots) {","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"        this.items.addAll(pilots);","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * Creates a new JsonSerializablePilotManager from the given manager.","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"     * @param manager the manager to create the JsonSerializablePilotManager","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     *                from, it should be a ReadOnlyItemManager","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"     *                \u0026lt;Pilot\u0026gt;","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"     * @return a new JsonSerializablePilotManager","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    public static JsonSerializablePilotManager from(","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"        ReadOnlyItemManager\u003cPilot\u003e manager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        final JsonSerializablePilotManager res \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"            new JsonSerializablePilotManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        res.readFromManager(manager);","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        return res;","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    protected JsonAdaptedPilot getJsonAdaptedModel(Pilot item) {","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        return new JsonAdaptedPilot(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":5,"wxxedu":42}},{"path":"src/main/java/seedu/address/storage/json/serializable/JsonSerializablePlaneManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package seedu.address.storage.json.serializable;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cetigerlily"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.model.plane.Plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.JsonItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.storage.json.adapted.JsonAdaptedPlane;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":" * Represents a serializable manager of planes.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"@JsonRootName(value \u003d \"planemanager\")","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"public class JsonSerializablePlaneManager extends JsonItemManager\u003cPlane, JsonAdaptedPlane\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"    public JsonSerializablePlaneManager(","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"            @JsonProperty(\"items\") List\u003cJsonAdaptedPlane\u003e planes) {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"        this.items.addAll(planes);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cetigerlily"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"     * Creates a new JsonSerializablePlaneManager from the given manager.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"     * @param manager the manager to create the JsonSerializablePlaneManager","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"     *                from, it should be a ReadOnlyItemManager","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"cetigerlily"},"content":"     *                \u0026lt;Plane\u0026gt;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cetigerlily"},"content":"     * @return        a new JsonSerializablePilotManager.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cetigerlily"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    public static JsonSerializablePlaneManager from(ReadOnlyItemManager\u003cPlane\u003e manager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"cetigerlily"},"content":"        final JsonSerializablePlaneManager res \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cetigerlily"},"content":"                new JsonSerializablePlaneManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cetigerlily"},"content":"        res.readFromManager(manager);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cetigerlily"},"content":"        return res;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cetigerlily"},"content":"    protected JsonAdaptedPlane getJsonAdaptedModel(Plane item) {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cetigerlily"},"content":"        return new JsonAdaptedPlane(item);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":5,"cetigerlily":40}},{"path":"src/main/java/seedu/address/storage/json/storage/JsonCrewManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tangyuantyy"},"content":"package seedu.address.storage.json.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"tangyuantyy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.model.crew.Crew;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.JsonItemStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.storage.json.adapted.JsonAdaptedCrew;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"tangyuantyy"},"content":"import seedu.address.storage.json.serializable.JsonSerializableCrewManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"tangyuantyy"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"tangyuantyy"},"content":" * Represents a storage for {@link Crew}s.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"tangyuantyy"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"public class JsonCrewManagerStorage extends JsonItemStorage\u003cCrew,","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"tangyuantyy"},"content":"        JsonAdaptedCrew, JsonSerializableCrewManager\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"tangyuantyy"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"tangyuantyy"},"content":"     * Creates a new JsonIdentifiableStorage object.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"tangyuantyy"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"tangyuantyy"},"content":"     * @param filePath the path to the file to be read from and written to.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"tangyuantyy"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"tangyuantyy"},"content":"    public JsonCrewManagerStorage(Path filePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"tangyuantyy"},"content":"        super(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"tangyuantyy"},"content":"    protected Class\u003cJsonSerializableCrewManager\u003e getManagerClass() {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"tangyuantyy"},"content":"        return JsonSerializableCrewManager.class;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"tangyuantyy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"tangyuantyy"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    protected JsonSerializableCrewManager createManager(ReadOnlyItemManager\u003cCrew\u003e modelManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"tangyuantyy"},"content":"        return JsonSerializableCrewManager.from(modelManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"tangyuantyy"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"tangyuantyy"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":4,"tangyuantyy":30}},{"path":"src/main/java/seedu/address/storage/json/storage/JsonFlightManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jishnu28"},"content":"package seedu.address.storage.json.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"jishnu28"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"jishnu28"},"content":"import seedu.address.model.flight.Flight;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.JsonItemStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"jishnu28"},"content":"import seedu.address.storage.json.adapted.JsonAdaptedFlight;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"jishnu28"},"content":"import seedu.address.storage.json.serializable.JsonSerializableFlightManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"jishnu28"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"jishnu28"},"content":" * Represents a storage for {@link Flight}s.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"jishnu28"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"public class JsonFlightManagerStorage extends JsonItemStorage\u003cFlight,","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"jishnu28"},"content":"        JsonAdaptedFlight, JsonSerializableFlightManager\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"jishnu28"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jishnu28"},"content":"     * Creates a new JsonIdentifiableStorage object.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"jishnu28"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"     * @param filePath the path to the file to be read from and written to.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"jishnu28"},"content":"    public JsonFlightManagerStorage(Path filePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"jishnu28"},"content":"        super(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"jishnu28"},"content":"    protected Class\u003cJsonSerializableFlightManager\u003e getManagerClass() {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"jishnu28"},"content":"        return JsonSerializableFlightManager.class;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"jishnu28"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"jishnu28"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    protected JsonSerializableFlightManager createManager(ReadOnlyItemManager\u003cFlight\u003e modelManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"jishnu28"},"content":"        return JsonSerializableFlightManager.from(modelManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"jishnu28"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"jishnu28"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":4,"jishnu28":32}},{"path":"src/main/java/seedu/address/storage/json/storage/JsonLocationManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package seedu.address.storage.json.storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.location.Location;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.JsonItemStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.adapted.JsonAdaptedLocation;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.serializable.JsonSerializableLocationManager;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" * Represents a storage for {@link Location}s.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"public class JsonLocationManagerStorage extends JsonItemStorage\u003cLocation,","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"        JsonAdaptedLocation, JsonSerializableLocationManager\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     * Creates a new JsonIdentifiableStorage object.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * @param filePath the path to the file to be read from and written to.","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    public JsonLocationManagerStorage(Path filePath) {","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"        super(filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    protected Class\u003cJsonSerializableLocationManager\u003e getManagerClass() {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        return JsonSerializableLocationManager.class;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    protected JsonSerializableLocationManager createManager(ReadOnlyItemManager\u003cLocation\u003e modelManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"        return JsonSerializableLocationManager.from(modelManager);","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":34}},{"path":"src/main/java/seedu/address/storage/json/storage/JsonPilotManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.storage.json.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.pilot.Pilot;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.JsonItemStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import seedu.address.storage.json.adapted.JsonAdaptedPilot;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import seedu.address.storage.json.serializable.JsonSerializablePilotManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":" * Represents a storage for {@link Pilot}s.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"public class JsonPilotManagerStorage extends JsonItemStorage\u003cPilot,","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"        JsonAdaptedPilot, JsonSerializablePilotManager\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * Creates a new JsonIdentifiableStorage object.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     * @param filePath the path to the file to be read from and written to.","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    public JsonPilotManagerStorage(Path filePath) {","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"        super(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    protected Class\u003cJsonSerializablePilotManager\u003e getManagerClass() {","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"        return JsonSerializablePilotManager.class;","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    protected JsonSerializablePilotManager createManager(ReadOnlyItemManager\u003cPilot\u003e modelManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        return JsonSerializablePilotManager.from(modelManager);","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":4,"wxxedu":30}},{"path":"src/main/java/seedu/address/storage/json/storage/JsonPlaneManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cetigerlily"},"content":"package seedu.address.storage.json.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cetigerlily"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.model.plane.Plane;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.JsonItemStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.storage.json.adapted.JsonAdaptedPlane;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cetigerlily"},"content":"import seedu.address.storage.json.serializable.JsonSerializablePlaneManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cetigerlily"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cetigerlily"},"content":" * Represents a storage for {@link Plane}s.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cetigerlily"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"public class JsonPlaneManagerStorage extends JsonItemStorage\u003cPlane,","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"cetigerlily"},"content":"        JsonAdaptedPlane, JsonSerializablePlaneManager\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cetigerlily"},"content":"    public JsonPlaneManagerStorage(Path filePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cetigerlily"},"content":"        super(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cetigerlily"},"content":"    protected Class\u003cJsonSerializablePlaneManager\u003e getManagerClass() {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cetigerlily"},"content":"        return JsonSerializablePlaneManager.class;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cetigerlily"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cetigerlily"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    protected JsonSerializablePlaneManager createManager(ReadOnlyItemManager\u003cPlane\u003e modelManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"cetigerlily"},"content":"        return JsonSerializablePlaneManager.from(modelManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cetigerlily"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cetigerlily"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"BoAi01":4,"cetigerlily":25}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"wxxedu":3,"-":82}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.CommandResult;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"import seedu.address.ui.core.ItemListPanel;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    private ItemListPanel itemListPanel;","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"        itemListPanel \u003d new ItemListPanel(logic.getFilteredItemList());","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"        Region item \u003d itemListPanel.getRoot();","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"        personListPanelPlaceholder.getChildren().add(item);","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        StatusBarFooter statusBarFooter \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"            new StatusBarFooter(logic.getOperationMode());","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wxxedu":12,"-":185}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.OperationMode;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    private Label modeStatus;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    public StatusBarFooter(OperationMode mode) {","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"        modeStatus.setText(\"Mode: \" + mode.toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wxxedu":4,"-":22}},{"path":"src/main/java/seedu/address/ui/core/ItemCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.ui.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" * A generic view for an item.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"public class ItemCard extends UiPart\u003cVBox\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    private static final String FXML \u003d \"ItemCard.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    private final Item item;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"    private VBox cardPane;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * Creates a view for the given item. The item is an identifiable object","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     * that can be displayed in a list.","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"     * @param item The item to be displayed.","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"    public ItemCard(Item item) {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"        super(FXML);","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"        this.item \u003d item;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"        for (String line : item.getDisplayList()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"            Label label \u003d new Label(line);","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"            cardPane.getChildren().add(label);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * Returns the item that is being displayed.","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @return The item that is being displayed.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"    public Item getItem() {","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        return item;","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"BoAi01":4,"wxxedu":38}},{"path":"src/main/java/seedu/address/ui/core/ItemListCell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.ui.core;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * The cell that displays the item in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" *","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":" * @param \u003cT\u003e The type of item to display.","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"public class ItemListCell\u003cT extends Item\u003e extends ListCell\u003cT\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"    protected void updateItem(T item, boolean empty) {","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"        super.updateItem(item, empty);","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"        if (empty || item \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"            setGraphic(null);","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"            setText(null);","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"        } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"            ItemCard card \u003d new ItemCard(item);","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"            setGraphic(card.getRoot());","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":2,"wxxedu":21}},{"path":"src/main/java/seedu/address/ui/core/ItemListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.ui.core;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":" * A generic panel for displaying a list of items.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"public class ItemListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"    private static final String FXML \u003d \"ItemListPanel.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"    private final Logger logger;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    private ListView\u003cItem\u003e itemList;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"     * Creates a {@code ItemListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"     * @param itemList The list of items to be displayed.","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    public ItemListPanel(ObservableList\u003cItem\u003e itemList) {","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"        this(LogsCenter.getLogger(ItemListPanel.class), itemList);","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"     * Creates a {@code ItemListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"     * @param logger   The logger to be used.","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"     * @param itemList The list of items to be displayed.","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    public ItemListPanel(Logger logger,","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItem\u003e itemList) {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        super(FXML);","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        this.logger \u003d logger;","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        this.itemList.setItems(itemList);","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        this.itemList.setCellFactory(listView -\u003e new ItemListCell\u003c\u003e());","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"BoAi01":4,"wxxedu":43}},{"path":"src/main/resources/view/ItemCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"    \u003cVBox fx:id\u003d\"cardPane\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"wxxedu":7}},{"path":"src/main/resources/view/ItemListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"    \u003cListView fx:id\u003d\"itemList\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"wxxedu":8}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"          xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    \u003cLabel fx:id\u003d\"modeStatus\"/\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"wxxedu":3,"-":11}},{"path":"src/test/java/seedu/address/logic/core/CommandGroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.OperationMode;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":" * Tests for {@link CommandGroup}.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"public class CommandGroupTest extends LogicCoreParserTestBase {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    void getOperationMode_void_returnsOperationMode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"        CommandGroup commandGroup1 \u003d new CommandGroup(OperationMode.PILOT,","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"            commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"        CommandGroup commandGroup2 \u003d new CommandGroup(OperationMode.CREW,","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"            commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"        CommandGroup commandGroup3 \u003d new CommandGroup(OperationMode.FLIGHT,","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"            commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"        CommandGroup commandGroup4 \u003d new CommandGroup(OperationMode.LOCATION,","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"            commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"        CommandGroup commandGroup5 \u003d new CommandGroup(OperationMode.PLANE,","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"            commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"        assertEquals(OperationMode.PILOT, commandGroup1.getOperationMode());","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        assertEquals(OperationMode.CREW, commandGroup2.getOperationMode());","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"        assertEquals(OperationMode.FLIGHT, commandGroup3.getOperationMode());","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        assertEquals(OperationMode.LOCATION, commandGroup4.getOperationMode());","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        assertEquals(OperationMode.PLANE, commandGroup5.getOperationMode());","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"    void getCommandFactory_void_returnsCommandFactory() {","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        assertEquals(commandFactories, commandGroup.getFactories());","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    void parse_nullTokens_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        assertThrows(NullPointerException.class, () -\u003e commandGroup.parse(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"    void parse_emptyTokens_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        Deque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ParseException.class, () -\u003e commandGroup.parse(tokens));","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    void parse_invalidTokens_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        Deque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e(List.of(\"invalid\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ParseException.class, () -\u003e commandGroup.parse(tokens));","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    void parse_validTokens1_returnsCommand() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        Deque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e(List.of(COMMAND_WORD1, \"arg1\", \"arg2\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"        CommandParam commandParam \u003d new CommandParam(Optional.of(\"arg1 arg2\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"            Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        assertEquals(command1, commandGroup.parse(tokens));","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory1).createCommand(commandParam);","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    void parse_validTokens2_returnsCommand() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        Deque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e(List.of(COMMAND_WORD2, \"arg1\",","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"            \"arg2\", \"arg3\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        CommandParam commandParam \u003d new CommandParam(Optional.of(\"arg1 arg2 arg3\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"            Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        assertEquals(command2, commandGroup.parse(tokens));","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory2).createCommand(commandParam);","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":85}},{"path":"src/test/java/seedu/address/logic/core/CommandParamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":" * TODO: write more tests for CommandParam.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"public class CommandParamTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    private static final String PREFIX_A \u003d \"/a\";","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    private static final String PREFIX_B \u003d \"/b\";","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    private static final String PREFIX_C \u003d \"/c\";","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    private static final String PREFIX_D \u003d \"/d\";","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    private final Set\u003cString\u003e prefixes \u003d Set.of(PREFIX_A, PREFIX_B, PREFIX_C, PREFIX_D);","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    private Deque\u003cString\u003e tokens;","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    void setUp() {","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        tokens \u003d new ArrayDeque\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    void from_emptyTokenEmptyPrefixes_returnsEmpty() {","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d CommandParam.from(tokens, Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        assertFalse(param.getUnnamedValue().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        assertFalse(param.getNamedValues().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    void from_emptyTokenNonEmptyPrefixes_returnsEmpty() {","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d CommandParam.from(tokens, Optional.of(prefixes));","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        assertFalse(param.getUnnamedValue().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        assertFalse(param.getNamedValues().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    void from_nonEmptyTokenEmptyPrefixes_returnsUnnamedValue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(List.of(\"token\", \"token2\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d CommandParam.from(tokens, Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        assertTrue(param.getUnnamedValue().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        assertEquals(\"token token2\", param.getUnnamedValue().get());","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        assertFalse(param.getNamedValues().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    void from_nonEmptyTokenNonEmptyPrefixes_returnsNamedValues() {","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(List.of(\"token1\", \"token2\", PREFIX_A, \"value1\", \"value2\",","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"            PREFIX_B, \"value2\", PREFIX_C, \"value3\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d CommandParam.from(tokens, Optional.of(prefixes));","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        assertTrue(param.getUnnamedValue().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        assertEquals(\"token1 token2\", param.getUnnamedValue().get());","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        assertTrue(param.getNamedValues().isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e namedValues \u003d param.getNamedValues().get();","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        assertEquals(4, namedValues.size());","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"            assertTrue(namedValues.containsKey(prefix));","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value1 value2\"), namedValues.get(PREFIX_A));","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value2\"), namedValues.get(PREFIX_B));","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value3\"), namedValues.get(PREFIX_C));","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.empty(), namedValues.get(PREFIX_D));","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"    void parseUnnamedValue_emptyToken_returnEmptyResult() {","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e result \u003d CommandParam.parseUnnamedValue(tokens, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"    void parseUnnamedValue_nonEmptyTokenNoPrefix_returnFullString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        final String expected \u003d \"hello world how are you\";","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(Arrays.asList(expected.split(\" \")));","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e result \u003d CommandParam.parseUnnamedValue(tokens, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"        assertTrue(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"        assertEquals(expected, result.get());","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"    void parseUnnamedValue_nonEmptyTokenWithPrefix_returnStringBeforePrefix() {","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"        final String expected \u003d \"hello world how are you\";","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(Arrays.asList(expected.split(\" \")));","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(List.of(PREFIX_A, \"value1\", \"value2\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e result \u003d CommandParam.parseUnnamedValue(tokens, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"wxxedu"},"content":"        assertTrue(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"        assertEquals(expected, result.get());","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"    void parseNamedValues_emptyTokenNonEmptyPrefixes_returnResultOfSizePrefixes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e result \u003d CommandParam.parseNamedValues(tokens, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.isEmpty());","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"        assertEquals(prefixes.size(), result.size());","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"            assertTrue(result.containsKey(prefix));","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"wxxedu"},"content":"            assertFalse(result.get(prefix).isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"    void parseNamedValues_nonEmptyTokenNonEmptyPrefixes_returnResultOfSizePrefixes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(List.of(PREFIX_A, \"value1\", \"value2\", PREFIX_B, \"value2\", PREFIX_C, \"value3\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e result \u003d CommandParam.parseNamedValues(tokens, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.isEmpty());","lastModifiedDate":"2023-03-04"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"        assertEquals(prefixes.size(), result.size());","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"            assertTrue(result.containsKey(prefix));","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value1 value2\"), result.get(PREFIX_A));","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value2\"), result.get(PREFIX_B));","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value3\"), result.get(PREFIX_C));","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.empty(), result.get(PREFIX_D));","lastModifiedDate":"2023-03-04"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"wxxedu"},"content":"    void parseNamedValues_unnamedNotRemoved_shouldRemoveUnnamedAndReturnCorrectValues() {","lastModifiedDate":"2023-03-04"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"        tokens.addAll(List.of(\"hello\", \"world\", PREFIX_A, \"value1\", \"value2\", PREFIX_B, \"value2\", PREFIX_C, \"value3\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"        Map\u003cString, Optional\u003cString\u003e\u003e result \u003d CommandParam.parseNamedValues(tokens, prefixes);","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.isEmpty());","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"        assertEquals(prefixes.size(), result.size());","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"            assertTrue(result.containsKey(prefix));","lastModifiedDate":"2023-03-04"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value1 value2\"), result.get(PREFIX_A));","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value2\"), result.get(PREFIX_B));","lastModifiedDate":"2023-03-04"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.of(\"value3\"), result.get(PREFIX_C));","lastModifiedDate":"2023-03-04"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"        assertEquals(Optional.empty(), result.get(PREFIX_D));","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":186,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":187,"author":{"gitId":"wxxedu"},"content":"    void getUnnamedValue_emptyToken_returnEmpty() {","lastModifiedDate":"2023-03-04"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e result \u003d param.getUnnamedValue();","lastModifiedDate":"2023-03-04"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":193,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":194,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"    void getUnnamedValue_nonEmptyToken_returnToken() {","lastModifiedDate":"2023-03-04"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e expected \u003d Optional.of(\"token\");","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(expected, Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":203,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cString\u003e result \u003d param.getUnnamedValue();","lastModifiedDate":"2023-03-04"},{"lineNumber":204,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":205,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"        assertTrue(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"wxxedu"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":208,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":209,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":210,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":211,"author":{"gitId":"wxxedu"},"content":"    void getUnnamedValueOrThrow_emptyToken_throwsException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":213,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":214,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":215,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ParseException.class, param::getUnnamedValueOrThrow);","lastModifiedDate":"2023-03-04"},{"lineNumber":216,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":219,"author":{"gitId":"wxxedu"},"content":"    void getNamedValues_emptyToken_returnEmpty() {","lastModifiedDate":"2023-03-04"},{"lineNumber":220,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":221,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":222,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":223,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cMap\u003cString, Optional\u003cString\u003e\u003e\u003e result \u003d param.getNamedValues();","lastModifiedDate":"2023-03-04"},{"lineNumber":224,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":225,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":226,"author":{"gitId":"wxxedu"},"content":"        assertFalse(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":227,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":229,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":230,"author":{"gitId":"wxxedu"},"content":"    void getNamedValues_nonEmptyToken_returnToken() {","lastModifiedDate":"2023-03-04"},{"lineNumber":231,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":232,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cMap\u003cString, Optional\u003cString\u003e\u003e\u003e expected \u003d Optional.of(new HashMap\u003c\u003e());","lastModifiedDate":"2023-03-04"},{"lineNumber":233,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), expected);","lastModifiedDate":"2023-03-04"},{"lineNumber":234,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":235,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cMap\u003cString, Optional\u003cString\u003e\u003e\u003e result \u003d param.getNamedValues();","lastModifiedDate":"2023-03-04"},{"lineNumber":236,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":237,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":238,"author":{"gitId":"wxxedu"},"content":"        assertTrue(result.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":239,"author":{"gitId":"wxxedu"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":240,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":241,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":242,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":243,"author":{"gitId":"wxxedu"},"content":"    void getNamedValuesOrThrow_emptyToken_throwsException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":244,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":245,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":246,"author":{"gitId":"wxxedu"},"content":"        CommandParam param2 \u003d new CommandParam(Optional.of(\"token\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":247,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.empty())));","lastModifiedDate":"2023-03-04"},{"lineNumber":248,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":249,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ParseException.class, () -\u003e param.getNamedValuesOrThrow(PREFIX_A));","lastModifiedDate":"2023-03-04"},{"lineNumber":250,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ParseException.class, () -\u003e param2.getNamedValuesOrThrow(PREFIX_A));","lastModifiedDate":"2023-03-04"},{"lineNumber":251,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":252,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":253,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":254,"author":{"gitId":"wxxedu"},"content":"    void getUnnamedIntOrThrow_emptyToken_throwsException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":255,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":256,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":257,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":258,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ParseException.class, param::getUnnamedIntOrThrow);","lastModifiedDate":"2023-03-04"},{"lineNumber":259,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":260,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":261,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":262,"author":{"gitId":"wxxedu"},"content":"    void getUnnamedIntOrThrow_nonEmptyTokenNonInt_throwsException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":263,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":264,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"token\"), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":265,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":266,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ParseException.class, param::getUnnamedIntOrThrow);","lastModifiedDate":"2023-03-04"},{"lineNumber":267,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":268,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":269,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":270,"author":{"gitId":"wxxedu"},"content":"    void getUnnamedIntOrThrow_nonEmptyTokenInt_returnInt() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":271,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":272,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"1\"), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":273,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":274,"author":{"gitId":"wxxedu"},"content":"        int result \u003d param.getUnnamedIntOrThrow();","lastModifiedDate":"2023-03-04"},{"lineNumber":275,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":276,"author":{"gitId":"wxxedu"},"content":"        assertEquals(1, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":277,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":278,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":279,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":280,"author":{"gitId":"wxxedu"},"content":"    void getNamedIntOrThrow_emptyToken_throwsException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":281,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":282,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":283,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":284,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ParseException.class, () -\u003e param.getNamedIntOrThrow(PREFIX_A));","lastModifiedDate":"2023-03-04"},{"lineNumber":285,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":286,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":287,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":288,"author":{"gitId":"wxxedu"},"content":"    void getNamedIntOrThrow_nonEmptyTokenNonInt_throwsException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":289,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":290,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(),","lastModifiedDate":"2023-03-04"},{"lineNumber":291,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"token\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":292,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":293,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ParseException.class, () -\u003e param.getNamedIntOrThrow(PREFIX_A));","lastModifiedDate":"2023-03-04"},{"lineNumber":294,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":295,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":296,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":297,"author":{"gitId":"wxxedu"},"content":"    void getNamedIntOrThrow_nonEmptyTokenInt_returnInt() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":298,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":299,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(),","lastModifiedDate":"2023-03-04"},{"lineNumber":300,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"1\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":301,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":302,"author":{"gitId":"wxxedu"},"content":"        int result \u003d param.getNamedIntOrThrow(PREFIX_A);","lastModifiedDate":"2023-03-04"},{"lineNumber":303,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":304,"author":{"gitId":"wxxedu"},"content":"        assertEquals(1, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":305,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":306,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":307,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":308,"author":{"gitId":"wxxedu"},"content":"    void equals_sameObject_returnTrue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":309,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":310,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"token\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":311,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"value\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":312,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":313,"author":{"gitId":"wxxedu"},"content":"        assertEquals(param, param);","lastModifiedDate":"2023-03-04"},{"lineNumber":314,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":315,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":316,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":317,"author":{"gitId":"wxxedu"},"content":"    void equals_nullObject_returnFalse() {","lastModifiedDate":"2023-03-04"},{"lineNumber":318,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":319,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"token\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":320,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"value\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":321,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":322,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(param, null);","lastModifiedDate":"2023-03-04"},{"lineNumber":323,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":324,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":325,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":326,"author":{"gitId":"wxxedu"},"content":"    void equals_differentClass_returnFalse() {","lastModifiedDate":"2023-03-04"},{"lineNumber":327,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":328,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"token\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":329,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"value\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":330,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":331,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(param, new Object());","lastModifiedDate":"2023-03-04"},{"lineNumber":332,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":333,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":334,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":335,"author":{"gitId":"wxxedu"},"content":"    void equals_sameTokenDifferentInstance_returnTrue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":336,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":337,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"token\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":338,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"value\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":339,"author":{"gitId":"wxxedu"},"content":"        CommandParam param2 \u003d new CommandParam(Optional.of(\"token\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":340,"author":{"gitId":"wxxedu"},"content":"            Optional.of(Map.of(PREFIX_A, Optional.of(\"value\"))));","lastModifiedDate":"2023-03-04"},{"lineNumber":341,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":342,"author":{"gitId":"wxxedu"},"content":"        assertEquals(param, param2);","lastModifiedDate":"2023-03-04"},{"lineNumber":343,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":344,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":344}},{"path":"src/test/java/seedu/address/logic/core/FactoryParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"public class FactoryParserTest extends LogicCoreParserTestBase {","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    private FactoryParserStub factoryParser;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    void setUpChild() {","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"        factoryParser \u003d new FactoryParserStub();","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    void parseFactory_nullTokens_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"        assertThrows(NullPointerException.class, () -\u003e factoryParser.parseFactory(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    void parseFactory_emptyTokens_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ParseException.class, () -\u003e factoryParser.parseFactory(new ArrayDeque\u003c\u003e()));","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"    void parseFactory_invalidTokens_returnsEmpty() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        // set up","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"        ArrayDeque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e(List.of(\"invalid\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cCommand\u003e command \u003d factoryParser.parseFactory(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        assertFalse(command.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory1, Mockito.never()).createCommand(param);","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory2, Mockito.never()).createCommand(param);","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    void parseFactory_validTokens1_returnValidCommand() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        // set up","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"        ArrayDeque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e(List.of(COMMAND_WORD1, \"arg1\", \"arg2\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"arg1 arg2\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"            Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cCommand\u003e command \u003d factoryParser.parseFactory(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"        assertTrue(command.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        assertEquals(command1, command.get());","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory1, Mockito.times(1)).createCommand(param);","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory2, Mockito.never()).createCommand(param);","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    void parseFactory_validTokens2_returnValidCommand() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"        // set up","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        ArrayDeque\u003cString\u003e tokens \u003d new ArrayDeque\u003c\u003e(List.of(COMMAND_WORD2, \"arg1\", \"arg2\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        CommandParam param \u003d new CommandParam(Optional.of(\"arg1 arg2\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"            Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        Optional\u003cCommand\u003e command \u003d factoryParser.parseFactory(tokens);","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        assertTrue(command.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        assertEquals(command2, command.get());","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory1, Mockito.never()).createCommand(param);","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(commandFactory2, Mockito.times(1)).createCommand(param);","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"    private class FactoryParserStub extends FactoryParser {","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        protected List\u003cCommandFactory\u003c?\u003e\u003e getFactories() {","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"            return commandFactories;","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":90}},{"path":"src/test/java/seedu/address/logic/core/LogicCoreParserTestBase.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mock;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.OperationMode;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":" * Base class for {@link CommandGroup} tests, basically setting up some","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":" * common mocks to be used by the subclasses.","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"public abstract class LogicCoreParserTestBase {","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    protected static final String COMMAND_WORD1 \u003d \"command1\";","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    protected static final String COMMAND_WORD2 \u003d \"command2\";","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    protected Command command1;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    protected Command command2;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    protected CommandFactory\u003cCommand\u003e commandFactory1;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    protected CommandFactory\u003cCommand\u003e commandFactory2;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    protected List\u003cCommandFactory\u003c?\u003e\u003e commandFactories;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    protected CommandGroup commandGroup;","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"    void setUp() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        Mockito","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"            .lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"            .when(commandFactory1.getCommandWord())","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(COMMAND_WORD1);","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        Mockito","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"            .lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"            .when(commandFactory2.getCommandWord())","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(COMMAND_WORD2);","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"        Mockito","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"            .lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"            .when(commandFactory1.getPrefixes())","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        Mockito","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"            .lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"            .when(commandFactory2.getPrefixes())","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(Optional.empty());","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        Mockito","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"            .lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"            .when(commandFactory1.createCommand(Mockito.any()))","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(command1);","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        Mockito","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"            .lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"            .when(commandFactory2.createCommand(Mockito.any()))","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(command2);","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        commandFactories \u003d List.of(commandFactory1, commandFactory2);","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"        commandGroup \u003d new CommandGroup(OperationMode.PILOT, commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":65}},{"path":"src/test/java/seedu/address/logic/core/WingmanParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.logic.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mock;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import seedu.address.logic.core.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.OperationMode;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":" * A test class for {@code WingmanParser}.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"public class WingmanParserTest extends LogicCoreParserTestBase {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    static final OperationMode GROUP1_MODE \u003d OperationMode.PILOT;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    static final OperationMode GROUP2_MODE \u003d OperationMode.CREW;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    private CommandGroup commandGroup1;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    private CommandGroup commandGroup2;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    private Command group1Command;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    private Command group2Command;","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    private List\u003cCommandGroup\u003e commandGroups;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    private WingmanParser parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    void setUpGroups() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        Mockito.lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"            .when(commandGroup1.getOperationMode())","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(GROUP1_MODE);","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"        Mockito.lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"            .when(commandGroup2.getOperationMode())","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(GROUP2_MODE);","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        Mockito.lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"            .when(commandGroup1.parse(Mockito.any()))","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(group1Command);","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        Mockito.lenient()","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"            .when(commandGroup2.parse(Mockito.any()))","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"            .thenReturn(group2Command);","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"        commandGroups \u003d List.of(commandGroup1, commandGroup2);","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        parser \u003d new WingmanParser(commandGroups, commandFactories);","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"    void parse_unknownOperationMode_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"        parser \u003d new WingmanParser(commandGroups, List.of());","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"        final String input \u003d \"unknown command\";","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(OperationMode.PLANE,","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"            input));","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    void parse_knownOperationMode_returnsCommand() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        // setup","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        final String input \u003d \"command\";","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        final Command result1 \u003d parser.parse(GROUP1_MODE, input);","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"        final Command result2 \u003d parser.parse(GROUP2_MODE, input);","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        assertEquals(group1Command, result1);","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        assertEquals(group2Command, result2);","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"    void parse_topLevelCommand_returnsTopLevelCommandButNotGroupCommand() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        // execute","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        final Command result \u003d parser.parse(GROUP1_MODE, COMMAND_WORD1);","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"        // verify","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        assertEquals(command1, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(group1Command, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"        assertNotEquals(group2Command, result);","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"wxxedu":91}},{"path":"src/test/java/seedu/address/model/item/ItemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package seedu.address.model.item;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"public class ItemTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    void isSame_sameObject_returnsTrue() {","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"        ItemStub1 a \u003d new ItemStub1(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"        assertTrue(Item.isSame(a, a));","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    void isSame_sameId_returnsTrue() {","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        ItemStub1 a \u003d new ItemStub1(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"        ItemStub1 b \u003d new ItemStub1(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"        assertTrue(Item.isSame(a, b));","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    void isSame_differentId_returnsFalse() {","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"        ItemStub1 a \u003d new ItemStub1(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"        ItemStub1 b \u003d new ItemStub1(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        assertFalse(Item.isSame(a, b));","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    void isSame_differentClass_returnsFalse() {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"        ItemStub1 a \u003d new ItemStub1(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"        ItemStub2 b \u003d new ItemStub2(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"        assertFalse(Item.isSame(a, b));","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"    private static class ItemStub1 implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        private final String id;","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"        public ItemStub1(String id) {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        public String getId() {","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"            return id;","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"    private static class ItemStub2 implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"        private final String id;","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"        public ItemStub2(String id) {","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"        public String getId() {","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"            return id;","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"BoAi01":63}},{"path":"src/test/java/seedu/address/model/item/UniqueListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.model.item;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.item.exceptions.ItemDuplicateException;","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import seedu.address.model.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"public class UniqueListTest {","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    private UniqueList\u003cItemStub\u003e list;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    void setUp() {","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"        list \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    void constructor_shouldCreateEmptyList() {","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        UniqueList\u003cItemStub\u003e list \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"        assertTrue(list.asUnmodifiableObservableList().isEmpty());","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    void fromObservableList_validList_shouldCreateListWithSameElements() {","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e observableList \u003d FXCollections.observableArrayList(","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"                new ItemStub(\"a\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"                new ItemStub(\"b\")","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"        UniqueList\u003cItemStub\u003e list \u003d UniqueList.fromObservableList(observableList);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"        assertEquals(2, list.asUnmodifiableObservableList().size());","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    void fromObservableList_duplicatedList_shouldThrowItemDuplicateException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e observableList \u003d FXCollections.observableArrayList(","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"                new ItemStub(\"a\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"                new ItemStub(\"a\")","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ItemDuplicateException.class, () -\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"                UniqueList.fromObservableList(observableList));","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"            UniqueList.fromObservableList(observableList);","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"        } catch (ItemDuplicateException e) {","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"            assertEquals(ItemStub.class, e.getDuplicatedClass());","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"    void fromObservableList_nullList_shouldThrowNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"        assertThrows(NullPointerException.class, () -\u003e UniqueList.fromObservableList(null));","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    void fromObservableList_nullItem_shouldThrowNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e observableList \u003d FXCollections.observableArrayList(","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"                new ItemStub(\"a\"),","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"                null","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"                UniqueList.fromObservableList(observableList));","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"    void add_validItem_shouldAddItem() {","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"        this.list.add(new ItemStub(\"a\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        assertEquals(1, this.list.asUnmodifiableObservableList().size());","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    void add_duplicatedItem_shouldThrowItemDuplicateException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"        this.list.add(new ItemStub(\"a\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ItemDuplicateException.class, () -\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"                this.list.add(new ItemStub(\"a\")));","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"            this.list.add(new ItemStub(\"a\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"        } catch (ItemDuplicateException e) {","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"            assertEquals(ItemStub.class, e.getDuplicatedClass());","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"    void add_nullItem_shouldThrowNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.list.add(null));","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"    void contains_validItem_shouldReturnTrue() {","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"        assertTrue(this.list.contains(item));","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"    void contains_nullItem_shouldThrowNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.list.contains((ItemStub) null));","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"wxxedu"},"content":"    void setItem_validItem_shouldReplaceItem() {","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"        ItemStub newItem \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"        this.list.setItem(item, newItem);","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"        assertTrue(this.list.contains(newItem));","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"        assertFalse(this.list.contains(item));","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"wxxedu"},"content":"    void setItem_nullItem_shouldThrowNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"        ItemStub target \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"        ItemStub editedItem \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.list.setItem(target,","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"                null));","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.list.setItem(null,","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"                editedItem));","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.list.setItem(null,","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"                null));","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"wxxedu"},"content":"    void setItem_itemNotInList_shouldThrowItemNotFoundException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"BoAi01"},"content":"        ItemStub target \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"        ItemStub editedItem \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e this.list.setItem(target,","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"wxxedu"},"content":"                editedItem));","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"wxxedu"},"content":"    void setItem_sameItem_shouldNotThrowException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"wxxedu"},"content":"        assertDoesNotThrow(() -\u003e this.list.setItem(item, item));","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"wxxedu"},"content":"    void setItem_itemAlreadyInList_shouldThrowItemDuplicateException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"        ItemStub item2 \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":148,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item2);","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ItemDuplicateException.class, () -\u003e this.list.setItem(item,","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"wxxedu"},"content":"                item2));","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":153,"author":{"gitId":"wxxedu"},"content":"            this.list.setItem(item, item2);","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"wxxedu"},"content":"        } catch (ItemDuplicateException e) {","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"BoAi01"},"content":"            assertEquals(ItemStub.class, e.getDuplicatedClass());","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":160,"author":{"gitId":"wxxedu"},"content":"    void remove_validItem_shouldRemoveItem() {","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"wxxedu"},"content":"        this.list.remove(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"wxxedu"},"content":"        assertFalse(this.list.contains(item));","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"wxxedu"},"content":"    void remove_nullItem_shouldThrowNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"BoAi01"},"content":"        assertThrows(NullPointerException.class, () -\u003e this.list.remove((ItemStub) null));","lastModifiedDate":"2023-03-07"},{"lineNumber":170,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"wxxedu"},"content":"    void remove_itemNotInList_shouldThrowItemNotFoundException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"wxxedu"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e this.list.remove(item));","lastModifiedDate":"2023-02-22"},{"lineNumber":176,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":177,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"wxxedu"},"content":"    void setItems_validItems_shouldReplaceItems() {","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"        ItemStub item2 \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":183,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item2);","lastModifiedDate":"2023-02-22"},{"lineNumber":184,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":185,"author":{"gitId":"BoAi01"},"content":"        ItemStub newItem \u003d new ItemStub(\"c\");","lastModifiedDate":"2023-03-07"},{"lineNumber":186,"author":{"gitId":"BoAi01"},"content":"        ItemStub newItem2 \u003d new ItemStub(\"d\");","lastModifiedDate":"2023-03-07"},{"lineNumber":187,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e items \u003d FXCollections.observableArrayList(","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"wxxedu"},"content":"                newItem,","lastModifiedDate":"2023-02-22"},{"lineNumber":189,"author":{"gitId":"wxxedu"},"content":"                newItem2","lastModifiedDate":"2023-02-22"},{"lineNumber":190,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":191,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":192,"author":{"gitId":"wxxedu"},"content":"        this.list.setItems(items);","lastModifiedDate":"2023-02-22"},{"lineNumber":193,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":194,"author":{"gitId":"wxxedu"},"content":"        assertTrue(this.list.contains(newItem));","lastModifiedDate":"2023-02-22"},{"lineNumber":195,"author":{"gitId":"wxxedu"},"content":"        assertTrue(this.list.contains(newItem2));","lastModifiedDate":"2023-02-22"},{"lineNumber":196,"author":{"gitId":"wxxedu"},"content":"        assertFalse(this.list.contains(item));","lastModifiedDate":"2023-02-22"},{"lineNumber":197,"author":{"gitId":"wxxedu"},"content":"        assertFalse(this.list.contains(item2));","lastModifiedDate":"2023-02-22"},{"lineNumber":198,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":199,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":200,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":201,"author":{"gitId":"wxxedu"},"content":"    void setItems_uniqueList_shouldReplaceItems() {","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":203,"author":{"gitId":"BoAi01"},"content":"        ItemStub item2 \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":204,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item);","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"wxxedu"},"content":"        this.list.add(item2);","lastModifiedDate":"2023-02-22"},{"lineNumber":206,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":207,"author":{"gitId":"BoAi01"},"content":"        ItemStub newItem \u003d new ItemStub(\"c\");","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"BoAi01"},"content":"        ItemStub newItem2 \u003d new ItemStub(\"d\");","lastModifiedDate":"2023-03-07"},{"lineNumber":209,"author":{"gitId":"BoAi01"},"content":"        UniqueList\u003cItemStub\u003e items \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":210,"author":{"gitId":"wxxedu"},"content":"        items.add(newItem);","lastModifiedDate":"2023-02-22"},{"lineNumber":211,"author":{"gitId":"wxxedu"},"content":"        items.add(newItem2);","lastModifiedDate":"2023-02-22"},{"lineNumber":212,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":213,"author":{"gitId":"wxxedu"},"content":"        this.list.setItems(items);","lastModifiedDate":"2023-02-22"},{"lineNumber":214,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":215,"author":{"gitId":"wxxedu"},"content":"        assertTrue(this.list.contains(newItem));","lastModifiedDate":"2023-02-22"},{"lineNumber":216,"author":{"gitId":"wxxedu"},"content":"        assertTrue(this.list.contains(newItem2));","lastModifiedDate":"2023-02-22"},{"lineNumber":217,"author":{"gitId":"wxxedu"},"content":"        assertFalse(this.list.contains(item));","lastModifiedDate":"2023-02-22"},{"lineNumber":218,"author":{"gitId":"wxxedu"},"content":"        assertFalse(this.list.contains(item2));","lastModifiedDate":"2023-02-22"},{"lineNumber":219,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":220,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":221,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":222,"author":{"gitId":"wxxedu"},"content":"    void itemsHaveDuplicate_hasDuplicate_shouldReturnTrue() {","lastModifiedDate":"2023-02-22"},{"lineNumber":223,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":224,"author":{"gitId":"BoAi01"},"content":"        ItemStub item2 \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":225,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e items \u003d FXCollections.observableArrayList(","lastModifiedDate":"2023-03-07"},{"lineNumber":226,"author":{"gitId":"wxxedu"},"content":"                item,","lastModifiedDate":"2023-02-22"},{"lineNumber":227,"author":{"gitId":"wxxedu"},"content":"                item2","lastModifiedDate":"2023-02-22"},{"lineNumber":228,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":229,"author":{"gitId":"wxxedu"},"content":"        assertTrue(UniqueList.itemsHaveDuplicate(items));","lastModifiedDate":"2023-02-22"},{"lineNumber":230,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":231,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":232,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":233,"author":{"gitId":"wxxedu"},"content":"    void itemsHaveDuplicate_noDuplicate_shouldReturnFalse() {","lastModifiedDate":"2023-02-22"},{"lineNumber":234,"author":{"gitId":"BoAi01"},"content":"        ItemStub item \u003d new ItemStub(\"a\");","lastModifiedDate":"2023-03-07"},{"lineNumber":235,"author":{"gitId":"BoAi01"},"content":"        ItemStub item2 \u003d new ItemStub(\"b\");","lastModifiedDate":"2023-03-07"},{"lineNumber":236,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e items \u003d FXCollections.observableArrayList(","lastModifiedDate":"2023-03-07"},{"lineNumber":237,"author":{"gitId":"wxxedu"},"content":"                item,","lastModifiedDate":"2023-02-22"},{"lineNumber":238,"author":{"gitId":"wxxedu"},"content":"                item2","lastModifiedDate":"2023-02-22"},{"lineNumber":239,"author":{"gitId":"wxxedu"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":240,"author":{"gitId":"wxxedu"},"content":"        assertFalse(UniqueList.itemsHaveDuplicate(items));","lastModifiedDate":"2023-02-22"},{"lineNumber":241,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":242,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":243,"author":{"gitId":"BoAi01"},"content":"    private static class ItemStub implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":244,"author":{"gitId":"wxxedu"},"content":"        private final String id;","lastModifiedDate":"2023-02-22"},{"lineNumber":245,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":246,"author":{"gitId":"BoAi01"},"content":"        public ItemStub(String id) {","lastModifiedDate":"2023-03-07"},{"lineNumber":247,"author":{"gitId":"wxxedu"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-02-22"},{"lineNumber":248,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":249,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":250,"author":{"gitId":"wxxedu"},"content":"        @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":251,"author":{"gitId":"wxxedu"},"content":"        public String getId() {","lastModifiedDate":"2023-02-22"},{"lineNumber":252,"author":{"gitId":"wxxedu"},"content":"            return id;","lastModifiedDate":"2023-02-22"},{"lineNumber":253,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":254,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":255,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"BoAi01":50,"wxxedu":205}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"jishnu28"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jishnu28"},"content":"            \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jishnu28":2,"-":121}},{"path":"src/test/java/seedu/address/storage/json/JsonItemManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.storage.json;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mock;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.stubs.ItemStub;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import seedu.address.storage.stubs.JsonAdaptedIdentifiableStub;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.stubs.JsonItemManagerStub;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"public class JsonItemManagerTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    private ItemStub model;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    private JsonAdaptedIdentifiableStub jsonModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    private ReadOnlyItemManager\u003cItemStub\u003e manager;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    private JsonItemManagerStub jsonManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"    void setUp() {","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"        model \u003d new ItemStub(\"test_id\");","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"        jsonManager \u003d new JsonItemManagerStub();","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"    void readFromManager_validManager_success() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"wxxedu"},"content":"        // Arrange","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cItemStub\u003e items \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"                FXCollections.observableArrayList(model);","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(manager.getItemList()).thenReturn(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        // Act","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"        jsonManager.readFromManager(manager);","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"        // Assert","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertEquals(1, jsonManager.items.size());","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"    void toModelType_emptyItems_equalsEmptyManager() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        // Act","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        final ItemManager\u003cItemStub\u003e res \u003d jsonManager.toModelType();","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"        // Assert","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertNotNull(res);","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"        Assertions.assertEquals(res, new ItemManager\u003cItemStub\u003e());","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"    void toModelType_modelThrows_shouldThrowIllegalValueException() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        // Arrange","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"wxxedu"},"content":"        final IllegalValueException exception \u003d new IllegalValueException(","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"                \"Test Message\");","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(jsonModel.toModelType()).thenThrow(exception);","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"        jsonManager.items.add(jsonModel);","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"        // Assert","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertThrows(","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"                IllegalValueException.class, () -\u003e jsonManager.toModelType());","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"    void toModelType_whenDuplicate_shouldThrowIllegalValueException() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"wxxedu"},"content":"        // Arrange","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"        jsonManager.items.add(new JsonAdaptedIdentifiableStub(\"test\"));","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"        jsonManager.items.add(new JsonAdaptedIdentifiableStub(\"test\"));","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"        // Assert","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertThrows(","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"                IllegalValueException.class, () -\u003e jsonManager.toModelType());","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":13,"wxxedu":71}},{"path":"src/test/java/seedu/address/storage/json/JsonItemStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.storage.json;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mock;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.util.FileHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.util.JsonHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.stubs.JsonItemManagerStub;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.stubs.JsonItemStorageStub;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"public class JsonItemStorageTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"wxxedu"},"content":"    private JsonHelper jsonHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"wxxedu"},"content":"    private FileHelper fileHelper;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"wxxedu"},"content":"    private Path filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"    private JsonItemManagerStub jsonManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"wxxedu"},"content":"    @Mock","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"wxxedu"},"content":"    private Logger logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    private JsonItemStorageStub storage;","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"wxxedu"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"wxxedu"},"content":"    void setUp() throws DataConversionException, IOException, IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"wxxedu"},"content":"        filePath \u003d Path.of(\"test\", \"path\");","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"        storage \u003d new JsonItemStorageStub(","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"wxxedu"},"content":"                filePath, jsonHelper, fileHelper, logger);","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"wxxedu"},"content":"        Mockito.lenient()","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"wxxedu"},"content":"                .when(jsonManager.toModelType())","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"                .thenReturn(new ItemManager\u003c\u003e());","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"wxxedu"},"content":"        Mockito.lenient()","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"wxxedu"},"content":"                .when(jsonHelper.readJsonFile(Mockito.any(), Mockito.any()))","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"wxxedu"},"content":"                .thenReturn(Optional.of(jsonManager));","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"wxxedu"},"content":"    void read_noArgs_shouldCallWithDefaultPath()","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"wxxedu"},"content":"        storage.read();","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(jsonHelper, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"                .readJsonFile(filePath, JsonItemManagerStub.class);","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"wxxedu"},"content":"    void read_hasPath_shouldCallWithThePathGiven()","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"wxxedu"},"content":"        final Path newPath \u003d Path.of(\"Hello\", \"World\");","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"wxxedu"},"content":"        storage.read(newPath);","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(jsonHelper, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"                .readJsonFile(newPath, JsonItemManagerStub.class);","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(jsonHelper, Mockito.never())","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"                .readJsonFile(filePath, JsonItemManagerStub.class);","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"wxxedu"},"content":"    void read_fileEmpty_shouldReturnOptionalEmpty()","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(jsonHelper.readJsonFile(Mockito.any(), Mockito.any()))","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"wxxedu"},"content":"                .thenReturn(Optional.empty());","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"wxxedu"},"content":"        assert storage.read().isEmpty();","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"wxxedu"},"content":"    void read_modelCannotConvert_throwDataConversionException()","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException, IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(jsonManager.toModelType()).thenThrow(new IllegalValueException(\"Test\"));","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"wxxedu"},"content":"        Assertions.assertThrows(DataConversionException.class, () -\u003e storage.read());","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"wxxedu"},"content":"    void read_modelCannotConvert_shouldWriteWarningToLogger()","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"wxxedu"},"content":"            throws DataConversionException, IOException, IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"wxxedu"},"content":"        Mockito.when(jsonManager.toModelType()).thenThrow(new IllegalValueException(\"Test\"));","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"wxxedu"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"wxxedu"},"content":"            storage.read();","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"wxxedu"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"wxxedu"},"content":"            Mockito.verify(logger, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"wxxedu"},"content":"                    .warning(Mockito.anyString());","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"wxxedu"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"wxxedu"},"content":"    void save_noPath_shouldCallWithDefaultPath() throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"        storage.save(new ItemManager\u003c\u003e());","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(jsonHelper, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"wxxedu"},"content":"                .saveJsonFile(Mockito.any(), Mockito.eq(filePath));","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(fileHelper, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"wxxedu"},"content":"                .createIfMissing(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"wxxedu"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"wxxedu"},"content":"    void save_withPath_shouldCallWithPathProvided() throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"wxxedu"},"content":"        final Path newPath \u003d Path.of(\"Hello\", \"World\");","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"        storage.save(new ItemManager\u003c\u003e(), newPath);","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(jsonHelper, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"wxxedu"},"content":"                .saveJsonFile(Mockito.any(), Mockito.eq(newPath));","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(fileHelper, Mockito.times(1))","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"wxxedu"},"content":"                .createIfMissing(newPath);","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(jsonHelper, Mockito.never())","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"wxxedu"},"content":"                .saveJsonFile(Mockito.any(), Mockito.eq(filePath));","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"wxxedu"},"content":"        Mockito.verify(fileHelper, Mockito.never())","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"wxxedu"},"content":"                .createIfMissing(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":13,"wxxedu":116}},{"path":"src/test/java/seedu/address/storage/stubs/ItemStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.storage.stubs;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":" * Represents the stub for an {@code Identifiable} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"public class ItemStub implements Item {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"wxxedu"},"content":"     * The id of the {@code Identifiable} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"    private final String id;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"     * Creates a new {@code IdentifiableStub} object with the given id.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * @param id The id of the {@code Identifiable} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    public ItemStub(String id) {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    public String getId() {","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"        return id;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":3,"wxxedu":24}},{"path":"src/test/java/seedu/address/storage/stubs/JsonAdaptedIdentifiableStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxxedu"},"content":"package seedu.address.storage.stubs;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"wxxedu"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"wxxedu"},"content":"import seedu.address.storage.json.JsonAdaptedModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"wxxedu"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"wxxedu"},"content":" * Represents the stub for a {@code JsonAdaptedModel} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"wxxedu"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"wxxedu"},"content":"public class JsonAdaptedIdentifiableStub","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"        implements JsonAdaptedModel\u003cItemStub\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"wxxedu"},"content":"     * The id of the {@code JsonAdaptedModel} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    private final String id;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"wxxedu"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"wxxedu"},"content":"     * Creates a new {@code JsonAdaptedIdentifiableStub} object with the","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"wxxedu"},"content":"     * given id.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"wxxedu"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"wxxedu"},"content":"     * @param id The id of the {@code JsonAdaptedModel} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"wxxedu"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"wxxedu"},"content":"    public JsonAdaptedIdentifiableStub(String id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"wxxedu"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"wxxedu"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"wxxedu"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    public ItemStub toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        return new ItemStub(this.id);","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"wxxedu"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"BoAi01":3,"wxxedu":27}},{"path":"src/test/java/seedu/address/storage/stubs/JsonItemManagerStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package seedu.address.storage.stubs;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.JsonItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":" * Represents the stub for a {@code JsonItemManager} object.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"public class JsonItemManagerStub extends","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"        JsonItemManager\u003cItemStub, JsonAdaptedIdentifiableStub\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"     * Creates a new {@code JsonItemManagerStub} object.","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"     * @param modelManager The {@code ReadOnlyItemManager} object","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"     * @return The {@code JsonItemManagerStub} object","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    static JsonItemManagerStub from(","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cItemStub\u003e modelManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"        final JsonItemManagerStub res \u003d new JsonItemManagerStub();","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"        res.readFromManager(modelManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"        return res;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"    protected JsonAdaptedIdentifiableStub getJsonAdaptedModel(","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"            ItemStub item) {","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        return new JsonAdaptedIdentifiableStub(item.getId());","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"BoAi01":29}},{"path":"src/test/java/seedu/address/storage/stubs/JsonItemStorageStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package seedu.address.storage.stubs;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import seedu.address.commons.util.FileHelper;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import seedu.address.commons.util.JsonHelper;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import seedu.address.model.ReadOnlyItemManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import seedu.address.storage.json.JsonItemStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" * A stub class for {@link JsonItemStorage} that is used for testing.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"public class JsonItemStorageStub extends","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"        JsonItemStorage\u003cItemStub, JsonAdaptedIdentifiableStub, JsonItemManagerStub\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     * Creates a new {@code JsonIdentifiableStorageStub} object.","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * @param filePath   The path to the file to be read from and written to.","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     * @param jsonHelper The {@link JsonHelper} to be used.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     * @param fileHelper The {@link FileHelper} to be used.","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     * @param logger     The {@link Logger} to be used.","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    public JsonItemStorageStub(Path filePath, JsonHelper jsonHelper,","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"                               FileHelper fileHelper, Logger logger) {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"        super(filePath, jsonHelper, fileHelper, logger);","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    protected Class\u003cJsonItemManagerStub\u003e getManagerClass() {","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"        return JsonItemManagerStub.class;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"    protected JsonItemManagerStub createManager(","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"            ReadOnlyItemManager\u003cItemStub\u003e modelManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"        return JsonItemManagerStub.from(modelManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"BoAi01":40}},{"path":"src/test/java/seedu/address/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"wxxedu"},"content":"    public TestFxmlObject() {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"wxxedu"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                   || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                           \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"wxxedu":2,"-":34}}]
