[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W14-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W14-4/tp/)","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"![Ui](docs/images/ui.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"bofeng1999"},"content":"* This is a product for **Hiring Managers**.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"bofeng1999"},"content":"  * as an application to easily track different statuses of the applicants\u0027 application.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"bofeng1999"},"content":"* The project simulates an ongoing software project for a desktop application (called HMHero) used for managing details and statuses for applicants.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"bofeng1999"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code based **bigger** on the original project AB3.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"bofeng1999"},"content":"* It is named `HMHero v1.1` because it was initially created as a part of a series of `HMHero` projects (`v1.1`, `v1.2`, `v1.3` ...).","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"* For the detailed documentation of this project, see the **[HMHero Product Website](https://ay2223s2-cs2103t-w14-4.github.io/tp/)**.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"bofeng1999"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org#https://se-education.org/#contributing).","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"dunliang0513":1,"bofeng1999":6,"FredericChow00":2,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"    implementation \u0027org.jfree:jfreechart:1.5.3\u0027","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"bofeng1999"},"content":"run {","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"bofeng1999"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"bofeng1999"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"    archiveFileName \u003d \u0027HMHero.jar\u0027","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"Jxleejiaxin"},"content":"run {","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"Jxleejiaxin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bofeng1999":4,"Jxleejiaxin":2,"Merrickneo":2,"-":72}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2019-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2017-01-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"Merrickneo"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"4\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2017-09-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2017-01-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"Merrickneo"},"content":"    \u003c!-- Checks that all block-notes are ordered correctly. --\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":391,"author":{"gitId":"Merrickneo"},"content":"    \u003c!-- Checks that Javadoc block notes appear only at the beginning of the line. --\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":403,"author":{"gitId":"Merrickneo"},"content":"    \u003c!-- Checks that for block notes, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Merrickneo":4,"-":430}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"### Jia Xin","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"\u003cimg src\u003d\"images/jxleejiaxin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"[[github](http://github.com/jxleejiaxin)][[portfolio](team/jxleejiaxin.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"* Role: Developer","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"* Responsibilities: Merge PRs, In charge of Model component","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"### Merrick Neo","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"\u003cimg src\u003d\"images/merrickneo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"[[github](http://github.com/merrickneo)][[portfolio](team/merrickneo.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"* Role: Developer","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"* Responsibilities: Code Quality, In charge of Command component","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"### Frederic Chow","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"\u003cimg src\u003d\"images/fredericchow00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"[[github](http://github.com/fredericchow00)][[portfolio](team/fredericchow00.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"* Responsibilities: Testing, Deliverables and Deadline, In charge of UI component","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"### Bo Feng","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"\u003cimg src\u003d\"images/bofeng1999.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"[[github](http://github.com/bofeng1999)][[portfolio](team/bofeng1999.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"* Responsibilities: Integration, In charge of Parser component","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"### Dun Liang","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"\u003cimg src\u003d\"images/dunliang0513.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"[[github](http://github.com/dunliang0513)][[portfolio](team/dunliang0513.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"* Responsibilities: Documentation, In charge of Storage component","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Merrickneo":22,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"Jxleejiaxin"},"content":"## **Introduction to HMHero**","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"HMHero is an Applicant Managing System designed to be used by human resource professionals, hiring managers,","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Jxleejiaxin"},"content":"and recruiters who want to streamline the recruitment process and make it more efficient,","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Jxleejiaxin"},"content":"helping their organizations manage job applications and hiring processes more effectively.","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Jxleejiaxin"},"content":"This Developer Guide is a detailed documentation on HMHero\u0027s design and implementation, describing the architecture,","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"an outline of all parts of HMHero and how they work together, and specifications on","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Jxleejiaxin"},"content":"feature implementation and considerations.","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Jxleejiaxin"},"content":"This guide is intended to assist developers in maintaining, upgrading or evolving HMHero.","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Jxleejiaxin"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Jxleejiaxin"},"content":"## **How to use this Developer Guide**","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Jxleejiaxin"},"content":"#### Person in place of Applicant","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Jxleejiaxin"},"content":"In this Developer Guide, `Person` is used in place of Applicant. Take note that when mentioning `Person`, we are","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Jxleejiaxin"},"content":"always talking about an Applicant in HMHero.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Jxleejiaxin"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":":bulb: \u003cstrong\u003eTip:\u003c/strong\u003e The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103T-W14-4/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"\u003cdiv style\u003d\"width:80%;margin:0 10%;text-align:center\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"    \u003cb\u003eFigure 1.1.1\u003c/b\u003e Architecture diagram for high-design of the App","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-W14-4/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-W14-4/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"dunliang0513"},"content":"* [**`UI`**](#ui-component): Manage the HMHero application User Interface","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"dunliang0513"},"content":"* [**`Logic`**](#logic-component): Manage the execution of commands.","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"dunliang0513"},"content":"* [**`Storage`**](#storage-component): Reads data from and writes data to the hard disk.","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"dunliang0513"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete n/Alex p/91234567`.","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":82,"author":{"gitId":"dunliang0513"},"content":"\u003cdiv style\u003d\"width:80%;margin:0 10%;text-align:center\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"dunliang0513"},"content":"    \u003cb\u003eFigure 1.1.2\u003c/b\u003e Sequence Diagram for the command \u003ccode\u003edelete n/Alex p/91234567\u003c/code\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"dunliang0513"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"dunliang0513"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Jxleejiaxin"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.)","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"dunliang0513"},"content":"\u003cdiv style\u003d\"width:80%;margin:0 10%;text-align:center\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"dunliang0513"},"content":"    \u003cb\u003eFigure 1.1.3\u003c/b\u003e Class Diagram for Component Managers","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"dunliang0513"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"dunliang0513"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-W14-4/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"dunliang0513"},"content":"\u003cdiv style\u003d\"width:80%;margin:0 10%;text-align:center\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"dunliang0513"},"content":"    \u003cb\u003eFigure 1.2.1\u003c/b\u003e Class Diagram for UI Components","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"dunliang0513"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"dunliang0513"},"content":"The `UI` component uses the JavaFx UI framework. ","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"dunliang0513"},"content":"Steps to start making changes to the UI:","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"dunliang0513"},"content":"1. The layout of these UI parts are defined in matching `.fxml` files that are in the [`src/main/resources/view`](https://github.com/AY2223S2-CS2103T-W14-4/tp/tree/master/src/main/resources/view) folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"dunliang0513"},"content":"2. The managing classes of these UI parts are defined in matching `.java` files in the [`src/main/java/seedu/address/ui`](https://github.com/AY2223S2-CS2103T-W14-4/tp/tree/master/src/main/java/seedu/address/ui) folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"dunliang0513"},"content":"3. The stylesheets for these UI parts can be found in `Extensions.css`, `HMHero.css`, and `Mainwindow.css`, except `UserProfilePanel` and `HelpWindow` with separate CSS files in matching `.css` files in the [`src/main/resources/view`](https://github.com/AY2223S2-CS2103T-W14-4/tp/tree/master/src/main/resources/view) folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"dunliang0513"},"content":"4. For instance, the layout of the `HelpWindow` is specified in [`HelpWindow.fxml`](https://github.com/AY2223S2-CS2103T-W14-4/tp/blob/master/src/main/resources/view/HelpWindow.fxml) with managing class at [`HelpWindow.java`](https://github.com/AY2223S2-CS2103T-W14-4/tp/blob/master/src/main/java/seedu/address/ui/HelpWindow.java) and CSS file at [`HelpWindow.css`](https://github.com/AY2223S2-CS2103T-W14-4/tp/blob/master/src/main/resources/view/HelpWindow.css).","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"dunliang0513"},"content":" ","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"Merrickneo"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-W14-4/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"dunliang0513"},"content":"\u003cdiv style\u003d\"width:80%;margin:0 10%;text-align:center\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"dunliang0513"},"content":"    \u003cb\u003eFigure 1.3.1\u003c/b\u003e Class diagram for Logic Components","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"dunliang0513"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"Merrickneo"},"content":"1. When `Logic` is called upon to execute a command, it uses the `HMHeroParser` class to parse the user command.","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"Jxleejiaxin"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"Jxleejiaxin"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"Jxleejiaxin"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"Merrickneo"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete n/John p/91234567\")` API call.","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"Merrickneo"},"content":"![Interactions Inside the Logic Component for the `delete n/John p/91234567` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"dunliang0513"},"content":"\u003cdiv style\u003d\"width:80%;margin:0 10%;text-align:center\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"dunliang0513"},"content":"    \u003cb\u003eFigure 1.3.2\u003c/b\u003e Sequence Diagram for the command \u003ccode\u003edelete n/Alex p/91234567\u003c/code\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"dunliang0513"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"dunliang0513"},"content":"\u003cdiv style\u003d\"width:80%;margin:0 10%;text-align:center\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"dunliang0513"},"content":"    \u003cb\u003eFigure 1.3.3\u003c/b\u003e Class diagram for Parser Components","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"dunliang0513"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"Merrickneo"},"content":"* When called upon to parse a user command, the `HMHero` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `HMHeroParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"Merrickneo"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-W14-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"dunliang0513"},"content":"\u003cdiv style\u003d\"width:80%;margin:0 10%;text-align:center\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"dunliang0513"},"content":"    \u003cb\u003eFigure 1.4.1\u003c/b\u003e Class diagram for Model Component","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"dunliang0513"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"Merrickneo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Note` list in the `HMHero`, which `Person` references. This allows `HMHero` to only require one `Note` object per unique note, instead of each `Person` needing their own `Note` objects.\u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":187,"author":{"gitId":"dunliang0513"},"content":"\u003cdiv style\u003d\"width:80%;margin:0 10%;text-align:center\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"dunliang0513"},"content":"    \u003cb\u003eFigure 1.4.2\u003c/b\u003e Class diagram for Model Components","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"dunliang0513"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"dunliang0513"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-W14-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":199,"author":{"gitId":"dunliang0513"},"content":"\u003cdiv style\u003d\"width:80%;margin:0 10%;text-align:center\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"dunliang0513"},"content":"    \u003cb\u003eFigure 1.5.1\u003c/b\u003e Class diagram for Storage Components","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"dunliang0513"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"Merrickneo"},"content":"* inherits from both `HMHeroStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"Jxleejiaxin"},"content":"#### Adding an Applicant","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"Jxleejiaxin"},"content":"##### Overview","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"Jxleejiaxin"},"content":"The `add` command creates a new `Person`, which represents an Applicant in HMHero\u0027s Applicant Managing System.","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"Jxleejiaxin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"Jxleejiaxin"},"content":":information_source: \u003cstrong\u003eCommand Format:\u003cstrong\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"Jxleejiaxin"},"content":"`add n/NAME p/PHONE e/EMAIL a/ADDRESS [applied/APPLIEDDATETIME] [note/NOTE]...` \u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"Jxleejiaxin"},"content":"Refer to [Glossary](#glossary) for more information on Command format.","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"Jxleejiaxin"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"Jxleejiaxin"},"content":"The activity diagram is as such:","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"Merrickneo"},"content":"![AddCommand activity diagram](images/AddApplicantActivityDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"Jxleejiaxin"},"content":"##### Feature Details","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"Jxleejiaxin"},"content":"1. The user specifies Applicants details to create. Compulsory fields are name, phone, address, and email. Optional","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"Jxleejiaxin"},"content":"fields include application date time and notes about the applicant.","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"Jxleejiaxin"},"content":"1. If any of the compulsory fields are not provided, or the provided inputs are in the wrong format, an error message","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"Jxleejiaxin"},"content":"   will be displayed. The user will be prompted to enter the command correctly via the error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"Jxleejiaxin"},"content":"1. All applicants added will start at the Applied Status.","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"Jxleejiaxin"},"content":"1. If application date time was not provided, HMHero would assume the application date time of the Applicant to be now","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"Jxleejiaxin"},"content":"   (the current time on the user\u0027s computer)","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"Jxleejiaxin"},"content":"1. The applicant is cross-referenced in the `Model` to check if it already exists. If it does, an error is raised","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"Jxleejiaxin"},"content":"to inform the user.","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"Jxleejiaxin"},"content":"1. If step 5 completes without any exceptions, the new `Person` is created and stored inside HMHero.","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"Jxleejiaxin"},"content":"##### Feature Considerations","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"Jxleejiaxin"},"content":"When checking for duplicates in the `UniquePersonList` inside `Model`, any `Person` cannot have the same name and phone","lastModifiedDate":"2023-03-26"},{"lineNumber":251,"author":{"gitId":"Jxleejiaxin"},"content":"as another. While it is unlikely applicants have the same full name, it is still possible in reality. However, it is","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"Jxleejiaxin"},"content":"impossible for unique applicants to share the same number. Thus, HMHero checks name and phone number when checking for","lastModifiedDate":"2023-03-26"},{"lineNumber":253,"author":{"gitId":"Jxleejiaxin"},"content":"duplicates.","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"Jxleejiaxin"},"content":"When implementing this feature, we restricted users to only add applicants into the `APPLIED` status. This is because","lastModifiedDate":"2023-03-26"},{"lineNumber":256,"author":{"gitId":"Jxleejiaxin"},"content":"we wanted HMHero to adhere to the flow of the hiring process. Allowing users to add applicants into specific statuses","lastModifiedDate":"2023-03-26"},{"lineNumber":257,"author":{"gitId":"Jxleejiaxin"},"content":"could introduce confusion to how `add` command is used.","lastModifiedDate":"2023-03-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":260,"author":{"gitId":"bofeng1999"},"content":"#### Advancing an Applicant","lastModifiedDate":"2023-03-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":262,"author":{"gitId":"bofeng1999"},"content":"##### Overview","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":264,"author":{"gitId":"Jxleejiaxin"},"content":"The `advance` command advances an `Person` in HMHero, which advances the `status` of a `Person`.","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"Jxleejiaxin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":267,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"Jxleejiaxin"},"content":":information_source: \u003cstrong\u003eCommand Format:\u003cstrong\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":269,"author":{"gitId":"Jxleejiaxin"},"content":"`advance n/NAME p/PHONE [d/INTERVIEWDATETIME]` \u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":270,"author":{"gitId":"Jxleejiaxin"},"content":"Refer to [Glossary](#glossary) for more information on Command format and applicant status.","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":273,"author":{"gitId":"bofeng1999"},"content":"The activity diagram is as such:","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":275,"author":{"gitId":"Jxleejiaxin"},"content":"![Advance activity diagram](diagrams/AdvanceActivityDiagram.puml)","lastModifiedDate":"2023-03-26"},{"lineNumber":276,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"bofeng1999"},"content":"Here is the activity diagram showing the process of the `advance` command:","lastModifiedDate":"2023-03-23"},{"lineNumber":278,"author":{"gitId":"Merrickneo"},"content":"![Advance activity diagram](images/AdvanceActivityDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":279,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"bofeng1999"},"content":"##### Feature Details","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"Jxleejiaxin"},"content":"1. The user specifies an applicant name and phone that represents a `Person` to be advanced.","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"Jxleejiaxin"},"content":"2. If the name and phone is not provided, an error is thrown and the user is prompted to","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"bofeng1999"},"content":"enter the command correctly via an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":284,"author":{"gitId":"Jxleejiaxin"},"content":"3. The name and phone are cross-referenced in the `Model` to check if an applicant with the corresponding name and phone exists. If it does not, then an error is raised to inform the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"Jxleejiaxin"},"content":"4. The status must be either Applied or Shortlisted. Else, then an error is raised to inform the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"Jxleejiaxin"},"content":"5. If the interview datetime is not provided when the status is Applied, the user will be prompted to enter the command","lastModifiedDate":"2023-03-28"},{"lineNumber":287,"author":{"gitId":"bofeng1999"},"content":"correctly via an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":288,"author":{"gitId":"Jxleejiaxin"},"content":"6. If the interview datetime provided exists in the `Model`, the user will be prompted to enter the command","lastModifiedDate":"2023-03-28"},{"lineNumber":289,"author":{"gitId":"bofeng1999"},"content":"correctly via an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":290,"author":{"gitId":"Jxleejiaxin"},"content":"7. If the interview datetime is provided when the status is Shortlisted, the user will be prompted to enter the command","lastModifiedDate":"2023-03-28"},{"lineNumber":291,"author":{"gitId":"bofeng1999"},"content":"correctly via an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":292,"author":{"gitId":"Jxleejiaxin"},"content":"8. If step 7 is reached without any error message, HMHero advances the specified `Person`\u0027s `status`.","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":294,"author":{"gitId":"bofeng1999"},"content":"##### Feature Considerations","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"Jxleejiaxin"},"content":"When implementing this feature, we realised that we could model HMHero to track hiring process in the real world ","lastModifiedDate":"2023-03-28"},{"lineNumber":297,"author":{"gitId":"Jxleejiaxin"},"content":"more effectively by enforcing the rule that the user can only advance applicants one stage at a time. ","lastModifiedDate":"2023-03-28"},{"lineNumber":298,"author":{"gitId":"Jxleejiaxin"},"content":"We thus decided to provide a default behaviour when advancing an applicant\u0027s status.","lastModifiedDate":"2023-03-28"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":300,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":301,"author":{"gitId":"bofeng1999"},"content":"#### Rejecting an Applicant","lastModifiedDate":"2023-03-23"},{"lineNumber":302,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":303,"author":{"gitId":"bofeng1999"},"content":"##### Overview","lastModifiedDate":"2023-03-23"},{"lineNumber":304,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":305,"author":{"gitId":"Jxleejiaxin"},"content":"The `reject` command rejects a `Person` in HMHero, which changes the `status` of a `Person` to `REJECTED`.","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":307,"author":{"gitId":"Jxleejiaxin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":308,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":309,"author":{"gitId":"Jxleejiaxin"},"content":":information_source: \u003cstrong\u003eCommand Format:\u003cstrong\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":310,"author":{"gitId":"Jxleejiaxin"},"content":"`reject n/NAME p/PHONE` \u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":311,"author":{"gitId":"Jxleejiaxin"},"content":"Refer to [Glossary](#glossary) for more information on Command format.","lastModifiedDate":"2023-03-27"},{"lineNumber":312,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":313,"author":{"gitId":"Merrickneo"},"content":"Here is the activity diagram showing the process of the `reject` command:","lastModifiedDate":"2023-03-27"},{"lineNumber":314,"author":{"gitId":"Merrickneo"},"content":"![RejectApplicantActivityDiagram](images/RejectApplicantActivityDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":315,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":316,"author":{"gitId":"bofeng1999"},"content":"The activity diagram is as such:","lastModifiedDate":"2023-03-23"},{"lineNumber":317,"author":{"gitId":"bofeng1999"},"content":"[Add in later]()","lastModifiedDate":"2023-03-23"},{"lineNumber":318,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":319,"author":{"gitId":"Jxleejiaxin"},"content":"Here is the activity diagram showing the process of the `reject` command:","lastModifiedDate":"2023-03-28"},{"lineNumber":320,"author":{"gitId":"bofeng1999"},"content":"[Add in later]()","lastModifiedDate":"2023-03-23"},{"lineNumber":321,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":322,"author":{"gitId":"bofeng1999"},"content":"##### Feature Details","lastModifiedDate":"2023-03-23"},{"lineNumber":323,"author":{"gitId":"bofeng1999"},"content":"1. The user specifies an applicant name and phone that represents an `Person` to be rejected.","lastModifiedDate":"2023-03-23"},{"lineNumber":324,"author":{"gitId":"Jxleejiaxin"},"content":"2. If the name and phone is not provided, an error is thrown and the user is prompted to","lastModifiedDate":"2023-03-26"},{"lineNumber":325,"author":{"gitId":"bofeng1999"},"content":"enter the command correctly via an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":326,"author":{"gitId":"Jxleejiaxin"},"content":"3. The name and phone are cross-referenced in the `Model` to check if an applicant with the corresponding name and phone exists.","lastModifiedDate":"2023-03-28"},{"lineNumber":327,"author":{"gitId":"bofeng1999"},"content":"    If it does not, then an error is raised to inform the user.","lastModifiedDate":"2023-03-23"},{"lineNumber":328,"author":{"gitId":"Jxleejiaxin"},"content":"4. HMHero confirms that the applicant\u0027s status is not already `REJECTED`. Else, an error is raised to inform the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":329,"author":{"gitId":"Jxleejiaxin"},"content":"5. If step 4 completes without any exceptions, then the `Person` is successfully rejected.","lastModifiedDate":"2023-03-28"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":331,"author":{"gitId":"bofeng1999"},"content":"##### Feature Considerations","lastModifiedDate":"2023-03-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":333,"author":{"gitId":"Jxleejiaxin"},"content":"It is feasible to implement the reject feature to successfully executes when `reject` command executes on ","lastModifiedDate":"2023-03-28"},{"lineNumber":334,"author":{"gitId":"Jxleejiaxin"},"content":"applicants with `REJECTED` status. However, an absence of the error message provides little value to the user and ","lastModifiedDate":"2023-03-28"},{"lineNumber":335,"author":{"gitId":"Jxleejiaxin"},"content":"may present confusingly to the user. \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":336,"author":{"gitId":"Jxleejiaxin"},"content":"Additionally, we realised that it is common for hiring managers to reject applicants without removing them. Thus, the","lastModifiedDate":"2023-03-28"},{"lineNumber":337,"author":{"gitId":"Jxleejiaxin"},"content":"`reject` command does not perform the same functionality as the `delete` command.","lastModifiedDate":"2023-03-28"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":339,"author":{"gitId":"Jxleejiaxin"},"content":"#### Finding an Applicant","lastModifiedDate":"2023-03-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":341,"author":{"gitId":"Jxleejiaxin"},"content":"##### Overview","lastModifiedDate":"2023-03-30"},{"lineNumber":342,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":343,"author":{"gitId":"Jxleejiaxin"},"content":"The `find` command filters applicants based on fields specified by the user. ","lastModifiedDate":"2023-03-26"},{"lineNumber":344,"author":{"gitId":"Jxleejiaxin"},"content":"Fields have to be denoted by flags. Allowed fields for filtering are `name` and `phone`.","lastModifiedDate":"2023-03-26"},{"lineNumber":345,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":346,"author":{"gitId":"Jxleejiaxin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":347,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":348,"author":{"gitId":"Jxleejiaxin"},"content":":information_source: \u003cstrong\u003eCommand Format:\u003cstrong\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":349,"author":{"gitId":"Jxleejiaxin"},"content":"`find [n/NAME] [p/PHONE]` \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":350,"author":{"gitId":"Jxleejiaxin"},"content":"Refer to [Glossary](#glossary) for more information on Command format.","lastModifiedDate":"2023-03-28"},{"lineNumber":351,"author":{"gitId":"Jxleejiaxin"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":352,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":353,"author":{"gitId":"Merrickneo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":354,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":355,"author":{"gitId":"Merrickneo"},"content":":information_source: \u003cstrong\u003eCommand Format:\u003cstrong\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":356,"author":{"gitId":"Merrickneo"},"content":"`find [n/NAME] [p/PHONE]` \u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":357,"author":{"gitId":"Merrickneo"},"content":"Refer to [Glossary](#glossary) for more information on Command format.","lastModifiedDate":"2023-03-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":361,"author":{"gitId":"Merrickneo"},"content":"Here is the activity diagram showing the process of the `find` command:","lastModifiedDate":"2023-03-27"},{"lineNumber":362,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":363,"author":{"gitId":"Merrickneo"},"content":"![FindCommandActivityDiagram](images/FindCommandActivityDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":364,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":365,"author":{"gitId":"Jxleejiaxin"},"content":"The sequence diagram for `find n/John` in HMHero is as such:","lastModifiedDate":"2023-03-28"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":367,"author":{"gitId":"Jxleejiaxin"},"content":"![FindSequenceDiagram](images/FindSequenceDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":368,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":369,"author":{"gitId":"Jxleejiaxin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":370,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":371,"author":{"gitId":"Jxleejiaxin"},"content":":information_source: \u003cstrong\u003eNote:\u003cstrong\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":372,"author":{"gitId":"Jxleejiaxin"},"content":"The lifeline for `FindCommandParser` should end at the destroy marker (X) but due to a limitation of \u003cstrong\u003ePlantUML\u003cstrong\u003e, the lifeline reaches the end of the diagram.","lastModifiedDate":"2023-03-28"},{"lineNumber":373,"author":{"gitId":"Jxleejiaxin"},"content":"Additionally, take note that interactions with utility classes such as `ArgumentTokenizer`, `ArgumentMultimap`, and `Messages` are excluded as including them would cause the UML diagram to be cluttered and too small to read.","lastModifiedDate":"2023-03-28"},{"lineNumber":374,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":376,"author":{"gitId":"Jxleejiaxin"},"content":"##### Feature Details","lastModifiedDate":"2023-03-30"},{"lineNumber":377,"author":{"gitId":"Jxleejiaxin"},"content":"1. The user specifies one or more fields to filter through the applicant list.","lastModifiedDate":"2023-03-26"},{"lineNumber":378,"author":{"gitId":"Jxleejiaxin"},"content":"2. If the user specifies more than one field, the filtered applicant list has to match all fields.","lastModifiedDate":"2023-03-26"},{"lineNumber":379,"author":{"gitId":"Jxleejiaxin"},"content":"3. If the user specifies a field more than once, only the last argument is considered when filtering applicants.","lastModifiedDate":"2023-03-26"},{"lineNumber":380,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":381,"author":{"gitId":"Jxleejiaxin"},"content":"##### Feature considerations","lastModifiedDate":"2023-03-30"},{"lineNumber":382,"author":{"gitId":"Jxleejiaxin"},"content":"The UI displays a `FilteredList` obtained from an immutable applicant list.","lastModifiedDate":"2023-03-26"},{"lineNumber":383,"author":{"gitId":"Jxleejiaxin"},"content":"The `FindCommandParser` creates the `Predicate` used to filter the applicant list. When the `FindCommand` is executed,","lastModifiedDate":"2023-03-26"},{"lineNumber":384,"author":{"gitId":"Jxleejiaxin"},"content":"the `FilteredList` sets its `Predicate` field to the created `Predicate`. The UI shows the new `FilteredList`.","lastModifiedDate":"2023-03-26"},{"lineNumber":385,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":386,"author":{"gitId":"Jxleejiaxin"},"content":"Applicant fields are required as an input as it is helpful to reduce user confusion and facilitate finding applicants based on multiple fields.","lastModifiedDate":"2023-03-28"},{"lineNumber":387,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":388,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":389,"author":{"gitId":"bofeng1999"},"content":"#### Editing an Applicant","lastModifiedDate":"2023-03-23"},{"lineNumber":390,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":391,"author":{"gitId":"bofeng1999"},"content":"##### Overview","lastModifiedDate":"2023-03-23"},{"lineNumber":392,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":393,"author":{"gitId":"Jxleejiaxin"},"content":"The `edit` feature edits the attached attributes of a specified `Person`,which is specified by the one-indexed `personList` presented to the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":394,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":395,"author":{"gitId":"Jxleejiaxin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":396,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":397,"author":{"gitId":"Jxleejiaxin"},"content":":information_source: \u003cstrong\u003eCommand Format:\u003cstrong\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":398,"author":{"gitId":"Jxleejiaxin"},"content":"`edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [d/INTERVIEWDATETIME] [note/NOTE]...` \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":399,"author":{"gitId":"Jxleejiaxin"},"content":"Refer to [Glossary](#glossary) for more information on Command format.","lastModifiedDate":"2023-03-28"},{"lineNumber":400,"author":{"gitId":"Jxleejiaxin"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":401,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":402,"author":{"gitId":"bofeng1999"},"content":"The activity diagram is as such:","lastModifiedDate":"2023-03-23"},{"lineNumber":403,"author":{"gitId":"bofeng1999"},"content":"[add in later]()","lastModifiedDate":"2023-03-23"},{"lineNumber":404,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":405,"author":{"gitId":"bofeng1999"},"content":"Here is the activity diagram showing the process of the `edit` command:","lastModifiedDate":"2023-03-23"},{"lineNumber":406,"author":{"gitId":"Merrickneo"},"content":"[EditApplicantActivityDiagram]()","lastModifiedDate":"2023-03-27"},{"lineNumber":407,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":408,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":409,"author":{"gitId":"bofeng1999"},"content":"##### Feature Details","lastModifiedDate":"2023-03-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":411,"author":{"gitId":"Jxleejiaxin"},"content":"1. The user can perform commands that modify the shown applicant list. (Eg. `find` and `interview` commands)","lastModifiedDate":"2023-03-28"},{"lineNumber":412,"author":{"gitId":"Jxleejiaxin"},"content":"2. The user specifies an index that represents a `Person` to be edited.","lastModifiedDate":"2023-03-28"},{"lineNumber":413,"author":{"gitId":"Jxleejiaxin"},"content":"3. If a non-zero unsigned integer index is not provided, an error is thrown and the user is prompted to enter the command correctly via an error message.","lastModifiedDate":"2023-03-28"},{"lineNumber":414,"author":{"gitId":"Jxleejiaxin"},"content":"4. At least one field to be edited has to be provided. Else, the user will be prompted to enter the command correctly via an error message.","lastModifiedDate":"2023-03-28"},{"lineNumber":415,"author":{"gitId":"Jxleejiaxin"},"content":"5. If an index that is not in the valid range of the list is provided, an error is thrown and the user is prompted to enter the command correctly via an error message.","lastModifiedDate":"2023-03-28"},{"lineNumber":416,"author":{"gitId":"Jxleejiaxin"},"content":"6. The `edit` command creates a new applicant based on the given fields. The created applicant is cross-referenced in the `Model` to check if it already exists. If it already does, then an error is raised to inform the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":417,"author":{"gitId":"Jxleejiaxin"},"content":"7. If step 6 completes without any exceptions, then the `Person` at the specified index is successfully edited.","lastModifiedDate":"2023-03-28"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":419,"author":{"gitId":"bofeng1999"},"content":"##### Feature Considerations","lastModifiedDate":"2023-03-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":421,"author":{"gitId":"bofeng1999"},"content":"Similar to the `new` command, it should be noted that when checking for duplicates in the `UniquePersonList` inside the","lastModifiedDate":"2023-03-23"},{"lineNumber":422,"author":{"gitId":"bofeng1999"},"content":"`Model`, Applicants cannot have the same name and phone number. For example, if a `Person` with the name `Thomas` and","lastModifiedDate":"2023-03-23"},{"lineNumber":423,"author":{"gitId":"bofeng1999"},"content":"`91823452` already exists inside the list, then you cannot edit an existing `Person` to have the name `Thomas` and","lastModifiedDate":"2023-03-23"},{"lineNumber":424,"author":{"gitId":"bofeng1999"},"content":"`91823452`.","lastModifiedDate":"2023-03-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":426,"author":{"gitId":"bofeng1999"},"content":"When providing multiple arguments with the same delimiter,","lastModifiedDate":"2023-03-23"},{"lineNumber":427,"author":{"gitId":"bofeng1999"},"content":"the last instance of the repeat delimiter is taken during the `parse` command.","lastModifiedDate":"2023-03-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":430,"author":{"gitId":"bofeng1999"},"content":"#### Displaying the list","lastModifiedDate":"2023-03-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":432,"author":{"gitId":"bofeng1999"},"content":"##### Overview","lastModifiedDate":"2023-03-23"},{"lineNumber":433,"author":{"gitId":"bofeng1999"},"content":"The `list` command displays the full list by HMHero.","lastModifiedDate":"2023-03-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":435,"author":{"gitId":"Merrickneo"},"content":"Here is the activity diagram showing the process of the `list` command:","lastModifiedDate":"2023-03-27"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":437,"author":{"gitId":"Merrickneo"},"content":"![ListActivityDiagram](images/ListActivityDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":439,"author":{"gitId":"bofeng1999"},"content":"##### Feature Details","lastModifiedDate":"2023-03-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":441,"author":{"gitId":"bofeng1999"},"content":"1. The user calls the `list` command.","lastModifiedDate":"2023-03-23"},{"lineNumber":442,"author":{"gitId":"bofeng1999"},"content":"1. HMHero performs the necessary calculations to obtain the statistics. HMHero displays the result to the user.","lastModifiedDate":"2023-03-23"},{"lineNumber":443,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":444,"author":{"gitId":"bofeng1999"},"content":"##### Feature Considerations","lastModifiedDate":"2023-03-23"},{"lineNumber":445,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":446,"author":{"gitId":"Jxleejiaxin"},"content":"The five statistics were chosen as a baseline, and they are a good starting point for users to help","lastModifiedDate":"2023-03-28"},{"lineNumber":447,"author":{"gitId":"bofeng1999"},"content":"track the number of applicants. For example, the user can obtain the total number of applicants, and also provide","lastModifiedDate":"2023-03-23"},{"lineNumber":448,"author":{"gitId":"bofeng1999"},"content":"the total numbers of applicants for each status.","lastModifiedDate":"2023-03-23"},{"lineNumber":449,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":450,"author":{"gitId":"Jxleejiaxin"},"content":"#### Showing all shortlisted applicants","lastModifiedDate":"2023-03-26"},{"lineNumber":451,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":452,"author":{"gitId":"Jxleejiaxin"},"content":"##### Overview","lastModifiedDate":"2023-03-26"},{"lineNumber":453,"author":{"gitId":"Jxleejiaxin"},"content":"The `interview` command displays the list of all shortlisted applicants, sorted by earliest interview date.","lastModifiedDate":"2023-03-26"},{"lineNumber":454,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":455,"author":{"gitId":"Jxleejiaxin"},"content":"##### Feature Details","lastModifiedDate":"2023-03-26"},{"lineNumber":456,"author":{"gitId":"Jxleejiaxin"},"content":"1. The user calls the `interview` command.","lastModifiedDate":"2023-03-26"},{"lineNumber":457,"author":{"gitId":"Jxleejiaxin"},"content":"2. The applicant list is filtered for shortlisted applicants.","lastModifiedDate":"2023-03-26"},{"lineNumber":458,"author":{"gitId":"Jxleejiaxin"},"content":"3. The resulting filtered applicant list is sorted by interview date, from earliest to latest.","lastModifiedDate":"2023-03-26"},{"lineNumber":459,"author":{"gitId":"Jxleejiaxin"},"content":"4. HMHero displays the resulting `SortedList` to the user.","lastModifiedDate":"2023-03-26"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"Jxleejiaxin"},"content":"#### Filter applicants based on notes","lastModifiedDate":"2023-03-30"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":470,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":471,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":472,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":473,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"FredericChow00"},"content":"* Has a need to manage a significant number of applicants who applied to their department","lastModifiedDate":"2023-03-23"},{"lineNumber":484,"author":{"gitId":"FredericChow00"},"content":"* Is a Hiring Manager","lastModifiedDate":"2023-03-23"},{"lineNumber":485,"author":{"gitId":"FredericChow00"},"content":"* Prefers desktop apps over other types","lastModifiedDate":"2023-03-23"},{"lineNumber":486,"author":{"gitId":"FredericChow00"},"content":"* Can type fast","lastModifiedDate":"2023-03-23"},{"lineNumber":487,"author":{"gitId":"FredericChow00"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2023-03-23"},{"lineNumber":488,"author":{"gitId":"FredericChow00"},"content":"* Prefers using CLI to GUI to increase productivity","lastModifiedDate":"2023-03-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"FredericChow00"},"content":"**Value proposition**: ","lastModifiedDate":"2023-03-23"},{"lineNumber":491,"author":{"gitId":"FredericChow00"},"content":"* Users can track and monitor the progress of each applicant in the application cycle very easily.","lastModifiedDate":"2023-03-23"},{"lineNumber":492,"author":{"gitId":"FredericChow00"},"content":"* Users can quickly search applicants with particular skill-sets.","lastModifiedDate":"2023-03-23"},{"lineNumber":493,"author":{"gitId":"FredericChow00"},"content":"* Users can obtain insights on their hiring practices to look for areas for improvement.","lastModifiedDate":"2023-03-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"FredericChow00"},"content":"**Note:** The following legend describes the symbols used in this section:","lastModifiedDate":"2023-03-28"},{"lineNumber":499,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":500,"author":{"gitId":"FredericChow00"},"content":"| Priority | Symbol  | Meaning          | ","lastModifiedDate":"2023-03-23"},{"lineNumber":501,"author":{"gitId":"FredericChow00"},"content":"|----------|---------|------------------|","lastModifiedDate":"2023-03-23"},{"lineNumber":502,"author":{"gitId":"FredericChow00"},"content":"| High     | `* * *` | Must have        | ","lastModifiedDate":"2023-03-23"},{"lineNumber":503,"author":{"gitId":"FredericChow00"},"content":"| Medium   | `* *`   | Nice to have     | ","lastModifiedDate":"2023-03-23"},{"lineNumber":504,"author":{"gitId":"FredericChow00"},"content":"| Low      | `*`     | Unlikely to have | ","lastModifiedDate":"2023-03-23"},{"lineNumber":505,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":506,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":507,"author":{"gitId":"FredericChow00"},"content":"| Priority | As a …                                | I want to …                                                       | So that …                                                                            |","lastModifiedDate":"2023-03-23"},{"lineNumber":508,"author":{"gitId":"Merrickneo"},"content":"|:---------|---------------------------------------|-------------------------------------------------------------------|--------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-27"},{"lineNumber":509,"author":{"gitId":"FredericChow00"},"content":"| `* * *`  | Hiring Manager                        | List out all existing applicants                                  | I can have a glance of the status of the application cycle of all applicants.        |","lastModifiedDate":"2023-03-23"},{"lineNumber":510,"author":{"gitId":"FredericChow00"},"content":"| `* * *`  | Hiring Manager                        | View the number of applicants in each application stage           | I can have a glance of the status at each stage in the application cycle.            |","lastModifiedDate":"2023-03-23"},{"lineNumber":511,"author":{"gitId":"FredericChow00"},"content":"| `* * *`  | Hiring Manager                        | Advance the application stage of applicants                       | I can move an applicant into the next stage of the application cycle                 |","lastModifiedDate":"2023-03-23"},{"lineNumber":512,"author":{"gitId":"FredericChow00"},"content":"| `* * *`  | Hiring Manager                        | Add applicants into HMHero                                        | I can quickly add users who have applied to the department.                          |","lastModifiedDate":"2023-03-23"},{"lineNumber":513,"author":{"gitId":"FredericChow00"},"content":"| `* * *`  | Hiring Manager                        | Delete single applicant                                           | I can delete applicants that I do not wish to track in the application anymore.      |","lastModifiedDate":"2023-03-23"},{"lineNumber":514,"author":{"gitId":"FredericChow00"},"content":"| `* * *`  | Busy Hiring Manager                   | Search for applicants                                             | I can view details of specific applicants                                            |","lastModifiedDate":"2023-03-23"},{"lineNumber":515,"author":{"gitId":"FredericChow00"},"content":"| `* * * ` | Senior Hiring Manager                 | Identify duplicate applications from the same applicant           | I can prevent applicants from sending multiple applications                          |","lastModifiedDate":"2023-03-23"},{"lineNumber":516,"author":{"gitId":"FredericChow00"},"content":"| `* * `   | Busy Hiring Manager                   | View the dates of interviews for all shortlisted applicants       | I can better schedule future working days                                            |","lastModifiedDate":"2023-03-23"},{"lineNumber":517,"author":{"gitId":"FredericChow00"},"content":"| `* * `   | Hiring Manager                        | Take down some additional notes for each applicant                | I can note down additional details of an applicant, for future reference             |","lastModifiedDate":"2023-03-23"},{"lineNumber":518,"author":{"gitId":"FredericChow00"},"content":"| `* * `   | Forgetful Hiring Manager              | Remind myself of interviews that coming up                        | I will not forget to attend any interview that I have scheduled                      |","lastModifiedDate":"2023-03-23"},{"lineNumber":519,"author":{"gitId":"FredericChow00"},"content":"| `* * `   | Clumsy Hiring Manager                 | Check whether there are any clashes in interview date and timings | I can prevent myself from scheduling more than 1 interview in the same date and time |","lastModifiedDate":"2023-03-23"},{"lineNumber":520,"author":{"gitId":"FredericChow00"},"content":"| `* `     | Clumsy Hiring Manager                 | Get a confirmation message when deleting an applicant             | I can prevent accidental deletions of applicants                                     |","lastModifiedDate":"2023-03-23"},{"lineNumber":521,"author":{"gitId":"FredericChow00"},"content":"| `* `     | Old Hiring Manager                    | Highlight and enlarge the keywords that I am looking for          | I can easily see the keywords that I am looking for                                  |","lastModifiedDate":"2023-03-23"},{"lineNumber":522,"author":{"gitId":"FredericChow00"},"content":"| `* `     | Careless Hiring Manager               | Undo recent actions or commands                                   | I can reverse commands that I have mistakenly carried out                            |","lastModifiedDate":"2023-03-23"},{"lineNumber":523,"author":{"gitId":"FredericChow00"},"content":"| `* `     | Hiring Manager for multiple positions | Create jobs with required skill sets for each job                 | I can keep track of skill-sets needed for each job to match applicants               |","lastModifiedDate":"2023-03-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"FredericChow00"},"content":"(For all use cases below, the **System** is the `HMHero` and the **Actor** is the `Hiring Manager`, unless specified otherwise)","lastModifiedDate":"2023-02-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"FredericChow00"},"content":"MSS refers to *Main Success Scenario*.","lastModifiedDate":"2023-03-28"},{"lineNumber":530,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":531,"author":{"gitId":"FredericChow00"},"content":"**Use case: List all applicants**","lastModifiedDate":"2023-03-28"},{"lineNumber":532,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":533,"author":{"gitId":"FredericChow00"},"content":"Precondition: HMHero already has some applicants stored.","lastModifiedDate":"2023-03-28"},{"lineNumber":534,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":535,"author":{"gitId":"FredericChow00"},"content":"**MSS**","lastModifiedDate":"2023-03-28"},{"lineNumber":536,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":537,"author":{"gitId":"FredericChow00"},"content":"1. User enters command to view applicants in the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":538,"author":{"gitId":"FredericChow00"},"content":"2. HMHero shows list of applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":539,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":540,"author":{"gitId":"FredericChow00"},"content":"   Use case ends.","lastModifiedDate":"2023-03-28"},{"lineNumber":541,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":542,"author":{"gitId":"FredericChow00"},"content":"**Use case: Add an applicant**","lastModifiedDate":"2023-03-28"},{"lineNumber":543,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":544,"author":{"gitId":"FredericChow00"},"content":"Precondition: Applicant does not exist in HMHero yet.","lastModifiedDate":"2023-03-28"},{"lineNumber":545,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":546,"author":{"gitId":"bofeng1999"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":547,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":548,"author":{"gitId":"FredericChow00"},"content":"1.  User enters command to add a specific applicant in the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":549,"author":{"gitId":"FredericChow00"},"content":"2.  HMHero adds the applicant.","lastModifiedDate":"2023-03-28"},{"lineNumber":550,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":551,"author":{"gitId":"bofeng1999"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":552,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":553,"author":{"gitId":"bofeng1999"},"content":"**Extensions**","lastModifiedDate":"2023-02-23"},{"lineNumber":554,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":555,"author":{"gitId":"FredericChow00"},"content":"* 1a. Compulsory fields (name, phone, email, address) are not given.","lastModifiedDate":"2023-03-23"},{"lineNumber":556,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":557,"author":{"gitId":"FredericChow00"},"content":"    * 1a1. HMHero shows an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":558,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":559,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-23"},{"lineNumber":560,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":561,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":562,"author":{"gitId":"bofeng1999"},"content":"**Use case: Delete an applicant**","lastModifiedDate":"2023-02-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"FredericChow00"},"content":"Precondition: Applicant to delete exists in HMHero.","lastModifiedDate":"2023-03-28"},{"lineNumber":565,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":566,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"FredericChow00"},"content":"1.  User requests to list all applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":569,"author":{"gitId":"FredericChow00"},"content":"2.  HMHero shows a list of applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":570,"author":{"gitId":"FredericChow00"},"content":"3.  User enters the command to delete a specific applicant in the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":571,"author":{"gitId":"FredericChow00"},"content":"4.  HMHero deletes the applicant.","lastModifiedDate":"2023-03-28"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"FredericChow00"},"content":"* 3a. The given applicant\u0027s name does not exist.","lastModifiedDate":"2023-03-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"bofeng1999"},"content":"    * 3a1. HMHero shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-23"},{"lineNumber":582,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":583,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":584,"author":{"gitId":"FredericChow00"},"content":"* 3b. The given applicant\u0027s phone number does not exist.","lastModifiedDate":"2023-03-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"FredericChow00"},"content":"    * 3b1. HMHero shows an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":587,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":588,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-23"},{"lineNumber":589,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":590,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":591,"author":{"gitId":"FredericChow00"},"content":"* 3c. The given applicant\u0027s name and corresponding phone number combination for an applicant does not exist.","lastModifiedDate":"2023-03-28"},{"lineNumber":592,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":593,"author":{"gitId":"FredericChow00"},"content":"    * 3c1. HMHero shows an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"bofeng1999"},"content":"**Use case: Advance an applicant’s status**","lastModifiedDate":"2023-02-23"},{"lineNumber":598,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":599,"author":{"gitId":"FredericChow00"},"content":"Precondition: Status of Applicant to advance is not `ACCEPTED` or `REJECTED` and HMHero already has some applicants ","lastModifiedDate":"2023-03-28"},{"lineNumber":600,"author":{"gitId":"FredericChow00"},"content":"stored.","lastModifiedDate":"2023-03-28"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":602,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":604,"author":{"gitId":"FredericChow00"},"content":"1.  User requests to list applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":605,"author":{"gitId":"FredericChow00"},"content":"2.  HMHero shows a list of applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":606,"author":{"gitId":"FredericChow00"},"content":"3.  User enters the command to advance the status of a specific applicant in the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":607,"author":{"gitId":"bofeng1999"},"content":"4.  HMHero advances the applicant’s status.","lastModifiedDate":"2023-02-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-02-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":614,"author":{"gitId":"FredericChow00"},"content":"* 3a. The given applicant\u0027s name does not exist.","lastModifiedDate":"2023-03-23"},{"lineNumber":615,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":616,"author":{"gitId":"bofeng1999"},"content":"    * 3a1. HMHero shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":617,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":618,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-23"},{"lineNumber":619,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":620,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":621,"author":{"gitId":"FredericChow00"},"content":"* 3b. The given applicant\u0027s phone number does not exist.","lastModifiedDate":"2023-03-23"},{"lineNumber":622,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":623,"author":{"gitId":"FredericChow00"},"content":"    * 3b1. HMHero shows an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":624,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":625,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-23"},{"lineNumber":626,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":627,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":628,"author":{"gitId":"FredericChow00"},"content":"* 3c. The given applicant’s current status is `APPLIED` but no interview date and time was given. ","lastModifiedDate":"2023-03-23"},{"lineNumber":629,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":630,"author":{"gitId":"FredericChow00"},"content":"    * 3c1. HMHero shows an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":631,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":632,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-23"},{"lineNumber":633,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":634,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":635,"author":{"gitId":"FredericChow00"},"content":"* 3d. The given applicant’s current status is not `APPLIED` but an interview date and time was given.","lastModifiedDate":"2023-03-23"},{"lineNumber":636,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":637,"author":{"gitId":"FredericChow00"},"content":"    * 3d1. HMHero shows an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":638,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":639,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-23"},{"lineNumber":640,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":642,"author":{"gitId":"FredericChow00"},"content":"* 3e. The given interview date time is of invalid formatting.","lastModifiedDate":"2023-03-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":644,"author":{"gitId":"FredericChow00"},"content":"    * 3e1. HMHero shows an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":646,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-23"},{"lineNumber":647,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":648,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":649,"author":{"gitId":"bofeng1999"},"content":"**Use case: Reject an applicant’s status**","lastModifiedDate":"2023-02-23"},{"lineNumber":650,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":651,"author":{"gitId":"FredericChow00"},"content":"Precondition: Status of Applicant to reject is not `REJECTED` and HMHero already has some applicants stored.","lastModifiedDate":"2023-03-28"},{"lineNumber":652,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":653,"author":{"gitId":"bofeng1999"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":654,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":655,"author":{"gitId":"FredericChow00"},"content":"1.  User requests to list applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":656,"author":{"gitId":"FredericChow00"},"content":"2.  HMHero shows a list of applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":657,"author":{"gitId":"FredericChow00"},"content":"3.  User enters the command to reject a specific applicant in the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":658,"author":{"gitId":"FredericChow00"},"content":"4.  HMHero sets the applicant’s status as `REJECTED`.","lastModifiedDate":"2023-03-23"},{"lineNumber":659,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":660,"author":{"gitId":"bofeng1999"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":661,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":662,"author":{"gitId":"bofeng1999"},"content":"**Extensions**","lastModifiedDate":"2023-02-23"},{"lineNumber":663,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":664,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":665,"author":{"gitId":"FredericChow00"},"content":"* 3a. The given applicant\u0027s name does not exist.","lastModifiedDate":"2023-03-23"},{"lineNumber":666,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":667,"author":{"gitId":"bofeng1999"},"content":"    * 3a1. HMHero shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":668,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":669,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-23"},{"lineNumber":670,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":671,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":672,"author":{"gitId":"FredericChow00"},"content":"* 3b. The given applicant\u0027s phone number does not exist.","lastModifiedDate":"2023-03-23"},{"lineNumber":673,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":674,"author":{"gitId":"bofeng1999"},"content":"    * 3b1. HMHero shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":675,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":676,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-23"},{"lineNumber":677,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":678,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":679,"author":{"gitId":"FredericChow00"},"content":"**Use case: Finding applicants**","lastModifiedDate":"2023-03-28"},{"lineNumber":680,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":681,"author":{"gitId":"FredericChow00"},"content":"Precondition: Applicant to find exists in HMHero.","lastModifiedDate":"2023-03-28"},{"lineNumber":682,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":683,"author":{"gitId":"bofeng1999"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":684,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":685,"author":{"gitId":"FredericChow00"},"content":"1.  User requests to list applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":686,"author":{"gitId":"FredericChow00"},"content":"2.  HMHero shows a list of applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":687,"author":{"gitId":"FredericChow00"},"content":"3.  User enters the command to find an applicant.","lastModifiedDate":"2023-03-28"},{"lineNumber":688,"author":{"gitId":"FredericChow00"},"content":"4.  HMHero shows all applicants that matches the given parameters.","lastModifiedDate":"2023-03-28"},{"lineNumber":689,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":690,"author":{"gitId":"bofeng1999"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":691,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":692,"author":{"gitId":"FredericChow00"},"content":"**Extensions**","lastModifiedDate":"2023-03-28"},{"lineNumber":693,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":694,"author":{"gitId":"FredericChow00"},"content":"* 3a. HMHero detects that the command entered is of invalid formatting.","lastModifiedDate":"2023-03-28"},{"lineNumber":695,"author":{"gitId":"FredericChow00"},"content":"    * 3a1. HMHero shows an error message","lastModifiedDate":"2023-03-28"},{"lineNumber":696,"author":{"gitId":"FredericChow00"},"content":"  ","lastModifiedDate":"2023-03-28"},{"lineNumber":697,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-28"},{"lineNumber":698,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":699,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":700,"author":{"gitId":"FredericChow00"},"content":"**Use case: Finding applicants with specific skills**","lastModifiedDate":"2023-03-28"},{"lineNumber":701,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":702,"author":{"gitId":"FredericChow00"},"content":"Precondition: Applicants with skills that user gave exists in HMHero.","lastModifiedDate":"2023-03-28"},{"lineNumber":703,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":704,"author":{"gitId":"FredericChow00"},"content":"**MSS**","lastModifiedDate":"2023-03-23"},{"lineNumber":705,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":706,"author":{"gitId":"FredericChow00"},"content":"1.  User requests to list applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":707,"author":{"gitId":"FredericChow00"},"content":"2.  HMHero shows a list of applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":708,"author":{"gitId":"FredericChow00"},"content":"3.  User enters the command to find applicants that match specific skills.","lastModifiedDate":"2023-03-28"},{"lineNumber":709,"author":{"gitId":"FredericChow00"},"content":"4.  HMHero shows all applicants with notes that match the given skills.","lastModifiedDate":"2023-03-28"},{"lineNumber":710,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":711,"author":{"gitId":"FredericChow00"},"content":"    Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":712,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":713,"author":{"gitId":"FredericChow00"},"content":"**Extensions**","lastModifiedDate":"2023-03-23"},{"lineNumber":714,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":715,"author":{"gitId":"FredericChow00"},"content":"* 3a. HMHero detects that the command entered is of invalid formatting.","lastModifiedDate":"2023-03-28"},{"lineNumber":716,"author":{"gitId":"FredericChow00"},"content":"    * 3a1. HMHero shows an error message","lastModifiedDate":"2023-03-28"},{"lineNumber":717,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":718,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-28"},{"lineNumber":719,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":720,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":721,"author":{"gitId":"FredericChow00"},"content":"**Use case: Remind upcoming interviews**","lastModifiedDate":"2023-03-28"},{"lineNumber":722,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":723,"author":{"gitId":"FredericChow00"},"content":"Precondition: There are shortlisted applicants in HMHero.","lastModifiedDate":"2023-03-28"},{"lineNumber":724,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":725,"author":{"gitId":"FredericChow00"},"content":"**MSS**","lastModifiedDate":"2023-03-28"},{"lineNumber":726,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":727,"author":{"gitId":"FredericChow00"},"content":"1.  User requests to list applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":728,"author":{"gitId":"FredericChow00"},"content":"2.  HMHero shows a list of applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":729,"author":{"gitId":"FredericChow00"},"content":"3.  User enters the command to remind himself/herself of the upcoming interviews.","lastModifiedDate":"2023-03-28"},{"lineNumber":730,"author":{"gitId":"FredericChow00"},"content":"4.  HMHero shows all applicants with interview dates within the next three days.","lastModifiedDate":"2023-03-28"},{"lineNumber":731,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":732,"author":{"gitId":"FredericChow00"},"content":"    Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":733,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":734,"author":{"gitId":"FredericChow00"},"content":"**Extensions**","lastModifiedDate":"2023-03-28"},{"lineNumber":735,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":736,"author":{"gitId":"FredericChow00"},"content":"* 3a. HMHero detects that the command entered is of invalid formatting.","lastModifiedDate":"2023-03-28"},{"lineNumber":737,"author":{"gitId":"FredericChow00"},"content":"    * 3a1. HMHero shows an error message","lastModifiedDate":"2023-03-28"},{"lineNumber":738,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":739,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-28"},{"lineNumber":740,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":741,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":742,"author":{"gitId":"FredericChow00"},"content":"**Use case: View all interview dates**","lastModifiedDate":"2023-03-23"},{"lineNumber":743,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":744,"author":{"gitId":"FredericChow00"},"content":"Precondition: There are shortlisted applicants in HMHero.","lastModifiedDate":"2023-03-28"},{"lineNumber":745,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":746,"author":{"gitId":"FredericChow00"},"content":"**MSS**","lastModifiedDate":"2023-03-23"},{"lineNumber":747,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":748,"author":{"gitId":"FredericChow00"},"content":"1.  User requests to list applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":749,"author":{"gitId":"FredericChow00"},"content":"2.  HMHero shows a list of applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":750,"author":{"gitId":"FredericChow00"},"content":"3.  User enters the command to view interview dates and times of all `SHORTLISTED` applicants.","lastModifiedDate":"2023-03-23"},{"lineNumber":751,"author":{"gitId":"FredericChow00"},"content":"4.  HMHero shows the interview date and times of all `SHORTLISTED` applicants, sorted from earliest to latest.","lastModifiedDate":"2023-03-23"},{"lineNumber":752,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":753,"author":{"gitId":"FredericChow00"},"content":"    Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":754,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":755,"author":{"gitId":"FredericChow00"},"content":"**Extensions**","lastModifiedDate":"2023-03-23"},{"lineNumber":756,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":757,"author":{"gitId":"FredericChow00"},"content":"* 3a. HMHero detects that the command entered is of invalid formatting.","lastModifiedDate":"2023-03-28"},{"lineNumber":758,"author":{"gitId":"FredericChow00"},"content":"    * 3a1. HMHero shows an error message","lastModifiedDate":"2023-03-28"},{"lineNumber":759,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":760,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-28"},{"lineNumber":761,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":762,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":763,"author":{"gitId":"FredericChow00"},"content":"**Use case: View summary statistics of hiring cycle**","lastModifiedDate":"2023-03-28"},{"lineNumber":764,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":765,"author":{"gitId":"FredericChow00"},"content":"Precondition: There are applicants added into HMHero.","lastModifiedDate":"2023-03-28"},{"lineNumber":766,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":767,"author":{"gitId":"FredericChow00"},"content":"**MSS**","lastModifiedDate":"2023-03-28"},{"lineNumber":768,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":769,"author":{"gitId":"FredericChow00"},"content":"1. User enters the command to view summary statistics.","lastModifiedDate":"2023-03-28"},{"lineNumber":770,"author":{"gitId":"FredericChow00"},"content":"2. HMHero shows summary statistics.","lastModifiedDate":"2023-03-28"},{"lineNumber":771,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":772,"author":{"gitId":"FredericChow00"},"content":"    Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":773,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":774,"author":{"gitId":"FredericChow00"},"content":"**Extensions**","lastModifiedDate":"2023-03-28"},{"lineNumber":775,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":776,"author":{"gitId":"FredericChow00"},"content":"* 1a. HMHero detects that the command entered is of invalid formatting.","lastModifiedDate":"2023-03-28"},{"lineNumber":777,"author":{"gitId":"FredericChow00"},"content":"    * 1a1. HMHero shows an error message","lastModifiedDate":"2023-03-28"},{"lineNumber":778,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":779,"author":{"gitId":"FredericChow00"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-28"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"FredericChow00"},"content":"4.  Should not require any internet connection.","lastModifiedDate":"2023-03-23"},{"lineNumber":788,"author":{"gitId":"Merrickneo"},"content":"5.  Should be usable by a novice who has never used managed applicants on HMHero before.","lastModifiedDate":"2023-02-23"},{"lineNumber":789,"author":{"gitId":"FredericChow00"},"content":"6.  Should be for a single user (i.e. not a multi-user product where different users can run the application at different times on a shared computer).","lastModifiedDate":"2023-03-23"},{"lineNumber":790,"author":{"gitId":"FredericChow00"},"content":"7.  The data of the application is stored locally.","lastModifiedDate":"2023-03-23"},{"lineNumber":791,"author":{"gitId":"FredericChow00"},"content":"8.  No database management system should be used.","lastModifiedDate":"2023-03-23"},{"lineNumber":792,"author":{"gitId":"FredericChow00"},"content":"9.  The product is not required to handle the screening of resume for each applicant.","lastModifiedDate":"2023-03-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"FredericChow00"},"content":"#### Quick Reference","lastModifiedDate":"2023-03-28"},{"lineNumber":796,"author":{"gitId":"FredericChow00"},"content":"- [ADDRESS (Placeholder)](#address-placeholder)","lastModifiedDate":"2023-03-28"},{"lineNumber":797,"author":{"gitId":"FredericChow00"},"content":"- [Address](#address)","lastModifiedDate":"2023-03-28"},{"lineNumber":798,"author":{"gitId":"FredericChow00"},"content":"- [Admonitions](#admonitions)","lastModifiedDate":"2023-03-28"},{"lineNumber":799,"author":{"gitId":"FredericChow00"},"content":"- [Applicant](#applicant)","lastModifiedDate":"2023-03-28"},{"lineNumber":800,"author":{"gitId":"FredericChow00"},"content":"- [Application Cycle](#application-cycle)","lastModifiedDate":"2023-03-28"},{"lineNumber":801,"author":{"gitId":"FredericChow00"},"content":"- [COMMAND_WORD (Placeholder)](#commandword-placeholder)","lastModifiedDate":"2023-03-28"},{"lineNumber":802,"author":{"gitId":"FredericChow00"},"content":"- [Command](#command)","lastModifiedDate":"2023-03-28"},{"lineNumber":803,"author":{"gitId":"FredericChow00"},"content":"- [Command Line (CLI)](#command-line)","lastModifiedDate":"2023-03-28"},{"lineNumber":804,"author":{"gitId":"FredericChow00"},"content":"- [Placeholder](#email-placeholder)","lastModifiedDate":"2023-03-28"},{"lineNumber":805,"author":{"gitId":"FredericChow00"},"content":"- [Email](#email)","lastModifiedDate":"2023-03-28"},{"lineNumber":806,"author":{"gitId":"FredericChow00"},"content":"- [Flags](#flags)","lastModifiedDate":"2023-03-28"},{"lineNumber":807,"author":{"gitId":"FredericChow00"},"content":"- [Graphical User Interface(GUI)](#graphical-user-interface)","lastModifiedDate":"2023-03-28"},{"lineNumber":808,"author":{"gitId":"FredericChow00"},"content":"- [Help Window](#help-window)","lastModifiedDate":"2023-03-28"},{"lineNumber":809,"author":{"gitId":"FredericChow00"},"content":"- [Hiring Manager](#hiring-manager)","lastModifiedDate":"2023-03-28"},{"lineNumber":810,"author":{"gitId":"FredericChow00"},"content":"- [Input](#input)","lastModifiedDate":"2023-03-28"},{"lineNumber":811,"author":{"gitId":"FredericChow00"},"content":"- [INTERVIEW_DATE (Placeholder)](#interviewdate-placeholder)","lastModifiedDate":"2023-03-28"},{"lineNumber":812,"author":{"gitId":"FredericChow00"},"content":"- [Interview Date](#interview-date)","lastModifiedDate":"2023-03-28"},{"lineNumber":813,"author":{"gitId":"FredericChow00"},"content":"- [KEYWORD (Placeholder)](#keyword-placeholder)","lastModifiedDate":"2023-03-28"},{"lineNumber":814,"author":{"gitId":"FredericChow00"},"content":"- [Main Operating System](#mainstream-os)","lastModifiedDate":"2023-03-28"},{"lineNumber":815,"author":{"gitId":"FredericChow00"},"content":"- [Main Success Scenario](#main-success-scenario)","lastModifiedDate":"2023-03-28"},{"lineNumber":816,"author":{"gitId":"FredericChow00"},"content":"- [NAME (Placeholder)](#name-placeholder)","lastModifiedDate":"2023-03-28"},{"lineNumber":817,"author":{"gitId":"FredericChow00"},"content":"- [Name](#name)","lastModifiedDate":"2023-03-28"},{"lineNumber":818,"author":{"gitId":"FredericChow00"},"content":"- [NOTES (Placeholder)](#notes-placeholder)","lastModifiedDate":"2023-03-28"},{"lineNumber":819,"author":{"gitId":"FredericChow00"},"content":"- [Notes](#notes)","lastModifiedDate":"2023-03-28"},{"lineNumber":820,"author":{"gitId":"FredericChow00"},"content":"- [Output](#output)","lastModifiedDate":"2023-03-28"},{"lineNumber":821,"author":{"gitId":"FredericChow00"},"content":"- [Parameter](#parameter)","lastModifiedDate":"2023-03-28"},{"lineNumber":822,"author":{"gitId":"FredericChow00"},"content":"- [PHONE_NUMBER (Placeholder)](#phonenumber-placeholder)","lastModifiedDate":"2023-03-28"},{"lineNumber":823,"author":{"gitId":"FredericChow00"},"content":"- [Phone Number](#phone-number)","lastModifiedDate":"2023-03-28"},{"lineNumber":824,"author":{"gitId":"FredericChow00"},"content":"- [Placeholder](#placeholder)","lastModifiedDate":"2023-03-28"},{"lineNumber":825,"author":{"gitId":"FredericChow00"},"content":"- [STATUS (Placeholder)](#status-placeholder)","lastModifiedDate":"2023-03-28"},{"lineNumber":826,"author":{"gitId":"FredericChow00"},"content":"- [Status](#status)","lastModifiedDate":"2023-03-28"},{"lineNumber":827,"author":{"gitId":"FredericChow00"},"content":"- [Syntax](#syntax)","lastModifiedDate":"2023-03-28"},{"lineNumber":828,"author":{"gitId":"FredericChow00"},"content":"- [URL](#url)","lastModifiedDate":"2023-03-28"},{"lineNumber":829,"author":{"gitId":"FredericChow00"},"content":"- [Use Case](#use-case)","lastModifiedDate":"2023-03-28"},{"lineNumber":830,"author":{"gitId":"FredericChow00"},"content":"- [User Story](#user-story)","lastModifiedDate":"2023-03-28"},{"lineNumber":831,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":832,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":833,"author":{"gitId":"FredericChow00"},"content":"### A","lastModifiedDate":"2023-03-28"},{"lineNumber":834,"author":{"gitId":"FredericChow00"},"content":"\u003e #### ADDRESS Placeholder","lastModifiedDate":"2023-03-28"},{"lineNumber":835,"author":{"gitId":"FredericChow00"},"content":"\u003e The ADDRESS is a text representing the address of the applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":836,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Address","lastModifiedDate":"2023-03-28"},{"lineNumber":837,"author":{"gitId":"FredericChow00"},"content":"\u003e The address of the applicant provided by the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":838,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Admonitions","lastModifiedDate":"2023-03-28"},{"lineNumber":839,"author":{"gitId":"FredericChow00"},"content":"\u003e Admonition boxes (or simply “admonitions”) are coloured boxes containing highlighted pieces of text.","lastModifiedDate":"2023-03-28"},{"lineNumber":840,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Applicant","lastModifiedDate":"2023-03-28"},{"lineNumber":841,"author":{"gitId":"FredericChow00"},"content":"\u003e The person who apply to the company for the job.","lastModifiedDate":"2023-03-28"},{"lineNumber":842,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Application Cycle","lastModifiedDate":"2023-03-28"},{"lineNumber":843,"author":{"gitId":"FredericChow00"},"content":"\u003e All applicants added are at the Applied status by default. From there, hiring managers can advance their application status to Shortlisted, then to Accepted. Applicants can be rejected at any stage.","lastModifiedDate":"2023-03-28"},{"lineNumber":844,"author":{"gitId":"FredericChow00"},"content":"![Application Cycle](images/application_stage.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"FredericChow00"},"content":"### C","lastModifiedDate":"2023-03-28"},{"lineNumber":847,"author":{"gitId":"FredericChow00"},"content":"\u003e #### COMMAND_WORD Placeholder","lastModifiedDate":"2023-03-28"},{"lineNumber":848,"author":{"gitId":"FredericChow00"},"content":"\u003e The COMMAND_WORD is a text indicating a command word of a command","lastModifiedDate":"2023-03-28"},{"lineNumber":849,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Command","lastModifiedDate":"2023-03-28"},{"lineNumber":850,"author":{"gitId":"FredericChow00"},"content":"\u003e A feature or function that HMHero can perform.","lastModifiedDate":"2023-03-28"},{"lineNumber":851,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Command Line","lastModifiedDate":"2023-03-28"},{"lineNumber":852,"author":{"gitId":"FredericChow00"},"content":"\u003e The typing interface that you use to interact with HMHero. It is represented as the box where you type in commands.","lastModifiedDate":"2023-03-28"},{"lineNumber":853,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":854,"author":{"gitId":"FredericChow00"},"content":"### E","lastModifiedDate":"2023-03-28"},{"lineNumber":855,"author":{"gitId":"FredericChow00"},"content":"\u003e #### EMAIL Placeholder","lastModifiedDate":"2023-03-28"},{"lineNumber":856,"author":{"gitId":"FredericChow00"},"content":"\u003e The EMAIL is a text representing the email address of the applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":857,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Email","lastModifiedDate":"2023-03-28"},{"lineNumber":858,"author":{"gitId":"FredericChow00"},"content":"\u003e The email address of the applicant provided by the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":859,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":860,"author":{"gitId":"FredericChow00"},"content":"### F","lastModifiedDate":"2023-03-28"},{"lineNumber":861,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Flags","lastModifiedDate":"2023-03-28"},{"lineNumber":862,"author":{"gitId":"FredericChow00"},"content":"\u003e A marker to identify the type of input by the user. For instance, in `n/NAME`, `n/` is the flag.","lastModifiedDate":"2023-03-28"},{"lineNumber":863,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":864,"author":{"gitId":"FredericChow00"},"content":"### G","lastModifiedDate":"2023-03-28"},{"lineNumber":865,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Graphical User Interface","lastModifiedDate":"2023-03-28"},{"lineNumber":866,"author":{"gitId":"FredericChow00"},"content":"\u003e A Graphical User Interface is a graphics-based interface that uses icons, menus and a mouse (to click on the icon or pull down the menus) to manage interaction with the system. In HMHero, this presents as the window that appears when launching it.","lastModifiedDate":"2023-03-28"},{"lineNumber":867,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":868,"author":{"gitId":"FredericChow00"},"content":"### H","lastModifiedDate":"2023-03-28"},{"lineNumber":869,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Help Window","lastModifiedDate":"2023-03-28"},{"lineNumber":870,"author":{"gitId":"FredericChow00"},"content":"\u003e A pop-up window containing help information, shown only after calling a \u003ckbd\u003ehelp\u003c/kbd\u003e command.","lastModifiedDate":"2023-03-28"},{"lineNumber":871,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Hiring Manager","lastModifiedDate":"2023-03-28"},{"lineNumber":872,"author":{"gitId":"FredericChow00"},"content":"\u003e A person responsible for overseeing the recruitment process within an organization, from identifying staffing needs to making hiring decisions.","lastModifiedDate":"2023-03-28"},{"lineNumber":873,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":874,"author":{"gitId":"FredericChow00"},"content":"### I","lastModifiedDate":"2023-03-28"},{"lineNumber":875,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Input","lastModifiedDate":"2023-03-28"},{"lineNumber":876,"author":{"gitId":"FredericChow00"},"content":"\u003e The text that a user would enter into HMHero","lastModifiedDate":"2023-03-28"},{"lineNumber":877,"author":{"gitId":"FredericChow00"},"content":"\u003e #### INTERVIEW_DATE Placeholder","lastModifiedDate":"2023-03-28"},{"lineNumber":878,"author":{"gitId":"FredericChow00"},"content":"\u003e The INTERVIEW_DATE is the date indicating when the applicant is having his/her interview.","lastModifiedDate":"2023-03-28"},{"lineNumber":879,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Interview Date","lastModifiedDate":"2023-03-28"},{"lineNumber":880,"author":{"gitId":"FredericChow00"},"content":"\u003e Date where applicants are going to have their interviews. Interview date is in the format \"day-month-year hour:minute\", represented in the \"DD-MM-YYYY HH:MM\" format.","lastModifiedDate":"2023-03-28"},{"lineNumber":881,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":882,"author":{"gitId":"FredericChow00"},"content":"### K","lastModifiedDate":"2023-03-28"},{"lineNumber":883,"author":{"gitId":"FredericChow00"},"content":"\u003e #### KEYWORD Placeholder","lastModifiedDate":"2023-03-28"},{"lineNumber":884,"author":{"gitId":"FredericChow00"},"content":"\u003e The KEYWORD is the text we use search for an item. It can be `NAME` or `PHONE_NUMBER` of the applicant.","lastModifiedDate":"2023-03-28"},{"lineNumber":885,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":886,"author":{"gitId":"FredericChow00"},"content":"### M","lastModifiedDate":"2023-03-28"},{"lineNumber":887,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Mainstream OS","lastModifiedDate":"2023-03-28"},{"lineNumber":888,"author":{"gitId":"FredericChow00"},"content":"\u003e Mainstream Operating Systems (OS) refers to Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-03-28"},{"lineNumber":889,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Main Success Scenario","lastModifiedDate":"2023-03-28"},{"lineNumber":890,"author":{"gitId":"FredericChow00"},"content":"\u003e The Main Success Scenario (MSS) describes the most straightforward interaction for a given use case, assuming that nothing goes wrong.","lastModifiedDate":"2023-03-28"},{"lineNumber":891,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":892,"author":{"gitId":"FredericChow00"},"content":"### N","lastModifiedDate":"2023-03-28"},{"lineNumber":893,"author":{"gitId":"FredericChow00"},"content":"\u003e #### NAME Placeholder","lastModifiedDate":"2023-03-28"},{"lineNumber":894,"author":{"gitId":"FredericChow00"},"content":"\u003e The NAME is a text representing the name of the applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":895,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Name","lastModifiedDate":"2023-03-28"},{"lineNumber":896,"author":{"gitId":"FredericChow00"},"content":"\u003e The name of the applicant provided by the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":897,"author":{"gitId":"FredericChow00"},"content":"\u003e #### NOTES Placeholder","lastModifiedDate":"2023-03-28"},{"lineNumber":898,"author":{"gitId":"FredericChow00"},"content":"\u003e The NOTES are some texts that use to represent the skill set of the applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":899,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Notes","lastModifiedDate":"2023-03-28"},{"lineNumber":900,"author":{"gitId":"FredericChow00"},"content":"\u003e The skill set the applicant possesses provided by the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":901,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":902,"author":{"gitId":"FredericChow00"},"content":"### O","lastModifiedDate":"2023-03-28"},{"lineNumber":903,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Output","lastModifiedDate":"2023-03-28"},{"lineNumber":904,"author":{"gitId":"FredericChow00"},"content":"\u003e The result after calling a Command. Results are displayed in the GUI.","lastModifiedDate":"2023-03-28"},{"lineNumber":905,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":906,"author":{"gitId":"FredericChow00"},"content":"### P","lastModifiedDate":"2023-03-28"},{"lineNumber":907,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Parameter","lastModifiedDate":"2023-03-28"},{"lineNumber":908,"author":{"gitId":"FredericChow00"},"content":"\u003e Values that are passed while calling the Commands. For instance, when calling `find n/NAME`, parameter here is `n/NAME`.","lastModifiedDate":"2023-03-28"},{"lineNumber":909,"author":{"gitId":"FredericChow00"},"content":"\u003e #### PHONE_NUMBER Placeholder","lastModifiedDate":"2023-03-28"},{"lineNumber":910,"author":{"gitId":"FredericChow00"},"content":"\u003e The PHONE_NUMBER is an integer representing the phone number of the applicant.","lastModifiedDate":"2023-03-28"},{"lineNumber":911,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Phone Number","lastModifiedDate":"2023-03-28"},{"lineNumber":912,"author":{"gitId":"FredericChow00"},"content":"\u003e The phone number of the applicant provided by the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":913,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Placeholder","lastModifiedDate":"2023-03-28"},{"lineNumber":914,"author":{"gitId":"FredericChow00"},"content":"\u003e Placeholders in HMHero refers to the UPPER_CASE words that appear after the flags in commands that is provided by the user. For instance, `n/NAME`, `NAME` is a placeholder","lastModifiedDate":"2023-03-28"},{"lineNumber":915,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":916,"author":{"gitId":"FredericChow00"},"content":"### S","lastModifiedDate":"2023-03-28"},{"lineNumber":917,"author":{"gitId":"FredericChow00"},"content":"\u003e #### STATUS Placeholder","lastModifiedDate":"2023-03-28"},{"lineNumber":918,"author":{"gitId":"FredericChow00"},"content":"\u003e The STATUS is a text that represent the current state of the applicant.","lastModifiedDate":"2023-03-28"},{"lineNumber":919,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Status","lastModifiedDate":"2023-03-28"},{"lineNumber":920,"author":{"gitId":"FredericChow00"},"content":"\u003e Status has four stages, which are APPLIED, SHORTLISTED, ACCEPTED and REJECTED. Status can only be modified by using \u003ckbd\u003eadvance\u003c/kbd\u003e or \u003ckbd\u003ereject\u003c/kbd\u003e command.","lastModifiedDate":"2023-03-28"},{"lineNumber":921,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Syntax","lastModifiedDate":"2023-03-28"},{"lineNumber":922,"author":{"gitId":"FredericChow00"},"content":"\u003e The structure of statements/inputs users type into the Command Line.","lastModifiedDate":"2023-03-28"},{"lineNumber":923,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":924,"author":{"gitId":"FredericChow00"},"content":"### U","lastModifiedDate":"2023-03-28"},{"lineNumber":925,"author":{"gitId":"FredericChow00"},"content":"\u003e #### URL","lastModifiedDate":"2023-03-28"},{"lineNumber":926,"author":{"gitId":"FredericChow00"},"content":"\u003e A hyperlink to a website.","lastModifiedDate":"2023-03-28"},{"lineNumber":927,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Use Case","lastModifiedDate":"2023-03-28"},{"lineNumber":928,"author":{"gitId":"FredericChow00"},"content":"\u003e A use case describes an interaction between the user and the system for a specific functionality of the system.","lastModifiedDate":"2023-03-28"},{"lineNumber":929,"author":{"gitId":"FredericChow00"},"content":"\u003e #### User Story","lastModifiedDate":"2023-03-28"},{"lineNumber":930,"author":{"gitId":"FredericChow00"},"content":"\u003e User stories are short, simple descriptions of a feature told from the perspective of the person who desires the new capability, usually a user or customer of the system. It is typically in the format “As a {user type/role} I can {function} so that {benefit}”.","lastModifiedDate":"2023-03-28"},{"lineNumber":931,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":932,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":935,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"FredericChow00"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** ","lastModifiedDate":"2023-03-28"},{"lineNumber":939,"author":{"gitId":"FredericChow00"},"content":"These instructions only provide a starting point for testers to work on; testers are expected to do more *exploratory* testing.","lastModifiedDate":"2023-03-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":942,"author":{"gitId":"FredericChow00"},"content":"### Launch","lastModifiedDate":"2023-03-28"},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":946,"author":{"gitId":"FredericChow00"},"content":"   1. Download the `hmhero.jar` file and copy into an empty folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":947,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":948,"author":{"gitId":"FredericChow00"},"content":"   2. Double-click the jar file \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":949,"author":{"gitId":"FredericChow00"},"content":"   Expected: Shows the GUI with a set of sample applicants.","lastModifiedDate":"2023-03-28"},{"lineNumber":950,"author":{"gitId":"FredericChow00"},"content":"   \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":951,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":952,"author":{"gitId":"FredericChow00"},"content":"2. Saving window preferences","lastModifiedDate":"2023-03-28"},{"lineNumber":953,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":954,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":955,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":956,"author":{"gitId":"FredericChow00"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":957,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":958,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":959,"author":{"gitId":"FredericChow00"},"content":"### Adding a person","lastModifiedDate":"2023-03-28"},{"lineNumber":960,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":961,"author":{"gitId":"FredericChow00"},"content":"Prerequisites: An applicant with the name Fred and phone number 999 does not exist in HMHero yet.","lastModifiedDate":"2023-03-28"},{"lineNumber":962,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":963,"author":{"gitId":"FredericChow00"},"content":"Test case: `add n/Fred p/999 e/test@gmail.com a/12345`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":964,"author":{"gitId":"FredericChow00"},"content":"Expected: Applicant named Fred and with phone number 999 is added to the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":965,"author":{"gitId":"FredericChow00"},"content":"Details of the added applicant shown in the output box.","lastModifiedDate":"2023-03-28"},{"lineNumber":966,"author":{"gitId":"FredericChow00"},"content":"Application date follows the current date and time.","lastModifiedDate":"2023-03-28"},{"lineNumber":967,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":968,"author":{"gitId":"FredericChow00"},"content":"Test case: `add n/Fred p/999 e/test@gmail.com a/12345 applied/01-01-2023 18:00`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":969,"author":{"gitId":"FredericChow00"},"content":"Expected: Applicant named Fred and with phone number 999 is added to the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":970,"author":{"gitId":"FredericChow00"},"content":"Details of the added applicant shown in the output box.","lastModifiedDate":"2023-03-28"},{"lineNumber":971,"author":{"gitId":"FredericChow00"},"content":"Application date is `01-01-2023 18:00`.","lastModifiedDate":"2023-03-28"},{"lineNumber":972,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":973,"author":{"gitId":"FredericChow00"},"content":"Test case: `add n/Fred p/999`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":974,"author":{"gitId":"FredericChow00"},"content":"Expected: No applicant is added. Error message for invalid command format.","lastModifiedDate":"2023-03-28"},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":976,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":977,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":978,"author":{"gitId":"FredericChow00"},"content":"Prerequisites: An applicant with the name Fred and phone number 999 exists in HMHero.","lastModifiedDate":"2023-03-28"},{"lineNumber":979,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":980,"author":{"gitId":"FredericChow00"},"content":"Test case: `delete n/Fred p/999`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":981,"author":{"gitId":"FredericChow00"},"content":"Expected: Applicant named Fred and with phone number 999 is deleted from the list. ","lastModifiedDate":"2023-03-28"},{"lineNumber":982,"author":{"gitId":"FredericChow00"},"content":"Details of the deleted applicant shown in the output box.","lastModifiedDate":"2023-03-28"},{"lineNumber":983,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":984,"author":{"gitId":"FredericChow00"},"content":"Test case: `delete n/Fred p/000`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":985,"author":{"gitId":"FredericChow00"},"content":"Expected: No applicant is deleted. Error message for not finding any applicant.","lastModifiedDate":"2023-03-28"},{"lineNumber":986,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":987,"author":{"gitId":"FredericChow00"},"content":"Test case: `delete n/Fred`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":988,"author":{"gitId":"FredericChow00"},"content":"Expected: No applicant is deleted. Error message for invalid command format.","lastModifiedDate":"2023-03-28"},{"lineNumber":989,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":990,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":991,"author":{"gitId":"FredericChow00"},"content":"### Advancing an applicant","lastModifiedDate":"2023-03-28"},{"lineNumber":992,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":993,"author":{"gitId":"FredericChow00"},"content":"Prerequisites: There are two applicants: ","lastModifiedDate":"2023-03-28"},{"lineNumber":994,"author":{"gitId":"FredericChow00"},"content":"1. Applicant with the name Fred, phone number 999 and status `APPLIED`. ","lastModifiedDate":"2023-03-28"},{"lineNumber":995,"author":{"gitId":"FredericChow00"},"content":"2. Applicant with the name Freddy, phone number 000, status `SHORTLISTED` and interview date time `05-05-2023 18:00`.","lastModifiedDate":"2023-03-28"},{"lineNumber":996,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":997,"author":{"gitId":"FredericChow00"},"content":"Test case: `advance n/Fred p/999 d/04-04-2023 18:00`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":998,"author":{"gitId":"FredericChow00"},"content":"Expected: Applicant named `Fred` and with phone number 999 is advanced to `SHORTLISTED`.","lastModifiedDate":"2023-03-28"},{"lineNumber":999,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1000,"author":{"gitId":"FredericChow00"},"content":"Test case: `advance n/Fred p/999 d/05-05-2023 18:00`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1001,"author":{"gitId":"FredericChow00"},"content":"Expected: Applicant is not advanced. Error message for clashing interview date time with Freddy","lastModifiedDate":"2023-03-28"},{"lineNumber":1002,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1003,"author":{"gitId":"FredericChow00"},"content":"Test case: `advance n/Fred p/999`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1004,"author":{"gitId":"FredericChow00"},"content":"Expected: Applicant is not advanced. Error message for no interview date time given.","lastModifiedDate":"2023-03-28"},{"lineNumber":1005,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1006,"author":{"gitId":"FredericChow00"},"content":"Test case: `advance n/Freddy p/000 d/05-05-2023 18:00`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1007,"author":{"gitId":"FredericChow00"},"content":"Expected: Applicant is not advanced. Error message for no interview date time is needed.","lastModifiedDate":"2023-03-28"},{"lineNumber":1008,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1009,"author":{"gitId":"FredericChow00"},"content":"Test case: `advance n/Fred`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1010,"author":{"gitId":"FredericChow00"},"content":"Expected: Applicant is not advanced. Error message for invalid command format.","lastModifiedDate":"2023-03-28"},{"lineNumber":1011,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1012,"author":{"gitId":"FredericChow00"},"content":"### Rejecting an applicant","lastModifiedDate":"2023-03-28"},{"lineNumber":1013,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1014,"author":{"gitId":"FredericChow00"},"content":"Prerequisites: There are two applicants:","lastModifiedDate":"2023-03-28"},{"lineNumber":1015,"author":{"gitId":"FredericChow00"},"content":"1. Applicant with the name Fred, phone number 999 and status `APPLIED`.","lastModifiedDate":"2023-03-28"},{"lineNumber":1016,"author":{"gitId":"FredericChow00"},"content":"2. Applicant with the name Freddy, phone number 000, status `REJECTED`.","lastModifiedDate":"2023-03-28"},{"lineNumber":1017,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1018,"author":{"gitId":"FredericChow00"},"content":"Test case: `reject n/Fred p/999`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1019,"author":{"gitId":"FredericChow00"},"content":"Expected: Applicant named Fred and with phone number 999 is rejected.","lastModifiedDate":"2023-03-28"},{"lineNumber":1020,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1021,"author":{"gitId":"FredericChow00"},"content":"Test case: `reject n/Freddy p/999`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1022,"author":{"gitId":"FredericChow00"},"content":"Expected: Applicant is not rejected. Error message for applicant is already rejected.","lastModifiedDate":"2023-03-28"},{"lineNumber":1023,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1024,"author":{"gitId":"FredericChow00"},"content":"Test case: `reject n/Fred`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1025,"author":{"gitId":"FredericChow00"},"content":"Expected: Applicant is not rejected. Error message for invalid command format.","lastModifiedDate":"2023-03-28"},{"lineNumber":1026,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1027,"author":{"gitId":"FredericChow00"},"content":"### Finding applicants","lastModifiedDate":"2023-03-28"},{"lineNumber":1028,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1029,"author":{"gitId":"FredericChow00"},"content":"Prerequisite: Applicants to find exist in HMHero","lastModifiedDate":"2023-03-28"},{"lineNumber":1030,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1031,"author":{"gitId":"FredericChow00"},"content":"Test case: `find n/Fred`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1032,"author":{"gitId":"FredericChow00"},"content":"Expected: All applicants with name `Fred` listed.","lastModifiedDate":"2023-03-28"},{"lineNumber":1033,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1034,"author":{"gitId":"FredericChow00"},"content":"Test case: `find p/999`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1035,"author":{"gitId":"FredericChow00"},"content":"Expected: All applicants with phone number `999` listed.","lastModifiedDate":"2023-03-28"},{"lineNumber":1036,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1037,"author":{"gitId":"FredericChow00"},"content":"Test case: `find n/Fred p/999`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1038,"author":{"gitId":"FredericChow00"},"content":"Expected: Applicant with name `Fred` and phone number `999` listed.","lastModifiedDate":"2023-03-28"},{"lineNumber":1039,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1040,"author":{"gitId":"FredericChow00"},"content":"Test case: `find n/`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1041,"author":{"gitId":"FredericChow00"},"content":"Expected: Error message for invalid command format.","lastModifiedDate":"2023-03-28"},{"lineNumber":1042,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1043,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1044,"author":{"gitId":"FredericChow00"},"content":"### Finding applicants with specific skills","lastModifiedDate":"2023-03-28"},{"lineNumber":1045,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1046,"author":{"gitId":"FredericChow00"},"content":"Test case: `skill java`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1047,"author":{"gitId":"FredericChow00"},"content":"Expected: All applicants with `java` written in `notes`","lastModifiedDate":"2023-03-28"},{"lineNumber":1048,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1049,"author":{"gitId":"FredericChow00"},"content":"Test case: `skill`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1050,"author":{"gitId":"FredericChow00"},"content":"Expected: Error message for invalid command format.","lastModifiedDate":"2023-03-28"},{"lineNumber":1051,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1052,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1053,"author":{"gitId":"FredericChow00"},"content":"### Remind upcoming interviews","lastModifiedDate":"2023-03-28"},{"lineNumber":1054,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1055,"author":{"gitId":"FredericChow00"},"content":"Prerequisite: There are shortlisted applicants with scheduled interviews in the next 3 days. ","lastModifiedDate":"2023-03-28"},{"lineNumber":1056,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1057,"author":{"gitId":"FredericChow00"},"content":"Test case: `remind`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1058,"author":{"gitId":"FredericChow00"},"content":"Expected: All applicants with interviews coming up in the next 3 days are listed (if any).","lastModifiedDate":"2023-03-28"},{"lineNumber":1059,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1060,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1061,"author":{"gitId":"FredericChow00"},"content":"### View all interviews","lastModifiedDate":"2023-03-28"},{"lineNumber":1062,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1063,"author":{"gitId":"FredericChow00"},"content":"Prerequisite: There are shortlisted applicants with scheduled interviews","lastModifiedDate":"2023-03-28"},{"lineNumber":1064,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1065,"author":{"gitId":"FredericChow00"},"content":"Test case: `interview`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1066,"author":{"gitId":"FredericChow00"},"content":"Expected: All shortlisted applicants are listed, sorted by their interview dates from earliest","lastModifiedDate":"2023-03-28"},{"lineNumber":1067,"author":{"gitId":"FredericChow00"},"content":"to latest.","lastModifiedDate":"2023-03-28"},{"lineNumber":1068,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1069,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1070,"author":{"gitId":"FredericChow00"},"content":"### View summary statistics","lastModifiedDate":"2023-03-28"},{"lineNumber":1071,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1072,"author":{"gitId":"FredericChow00"},"content":"Precondition: There are applicants added into HMHero.","lastModifiedDate":"2023-03-28"},{"lineNumber":1073,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1074,"author":{"gitId":"FredericChow00"},"content":"Test case: `summary`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1075,"author":{"gitId":"FredericChow00"},"content":"Expected: Statistic of overall hiring process is shown in output box.","lastModifiedDate":"2023-03-28"},{"lineNumber":1076,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1077,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1078,"author":{"gitId":"FredericChow00"},"content":"### Help","lastModifiedDate":"2023-03-28"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1080,"author":{"gitId":"FredericChow00"},"content":"Test case: `help`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1081,"author":{"gitId":"FredericChow00"},"content":"Expected: The Help Window pops up and shows a general help message.","lastModifiedDate":"2023-03-28"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1083,"author":{"gitId":"FredericChow00"},"content":"### Clear","lastModifiedDate":"2023-03-28"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1085,"author":{"gitId":"FredericChow00"},"content":"Test case: `clear`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1086,"author":{"gitId":"FredericChow00"},"content":"Expected: All applicants in HMHero are deleted.","lastModifiedDate":"2023-03-28"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1088,"author":{"gitId":"FredericChow00"},"content":"### Exit","lastModifiedDate":"2023-03-28"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1090,"author":{"gitId":"FredericChow00"},"content":"Test case: `exit`\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1091,"author":{"gitId":"FredericChow00"},"content":"Expected: HMHero application closes.","lastModifiedDate":"2023-03-28"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1093,"author":{"gitId":"FredericChow00"},"content":"## Effort","lastModifiedDate":"2023-03-28"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1095,"author":{"gitId":"FredericChow00"},"content":"It was not easy to develop HMHero. Our team struggled with ways to make our product unique and stand out from existing products in the market,","lastModifiedDate":"2023-03-28"},{"lineNumber":1096,"author":{"gitId":"FredericChow00"},"content":"while at the same time ensuring that this product could be completed in the short span of time given.","lastModifiedDate":"2023-03-28"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"dunliang0513":47,"bofeng1999":116,"FredericChow00":486,"Jxleejiaxin":152,"Merrickneo":24,"-":273}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"title: HMHero User Guide","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"## Table of Contents","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"1. [About HMHero](#1-about-hmhero)","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"2. [Features](#2-features)","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"   * [Applicant Management System](#21-applicant-management-system)","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"   * [Hiring Process Analytics](#22-hiring-process-analytics)","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"3. [How to use this User Guide](#3-how-to-use-this-user-guide)","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"   * [Icons and Hyperlinks](#31-icons-and-hyperlinks)","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"   * [Purpose of User Guide](#32-purpose-of-user-guide)","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"4. [Installation](#4-installation)","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"5. [Quick Start](#5-quick-start)","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"   * [User Interface](#51-user-interface)","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"   * [Key Definitions](#52-key-definitions)","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"     * [Applicant](#521-applicant)","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"     * [Notes](#522-notes)","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"     * [Flags](#523-flags)","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"     * [Placeholders](#524-placeholders)","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"   * [Command Format](#53-command-format)","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"   * [Trying your First Command](#54-trying-your-first-command)","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"6. [Commands](#6-commands)","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"   * [Applicant Commands](#61-applicant-commands)","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"     * [Create a new applicant `add`](#611-create-a-new-applicant-add)","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"     * [Search for an applicant `find`](#612-search-for-an-applicant-find)","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"     * [List all applicants `list`](#613-list-all-applicants-list)","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"     * [Delete an applicant `delete`](#614-delete-an-applicant-delete)","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"     * [Advance an applicant `advance`](#615-advance-an-applicant-advance)","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"     * [Reject an applicant `reject`](#616-reject-an-applicant-reject)","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"     * [List all interview dates of applicants `interview`](#617-list-all-interview-dates-of-applicants-interview)","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"     * [Edit an existing applicant `edit`](#618-edit-an-existing-applicant-edit)","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"     * [Remind upcoming interviews `remind`](#619-remind-upcoming-interviews-remind)","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"   * [Statistic Commands](#62-statistics-commands)","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"   * [General Commands](#63-general-commands)","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"     * [Receive help during usage `help`](#631-receive-help-during-usage-help)","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"     * [Exit HMHero `exit`](#632-exit-hmhero-exit)","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"7. [Command summary](#7-command-summary)","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"   * [Applicant Commands](#71-applicant-commands)","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"   * [Statistics Commands](#72-statistics-commands)","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"   * [General Commands](#73-general-commands)","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"8. [Troubleshooting](#8-troubleshooting)","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"9. [FAQ](#9-faq)","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"10. [Acknowledgements](#10-acknowledgements)","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"11. [Glossary](#11-glossary)","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Jxleejiaxin"},"content":"# 1. About HMHero","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Jxleejiaxin"},"content":"Have you ever found it difficult to manage the constant influx of applicants during each application cycle?","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Jxleejiaxin"},"content":"Have you ever found it strenuous filtering through countless applicants to find those that fit specific job requirements?","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Jxleejiaxin"},"content":"HMHero is here to help!","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Jxleejiaxin"},"content":"## Overview of key features","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"Jxleejiaxin"},"content":"There are two core features that HMHero provides:","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"Jxleejiaxin"},"content":"1. Applicant Management System","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Jxleejiaxin"},"content":"2. Hiring Process Analytics","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"Jxleejiaxin"},"content":"### Applicant Management System","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"Jxleejiaxin"},"content":"HMHero empowers you to manage applicants during hiring process.\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"Jxleejiaxin"},"content":"You can:","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Jxleejiaxin"},"content":"1. Easily add, edit, delete, and view your applicants.","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"Jxleejiaxin"},"content":"2. Quickly advance applicants through application statuses or reject them.","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"Jxleejiaxin"},"content":"3. Filter shortlisted applicants and sort them by interview date.","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"FredericChow00"},"content":"4. Filter all applicants based on their skill-sets.","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"Jxleejiaxin"},"content":"5. View all applicants that have interviews coming up in three days.","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Jxleejiaxin"},"content":"### Hiring Process Analytics","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"Jxleejiaxin"},"content":"HMHero provides analysis on your hiring process. \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Jxleejiaxin"},"content":"You can:","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Jxleejiaxin"},"content":"1. Find out how many applicants are accepted out of total applicants.","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"Jxleejiaxin"},"content":"2. Find out the average time taken to process each applicant.","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"dunliang0513"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"FredericChow00"},"content":"## 3. How to use this User Guide","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"FredericChow00"},"content":"### 3.1 Icons and Hyperlinks","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"FredericChow00"},"content":"You may come across colored boxes containing text that will aid you in better understanding how to use each feature.","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"FredericChow00"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e:information_source: \u003cstrong\u003eInfo:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"FredericChow00"},"content":"Highlight and display information you should pay attention to. \u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"FredericChow00"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\" role\u003d\"alert\"\u003e:bulb: \u003cstrong\u003eTip:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"FredericChow00"},"content":"Highlight tips which you might find useful. \u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"FredericChow00"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\" role\u003d\"alert\"\u003e:exclamation: \u003cstrong\u003eCaution:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"FredericChow00"},"content":"Highlight dangers and things to look out for. \u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"FredericChow00"},"content":"Other than the icons mentioned above, you maye also come across \u003ca href\u003e Phrases coloured in blue \u003c/a\u003e are hyperlinks","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"FredericChow00"},"content":"that will bring you to another part of this documentation that is relevant to the phrase.","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"FredericChow00"},"content":"### 3.2 Purpose of User Guide","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"FredericChow00"},"content":"If you are a **new user**, head over to the [Installation](#4-installation) section to download the application.","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"FredericChow00"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e:information_source: \u003cstrong\u003eNote:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"FredericChow00"},"content":"We highly recommend that you read through this User Guide in **sequential order** to get a thorough understanding","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"FredericChow00"},"content":"of how to use HMHero.","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"FredericChow00"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"FredericChow00"},"content":"Next, you can find the necessary information to get started in the [Quick Start](#5-quick-start) section!","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"FredericChow00"},"content":"If you are an **experienced user**, you may head over to the [Command Summary](#7-command-summary) to get a quick overview","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"FredericChow00"},"content":"of all the commands available in HMHero!","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":132,"author":{"gitId":"FredericChow00"},"content":"If you are stuck, please refer to the section on [Troubleshooting](#8-troubleshooting) or [FAQ](#9-faq).","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"FredericChow00"},"content":"You can also refer to the [Glossary](#11-glossary) for definitions of commonly used terminologies in HMHero.","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"FredericChow00"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\" role\u003d\"alert\"\u003e:bulb: \u003cstrong\u003eTip:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"FredericChow00"},"content":"To aid in your navigation, we have included the a \u003ca href\u003d\"#table-of-contents\"\u003eBack to Table of Contents\u003ca/\u003e link in every","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"FredericChow00"},"content":"sub-section in this User Guide so that it is easy for you to jump across different sections!","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"FredericChow00"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"dunliang0513"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":146,"author":{"gitId":"FredericChow00"},"content":"## 4. Installation","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"FredericChow00"},"content":"1. Ensure you have downloaded `Java 11` or above installed in your computer. If you have not, you may download it [here](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html).","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"FredericChow00"},"content":"2. Download the latest `HMHero` from [here](https://github.com/AY2223S2-CS2103T-W14-4/tp/releases).","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"FredericChow00"},"content":"3. Copy the file to an empty folder. This folder is where all the information needed for the HMHero application","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"FredericChow00"},"content":"will reside in.","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"FredericChow00"},"content":"4. Double-click on the jar file to launch HMHero.","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"FredericChow00"},"content":"5. A GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"FredericChow00"},"content":"\u003cimg src\u003d\"images/ui.png\" alt\u003d\"UI image\" width\u003d\"500\" height\u003d\"400\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\" role\u003d\"alert\"\u003e:exclamation: \u003cstrong\u003eCaution:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":159,"author":{"gitId":"Merrickneo"},"content":"Ensure that the file is added to an empty folder as additional data and configuration files will be created when HMHero","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"FredericChow00"},"content":"is launched for the first time in your computer!","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"FredericChow00"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":163,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\" role\u003d\"alert\"\u003e:exclamation: \u003cstrong\u003eCaution:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":164,"author":{"gitId":"FredericChow00"},"content":"You will notice that a folder called \"data\" would have been created in the same folder as \u003ccode\u003ehmhero.jar\u003c/code\u003e.","lastModifiedDate":"2023-03-20"},{"lineNumber":165,"author":{"gitId":"FredericChow00"},"content":"Do not edit this file because doing so might result in a corruption of your data, causing the application to fail!","lastModifiedDate":"2023-03-20"},{"lineNumber":166,"author":{"gitId":"FredericChow00"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":167,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"FredericChow00"},"content":"The following section on [Quick Start](#5-quick-start) is a tutorial on how to use HMHero","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"FredericChow00"},"content":"after you have launched it for the first time. Feel free to skip to the next section on [Commands](#6-commands) if you","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"FredericChow00"},"content":"are already familiar with the application!","lastModifiedDate":"2023-03-20"},{"lineNumber":171,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":172,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":174,"author":{"gitId":"dunliang0513"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"FredericChow00"},"content":"## 5. Quick Start","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"bofeng1999"},"content":"This section covers everything you should know about HMHero, as well as a tutorial on ","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"bofeng1999"},"content":"[trying your first command](#54-trying-your-first-command). The special note is the ","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"bofeng1999"},"content":"[Key Definitions](#52-key-definitions) and [Command Format](#53-command-format) sections, ","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"bofeng1999"},"content":"which covers essential knowledge to using HMHero\u0027s features.","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":182,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"FredericChow00"},"content":"### 5.1 User Interface","lastModifiedDate":"2023-03-22"},{"lineNumber":184,"author":{"gitId":"Merrickneo"},"content":"When you launch HMHero, HMHero appears on your screen as a Graphical User Interface(GUI). Let\u0027s explore the","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"Merrickneo"},"content":"layout of the different components of HMHero.","lastModifiedDate":"2023-03-22"},{"lineNumber":186,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":187,"author":{"gitId":"Merrickneo"},"content":"HMHero\u0027s GUI consists of a single main window consisting of 3 main sections.","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"dunliang0513"},"content":"1. [Command Input Box](#command-input-box)","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"dunliang0513"},"content":"2. [Command Output Box](#command-output-box)","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"dunliang0513"},"content":"3. [Applicant List Box](#applicant-list-box)","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":192,"author":{"gitId":"Merrickneo"},"content":"The following picture of the main window shows the three components, numbered accordingly:","lastModifiedDate":"2023-03-22"},{"lineNumber":193,"author":{"gitId":"Merrickneo"},"content":"![components.png](images%2Fcomponents.png)","lastModifiedDate":"2023-03-22"},{"lineNumber":194,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":195,"author":{"gitId":"Merrickneo"},"content":"Besides the main window, HMHero also has the Help Window. It is not part of the main GUI and is only","lastModifiedDate":"2023-03-22"},{"lineNumber":196,"author":{"gitId":"dunliang0513"},"content":"shown after a [Help Command](#631-receive-help-during-usage-help) is run.","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":198,"author":{"gitId":"Merrickneo"},"content":"The Help Window looks like the following:","lastModifiedDate":"2023-03-22"},{"lineNumber":199,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":200,"author":{"gitId":"Merrickneo"},"content":"![help_window.png](images%2Fhelp_window.png)","lastModifiedDate":"2023-03-22"},{"lineNumber":201,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":202,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":204,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":205,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":206,"author":{"gitId":"Merrickneo"},"content":"### 5.2 Key Definitions","lastModifiedDate":"2023-03-22"},{"lineNumber":207,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":208,"author":{"gitId":"Merrickneo"},"content":"#### 5.2.1 Applicant","lastModifiedDate":"2023-03-22"},{"lineNumber":209,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":210,"author":{"gitId":"Merrickneo"},"content":"An applicant in HMHero represents an individual that applied for a job at your company. HMHero tracks various","lastModifiedDate":"2023-03-22"},{"lineNumber":211,"author":{"gitId":"Merrickneo"},"content":"attributes of an applicant. Compulsory attributes would include their name, phone number, address and email.","lastModifiedDate":"2023-03-22"},{"lineNumber":212,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":213,"author":{"gitId":"Merrickneo"},"content":"The following are the attributes stored for each `Applicant`","lastModifiedDate":"2023-03-22"},{"lineNumber":214,"author":{"gitId":"Merrickneo"},"content":"* Name","lastModifiedDate":"2023-03-22"},{"lineNumber":215,"author":{"gitId":"Merrickneo"},"content":"* Phone Number","lastModifiedDate":"2023-03-22"},{"lineNumber":216,"author":{"gitId":"Merrickneo"},"content":"* Address","lastModifiedDate":"2023-03-22"},{"lineNumber":217,"author":{"gitId":"Merrickneo"},"content":"* Email","lastModifiedDate":"2023-03-22"},{"lineNumber":218,"author":{"gitId":"FredericChow00"},"content":"* Application Date","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"FredericChow00"},"content":"* Interview Date","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"Merrickneo"},"content":"* Notes","lastModifiedDate":"2023-03-22"},{"lineNumber":221,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":222,"author":{"gitId":"FredericChow00"},"content":"Applicants are unique by name and phone number and are Case Sensitive.","lastModifiedDate":"2023-03-28"},{"lineNumber":223,"author":{"gitId":"Merrickneo"},"content":"This means you cannot add two or more applicants of the same name and phone number.","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":225,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":229,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":230,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":231,"author":{"gitId":"FredericChow00"},"content":"#### 5.2.2 Notes","lastModifiedDate":"2023-03-22"},{"lineNumber":232,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":233,"author":{"gitId":"Merrickneo"},"content":"A note in HMHero serves as a means of labelling the skills of an applicant. These tags","lastModifiedDate":"2023-03-22"},{"lineNumber":234,"author":{"gitId":"Merrickneo"},"content":"are unique and case-sensitive.","lastModifiedDate":"2023-03-22"},{"lineNumber":235,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":236,"author":{"gitId":"Merrickneo"},"content":"We can tag multiple applicants with the same note and each applicant can have multiple notes. These notes","lastModifiedDate":"2023-03-22"},{"lineNumber":237,"author":{"gitId":"Merrickneo"},"content":"are optional.","lastModifiedDate":"2023-03-22"},{"lineNumber":238,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":239,"author":{"gitId":"Merrickneo"},"content":"Feel free to make use of notes as you fit to highlight skill-sets of an applicant. Examples of such notes","lastModifiedDate":"2023-03-22"},{"lineNumber":240,"author":{"gitId":"Merrickneo"},"content":"can include:","lastModifiedDate":"2023-03-22"},{"lineNumber":241,"author":{"gitId":"Merrickneo"},"content":"* Highlight applicant\u0027s:","lastModifiedDate":"2023-03-22"},{"lineNumber":242,"author":{"gitId":"Merrickneo"},"content":"  * Technical proficiency, e.g. `Python`, `Java`, `Flask`","lastModifiedDate":"2023-03-22"},{"lineNumber":243,"author":{"gitId":"Merrickneo"},"content":"  * Soft Skills, e.g. `Project Management`, `Event Planning`","lastModifiedDate":"2023-03-22"},{"lineNumber":244,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":245,"author":{"gitId":"Merrickneo"},"content":"HMHero\u0027s Notes are unique by name and are case-sensitive. This means you cannot add two or more notes of","lastModifiedDate":"2023-03-22"},{"lineNumber":246,"author":{"gitId":"Merrickneo"},"content":"the same name.","lastModifiedDate":"2023-03-22"},{"lineNumber":247,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":248,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":250,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":251,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":252,"author":{"gitId":"FredericChow00"},"content":"#### 5.2.3 Flags","lastModifiedDate":"2023-03-22"},{"lineNumber":253,"author":{"gitId":"FredericChow00"},"content":"Flags are delimiters that enable HMHero to distinguish different parameters without ambiguity.","lastModifiedDate":"2023-03-22"},{"lineNumber":254,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":255,"author":{"gitId":"Merrickneo"},"content":"You could put in the corresponding [Placeholder](#524-placeholders) immediately after each flag.","lastModifiedDate":"2023-03-22"},{"lineNumber":256,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":257,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\" role\u003d\"alert\"\u003e:bulb: \u003cstrong\u003eTip:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":258,"author":{"gitId":"FredericChow00"},"content":"You may find the following image taken from the subsequent \u003ca href\u003d\"#53-command-format\"\u003e Command Format \u003c/a\u003e section helpful:","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"FredericChow00"},"content":"\u003cimg src\u003d\"./images/CommandExample.png\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"Merrickneo"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":261,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":262,"author":{"gitId":"Merrickneo"},"content":"Placeholders in this User Guide refers to the UPPER_CASE words that can be replaced by valid user input supplied.","lastModifiedDate":"2023-03-22"},{"lineNumber":263,"author":{"gitId":"FredericChow00"},"content":"These placeholders follow immediately after a [Flag](#523-flags).","lastModifiedDate":"2023-03-22"},{"lineNumber":264,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":265,"author":{"gitId":"Merrickneo"},"content":"| Action   | Corresponding Placeholder |","lastModifiedDate":"2023-03-22"},{"lineNumber":266,"author":{"gitId":"FredericChow00"},"content":"|----------|---------------------------|","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"Merrickneo"},"content":"| n/       | `NAME`                    |","lastModifiedDate":"2023-03-22"},{"lineNumber":268,"author":{"gitId":"Merrickneo"},"content":"| p/       | `PHONE`                   |","lastModifiedDate":"2023-03-22"},{"lineNumber":269,"author":{"gitId":"Merrickneo"},"content":"| e/       | `EMAIL`                   |","lastModifiedDate":"2023-03-22"},{"lineNumber":270,"author":{"gitId":"Merrickneo"},"content":"| a/       | `ADDRESS`                 |","lastModifiedDate":"2023-03-22"},{"lineNumber":271,"author":{"gitId":"Merrickneo"},"content":"| note/    | `NOTE`                    |","lastModifiedDate":"2023-03-22"},{"lineNumber":272,"author":{"gitId":"FredericChow00"},"content":"| d/       | `INTERVIEW DATETIME`      |","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"FredericChow00"},"content":"| applied/ | `APPLICATION DATETIME`    |","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":275,"author":{"gitId":"FredericChow00"},"content":"Please refer to the subsequent [Command Format](#53-command-format) section to see how [Flags](#523-flags)","lastModifiedDate":"2023-03-22"},{"lineNumber":276,"author":{"gitId":"FredericChow00"},"content":"and [Placeholders](#524-placeholders) are used together.","lastModifiedDate":"2023-03-22"},{"lineNumber":277,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":278,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":280,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":281,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":282,"author":{"gitId":"FredericChow00"},"content":"#### 5.2.4 Placeholders","lastModifiedDate":"2023-03-22"},{"lineNumber":283,"author":{"gitId":"Merrickneo"},"content":"Placeholders in this User Guide refers to the UPPER_CASE words that can be replaced by valid user input supplied.","lastModifiedDate":"2023-03-22"},{"lineNumber":284,"author":{"gitId":"Merrickneo"},"content":"These placeholders follow immediately after a [Flag](#523-flags).","lastModifiedDate":"2023-03-22"},{"lineNumber":285,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":286,"author":{"gitId":"Merrickneo"},"content":"Please refer to the subsequent [Command Format](#53-command-format) ","lastModifiedDate":"2023-03-22"},{"lineNumber":287,"author":{"gitId":"Merrickneo"},"content":"section to see how Flags and Placeholders are used together.","lastModifiedDate":"2023-03-22"},{"lineNumber":288,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":289,"author":{"gitId":"Merrickneo"},"content":"| Placeholder  | Corresponding Flag | Description                                                                                                      |","lastModifiedDate":"2023-03-22"},{"lineNumber":290,"author":{"gitId":"FredericChow00"},"content":"|--------------|--------------------|------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-04"},{"lineNumber":291,"author":{"gitId":"Merrickneo"},"content":"| INDEX        | (Not Applicable)   | The INDEX of an item is the number to the left of the applicant\u0027s name in the Item List Box.                     |","lastModifiedDate":"2023-03-22"},{"lineNumber":292,"author":{"gitId":"Merrickneo"},"content":"| NAME         | n/                 | The NAME is the name we use to identify an Applicant.                                                            |","lastModifiedDate":"2023-03-22"},{"lineNumber":293,"author":{"gitId":"Merrickneo"},"content":"| PHONE        | p/                 | The PHONE is the text we use to represent the phone number of the Applicant.                                     |","lastModifiedDate":"2023-03-22"},{"lineNumber":294,"author":{"gitId":"Merrickneo"},"content":"| EMAIL        | e/                 | The EMAIL is the text we use to represent the email of the Applicant.                                            |","lastModifiedDate":"2023-03-22"},{"lineNumber":295,"author":{"gitId":"FredericChow00"},"content":"| NOTE         | note/              | The NOTE is the term we use to identify a skill of an Applicant. Notes cannot be longer than 45 characters long. |","lastModifiedDate":"2023-04-04"},{"lineNumber":296,"author":{"gitId":"Merrickneo"},"content":"| DATETIME     | d/                 | The DATETIME is the datetime indicating the interview datetime of the Applicant.                                 |","lastModifiedDate":"2023-03-22"},{"lineNumber":297,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":298,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":299,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":300,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":301,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":302,"author":{"gitId":"Merrickneo"},"content":"### 5.3 Command Format","lastModifiedDate":"2023-03-22"},{"lineNumber":303,"author":{"gitId":"Merrickneo"},"content":"You will encounter HMHero commands throughout this User Guide.","lastModifiedDate":"2023-03-22"},{"lineNumber":304,"author":{"gitId":"Merrickneo"},"content":"Before you delve into the different commands in Commands, let’s learn what a command consists of.","lastModifiedDate":"2023-03-22"},{"lineNumber":305,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":306,"author":{"gitId":"Merrickneo"},"content":"Here is an example:","lastModifiedDate":"2023-03-22"},{"lineNumber":307,"author":{"gitId":"Merrickneo"},"content":"![CommandExample.png](images%2FCommandExample.png)","lastModifiedDate":"2023-03-22"},{"lineNumber":308,"author":{"gitId":"Merrickneo"},"content":"A command consists of:","lastModifiedDate":"2023-03-22"},{"lineNumber":309,"author":{"gitId":"dunliang0513"},"content":"Command Word: Tells HMHero what action you wish to execute. These actions are covered in [Commands](#6-commands).\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"dunliang0513"},"content":"[Flags](#523-flags): Distinguishes between inputs. A flag is usually followed by a placeholder.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"dunliang0513"},"content":"[Placeholders](#524-placeholders): Represents data that you wish to input. Replace this with valid data.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"Merrickneo"},"content":"For example, `NAME` in `n/NAME` can be replaced with `n/John`.","lastModifiedDate":"2023-03-25"},{"lineNumber":313,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":314,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":315,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":316,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":317,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":318,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":319,"author":{"gitId":"FredericChow00"},"content":"### 5.4 Trying your First Command","lastModifiedDate":"2023-03-22"},{"lineNumber":320,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":321,"author":{"gitId":"bofeng1999"},"content":"To let you become more familiar with HMHero, let\u0027s practise executing some commands.","lastModifiedDate":"2023-03-20"},{"lineNumber":322,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":323,"author":{"gitId":"bofeng1999"},"content":"To start off, let\u0027s try out the `add` command! This command lets you add an [applicant](#521-applicant) to HMHero.","lastModifiedDate":"2023-03-22"},{"lineNumber":324,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":325,"author":{"gitId":"bofeng1999"},"content":"One of the available commands in HMHero is the command to create a new applicant.","lastModifiedDate":"2023-03-20"},{"lineNumber":326,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":327,"author":{"gitId":"bofeng1999"},"content":"**Format:** `add n/NAME p/PHONE e/EMAIL a/ADDRESS [note/NOTE]`","lastModifiedDate":"2023-03-20"},{"lineNumber":328,"author":{"gitId":"bofeng1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":329,"author":{"gitId":"bofeng1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":330,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":331,"author":{"gitId":"bofeng1999"},"content":"**What does the format mean?**","lastModifiedDate":"2023-03-20"},{"lineNumber":332,"author":{"gitId":"bofeng1999"},"content":"* `add` tells HMHero that this is the command to create a new applicant","lastModifiedDate":"2023-03-20"},{"lineNumber":333,"author":{"gitId":"bofeng1999"},"content":"* [Flags](#523-flags) such as `n/` and `p/` are delimiters that enable HMHero to distinguish different","lastModifiedDate":"2023-03-22"},{"lineNumber":334,"author":{"gitId":"bofeng1999"},"content":"parameters supplied by you without ambiguity","lastModifiedDate":"2023-03-22"},{"lineNumber":335,"author":{"gitId":"bofeng1999"},"content":"* [Placeholders](#524-placeholders) such as `NAME` and `PHONE` shows you what you should place in each portion of the ","lastModifiedDate":"2023-03-22"},{"lineNumber":336,"author":{"gitId":"bofeng1999"},"content":"command","lastModifiedDate":"2023-03-22"},{"lineNumber":337,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":338,"author":{"gitId":"bofeng1999"},"content":"Notice that there is a pair of square brackets `[]` surrounding some parameters like `note/NOTE`","lastModifiedDate":"2023-03-22"},{"lineNumber":339,"author":{"gitId":"bofeng1999"},"content":"in the format. This indicates that the parameter is **optional**. Each of these placeholders in the parameters ","lastModifiedDate":"2023-03-22"},{"lineNumber":340,"author":{"gitId":"FredericChow00"},"content":"have a default value based on the commands. These are documented in the [Commands](#6-commands) section for each command.","lastModifiedDate":"2023-03-22"},{"lineNumber":341,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":342,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":343,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e:information_source: \u003cstrong\u003eNote:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":344,"author":{"gitId":"Merrickneo"},"content":"The \u003ca href\u003d\"#524-placeholders\"\u003ePlaceholder\u003c/a\u003e section covers the restrictions for respective placeholders. For example, ","lastModifiedDate":"2023-03-27"},{"lineNumber":345,"author":{"gitId":"bofeng1999"},"content":"the date format of PHONE, certain characters you cannot use and the limit and precision of numbers. ","lastModifiedDate":"2023-03-20"},{"lineNumber":346,"author":{"gitId":"bofeng1999"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":347,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":348,"author":{"gitId":"bofeng1999"},"content":"**Let\u0027s try an example!**","lastModifiedDate":"2023-03-20"},{"lineNumber":349,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":350,"author":{"gitId":"FredericChow00"},"content":"Suppose you just add Thomas, 91918153, thomas@gmail.com, living at 6 Sims Drive (s)543230, and you do not","lastModifiedDate":"2023-03-22"},{"lineNumber":351,"author":{"gitId":"bofeng1999"},"content":"feel the need to record a note for this applicant.","lastModifiedDate":"2023-03-20"},{"lineNumber":352,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":353,"author":{"gitId":"bofeng1999"},"content":"`NAME`: Thomas","lastModifiedDate":"2023-03-20"},{"lineNumber":354,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":355,"author":{"gitId":"bofeng1999"},"content":"`PHONE`: 91918153","lastModifiedDate":"2023-03-20"},{"lineNumber":356,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":357,"author":{"gitId":"bofeng1999"},"content":"`EMAIL`: thomas@gmail.com","lastModifiedDate":"2023-03-20"},{"lineNumber":358,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":359,"author":{"gitId":"bofeng1999"},"content":"`ADDRESS`: 6 Sims Drive (s)543230","lastModifiedDate":"2023-03-20"},{"lineNumber":360,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":361,"author":{"gitId":"bofeng1999"},"content":"The command you would like to enter into the command box would be:","lastModifiedDate":"2023-03-20"},{"lineNumber":362,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":363,"author":{"gitId":"FredericChow00"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":364,"author":{"gitId":"FredericChow00"},"content":"add n/Thomas p/91918153 e/thomas@gmail.com a/6 Sims Drive (s)543230","lastModifiedDate":"2023-03-22"},{"lineNumber":365,"author":{"gitId":"FredericChow00"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":366,"author":{"gitId":"bofeng1999"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":367,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":368,"author":{"gitId":"bofeng1999"},"content":"Alternatively, executing these would do the same thing:","lastModifiedDate":"2023-03-20"},{"lineNumber":369,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":370,"author":{"gitId":"FredericChow00"},"content":"* `add n/Thomas e/thomas@gmail.com p/91918153 a/6 Sims Drive (s)543230`","lastModifiedDate":"2023-03-22"},{"lineNumber":371,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":372,"author":{"gitId":"bofeng1999"},"content":"  This is because the order of the flags does not matter.","lastModifiedDate":"2023-03-20"},{"lineNumber":373,"author":{"gitId":"bofeng1999"},"content":"\u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":374,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":375,"author":{"gitId":"FredericChow00"},"content":"* `add n/Thomas p/91918153 e/thomas@gmail.com n/Sally p/97833468 a/6 Sims Drive (s)543230`","lastModifiedDate":"2023-03-22"},{"lineNumber":376,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":377,"author":{"gitId":"bofeng1999"},"content":"    In this case, the name \"Thomas\" will be overridden by \"Sally\", and the phone \"91918153\" ","lastModifiedDate":"2023-03-22"},{"lineNumber":378,"author":{"gitId":"bofeng1999"},"content":"will be overridden by \"97833468\".","lastModifiedDate":"2023-03-22"},{"lineNumber":379,"author":{"gitId":"bofeng1999"},"content":"\u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":380,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":381,"author":{"gitId":"bofeng1999"},"content":"However, note that the following executions are invalid:","lastModifiedDate":"2023-03-20"},{"lineNumber":382,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":383,"author":{"gitId":"FredericChow00"},"content":"* `add n/Thomasp/91918153e/thomas@gmail.coma/6 Sims Drive (s)543230`","lastModifiedDate":"2023-03-22"},{"lineNumber":384,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":385,"author":{"gitId":"bofeng1999"},"content":"  There must be spacings between the placeholders and flags.","lastModifiedDate":"2023-03-27"},{"lineNumber":386,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":387,"author":{"gitId":"FredericChow00"},"content":"* `add n/ThomaŚ p/91918153 e/thomas@gmail.com a/6 Sims Drivè (s)543230`","lastModifiedDate":"2023-03-22"},{"lineNumber":388,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":389,"author":{"gitId":"bofeng1999"},"content":"  The restrictions of placeholders are not followed.","lastModifiedDate":"2023-03-20"},{"lineNumber":390,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":391,"author":{"gitId":"FredericChow00"},"content":"* `add`","lastModifiedDate":"2023-03-22"},{"lineNumber":392,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":393,"author":{"gitId":"bofeng1999"},"content":"  There is insufficient information provided; you must minimally provide a name.","lastModifiedDate":"2023-03-20"},{"lineNumber":394,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":395,"author":{"gitId":"bofeng1999"},"content":"Find out more about restrictions in the sections [Flags](#523-flags), [Placeholders](#524-placeholders) ","lastModifiedDate":"2023-03-22"},{"lineNumber":396,"author":{"gitId":"FredericChow00"},"content":"and [Commands](#6-commands).","lastModifiedDate":"2023-03-22"},{"lineNumber":397,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":398,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-20"},{"lineNumber":399,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":400,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":401,"author":{"gitId":"bofeng1999"},"content":"Let\u0027s try out another command -- the `list` command! `list` lets you see the list of the applicants.","lastModifiedDate":"2023-03-20"},{"lineNumber":402,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":403,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\" role\u003d\"alert\"\u003e:exclamation: \u003cstrong\u003eCaution:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":404,"author":{"gitId":"bofeng1999"},"content":"The format for different commands are not always identical. For example, executing the `add` command and the `list` ","lastModifiedDate":"2023-03-20"},{"lineNumber":405,"author":{"gitId":"bofeng1999"},"content":"command will have different formats! ","lastModifiedDate":"2023-03-20"},{"lineNumber":406,"author":{"gitId":"bofeng1999"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":407,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":408,"author":{"gitId":"bofeng1999"},"content":"For example, after adding an applicant, you decided to see the list of applicant.","lastModifiedDate":"2023-03-20"},{"lineNumber":409,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":410,"author":{"gitId":"bofeng1999"},"content":"**Format:** `list`","lastModifiedDate":"2023-03-20"},{"lineNumber":411,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":412,"author":{"gitId":"FredericChow00"},"content":"The command you would like to enter into the [Command Input Box](#51-user-interface) would be:","lastModifiedDate":"2023-03-22"},{"lineNumber":413,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":414,"author":{"gitId":"FredericChow00"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":415,"author":{"gitId":"FredericChow00"},"content":"list","lastModifiedDate":"2023-03-22"},{"lineNumber":416,"author":{"gitId":"FredericChow00"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":417,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":418,"author":{"gitId":"bofeng1999"},"content":"You should now have a better understanding of how commands are formatted and used. All commands are consolidated","lastModifiedDate":"2023-03-20"},{"lineNumber":419,"author":{"gitId":"FredericChow00"},"content":"in the [Command Summary](#7-command-summary).","lastModifiedDate":"2023-03-22"},{"lineNumber":420,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":421,"author":{"gitId":"bofeng1999"},"content":"Here is a checklist you can use before running a command:","lastModifiedDate":"2023-03-22"},{"lineNumber":422,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":423,"author":{"gitId":"bofeng1999"},"content":"* [ ] I know the restrictions of the command","lastModifiedDate":"2023-03-20"},{"lineNumber":424,"author":{"gitId":"bofeng1999"},"content":"* [ ] I know what parameters are supplied to the command","lastModifiedDate":"2023-03-22"},{"lineNumber":425,"author":{"gitId":"bofeng1999"},"content":"* [ ] I know the flags for each parameter to be supplied","lastModifiedDate":"2023-03-22"},{"lineNumber":426,"author":{"gitId":"bofeng1999"},"content":"* [ ] I know the restrictions of each parameter","lastModifiedDate":"2023-03-20"},{"lineNumber":427,"author":{"gitId":"bofeng1999"},"content":"* [ ] I know the effects of not specifying each optional flag.","lastModifiedDate":"2023-03-20"},{"lineNumber":428,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":429,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":430,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":431,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":433,"author":{"gitId":"FredericChow00"},"content":"## 6. Commands","lastModifiedDate":"2023-03-22"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":435,"author":{"gitId":"bofeng1999"},"content":"This section shares with you on how to use each command in detail.","lastModifiedDate":"2023-03-22"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":437,"author":{"gitId":"bofeng1999"},"content":"Before continuing, ensure you have read the section on [Flags](#523-flags) and [Placeholders](#524-placeholders).","lastModifiedDate":"2023-03-22"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":439,"author":{"gitId":"bofeng1999"},"content":"What you should expect to find:","lastModifiedDate":"2023-03-20"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":441,"author":{"gitId":"bofeng1999"},"content":"* A description of the command","lastModifiedDate":"2023-03-20"},{"lineNumber":442,"author":{"gitId":"bofeng1999"},"content":"* The format of the command","lastModifiedDate":"2023-03-20"},{"lineNumber":443,"author":{"gitId":"bofeng1999"},"content":"* The expected behaviour of the command","lastModifiedDate":"2023-03-20"},{"lineNumber":444,"author":{"gitId":"bofeng1999"},"content":"* A few valid and invalid examples of the command","lastModifiedDate":"2023-03-20"},{"lineNumber":445,"author":{"gitId":"bofeng1999"},"content":"* Important points to note","lastModifiedDate":"2023-03-20"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":448,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e:information_source: \u003cstrong\u003eNote:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":449,"author":{"gitId":"bofeng1999"},"content":"\u003cul\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":450,"author":{"gitId":"bofeng1999"},"content":"\u003cli\u003e For each command, \"Format\" indicates the syntax of the command.\u003c/li\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":451,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003eSquare brackets indicates an optional parameter.\u003c/li\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":452,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003eIn most commands, if the same parameter is repeated and only one is required, we take the last value provided.","lastModifiedDate":"2023-03-23"},{"lineNumber":453,"author":{"gitId":"bofeng1999"},"content":"\u003c/li\u003e ","lastModifiedDate":"2023-03-23"},{"lineNumber":454,"author":{"gitId":"bofeng1999"},"content":"\u003c/ul\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":455,"author":{"gitId":"bofeng1999"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":456,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":457,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":458,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":459,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":460,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":461,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":462,"author":{"gitId":"FredericChow00"},"content":"### 6.1 Applicant Commands","lastModifiedDate":"2023-03-22"},{"lineNumber":463,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":464,"author":{"gitId":"bofeng1999"},"content":"#### 6.1.1 Create a new applicant `add`","lastModifiedDate":"2023-03-27"},{"lineNumber":465,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":466,"author":{"gitId":"bofeng1999"},"content":"**Format**: `add n/NAME p/PHONE e/EMAIL a/ADDRESS [applied/APPLIED DATE TIME] [note/NOTE]`","lastModifiedDate":"2023-04-03"},{"lineNumber":467,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":468,"author":{"gitId":"bofeng1999"},"content":"\u003e Creates a new applicant with the provided information","lastModifiedDate":"2023-03-20"},{"lineNumber":469,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":470,"author":{"gitId":"bofeng1999"},"content":"**Info**","lastModifiedDate":"2023-03-20"},{"lineNumber":471,"author":{"gitId":"bofeng1999"},"content":"* All fields apart from `APPLIED DATE TIME` and `NOTE` are compulsory.","lastModifiedDate":"2023-04-03"},{"lineNumber":472,"author":{"gitId":"bofeng1999"},"content":"* All `NAME` and `PHONE` must be unique.","lastModifiedDate":"2023-03-21"},{"lineNumber":473,"author":{"gitId":"bofeng1999"},"content":"* `NAME` is case-sensitive. (e.g. \"Thomas\" is different from \"thomas\").","lastModifiedDate":"2023-03-21"},{"lineNumber":474,"author":{"gitId":"bofeng1999"},"content":"* `PHONE` does not require you to include the country code. Only include the numbers.","lastModifiedDate":"2023-03-20"},{"lineNumber":475,"author":{"gitId":"bofeng1999"},"content":"* The value of `APPLIED DATE TIME` will be the time you add a new applicant if it is not provided.","lastModifiedDate":"2023-04-03"},{"lineNumber":476,"author":{"gitId":"bofeng1999"},"content":"* The value of `NOTE` will be `-` if it is not provided.","lastModifiedDate":"2023-03-22"},{"lineNumber":477,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":478,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":479,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e:information_source: \u003cstrong\u003eNote:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":480,"author":{"gitId":"bofeng1999"},"content":"\u003cul\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":481,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003e If two or more values of the same parameter are provided, only the last value for that parameter will be taken.","lastModifiedDate":"2023-03-23"},{"lineNumber":482,"author":{"gitId":"bofeng1999"},"content":"\u003c/li\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":483,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003e However, if two or more `NOTE` are added, all the notes will be added to the applicant.","lastModifiedDate":"2023-04-04"},{"lineNumber":484,"author":{"gitId":"bofeng1999"},"content":"\u003c/li\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":485,"author":{"gitId":"bofeng1999"},"content":"\u003c/ul\u003e \u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":486,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":487,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":488,"author":{"gitId":"bofeng1999"},"content":"**Example:**","lastModifiedDate":"2023-03-20"},{"lineNumber":489,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":490,"author":{"gitId":"bofeng1999"},"content":"**Assumption:**","lastModifiedDate":"2023-03-20"},{"lineNumber":491,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":492,"author":{"gitId":"FredericChow00"},"content":"HMHero does not already contain an applicant with the name \"Adam\" and phone number 91918153.","lastModifiedDate":"2023-03-29"},{"lineNumber":493,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":494,"author":{"gitId":"FredericChow00"},"content":"![add_command.png](images%2Fadd_command.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":495,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":496,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":497,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":498,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":499,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-20"},{"lineNumber":500,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":501,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":502,"author":{"gitId":"bofeng1999"},"content":"#### 6.1.2 Search for an applicant `find`","lastModifiedDate":"2023-03-27"},{"lineNumber":503,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":504,"author":{"gitId":"bofeng1999"},"content":"**Format**: `find n/[NAME] p/[PHONE]`","lastModifiedDate":"2023-04-03"},{"lineNumber":505,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":506,"author":{"gitId":"bofeng1999"},"content":"\u003e Finds all applicants in HMHero using name, phone or both","lastModifiedDate":"2023-04-03"},{"lineNumber":507,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":508,"author":{"gitId":"bofeng1999"},"content":"**Info**","lastModifiedDate":"2023-03-20"},{"lineNumber":509,"author":{"gitId":"bofeng1999"},"content":"* We take in name, phone or both.","lastModifiedDate":"2023-04-03"},{"lineNumber":510,"author":{"gitId":"bofeng1999"},"content":"  In this case, at least `NAME` or `PHONE` is required.","lastModifiedDate":"2023-04-03"},{"lineNumber":511,"author":{"gitId":"bofeng1999"},"content":"* The `n/[NAME]` is case-insensitive. (e.g. \"thomas\" will match \"Thomas\").","lastModifiedDate":"2023-04-03"},{"lineNumber":512,"author":{"gitId":"bofeng1999"},"content":"* This means that providing both `NAME` and `PHONE` narrows down the scope.","lastModifiedDate":"2023-04-03"},{"lineNumber":513,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":514,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":515,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv class\u003d\"alert alert-success\" role\u003d\"alert\"\u003e:bulb: \u003cstrong\u003eTip:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":516,"author":{"gitId":"bofeng1999"},"content":"\u003cul\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":517,"author":{"gitId":"dunliang0513"},"content":"    \u003cli\u003e You can use the \u003ca href\u003d\"#613-list-all-applicants-list\"\u003eList Command\u003c/a\u003e in the next section to display all applicants again!\u003c/li\u003e ","lastModifiedDate":"2023-03-28"},{"lineNumber":518,"author":{"gitId":"bofeng1999"},"content":"\u003c/ul\u003e \u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":519,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":520,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e:information_source: \u003cstrong\u003eNote:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":521,"author":{"gitId":"bofeng1999"},"content":"\u003cul\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":522,"author":{"gitId":"FredericChow00"},"content":"    \u003cli\u003e The \u003ccode\u003efind\u003c/code\u003e command only finds applicants which has a name, phone or both ","lastModifiedDate":"2023-03-29"},{"lineNumber":523,"author":{"gitId":"bofeng1999"},"content":"that fully matches the specified search of the full name, phone or both!\u003c/li\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":524,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003e This means that if the \u003ccode\u003eNAME\u003c/code\u003e \u003ccode\u003eThomas Lee\u003c/code\u003e and \u003ccode\u003eThomas Tan\u003c/code\u003e is in HMHero, ","lastModifiedDate":"2023-03-25"},{"lineNumber":525,"author":{"gitId":"bofeng1999"},"content":"executing \u003ccode\u003eThomas Lee\u003c/code\u003e will only find \u003ccode\u003eThomas Lee\u003c/code\u003e. \u003c/li\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":526,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003e This also means that if the \u003ccode\u003ePHONE\u003c/code\u003e \u003ccode\u003e91918153\u003c/code\u003e and \u003ccode\u003e9191\u003c/code\u003e is in HMHero, ","lastModifiedDate":"2023-03-25"},{"lineNumber":527,"author":{"gitId":"bofeng1999"},"content":"executing \u003ccode\u003e91918153\u003c/code\u003e will only find \u003ccode\u003ePHONE\u003c/code\u003e \u003ccode\u003e91918153\u003c/code\u003e. \u003c/li\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":528,"author":{"gitId":"FredericChow00"},"content":"    \u003cli\u003e If you try to find applicants using both \u003ccode\u003eNAME\u003c/code\u003e and \u003ccode\u003ePHONE\u003c/code\u003e,","lastModifiedDate":"2023-03-29"},{"lineNumber":529,"author":{"gitId":"bofeng1999"},"content":"it will work the same as finding individually! \u003c/li\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":530,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003eIf two or more values of the same parameter are provided, only the last value for that parameter will be taken.","lastModifiedDate":"2023-04-03"},{"lineNumber":531,"author":{"gitId":"bofeng1999"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":532,"author":{"gitId":"bofeng1999"},"content":"\u003c/ul\u003e \u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":533,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":534,"author":{"gitId":"bofeng1999"},"content":"**Example:**","lastModifiedDate":"2023-03-20"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":536,"author":{"gitId":"FredericChow00"},"content":"![find_command.png](images%2Ffind_command.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":539,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":541,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-20"},{"lineNumber":542,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":543,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":544,"author":{"gitId":"bofeng1999"},"content":"#### 6.1.3. List all applicants `list`","lastModifiedDate":"2023-03-27"},{"lineNumber":545,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":546,"author":{"gitId":"bofeng1999"},"content":"**Format**: `list`","lastModifiedDate":"2023-03-20"},{"lineNumber":547,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":548,"author":{"gitId":"bofeng1999"},"content":"\u003e List all applicants in HMHero","lastModifiedDate":"2023-03-20"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":550,"author":{"gitId":"bofeng1999"},"content":"**Info**","lastModifiedDate":"2023-03-20"},{"lineNumber":551,"author":{"gitId":"dunliang0513"},"content":"* This command is useful to view all applicants again after using the [Find Command](#612-search-for-an-applicant-find).","lastModifiedDate":"2023-03-28"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":554,"author":{"gitId":"bofeng1999"},"content":"**Example:**","lastModifiedDate":"2023-03-20"},{"lineNumber":555,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":556,"author":{"gitId":"FredericChow00"},"content":"![list_command.png](images%2Flist_command.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":557,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":558,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":559,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":560,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":561,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-20"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":564,"author":{"gitId":"bofeng1999"},"content":"#### 6.1.4. Delete an applicant `delete`","lastModifiedDate":"2023-03-27"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":566,"author":{"gitId":"bofeng1999"},"content":"**Format**: `delete n/NAME p/PHONE`","lastModifiedDate":"2023-03-20"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":568,"author":{"gitId":"bofeng1999"},"content":"\u003e Deletes an applicant in HMHero using name and phone","lastModifiedDate":"2023-03-20"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":570,"author":{"gitId":"bofeng1999"},"content":"**Info**","lastModifiedDate":"2023-03-20"},{"lineNumber":571,"author":{"gitId":"bofeng1999"},"content":"* All fields are compulsory.","lastModifiedDate":"2023-03-20"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":574,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e:information_source: \u003cstrong\u003eNote:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":575,"author":{"gitId":"bofeng1999"},"content":"\u003cul\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":576,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003e The \u003ccode\u003edelete\u003c/code\u003e command only deletes \u003ccode\u003eApplicant\u003c/code\u003e which has a name and phone ","lastModifiedDate":"2023-03-25"},{"lineNumber":577,"author":{"gitId":"bofeng1999"},"content":"that fully matches the specified search.\u003c/li\u003e ","lastModifiedDate":"2023-03-25"},{"lineNumber":578,"author":{"gitId":"bofeng1999"},"content":"\u003c/ul\u003e \u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":581,"author":{"gitId":"bofeng1999"},"content":"**Example:**","lastModifiedDate":"2023-03-20"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":583,"author":{"gitId":"FredericChow00"},"content":"Applicant list before deleting the applicant Bernice Yu with phone number 99272758:","lastModifiedDate":"2023-03-29"},{"lineNumber":584,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":585,"author":{"gitId":"FredericChow00"},"content":"![delete_command_before.png](images%2Fdelete_command_before.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":586,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":587,"author":{"gitId":"FredericChow00"},"content":"After:","lastModifiedDate":"2023-03-29"},{"lineNumber":588,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":589,"author":{"gitId":"FredericChow00"},"content":"![delete_command_after.png](images%2Fdelete_command_after.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":590,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":591,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":592,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":593,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":594,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-20"},{"lineNumber":595,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":596,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":597,"author":{"gitId":"bofeng1999"},"content":"#### 6.1.5. Advance an applicant `advance`","lastModifiedDate":"2023-03-27"},{"lineNumber":598,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":599,"author":{"gitId":"bofeng1999"},"content":"**Format**: `advance n/NAME p/PHONE [d/INTERVIEW DATETIME]`","lastModifiedDate":"2023-03-22"},{"lineNumber":600,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":601,"author":{"gitId":"bofeng1999"},"content":"\u003e Advances an applicant in HMHero using name, phone and interview datetime","lastModifiedDate":"2023-03-20"},{"lineNumber":602,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":603,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e:information_source: \u003cstrong\u003eNote:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":604,"author":{"gitId":"bofeng1999"},"content":"\u003cul\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":605,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003eThe \u003ccode\u003eadvance\u003c/code\u003e command only advances \u003ccode\u003eApplicant\u003c/code\u003e which has a name and phone that","lastModifiedDate":"2023-03-25"},{"lineNumber":606,"author":{"gitId":"bofeng1999"},"content":"fully matches the specified search.\u003c/li\u003e ","lastModifiedDate":"2023-03-25"},{"lineNumber":607,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003e The \u003ccode\u003eINTERVIEW DATETIME\u003c/code\u003e is required to advance \u003ccode\u003eApplicant\u003c/code\u003e from \u003ccode\u003estatus\u003c/code\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":608,"author":{"gitId":"bofeng1999"},"content":"\u003ccode\u003eAPPLIED\u003c/code\u003e to \u003ccode\u003estatus\u003c/code\u003e \u003ccode\u003eSHORTLISTED\u003c/code\u003e.","lastModifiedDate":"2023-03-25"},{"lineNumber":609,"author":{"gitId":"bofeng1999"},"content":"\u003c/li\u003e ","lastModifiedDate":"2023-03-23"},{"lineNumber":610,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003e However, \u003ccode\u003eINTERVIEW DATETIME\u003c/code\u003e is not required to advance \u003ccode\u003eApplicant\u003c/code\u003e from \u003ccode\u003estatus","lastModifiedDate":"2023-03-25"},{"lineNumber":611,"author":{"gitId":"bofeng1999"},"content":"\u003c/code\u003e \u003ccode\u003eSHORTLISTED\u003c/code\u003e to \u003ccode\u003estatus\u003c/code\u003e \u003ccode\u003eACCEPTED\u003c/code\u003e. \u003c/li\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":612,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003e The format for \u003ccode\u003eINTERVIEW DATETIME\u003c/code\u003e should follow: \"dd-mm-yyyy HH:MM\".","lastModifiedDate":"2023-03-25"},{"lineNumber":613,"author":{"gitId":"bofeng1999"},"content":"        \u003cul\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":614,"author":{"gitId":"bofeng1999"},"content":"            \u003cli\u003e “dd”: Day of the month. For example, “10” would represent the 10th day of the month. \u003c/li\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":615,"author":{"gitId":"bofeng1999"},"content":"            \u003cli\u003e “mm”: Month of the year, ranging from 1 to 12 for January to December respectively.","lastModifiedDate":"2023-03-23"},{"lineNumber":616,"author":{"gitId":"bofeng1999"},"content":"For example, “05” would represent May. \u003c/li\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":617,"author":{"gitId":"bofeng1999"},"content":"            \u003cli\u003e “yyyy”: A 4-digit year. For example, “2023” would represent the year 2023. \u003c/li\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":618,"author":{"gitId":"bofeng1999"},"content":"            \u003cli\u003e \"HH\": Hour of the day, ranging from 0-23 in 24-hour clock format. ","lastModifiedDate":"2023-03-23"},{"lineNumber":619,"author":{"gitId":"bofeng1999"},"content":"            For example, \"15\" would represent 15th hour of the day. \u003c/li\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":620,"author":{"gitId":"bofeng1999"},"content":"            \u003cli\u003e \"MM\": Minute of the day, ranging from 0-59. For example, \"50\" would represent the 50th minute of the ","lastModifiedDate":"2023-03-25"},{"lineNumber":621,"author":{"gitId":"bofeng1999"},"content":"hour.\u003c/li\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":622,"author":{"gitId":"bofeng1999"},"content":"        \u003c/ul\u003e ","lastModifiedDate":"2023-03-25"},{"lineNumber":623,"author":{"gitId":"bofeng1999"},"content":"    \u003c/li\u003e ","lastModifiedDate":"2023-03-25"},{"lineNumber":624,"author":{"gitId":"bofeng1999"},"content":"\u003c/ul\u003e \u003c/div\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":625,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":626,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":627,"author":{"gitId":"bofeng1999"},"content":"**Example:**","lastModifiedDate":"2023-03-20"},{"lineNumber":628,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":629,"author":{"gitId":"FredericChow00"},"content":"Advancing an applicant with the status `APPLIED` requires an interview date and time.","lastModifiedDate":"2023-03-29"},{"lineNumber":630,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":631,"author":{"gitId":"FredericChow00"},"content":"![advance_command_applied.png](images%2Fadvance_command_applied.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":632,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":633,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":634,"author":{"gitId":"bofeng1999"},"content":"Advancing an applicant with the status `SHORTLISTED` does not require an interview date and time.","lastModifiedDate":"2023-04-03"},{"lineNumber":635,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":636,"author":{"gitId":"FredericChow00"},"content":"![advance_command_shortlisted.png](images%2Fadvance_command_shortlisted.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":637,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":638,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":639,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":640,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":641,"author":{"gitId":"dunliang0513"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"bofeng1999"},"content":"#### 6.1.6. Reject an applicant `reject`","lastModifiedDate":"2023-03-27"},{"lineNumber":645,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":646,"author":{"gitId":"FredericChow00"},"content":"**Format**: `reject n/NAME p/PHONE`","lastModifiedDate":"2023-03-22"},{"lineNumber":647,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":648,"author":{"gitId":"bofeng1999"},"content":"\u003e Rejects an applicant in HMHero using name and phone","lastModifiedDate":"2023-03-20"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"bofeng1999"},"content":"**Info**","lastModifiedDate":"2023-03-20"},{"lineNumber":651,"author":{"gitId":"bofeng1999"},"content":"* All fields are compulsory.","lastModifiedDate":"2023-03-20"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e:information_source: \u003cstrong\u003eNote:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":655,"author":{"gitId":"bofeng1999"},"content":"\u003cul\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":656,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003e The \u003ccode\u003ereject\u003c/code\u003e command only rejects \u003ccode\u003eApplicant\u003c/code\u003e which has a name and phone that ","lastModifiedDate":"2023-03-25"},{"lineNumber":657,"author":{"gitId":"bofeng1999"},"content":"fully matches the specified search.\u003c/li\u003e ","lastModifiedDate":"2023-03-25"},{"lineNumber":658,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003e The \u003ccode\u003eNAME\u003c/code\u003e and \u003ccode\u003ePHONE\u003c/code\u003e is required to reject \u003ccode\u003eApplicant\u003c/code\u003e from \u003ccode\u003estatus\u003c/code\u003e ","lastModifiedDate":"2023-03-25"},{"lineNumber":659,"author":{"gitId":"bofeng1999"},"content":"\u003ccode\u003eAPPLIED\u003c/code\u003e, \u003ccode\u003eSHORTLISTED\u003c/code\u003e and \u003ccode\u003eACCEPTED\u003c/code\u003e to \u003ccode\u003estatus\u003c/code\u003e \u003ccode\u003eREJECTED\u003c/code\u003e.","lastModifiedDate":"2023-03-25"},{"lineNumber":660,"author":{"gitId":"bofeng1999"},"content":"    \u003c/li\u003e ","lastModifiedDate":"2023-03-25"},{"lineNumber":661,"author":{"gitId":"bofeng1999"},"content":"\u003c/ul\u003e \u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"bofeng1999"},"content":"**Example:**","lastModifiedDate":"2023-03-20"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"FredericChow00"},"content":"![reject_command.png](images%2Freject_command.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"FredericChow00"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\" role\u003d\"alert\"\u003e:exclamation: \u003cstrong\u003eCaution:\u003c/strong\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":669,"author":{"gitId":"FredericChow00"},"content":"Applicants with the status \u003ccode\u003eREJECTED\u003c/code\u003e cannot be rejected!","lastModifiedDate":"2023-03-29"},{"lineNumber":670,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":672,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":674,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-20"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":676,"author":{"gitId":"bofeng1999"},"content":"#### 6.1.7. List all interview dates of applicants `interview`","lastModifiedDate":"2023-03-27"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":678,"author":{"gitId":"bofeng1999"},"content":"**Format**: `interview`","lastModifiedDate":"2023-03-20"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":680,"author":{"gitId":"bofeng1999"},"content":"\u003e List all interview dates of shortlisted applicants in HMHero in chronological order","lastModifiedDate":"2023-03-20"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":682,"author":{"gitId":"bofeng1999"},"content":"**Info**","lastModifiedDate":"2023-03-20"},{"lineNumber":683,"author":{"gitId":"bofeng1999"},"content":"* This command is useful to view all the applicants\u0027 interview dates again after","lastModifiedDate":"2023-03-20"},{"lineNumber":684,"author":{"gitId":"dunliang0513"},"content":"  using the [Advance Command](#615-advance-an-applicant-advance).","lastModifiedDate":"2023-03-28"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":687,"author":{"gitId":"bofeng1999"},"content":"**Example:**","lastModifiedDate":"2023-03-20"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"FredericChow00"},"content":"![interview_command.png](images%2Finterview_command.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":690,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":691,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":692,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":693,"author":{"gitId":"dunliang0513"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":696,"author":{"gitId":"bofeng1999"},"content":"#### 6.1.8. Edit an existing applicant `edit`","lastModifiedDate":"2023-03-27"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"bofeng1999"},"content":"**Format**: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [d/INTERVIEW DATETIME] [note/NOTE]`","lastModifiedDate":"2023-03-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"bofeng1999"},"content":"\u003e Edits an existing applicant with the provided information","lastModifiedDate":"2023-03-20"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"bofeng1999"},"content":"**Info**","lastModifiedDate":"2023-03-20"},{"lineNumber":703,"author":{"gitId":"bofeng1999"},"content":"* If two or more values of the same parameter are provided, only the last value for that parameter will be taken.","lastModifiedDate":"2023-03-20"},{"lineNumber":704,"author":{"gitId":"bofeng1999"},"content":"* However, if two or more values of `NOTE` are provided, both parameter will be taken in.","lastModifiedDate":"2023-03-25"},{"lineNumber":705,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":706,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e:information_source: \u003cstrong\u003eNote:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":707,"author":{"gitId":"bofeng1999"},"content":"\u003cul\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":708,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003e All fields apart from \u003ccode\u003eINDEX\u003c/code\u003e are optional. However, you need to include at least one optional ","lastModifiedDate":"2023-03-25"},{"lineNumber":709,"author":{"gitId":"bofeng1999"},"content":"parameter. \u003c/li\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":710,"author":{"gitId":"bofeng1999"},"content":"    \u003cli\u003e The format for \u003ccode\u003eINTERVIEW DATETIME\u003c/code\u003e should follow: \"dd-mm-yyyy HH:MM\".","lastModifiedDate":"2023-03-25"},{"lineNumber":711,"author":{"gitId":"bofeng1999"},"content":"        \u003cul\u003e ","lastModifiedDate":"2023-03-23"},{"lineNumber":712,"author":{"gitId":"bofeng1999"},"content":"            \u003cli\u003e “dd”: Day of the month. For example, “10” would represent the 10th day of the month. \u003c/li\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":713,"author":{"gitId":"bofeng1999"},"content":"            \u003cli\u003e “mm”: Month of the year, ranging from 1 to 12 for January to December respectively.","lastModifiedDate":"2023-03-23"},{"lineNumber":714,"author":{"gitId":"bofeng1999"},"content":"For example, “05” would represent May. \u003c/li\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":715,"author":{"gitId":"bofeng1999"},"content":"            \u003cli\u003e “yyyy”: A 4-digit year. For example, “2023” would represent the year 2023. \u003c/li\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":716,"author":{"gitId":"bofeng1999"},"content":"            \u003cli\u003e \"HH\": Hour of the day, ranging from 0-23 in 24-hour clock format. ","lastModifiedDate":"2023-03-23"},{"lineNumber":717,"author":{"gitId":"bofeng1999"},"content":"For example, \"15\" would represent 15th hour of the day. \u003c/li\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":718,"author":{"gitId":"bofeng1999"},"content":"            \u003cli\u003e \"MM\": Minute of the day, ranging from 0-59. For example, ","lastModifiedDate":"2023-03-25"},{"lineNumber":719,"author":{"gitId":"bofeng1999"},"content":"\"50\" would represent the 50th minute of the hour. \u003c/li\u003e ","lastModifiedDate":"2023-03-25"},{"lineNumber":720,"author":{"gitId":"bofeng1999"},"content":"        \u003c/ul\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":721,"author":{"gitId":"bofeng1999"},"content":"    \u003c/li\u003e ","lastModifiedDate":"2023-03-25"},{"lineNumber":722,"author":{"gitId":"bofeng1999"},"content":"\u003c/ul\u003e \u003c/div\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"bofeng1999"},"content":"**Example:**","lastModifiedDate":"2023-03-20"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"FredericChow00"},"content":"Applicant list before editing:","lastModifiedDate":"2023-03-29"},{"lineNumber":728,"author":{"gitId":"FredericChow00"},"content":"![edit_command_before.png](images%2Fedit_command_before.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"FredericChow00"},"content":"After editing Bernice Yu\u0027s phone and notes:","lastModifiedDate":"2023-03-29"},{"lineNumber":731,"author":{"gitId":"FredericChow00"},"content":"![edit_command_after.png](images%2Fedit_command_after.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":735,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":736,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-20"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"bofeng1999"},"content":"#### 6.1.9. Remind upcoming interviews `remind`","lastModifiedDate":"2023-03-27"},{"lineNumber":740,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":741,"author":{"gitId":"FredericChow00"},"content":"**Format:** `remind`","lastModifiedDate":"2023-03-29"},{"lineNumber":742,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":743,"author":{"gitId":"FredericChow00"},"content":"\u003e Lists all applicants with interviews within the next three days.","lastModifiedDate":"2023-03-29"},{"lineNumber":744,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":745,"author":{"gitId":"FredericChow00"},"content":"**Example:**","lastModifiedDate":"2023-03-29"},{"lineNumber":746,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":747,"author":{"gitId":"FredericChow00"},"content":"![remind_command.png](images%2Fremind_command.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":750,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":751,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":753,"author":{"gitId":"FredericChow00"},"content":"### 6.2. Statistics Commands","lastModifiedDate":"2023-03-22"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":755,"author":{"gitId":"FredericChow00"},"content":"#### 6.4.1. Summary Statistics `summary`","lastModifiedDate":"2023-03-29"},{"lineNumber":756,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":757,"author":{"gitId":"FredericChow00"},"content":"**Format:** `summary`","lastModifiedDate":"2023-03-29"},{"lineNumber":758,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":759,"author":{"gitId":"FredericChow00"},"content":"\u003e Shows a statistical summary of the company\u0027s hiring processes.","lastModifiedDate":"2023-03-29"},{"lineNumber":760,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":761,"author":{"gitId":"FredericChow00"},"content":"**Example:**","lastModifiedDate":"2023-03-29"},{"lineNumber":762,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":763,"author":{"gitId":"FredericChow00"},"content":"![summary_command.png](images%2Fsummary_command.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":764,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":767,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":768,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":769,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":770,"author":{"gitId":"FredericChow00"},"content":"### 6.3. General Commands","lastModifiedDate":"2023-03-22"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"bofeng1999"},"content":"#### 6.3.1. Receive help during usage `help`","lastModifiedDate":"2023-03-27"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"FredericChow00"},"content":"**Format**: `help`","lastModifiedDate":"2023-03-28"},{"lineNumber":775,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":776,"author":{"gitId":"FredericChow00"},"content":"\u003e Displays help window for HMHero which contains link to User Guide.","lastModifiedDate":"2023-03-28"},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":778,"author":{"gitId":"FredericChow00"},"content":"**Example:**","lastModifiedDate":"2023-03-29"},{"lineNumber":779,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":780,"author":{"gitId":"FredericChow00"},"content":"![help_command.png](images%2Fhelp_command.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":781,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":782,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":783,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":784,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":785,"author":{"gitId":"dunliang0513"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"bofeng1999"},"content":"#### 6.3.2. Exit HMHero `exit`","lastModifiedDate":"2023-03-27"},{"lineNumber":788,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":789,"author":{"gitId":"bofeng1999"},"content":"**Format**: `exit`","lastModifiedDate":"2023-03-20"},{"lineNumber":790,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":791,"author":{"gitId":"bofeng1999"},"content":"\u003e Exits HMHero","lastModifiedDate":"2023-03-20"},{"lineNumber":792,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":793,"author":{"gitId":"FredericChow00"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\" role\u003d\"alert\"\u003e:exclamation: \u003cstrong\u003eCaution:\u003c/strong\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":794,"author":{"gitId":"bofeng1999"},"content":"This command is the only guaranteed way for the data file to be saved when you exit the application.","lastModifiedDate":"2023-03-20"},{"lineNumber":795,"author":{"gitId":"bofeng1999"},"content":"To prevent losing data, always exit the application using this command instead of any other way.","lastModifiedDate":"2023-03-27"},{"lineNumber":796,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":798,"author":{"gitId":"bofeng1999"},"content":"**Example:**","lastModifiedDate":"2023-03-20"},{"lineNumber":799,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":800,"author":{"gitId":"bofeng1999"},"content":"**Command Input Box:**","lastModifiedDate":"2023-03-20"},{"lineNumber":801,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":802,"author":{"gitId":"bofeng1999"},"content":"Possible inputs:","lastModifiedDate":"2023-03-20"},{"lineNumber":803,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-20"},{"lineNumber":804,"author":{"gitId":"bofeng1999"},"content":"exit","lastModifiedDate":"2023-03-20"},{"lineNumber":805,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-20"},{"lineNumber":806,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":807,"author":{"gitId":"bofeng1999"},"content":"**Expected Outcomes:**","lastModifiedDate":"2023-03-20"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":809,"author":{"gitId":"bofeng1999"},"content":"* All HMHero application windows will close","lastModifiedDate":"2023-03-20"},{"lineNumber":810,"author":{"gitId":"FredericChow00"},"content":"* Your data is saved locally in your computer.","lastModifiedDate":"2023-03-28"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":813,"author":{"gitId":"bofeng1999"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e:information_source: \u003cstrong\u003eNote:\u003c/strong\u003e \u003cbr\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":814,"author":{"gitId":"FredericChow00"},"content":"If your data cannot be saved successfully, HMHero will not close in order to prevent data loss.","lastModifiedDate":"2023-03-28"},{"lineNumber":815,"author":{"gitId":"bofeng1999"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":817,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":819,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":821,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":822,"author":{"gitId":"FredericChow00"},"content":"## 7. Command Summary","lastModifiedDate":"2023-03-22"},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"FredericChow00"},"content":"### 7.1. Applicant Commands","lastModifiedDate":"2023-03-22"},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":826,"author":{"gitId":"Merrickneo"},"content":"| Action                                 | Format                                                                                                                                                                   | Example                                                                     |","lastModifiedDate":"2023-03-23"},{"lineNumber":827,"author":{"gitId":"bofeng1999"},"content":"|----------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------|","lastModifiedDate":"2023-04-03"},{"lineNumber":828,"author":{"gitId":"bofeng1999"},"content":"| Add a new applicant                    | `add n/NAME p/PHONE e/EMAIL a/ADDRESS [note/NOTE]`                                                                                                                       | `add n/Tom p/98763213 e/asd@gmail.com a/6 Sims Drive (s)532123 note/Python` |","lastModifiedDate":"2023-03-23"},{"lineNumber":829,"author":{"gitId":"FredericChow00"},"content":"| Search for an applicant                | `find [n/NAME] [p/PHONE]` \u003cbr\u003e (Minimally one of `n/NAME` or `p/PHONE` must be provided)                                                                                 | `find n/Thomas p/98764321`                                                  |","lastModifiedDate":"2023-03-28"},{"lineNumber":830,"author":{"gitId":"bofeng1999"},"content":"| List all applicants                    | `list`                                                                                                                                                                   | `list`                                                                      |","lastModifiedDate":"2023-03-20"},{"lineNumber":831,"author":{"gitId":"bofeng1999"},"content":"| Delete an applicant                    | `delete n/NAME p/PHONE`                                                                                                                                                  | `delete n/Thomas p/98765432`                                                |","lastModifiedDate":"2023-03-20"},{"lineNumber":832,"author":{"gitId":"bofeng1999"},"content":"| Advance an applicant                   | `advance n/NAME p/PHONE [d/INTERVIEW DATETIME]` \u003cbr\u003e \u003cbr\u003e **Note:** You need to provide `INTERVIEW DATETIME` to advance applicant\u0027s `status` `APPLIED` to `SHORTLISTED`  | `advance n/Thomas p/98765432 d/20-03-2024 12:12`                            |","lastModifiedDate":"2023-04-03"},{"lineNumber":833,"author":{"gitId":"bofeng1999"},"content":"| Reject an applicant                    | `reject n/NAME p/PHONE`                                                                                                                                                  | `reject n/Thomas p/98765432`                                                |","lastModifiedDate":"2023-03-20"},{"lineNumber":834,"author":{"gitId":"bofeng1999"},"content":"| View the interview dates of applicants | `interview`                                                                                                                                                              | `interview`                                                                 |","lastModifiedDate":"2023-03-20"},{"lineNumber":835,"author":{"gitId":"bofeng1999"},"content":"| Edit the information of an applicant   | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [d/INTERVIEW DATE TIME] [note/NOTE]`                                                                                | `edit 1 n/Marry p/98763245`                                                 |","lastModifiedDate":"2023-03-23"},{"lineNumber":836,"author":{"gitId":"FredericChow00"},"content":"| Remind an applicant\u0027s interview date   | `remind`                                                                                                                                                                 | `remind`                                                                    |","lastModifiedDate":"2023-03-28"},{"lineNumber":837,"author":{"gitId":"FredericChow00"},"content":"| View summary statistics                | `summary`                                                                                                                                                                | `remind`                                                                    |","lastModifiedDate":"2023-03-28"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":839,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":841,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":843,"author":{"gitId":"FredericChow00"},"content":"### 7.2. Statistics Commands","lastModifiedDate":"2023-03-22"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":845,"author":{"gitId":"Merrickneo"},"content":"| Action                                  | Format    | Example   |","lastModifiedDate":"2023-03-23"},{"lineNumber":846,"author":{"gitId":"FredericChow00"},"content":"|-----------------------------------------|-----------|-----------|","lastModifiedDate":"2023-03-28"},{"lineNumber":847,"author":{"gitId":"FredericChow00"},"content":"| Displays statistics collected by HMHero | `summary` | `summary` | ","lastModifiedDate":"2023-03-28"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":849,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":851,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":853,"author":{"gitId":"FredericChow00"},"content":"### 7.3. General Commands","lastModifiedDate":"2023-03-22"},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":855,"author":{"gitId":"Merrickneo"},"content":"| Action                                                | Format | Example |","lastModifiedDate":"2023-03-23"},{"lineNumber":856,"author":{"gitId":"bofeng1999"},"content":"|-------------------------------------------------------|--------|---------|","lastModifiedDate":"2023-03-20"},{"lineNumber":857,"author":{"gitId":"bofeng1999"},"content":"| Shows a help dialog with a list of available commands | `help` | `help`  |","lastModifiedDate":"2023-03-20"},{"lineNumber":858,"author":{"gitId":"bofeng1999"},"content":"| Exits HMHero                                          | `exit` | `exit`  |","lastModifiedDate":"2023-03-20"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":860,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"dunliang0513"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"FredericChow00"},"content":"## 8. Troubleshooting","lastModifiedDate":"2023-03-22"},{"lineNumber":865,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":866,"author":{"gitId":"dunliang0513"},"content":"**Problem:**","lastModifiedDate":"2023-03-20"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":868,"author":{"gitId":"dunliang0513"},"content":"The JAR file not launching even after double-clicking the file.","lastModifiedDate":"2023-03-20"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":870,"author":{"gitId":"dunliang0513"},"content":"**Solution:**","lastModifiedDate":"2023-03-20"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":872,"author":{"gitId":"dunliang0513"},"content":"1. Open your terminal","lastModifiedDate":"2023-03-20"},{"lineNumber":873,"author":{"gitId":"dunliang0513"},"content":"* Windows:","lastModifiedDate":"2023-03-20"},{"lineNumber":874,"author":{"gitId":"dunliang0513"},"content":"    * The default key combination to launch your terminal is \u003ckbd\u003eCtrl\u003c/kbd\u003e+\u003ckbd\u003eShift\u003c/kbd\u003e+\u003ckbd\u003eP\u003c/kbd\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":875,"author":{"gitId":"dunliang0513"},"content":"* Mac:","lastModifiedDate":"2023-03-20"},{"lineNumber":876,"author":{"gitId":"dunliang0513"},"content":"    * Use \u003ckbd\u003eCmd\u003c/kbd\u003e+\u003ckbd\u003eSpace\u003c/kbd\u003e to open Spotlight Search","lastModifiedDate":"2023-03-20"},{"lineNumber":877,"author":{"gitId":"dunliang0513"},"content":"    * Search for \"terminal\" and click it to launch. ","lastModifiedDate":"2023-03-20"},{"lineNumber":878,"author":{"gitId":"dunliang0513"},"content":"2. Navigate to the location where \"hmhero.jar\" is stored within your terminal using `cd`. For example, `cd Downloads/`","lastModifiedDate":"2023-03-20"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":881,"author":{"gitId":"dunliang0513"},"content":"3. On your terminal, run `java -jar hmhero.jar`","lastModifiedDate":"2023-03-20"},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":883,"author":{"gitId":"dunliang0513"},"content":"**Problem:**","lastModifiedDate":"2023-03-20"},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":885,"author":{"gitId":"dunliang0513"},"content":"The JAR file not launching in Windows Subsystem for Linux (WSL).","lastModifiedDate":"2023-03-20"},{"lineNumber":886,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":887,"author":{"gitId":"dunliang0513"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e:information_source: **Note:** ","lastModifiedDate":"2023-03-20"},{"lineNumber":888,"author":{"gitId":"dunliang0513"},"content":"WSL does not support GUI applications by default. ","lastModifiedDate":"2023-03-20"},{"lineNumber":889,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":891,"author":{"gitId":"dunliang0513"},"content":"**Solution:**","lastModifiedDate":"2023-03-20"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":893,"author":{"gitId":"dunliang0513"},"content":"1. Our recommendation is to run HMHero application on Windows and not on WSL.","lastModifiedDate":"2023-03-20"},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":895,"author":{"gitId":"dunliang0513"},"content":"**Problem:**","lastModifiedDate":"2023-03-20"},{"lineNumber":896,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":897,"author":{"gitId":"dunliang0513"},"content":"Unable to exit/save HMHero to data file","lastModifiedDate":"2023-03-20"},{"lineNumber":898,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":899,"author":{"gitId":"dunliang0513"},"content":"**Solution:**","lastModifiedDate":"2023-03-20"},{"lineNumber":900,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":901,"author":{"gitId":"dunliang0513"},"content":"1. This error is due to `hmhero.jar` being started in a protected folder. (Examples of write-protected folders include`C:\\WINDOWS\\System32` in windows and the `/etc` dir in linux) \u003cbr\u003e Please move the `hmhero.jar` file into another folder in your computer and start HMHero application from that folder.","lastModifiedDate":"2023-03-20"},{"lineNumber":902,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":904,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":905,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":906,"author":{"gitId":"dunliang0513"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":908,"author":{"gitId":"FredericChow00"},"content":"## 9. FAQ","lastModifiedDate":"2023-03-22"},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":910,"author":{"gitId":"dunliang0513"},"content":"### Q: If I do not have Java 11, how do I install it on my computer? \u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":911,"author":{"gitId":"dunliang0513"},"content":"**A:** You can navigate to this site [here](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html) and download Java 11 according to your system’s specifications.","lastModifiedDate":"2023-03-20"},{"lineNumber":912,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":913,"author":{"gitId":"dunliang0513"},"content":"### Q: Do I need an internet connection to run HMHero? \u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":914,"author":{"gitId":"dunliang0513"},"content":"**A:** No, HMHero can boot up and run all functionalities without an internet connection.","lastModifiedDate":"2023-03-20"},{"lineNumber":915,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":916,"author":{"gitId":"dunliang0513"},"content":"### Q: Can I use HMHero on my mobile device?\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":917,"author":{"gitId":"dunliang0513"},"content":"**A:** Unfortunately, HMHero is only designed to run on your desktop/laptop such that you can use the command line interface.","lastModifiedDate":"2023-03-20"},{"lineNumber":918,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":919,"author":{"gitId":"dunliang0513"},"content":"### Q: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":920,"author":{"gitId":"dunliang0513"},"content":"**A:** Install HMHero on the other computer and overwrite the empty data file with the data file created by HMHero in your current computer.","lastModifiedDate":"2023-03-20"},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":923,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":924,"author":{"gitId":"dunliang0513"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":925,"author":{"gitId":"FredericChow00"},"content":"## 10. Acknowledgements","lastModifiedDate":"2023-03-22"},{"lineNumber":926,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":927,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":928,"author":{"gitId":"dunliang0513"},"content":"HMHero is a brownfield software engineering project based off [AddressBook Level-3](https://nus-cs2103-ay2223s2.github.io/tp/), taken under the [CS2103T Software Engineering](https://nus-cs2103-ay2223s2.github.io/website/admin/index.html) held by School of Computing at National University of Singapore.","lastModifiedDate":"2023-03-20"},{"lineNumber":929,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":930,"author":{"gitId":"dunliang0513"},"content":"Java dependencies:","lastModifiedDate":"2023-03-20"},{"lineNumber":931,"author":{"gitId":"dunliang0513"},"content":"* [JavaFX](https://openjfx.io/) for Graphical User Interface","lastModifiedDate":"2023-03-20"},{"lineNumber":932,"author":{"gitId":"dunliang0513"},"content":"* [JUnit5](https://github.com/junit-team/junit5) for testing","lastModifiedDate":"2023-03-20"},{"lineNumber":933,"author":{"gitId":"dunliang0513"},"content":"* [Jackson](https://github.com/FasterXML/jackson) for JSON-related operations","lastModifiedDate":"2023-03-20"},{"lineNumber":934,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":935,"author":{"gitId":"dunliang0513"},"content":"Documentation dependencies:","lastModifiedDate":"2023-03-20"},{"lineNumber":936,"author":{"gitId":"dunliang0513"},"content":"* [PlantUML](https://plantuml.com/) for creating UML diagrams","lastModifiedDate":"2023-03-20"},{"lineNumber":937,"author":{"gitId":"dunliang0513"},"content":"* [Jekyll](https://jekyllrb.com/)  for rendering the website","lastModifiedDate":"2023-03-26"},{"lineNumber":938,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":939,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":940,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":941,"author":{"gitId":"dunliang0513"},"content":"---","lastModifiedDate":"2023-03-20"},{"lineNumber":942,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":943,"author":{"gitId":"FredericChow00"},"content":"## 11. Glossary","lastModifiedDate":"2023-03-22"},{"lineNumber":944,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":945,"author":{"gitId":"dunliang0513"},"content":"### Quick Reference","lastModifiedDate":"2023-03-27"},{"lineNumber":946,"author":{"gitId":"dunliang0513"},"content":"- [ADDRESS (Placeholder)](#address-placeholder)","lastModifiedDate":"2023-03-26"},{"lineNumber":947,"author":{"gitId":"dunliang0513"},"content":"- [Address](#address)","lastModifiedDate":"2023-03-26"},{"lineNumber":948,"author":{"gitId":"dunliang0513"},"content":"- [Admonitions](#admonitions)","lastModifiedDate":"2023-03-26"},{"lineNumber":949,"author":{"gitId":"dunliang0513"},"content":"- [Applicant](#applicant)","lastModifiedDate":"2023-03-26"},{"lineNumber":950,"author":{"gitId":"dunliang0513"},"content":"- [Applicant List Box](#applicant-list-box)","lastModifiedDate":"2023-03-28"},{"lineNumber":951,"author":{"gitId":"FredericChow00"},"content":"- [Application Cycle](#application-cycle)","lastModifiedDate":"2023-03-28"},{"lineNumber":952,"author":{"gitId":"dunliang0513"},"content":"- [COMMAND_WORD (Placeholder)](#commandword-placeholder)","lastModifiedDate":"2023-03-26"},{"lineNumber":953,"author":{"gitId":"dunliang0513"},"content":"- [Command](#command)","lastModifiedDate":"2023-03-26"},{"lineNumber":954,"author":{"gitId":"dunliang0513"},"content":"- [Command Input Box](#command-input-box)","lastModifiedDate":"2023-03-28"},{"lineNumber":955,"author":{"gitId":"dunliang0513"},"content":"- [Command Line (CLI)](#command-line)","lastModifiedDate":"2023-03-26"},{"lineNumber":956,"author":{"gitId":"dunliang0513"},"content":"- [Command Output Box](#command-output-box)","lastModifiedDate":"2023-03-28"},{"lineNumber":957,"author":{"gitId":"dunliang0513"},"content":"- [Placeholder](#email-placeholder)","lastModifiedDate":"2023-03-26"},{"lineNumber":958,"author":{"gitId":"dunliang0513"},"content":"- [Email](#email)","lastModifiedDate":"2023-03-26"},{"lineNumber":959,"author":{"gitId":"dunliang0513"},"content":"- [Flags](#flags)","lastModifiedDate":"2023-03-26"},{"lineNumber":960,"author":{"gitId":"dunliang0513"},"content":"- [Graphical User Interface(GUI)](#graphical-user-interface)","lastModifiedDate":"2023-03-26"},{"lineNumber":961,"author":{"gitId":"dunliang0513"},"content":"- [Help Window](#help-window)","lastModifiedDate":"2023-03-26"},{"lineNumber":962,"author":{"gitId":"dunliang0513"},"content":"- [Hiring Manager](#hiring-manager)","lastModifiedDate":"2023-03-26"},{"lineNumber":963,"author":{"gitId":"dunliang0513"},"content":"- [Input](#input)","lastModifiedDate":"2023-03-26"},{"lineNumber":964,"author":{"gitId":"dunliang0513"},"content":"- [INTERVIEW_DATE (Placeholder)](#interviewdate-placeholder)","lastModifiedDate":"2023-03-26"},{"lineNumber":965,"author":{"gitId":"dunliang0513"},"content":"- [Interview Date](#interview-date)","lastModifiedDate":"2023-03-26"},{"lineNumber":966,"author":{"gitId":"dunliang0513"},"content":"- [KEYWORD (Placeholder)](#keyword-placeholder)","lastModifiedDate":"2023-03-26"},{"lineNumber":967,"author":{"gitId":"dunliang0513"},"content":"- [NAME (Placeholder)](#name-placeholder)","lastModifiedDate":"2023-03-26"},{"lineNumber":968,"author":{"gitId":"dunliang0513"},"content":"- [Name](#name)","lastModifiedDate":"2023-03-26"},{"lineNumber":969,"author":{"gitId":"dunliang0513"},"content":"- [NOTES (Placeholder)](#notes-placeholder)","lastModifiedDate":"2023-03-26"},{"lineNumber":970,"author":{"gitId":"dunliang0513"},"content":"- [Notes](#notes)","lastModifiedDate":"2023-03-26"},{"lineNumber":971,"author":{"gitId":"dunliang0513"},"content":"- [Operating System (OS)](#operating-system)","lastModifiedDate":"2023-03-26"},{"lineNumber":972,"author":{"gitId":"dunliang0513"},"content":"- [Output](#output)","lastModifiedDate":"2023-03-26"},{"lineNumber":973,"author":{"gitId":"dunliang0513"},"content":"- [Parameter](#parameter)","lastModifiedDate":"2023-03-26"},{"lineNumber":974,"author":{"gitId":"dunliang0513"},"content":"- [PHONE_NUMBER (Placeholder)](#phonenumber-placeholder)","lastModifiedDate":"2023-03-26"},{"lineNumber":975,"author":{"gitId":"dunliang0513"},"content":"- [Phone Number](#phone-number)","lastModifiedDate":"2023-03-26"},{"lineNumber":976,"author":{"gitId":"dunliang0513"},"content":"- [Placeholder](#placeholder)","lastModifiedDate":"2023-03-26"},{"lineNumber":977,"author":{"gitId":"dunliang0513"},"content":"- [STATUS (Placeholder)](#status-placeholder)","lastModifiedDate":"2023-03-26"},{"lineNumber":978,"author":{"gitId":"dunliang0513"},"content":"- [Status](#status)","lastModifiedDate":"2023-03-26"},{"lineNumber":979,"author":{"gitId":"dunliang0513"},"content":"- [Syntax](#syntax)","lastModifiedDate":"2023-03-26"},{"lineNumber":980,"author":{"gitId":"dunliang0513"},"content":"- [URL](#url)","lastModifiedDate":"2023-03-26"},{"lineNumber":981,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":982,"author":{"gitId":"FredericChow00"},"content":"---","lastModifiedDate":"2023-03-28"},{"lineNumber":983,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":984,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":985,"author":{"gitId":"dunliang0513"},"content":"### A","lastModifiedDate":"2023-03-20"},{"lineNumber":986,"author":{"gitId":"dunliang0513"},"content":"\u003e #### ADDRESS Placeholder","lastModifiedDate":"2023-03-26"},{"lineNumber":987,"author":{"gitId":"dunliang0513"},"content":"\u003e The ADDRESS is a text representing the address of the applicants.","lastModifiedDate":"2023-03-20"},{"lineNumber":988,"author":{"gitId":"dunliang0513"},"content":"\u003e \u003cbr\u003eTo view more information (limitations, examples, etc.), refer to the [Placeholder](#524-placeholders) table.","lastModifiedDate":"2023-03-28"},{"lineNumber":989,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Address","lastModifiedDate":"2023-03-20"},{"lineNumber":990,"author":{"gitId":"dunliang0513"},"content":"\u003e The address of the applicant provided by the user.","lastModifiedDate":"2023-03-20"},{"lineNumber":991,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Admonitions","lastModifiedDate":"2023-03-20"},{"lineNumber":992,"author":{"gitId":"dunliang0513"},"content":"\u003e Admonition boxes (or simply “admonitions”) are coloured boxes containing highlighted pieces of text.","lastModifiedDate":"2023-03-20"},{"lineNumber":993,"author":{"gitId":"dunliang0513"},"content":"\u003e \u003cbr\u003eFor details on various type of admonitions used in HMHero, refer to the [Admonitions Boxes](#31-admonition-boxes) section of the User Guide","lastModifiedDate":"2023-03-28"},{"lineNumber":994,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Applicant","lastModifiedDate":"2023-03-20"},{"lineNumber":995,"author":{"gitId":"dunliang0513"},"content":"\u003e The person who apply to the company for the job.","lastModifiedDate":"2023-03-20"},{"lineNumber":996,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Applicant List Box","lastModifiedDate":"2023-03-28"},{"lineNumber":997,"author":{"gitId":"dunliang0513"},"content":"\u003e The region located at the bottom left of the HMHero\u0027s main window.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":998,"author":{"gitId":"dunliang0513"},"content":"\u003e To view more information, refer to the [User Interface](#51-user-interface) section of the User Guide","lastModifiedDate":"2023-03-28"},{"lineNumber":999,"author":{"gitId":"FredericChow00"},"content":"\u003e #### Application Cycle","lastModifiedDate":"2023-03-28"},{"lineNumber":1000,"author":{"gitId":"FredericChow00"},"content":"\u003e All applicants added are at the Applied status by default. From there, hiring managers can advance their application status to Shortlisted, then to Accepted. Applicants can be rejected at any stage.","lastModifiedDate":"2023-03-28"},{"lineNumber":1001,"author":{"gitId":"FredericChow00"},"content":"![Application Cycle](images/application_stage.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":1002,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":1003,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":1004,"author":{"gitId":"dunliang0513"},"content":"### C","lastModifiedDate":"2023-03-20"},{"lineNumber":1005,"author":{"gitId":"dunliang0513"},"content":"\u003e #### COMMAND_WORD Placeholder","lastModifiedDate":"2023-03-26"},{"lineNumber":1006,"author":{"gitId":"dunliang0513"},"content":"\u003e The COMMAND_WORD is a text indicating a command word of a command","lastModifiedDate":"2023-03-20"},{"lineNumber":1007,"author":{"gitId":"dunliang0513"},"content":"\u003e \u003cbr\u003eTo view more information (limitations, examples, etc.), refer to the [Placeholder](#524-placeholders) table.","lastModifiedDate":"2023-03-28"},{"lineNumber":1008,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Command","lastModifiedDate":"2023-03-20"},{"lineNumber":1009,"author":{"gitId":"dunliang0513"},"content":"\u003e A feature or function that HMHero can perform.","lastModifiedDate":"2023-03-20"},{"lineNumber":1010,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Command Input Box","lastModifiedDate":"2023-03-28"},{"lineNumber":1011,"author":{"gitId":"dunliang0513"},"content":"\u003e The region located at the top left of the HMHero\u0027s main window.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1012,"author":{"gitId":"dunliang0513"},"content":"\u003e To view more information, refer to the [User Interface](#51-user-interface) section of the User Guide","lastModifiedDate":"2023-03-28"},{"lineNumber":1013,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Command Line ","lastModifiedDate":"2023-03-26"},{"lineNumber":1014,"author":{"gitId":"dunliang0513"},"content":"\u003e The typing interface that you use to interact with HMHero. It is represented as the box where you type in commands.","lastModifiedDate":"2023-03-20"},{"lineNumber":1015,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Command Output Box","lastModifiedDate":"2023-03-28"},{"lineNumber":1016,"author":{"gitId":"dunliang0513"},"content":"\u003e The region located at the right half of the HMHero\u0027s main window. \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1017,"author":{"gitId":"dunliang0513"},"content":"\u003e To view more information, refer to the [User Interface](#51-user-interface) section of the User Guide","lastModifiedDate":"2023-03-28"},{"lineNumber":1018,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":1019,"author":{"gitId":"dunliang0513"},"content":"### E","lastModifiedDate":"2023-03-20"},{"lineNumber":1020,"author":{"gitId":"dunliang0513"},"content":"\u003e #### EMAIL Placeholder","lastModifiedDate":"2023-03-26"},{"lineNumber":1021,"author":{"gitId":"dunliang0513"},"content":"\u003e The EMAIL is a text representing the email address of the applicants.","lastModifiedDate":"2023-03-20"},{"lineNumber":1022,"author":{"gitId":"dunliang0513"},"content":"\u003e \u003cbr\u003eTo view more information (limitations, examples, etc.), refer to the [Placeholder](#524-placeholders) table.","lastModifiedDate":"2023-03-28"},{"lineNumber":1023,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Email","lastModifiedDate":"2023-03-20"},{"lineNumber":1024,"author":{"gitId":"dunliang0513"},"content":"\u003e The email address of the applicant provided by the user.","lastModifiedDate":"2023-03-20"},{"lineNumber":1025,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":1026,"author":{"gitId":"dunliang0513"},"content":"### F","lastModifiedDate":"2023-03-20"},{"lineNumber":1027,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Flags","lastModifiedDate":"2023-03-20"},{"lineNumber":1028,"author":{"gitId":"dunliang0513"},"content":"\u003e A marker to identify the type of input by the user. For instance, in `n/NAME`, `n/` is the flag.","lastModifiedDate":"2023-03-20"},{"lineNumber":1029,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":1030,"author":{"gitId":"dunliang0513"},"content":"### G","lastModifiedDate":"2023-03-20"},{"lineNumber":1031,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Graphical User Interface","lastModifiedDate":"2023-03-26"},{"lineNumber":1032,"author":{"gitId":"dunliang0513"},"content":"\u003e A Graphical User Interface is a graphics-based interface that uses icons, menus and a mouse (to click on the icon or pull down the menus) to manage interaction with the system. In HMHero, this presents as the window that appears when launching it.","lastModifiedDate":"2023-03-20"},{"lineNumber":1033,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":1034,"author":{"gitId":"dunliang0513"},"content":"### H","lastModifiedDate":"2023-03-20"},{"lineNumber":1035,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Help Window","lastModifiedDate":"2023-03-20"},{"lineNumber":1036,"author":{"gitId":"dunliang0513"},"content":"\u003e A pop-up window containing help information, shown only after calling a \u003ckbd\u003ehelp\u003c/kbd\u003e command.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1037,"author":{"gitId":"dunliang0513"},"content":"\u003e To view more information, refer to the [User Interface](#51-user-interface) section of the User Guide","lastModifiedDate":"2023-03-28"},{"lineNumber":1038,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Hiring Manager","lastModifiedDate":"2023-03-20"},{"lineNumber":1039,"author":{"gitId":"dunliang0513"},"content":"\u003e A person responsible for overseeing the recruitment process within an organization, from identifying staffing needs to making hiring decisions.","lastModifiedDate":"2023-03-20"},{"lineNumber":1040,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":1041,"author":{"gitId":"dunliang0513"},"content":"### I","lastModifiedDate":"2023-03-20"},{"lineNumber":1042,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Input","lastModifiedDate":"2023-03-20"},{"lineNumber":1043,"author":{"gitId":"dunliang0513"},"content":"\u003e The text that a user would enter into HMHero","lastModifiedDate":"2023-03-20"},{"lineNumber":1044,"author":{"gitId":"dunliang0513"},"content":"\u003e #### INTERVIEW_DATE Placeholder","lastModifiedDate":"2023-03-26"},{"lineNumber":1045,"author":{"gitId":"dunliang0513"},"content":"\u003e The INTERVIEW_DATE is the date indicating when the applicant is having his/her interview.","lastModifiedDate":"2023-03-20"},{"lineNumber":1046,"author":{"gitId":"dunliang0513"},"content":"\u003e \u003cbr\u003eTo view more information (limitations, examples, etc.), refer to the [Placeholder](#524-placeholders) table.","lastModifiedDate":"2023-03-28"},{"lineNumber":1047,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Interview Date","lastModifiedDate":"2023-03-20"},{"lineNumber":1048,"author":{"gitId":"dunliang0513"},"content":"\u003e Date where applicants are going to have their interviews. Interview date is in the format \"day-month-year hour:minute\", represented in the \"DD-MM-YYYY HH:MM\" format.","lastModifiedDate":"2023-03-20"},{"lineNumber":1049,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":1050,"author":{"gitId":"dunliang0513"},"content":"### K","lastModifiedDate":"2023-03-20"},{"lineNumber":1051,"author":{"gitId":"dunliang0513"},"content":"\u003e #### KEYWORD Placeholder","lastModifiedDate":"2023-03-26"},{"lineNumber":1052,"author":{"gitId":"dunliang0513"},"content":"\u003e The KEYWORD is the text we use search for an item. It can be `NAME` or `PHONE_NUMBER` of the applicant.","lastModifiedDate":"2023-03-20"},{"lineNumber":1053,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":1054,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1055,"author":{"gitId":"dunliang0513"},"content":"### N","lastModifiedDate":"2023-03-20"},{"lineNumber":1056,"author":{"gitId":"dunliang0513"},"content":"\u003e #### NAME Placeholder","lastModifiedDate":"2023-03-26"},{"lineNumber":1057,"author":{"gitId":"dunliang0513"},"content":"\u003e The NAME is a text representing the name of the applicants.","lastModifiedDate":"2023-03-20"},{"lineNumber":1058,"author":{"gitId":"dunliang0513"},"content":"\u003e \u003cbr\u003eTo view more information (limitations, examples, etc.), refer to the [Placeholder](#524-placeholders) table.","lastModifiedDate":"2023-03-28"},{"lineNumber":1059,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Name","lastModifiedDate":"2023-03-20"},{"lineNumber":1060,"author":{"gitId":"dunliang0513"},"content":"\u003e The name of the applicant provided by the user.","lastModifiedDate":"2023-03-20"},{"lineNumber":1061,"author":{"gitId":"dunliang0513"},"content":"\u003e #### NOTES Placeholder","lastModifiedDate":"2023-03-26"},{"lineNumber":1062,"author":{"gitId":"dunliang0513"},"content":"\u003e The NOTES are some texts that use to represent the skill set of the applicants.","lastModifiedDate":"2023-03-20"},{"lineNumber":1063,"author":{"gitId":"dunliang0513"},"content":"\u003e \u003cbr\u003eTo view more information (limitations, examples, etc.), refer to the [Placeholder](#524-placeholders) table.","lastModifiedDate":"2023-03-28"},{"lineNumber":1064,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Notes","lastModifiedDate":"2023-03-20"},{"lineNumber":1065,"author":{"gitId":"dunliang0513"},"content":"\u003e The skill set the applicant possesses provided by the user.","lastModifiedDate":"2023-03-20"},{"lineNumber":1066,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":1067,"author":{"gitId":"dunliang0513"},"content":"### O","lastModifiedDate":"2023-03-20"},{"lineNumber":1068,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Operating System","lastModifiedDate":"2023-03-26"},{"lineNumber":1069,"author":{"gitId":"dunliang0513"},"content":"\u003e Is a software program that manages computer hardware and software resources, and provides common services for computer programs to run and interact with the computer hardware.","lastModifiedDate":"2023-03-20"},{"lineNumber":1070,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Output","lastModifiedDate":"2023-03-20"},{"lineNumber":1071,"author":{"gitId":"dunliang0513"},"content":"\u003e The result after calling a Command. Results are displayed in the GUI.","lastModifiedDate":"2023-03-20"},{"lineNumber":1072,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":1073,"author":{"gitId":"dunliang0513"},"content":"### P","lastModifiedDate":"2023-03-20"},{"lineNumber":1074,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Parameter","lastModifiedDate":"2023-03-20"},{"lineNumber":1075,"author":{"gitId":"dunliang0513"},"content":"\u003e Values that are passed while calling the Commands. For instance, when calling `find n/NAME`, parameter here is `n/NAME`.","lastModifiedDate":"2023-03-20"},{"lineNumber":1076,"author":{"gitId":"dunliang0513"},"content":"\u003e #### PHONE_NUMBER Placeholder","lastModifiedDate":"2023-03-26"},{"lineNumber":1077,"author":{"gitId":"dunliang0513"},"content":"\u003e The PHONE_NUMBER is an integer representing the phone number of the applicant.","lastModifiedDate":"2023-03-20"},{"lineNumber":1078,"author":{"gitId":"dunliang0513"},"content":"\u003e \u003cbr\u003eTo view more information (limitations, examples, etc.), refer to the [Placeholder](#524-placeholders) table.","lastModifiedDate":"2023-03-28"},{"lineNumber":1079,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Phone Number","lastModifiedDate":"2023-03-20"},{"lineNumber":1080,"author":{"gitId":"dunliang0513"},"content":"\u003e The phone number of the applicant provided by the user.","lastModifiedDate":"2023-03-20"},{"lineNumber":1081,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Placeholder","lastModifiedDate":"2023-03-20"},{"lineNumber":1082,"author":{"gitId":"dunliang0513"},"content":"\u003e Placeholders in HMHero refers to the UPPER_CASE words that appear after the flags in commands that is provided by the user. For instance, `n/NAME`, `NAME` is a placeholder","lastModifiedDate":"2023-03-20"},{"lineNumber":1083,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":1084,"author":{"gitId":"dunliang0513"},"content":"### S","lastModifiedDate":"2023-03-20"},{"lineNumber":1085,"author":{"gitId":"dunliang0513"},"content":"\u003e #### STATUS Placeholder","lastModifiedDate":"2023-03-26"},{"lineNumber":1086,"author":{"gitId":"dunliang0513"},"content":"\u003e The STATUS is a text that represent the current state of the applicant.","lastModifiedDate":"2023-03-20"},{"lineNumber":1087,"author":{"gitId":"dunliang0513"},"content":"\u003e \u003cbr\u003eTo view more information (limitations, examples, etc.), refer to the [Placeholder](#524-placeholders) table.","lastModifiedDate":"2023-03-28"},{"lineNumber":1088,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Status","lastModifiedDate":"2023-03-20"},{"lineNumber":1089,"author":{"gitId":"dunliang0513"},"content":"\u003e Status has four stages, which are APPLIED, SHORTLISTED, ACCEPTED and REJECTED. Status can only be modified by using \u003ckbd\u003eadvance\u003c/kbd\u003e or \u003ckbd\u003ereject\u003c/kbd\u003e command.","lastModifiedDate":"2023-03-20"},{"lineNumber":1090,"author":{"gitId":"dunliang0513"},"content":"\u003e #### Syntax","lastModifiedDate":"2023-03-20"},{"lineNumber":1091,"author":{"gitId":"dunliang0513"},"content":"\u003e The structure of statements/inputs users type into the Command Line.","lastModifiedDate":"2023-03-20"},{"lineNumber":1092,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":1093,"author":{"gitId":"dunliang0513"},"content":"### U","lastModifiedDate":"2023-03-20"},{"lineNumber":1094,"author":{"gitId":"dunliang0513"},"content":"\u003e #### URL","lastModifiedDate":"2023-03-20"},{"lineNumber":1095,"author":{"gitId":"dunliang0513"},"content":"\u003e A hyperlink to a website.","lastModifiedDate":"2023-03-20"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1097,"author":{"gitId":"dunliang0513"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":1098,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":1099,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-03-25"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"dunliang0513":240,"bofeng1999":386,"FredericChow00":227,"Jxleejiaxin":36,"Merrickneo":91,"-":120}},{"path":"docs/_ug/QuickStart.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"## How to use this Guide","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"This User Guide is split into various sections, and we advise you to read through this in sequential order!","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"If you have not downloaded `HMHero` feel free to head to the [Installation](#3-installation) section.","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"After installation, head on to the [Quick Reference](#quick-reference-guide) section to get an overview of `HMHero`.","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"This includes:","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"* The [user interface]() of HMHero","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"* How each `Applicant` is represented","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"* HMHero\u0027s Command Format","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"* Trying out your very first HMHero command","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"For advanced users, feel free to refer to [Command Summary]() to get an overview the commands HMHero supports.","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"If you are stuck, head over to the [Troubleshooting]() section to get help.","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"You can also refer to [Glossary]() to familarise yourself with some commonly used terms in HMHero.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"---","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"## Getting started","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"## 3. Installation","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"If you haven\u0027t installed [HMHero](https://github.com/AY2223S2-CS2103T-W14-4/tp), simply follow these steps to set it up:","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"1. Download and install [Java 11](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html)","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"2. Download the latest `HMHero.jar` from our release page","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"3. Save the file to an empty folder. This will be your home folder for `HMHero`","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"4. Double-click on the jar file to launch `HMHero`","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"\u003e 🚨 Note:","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"Remember to add `HMHero.jar` into an empty folder as additional data and configuration files will be created when launching `HMHero` first the first time!","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"\u003e ⚠️Alert: A folder `data` which contains data for applicants will be created when running `HMHero.jar`. Do not edit this file directly unless you know what you are doing.","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"## Quick Reference Guide","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"### 4. How to make use of this guide?","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"---","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Merrickneo":42}},{"path":"docs/diagrams/AddApplicantActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jxleejiaxin"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"Jxleejiaxin"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"Jxleejiaxin"},"content":"start","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"Jxleejiaxin"},"content":":User enters add command;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"if () then ([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":"  :Error: Invalid command format;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"  stop","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"Jxleejiaxin"},"content":"( [Compulsory fields are provided]) elseif () then ([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"Jxleejiaxin"},"content":"  :Error: Invalid arguments;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"Jxleejiaxin"},"content":"  stop","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"Jxleejiaxin"},"content":"else ( [Arguments are valid])","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"endif","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"Jxleejiaxin"},"content":"if () is ([Application date time provided]) then","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"if () then ([else])","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":":Error: Application date time cannot be in the future;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"stop","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"else ([Date time is valid])","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":":Use given date time;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"endif","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Jxleejiaxin"},"content":"else ([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"Jxleejiaxin"},"content":":Use current time as application date time;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"Jxleejiaxin"},"content":"endif","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"Jxleejiaxin"},"content":"if () is ([Applicant not duplicate]) then","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"Jxleejiaxin"},"content":"  :Add command successfully executes;","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"Jxleejiaxin"},"content":"else ([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"Jxleejiaxin"},"content":"  :Error: Duplicate applicant;","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"Jxleejiaxin"},"content":"  stop","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"Jxleejiaxin"},"content":"endif","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"Jxleejiaxin"},"content":"stop","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"Jxleejiaxin"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"Jxleejiaxin":24,"Merrickneo":7}},{"path":"docs/diagrams/AdvanceActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jxleejiaxin"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"Jxleejiaxin"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"Jxleejiaxin"},"content":"start","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"Jxleejiaxin"},"content":":User enters advance command;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"if () then ([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":"  :Error: Invalid command format;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"  stop","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"Jxleejiaxin"},"content":"([Name and phone provided]) elseif () then ([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"Jxleejiaxin"},"content":"  :Error: Applicant cannot be found;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"Jxleejiaxin"},"content":"  stop","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"Jxleejiaxin"},"content":"([Applicant exists]) elseif () then ([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"    :Error: Applicant cannot be advanced;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"Jxleejiaxin"},"content":"    stop","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"Jxleejiaxin"},"content":"else ( [APPLIED or SHORTLISTED applicant])","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"endif","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"Jxleejiaxin"},"content":"if () then ([APPLIED])","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"    if () then ([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"Jxleejiaxin"},"content":"        :Error: Invalid argument;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":"        stop","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"Jxleejiaxin"},"content":"    ([Interview date time given]) elseif () then ([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"Jxleejiaxin"},"content":"        :Error: Duplicate interview date time;","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"Jxleejiaxin"},"content":"        stop","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"Jxleejiaxin"},"content":"    else ([Interview date time not duplicate])","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"Jxleejiaxin"},"content":"        :Advance command successfully executes;","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"Jxleejiaxin"},"content":"        stop","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"Jxleejiaxin"},"content":"endif","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"Jxleejiaxin"},"content":"else ([SHORTLISTED])","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"Jxleejiaxin"},"content":"if () then ([Interview date","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"Jxleejiaxin"},"content":"time given])","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"Jxleejiaxin"},"content":"    :Error: Interview date time not required;","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"Jxleejiaxin"},"content":"    stop","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"Jxleejiaxin"},"content":"else ([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"    :Advance command successfully executes;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Jxleejiaxin"},"content":"    stop","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"Jxleejiaxin"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"Jxleejiaxin":34,"Merrickneo":1}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"user -[USER_COLOR]\u003e ui : \"delete n/Alex p/91234567\"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete n/Alex p/91234567\")","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveHMHero(hmHero)","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dunliang0513":3,"-":35}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"HMHero *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"HMHero *-right-\u003e \"1\" UniqueNoteList","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"UniqueNoteList -[hidden]down- UniquePersonList","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"UniqueNoteList -right-\u003e \"*\" Note","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"Person -up-\u003e \"*\" Note","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Merrickneo":5,"-":15}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"participant \":HMHeroParser\" as HMHeroParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"[-\u003e LogicManager : execute(\"delete n/John p/91234567\")","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"LogicManager -\u003e HMHeroParser : parseCommand(\"delete n/John p/91234567\")","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"activate HMHeroParser","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"HMHeroParser -\u003e DeleteCommandParser : DeleteCommandParser()","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"DeleteCommandParser --\u003e HMHeroParser","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"HMHeroParser -\u003e DeleteCommandParser : parse(\"delete n/John p/91234567\")","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"DeleteCommandParser -\u003e DeleteCommand : DeleteCommand(\"John\", 91234567)","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"DeleteCommandParser --\u003e HMHeroParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"DeleteCommandParser -[hidden]-\u003e HMHeroParser","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"HMHeroParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"deactivate HMHeroParser","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"DeleteCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"DeleteCommand -\u003e Model : deletePerson(p)","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"DeleteCommand -\u003e CommandResult : CommandResult()","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Merrickneo":18,"-":57}},{"path":"docs/diagrams/EditApplicantActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"start","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":":User enters advance command;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"if () then ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"  :Error: Invalid command format;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"  stop","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"([Name and phone provided]) elseif () then ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"  :Error: Applicant cannot be found;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"  stop","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"([Applicant exists]) elseif () then ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    :Error: Applicant cannot be advanced;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    stop","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"else ( [APPLIED or SHORTLISTED applicant])","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"endif","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"if () then ([APPLIED])","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    if () then ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"        :Error: Invalid argument;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"        stop","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    ([Interview date time given]) elseif () then ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"        :Error: Duplicate interview date time;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"        stop","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    else ([Interview date time not duplicate])","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        :Advance command successfully executes;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"        stop","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"endif","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"else ([SHORTLISTED])","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"if () then ([Interview date","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"time given])","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    :Error: Interview date time not required;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    stop","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"else ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"    :Advance command successfully executes;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    stop","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"@enduml","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Merrickneo":36}},{"path":"docs/diagrams/FindCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jxleejiaxin"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"Jxleejiaxin"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"Jxleejiaxin"},"content":"start","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":":User enters find command;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":"if () then ([Name flag","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"present])","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"Jxleejiaxin"},"content":"    :Create Name Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"else([else])","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Jxleejiaxin"},"content":"endif","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"Jxleejiaxin"},"content":"if () then ([Phone flag","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"present])","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"Jxleejiaxin"},"content":"    :Create Phone Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"else([else])","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"endif","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"if () then ([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"Jxleejiaxin"},"content":":Apply logical AND to all existing Predicates;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":":Find command successfully executes;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"Jxleejiaxin"},"content":"stop","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"Jxleejiaxin"},"content":"else ([No flag present])","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"Jxleejiaxin"},"content":":Error: Invalid command format;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"Jxleejiaxin"},"content":"stop","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"Jxleejiaxin"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"Jxleejiaxin":22,"Merrickneo":2}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jxleejiaxin"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Jxleejiaxin"},"content":"!include style.puml","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Jxleejiaxin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":"participant \":HMHeroParser\" as HMHeroParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Jxleejiaxin"},"content":"participant \":FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Jxleejiaxin"},"content":"participant \"predicate:NameContainsKeywordsPredicate\" as NameContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Jxleejiaxin"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Jxleejiaxin"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Jxleejiaxin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Jxleejiaxin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"[-\u003e LogicManager : execute(\"find n/John\")","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Jxleejiaxin"},"content":"activate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Jxleejiaxin"},"content":"LogicManager -\u003e HMHeroParser : parseCommand(\"find n/John\")","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Jxleejiaxin"},"content":"activate HMHeroParser","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Jxleejiaxin"},"content":"create FindCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Jxleejiaxin"},"content":"HMHeroParser -\u003e FindCommandParser : FindCommandParser","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"Jxleejiaxin"},"content":"activate FindCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Jxleejiaxin"},"content":"FindCommandParser --\u003e HMHeroParser","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Jxleejiaxin"},"content":"deactivate FindCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Jxleejiaxin"},"content":"HMHeroParser -\u003e FindCommandParser : parse(\"n/John\")","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Jxleejiaxin"},"content":"activate FindCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Jxleejiaxin"},"content":"create NameContainsKeywordsPredicate","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Jxleejiaxin"},"content":"FindCommandParser -\u003e NameContainsKeywordsPredicate : NameContainsKeywordsPredicate","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"Jxleejiaxin"},"content":"activate NameContainsKeywordsPredicate","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Jxleejiaxin"},"content":"NameContainsKeywordsPredicate --\u003e FindCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Jxleejiaxin"},"content":"deactivate NameContainsKeywordsPredicate","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Jxleejiaxin"},"content":"create FindCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Jxleejiaxin"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(predicate)","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"Jxleejiaxin"},"content":"activate FindCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Jxleejiaxin"},"content":"FindCommand --\u003e FindCommandParser :","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Jxleejiaxin"},"content":"deactivate FindCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Jxleejiaxin"},"content":"FindCommandParser --\u003e HMHeroParser :","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Jxleejiaxin"},"content":"deactivate FindCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Jxleejiaxin"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Jxleejiaxin"},"content":"FindCommandParser -[hidden]-\u003e HMHeroParser","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Jxleejiaxin"},"content":"destroy FindCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Jxleejiaxin"},"content":"HMHeroParser --\u003e LogicManager :","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Jxleejiaxin"},"content":"deactivate HMHeroParser","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"Jxleejiaxin"},"content":"LogicManager -\u003e FindCommand : execute(model)","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"Jxleejiaxin"},"content":"activate FindCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Jxleejiaxin"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"Jxleejiaxin"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"Jxleejiaxin"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Jxleejiaxin"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Jxleejiaxin"},"content":"FindCommand -\u003e Model : getFilteredPersonList().size()","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Jxleejiaxin"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Jxleejiaxin"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Jxleejiaxin"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Jxleejiaxin"},"content":"create CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"Jxleejiaxin"},"content":"FindCommand -\u003e CommandResult : CommandResult","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"Jxleejiaxin"},"content":"activate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"Jxleejiaxin"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"Jxleejiaxin"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"Jxleejiaxin"},"content":"FindCommand --\u003e LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"Jxleejiaxin"},"content":"deactivate FindCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"Jxleejiaxin"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"Jxleejiaxin"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"Jxleejiaxin"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Jxleejiaxin":83}},{"path":"docs/diagrams/ListActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"start","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":":User executes list command;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":":HMHero shows all applicants;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"stop","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Merrickneo":6}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"Class HMHeroParser","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as logic","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"HiddenOutside ..\u003e logic","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"LogicManager .right.|\u003e logic","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"LogicManager -right-\u003e\"1\" HMHeroParser","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"HMHeroParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"logic ..\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Merrickneo":7,"-":39}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyHMHero\" as ReadOnlyHMHero","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as model","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"Class HMHero","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"Class Notes","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"Class ApplicationDateTime","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"Class \"Optional\u003cInterviewDateTime\u003e\\n\" as datetime","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"HiddenOutside ..\u003e model","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"HMHero .up.|\u003e ReadOnlyHMHero","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"ModelManager .up.|\u003e model","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"model .left.\u003e ReadOnlyHMHero","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"ModelManager -left-\u003e \"1\" HMHero","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"HMHero *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"UniquePersonList -left-\u003e \"~* all\" Person","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"Person *-\u003e datetime","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"Person *--\u003e \"*\" Notes","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"Person *--\u003e ApplicationDateTime","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Merrickneo":18,"-":36}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"Class HMHeroParser","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"HiddenOutside ..\u003e HMHeroParser","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"HMHeroParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"HMHeroParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"Merrickneo":4,"-":34}},{"path":"docs/diagrams/RejectApplicantActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"start","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":":User enters reject command;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"if () then ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"    :Error: Invalid command format;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"    stop","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"([Name and phone provided]) elseif () then ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"    :Error: Applicant cannot be found;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"    stop","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"else ([Applicant is found])","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    if () then ([Applicant not rejected yet])","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    :Reject command successfully executes;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    stop","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"    else ([else])","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    :Error: Applicant is already rejected;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    stop;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"endif","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Merrickneo":20}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as storage","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"package \"HMHero Storage\" #F4F6F6{","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nHMHeroStorage\" as HMHeroStorage","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"Class JsonHMHeroStorage","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"Class JsonSerializableHMHero","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"Class JsonAdaptedNote","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"HiddenOutside ..\u003e storage","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"StorageManager .up.|\u003e storage","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"StorageManager -up-\u003e \"1\" HMHeroStorage","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"storage -right-|\u003e HMHeroStorage","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"JsonHMHeroStorage .up.|\u003e HMHeroStorage","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"JsonHMHeroStorage ..\u003e JsonSerializableHMHero","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"JsonSerializableHMHero --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedNote","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dunliang0513":3,"Merrickneo":12,"-":28}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"abp -\u003e ecp : EditCommandParser()","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"Merrickneo":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"title: HMHero","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W14-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W14-4/tp/)","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"![Ui](images/ui.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"* This is a product for **Hiring Managers**.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"  Example usages:","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"    * as an application to easily track different statuses of the applicants\u0027 application.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"* The project simulates an ongoing software project for a desktop application (called HMHero) used for managing details and status for applicants.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"    * It is **written in OOP fashion**. It provides a **reasonably well-written** code based **bigger** on the original project AB3.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"    * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"* It is named `HMHero v1.1` because it was initially created as a part of a series of `HMHero` projects (`v1.1`, `v1.2`, `v1.3` ...).","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"* For the detailed documentation of this project, see the **[HMHero Product Website](https://ay2223s2-cs2103t-w14-4.github.io/tp/)**.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"* This project is based on the AddressBook-Level3 project create","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"FredericChow00":12,"-":6}},{"path":"docs/team/bofeng1999.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bofeng1999"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bofeng1999"},"content":"title: \u003cLi Bo Feng\u003e Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bofeng1999"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bofeng1999"},"content":"### Project: HMHero","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bofeng1999"},"content":"### What should be included","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bofeng1999"},"content":"- [x] Code contributed","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bofeng1999"},"content":"- [x] Enhancements implemented","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bofeng1999"},"content":"- [x] Contributions to the UG (Optional)","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bofeng1999"},"content":"- [x] Contributions to the DG (Optional)","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bofeng1999"},"content":"- [x] Contributions to team-based tasks","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bofeng1999"},"content":"- [x] Review/mentoring contributions","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bofeng1999"},"content":"- [x] Contributions beyond the project team","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bofeng1999"},"content":"(**Overview**)","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bofeng1999"},"content":"- HMHero helps Hiring Managers track the statuses of candidates\u0027 applications","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bofeng1999"},"content":"(**Summary of Contributions**)","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bofeng1999"},"content":"- Implemented `NamePhoneNumberPredicate` class to allow `advance`, `reject` and `find` features to access the Applicant ","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bofeng1999"},"content":"  by the `name` and `phone`","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bofeng1999"},"content":"Example Input: `advance n/John Doe p/91918153`,","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bofeng1999"},"content":"\u003eOriginal List:","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"bofeng1999"},"content":"Here are the list of all applicants:","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"bofeng1999"},"content":"1. John Doe (Applied) 91918153 ","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"bofeng1999"},"content":"2. Jane Doe (Shortlisted) 98762345","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"bofeng1999"},"content":"3. Joe Doe (Accepted) 91234321","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"bofeng1999"},"content":"Example Output:","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bofeng1999"},"content":"Successfully advanced John Doe","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"bofeng1999"},"content":"Here are the list of all applicants:","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"bofeng1999"},"content":"1. John Doe (Shortlisted) 91918153 ","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"bofeng1999"},"content":"2. Jane Doe (Accepted) 98762345","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"bofeng1999"},"content":"- Implemented `advance` feature to advance applicants\u0027 status from `Applied` -\u003e `Shorlisted` and ","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"bofeng1999"},"content":"  `Shorlisted` -\u003e `Accepted` to be tracked in HMHero","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"bofeng1999"},"content":"Example Input: `advance n/John Doe p/91918153`, ","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"bofeng1999"},"content":"                `advance n/Jane Doe p/98762345`","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"bofeng1999"},"content":"\u003eOriginal List:","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"bofeng1999"},"content":"Here are the list of all applicants:","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"bofeng1999"},"content":"1. John Doe (Applied) 91918153 ","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"bofeng1999"},"content":"2. Jane Doe (Shortlisted) 98762345","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"bofeng1999"},"content":"3. Joe Doe (Accepted) 91234321","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"bofeng1999"},"content":"Example Output:","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"bofeng1999"},"content":"Successfully advanced John Doe","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"bofeng1999"},"content":"Successfully advanced Jane Done","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"bofeng1999"},"content":"Here are the list of all applicants:","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"bofeng1999"},"content":"1. John Doe (Shortlisted) 91918153 ","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"bofeng1999"},"content":"2. Jane Doe (Accepted) 98762345","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"bofeng1999"},"content":"- Implemented `reject` feature to reject applicants\u0027 status from `Applied`, `Shorlisted` and `Accpted` to `Rejected`","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"bofeng1999"},"content":"  to be tracked in HMHero","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"bofeng1999"},"content":"Example Input: `reject n/John Doe p/91918153`, ","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"bofeng1999"},"content":"                `reject n/Jane Doe p/98762345`,","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"bofeng1999"},"content":"                `reject n/Joe Doe p/91234321`","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"bofeng1999"},"content":"\u003eOriginal List:","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"bofeng1999"},"content":"Here are the list of all applicants:","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"bofeng1999"},"content":"1. John Doe (Applied) 91918153 ","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"bofeng1999"},"content":"2. Jane Doe (Shortlisted) 98762345","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"bofeng1999"},"content":"3. Joe Doe (Accepted) 91234321","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"bofeng1999"},"content":"Example Output:","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"bofeng1999"},"content":"Successfully rejected John Doe","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"bofeng1999"},"content":"Successfully rejected Jane Doe","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"bofeng1999"},"content":"Successfully rejected Joe Doe","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"bofeng1999"},"content":"Here are the list of all applicants:","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"bofeng1999"},"content":"1. John Doe (Rejected) 91918153 ","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"bofeng1999"},"content":"2. Jane Doe (Rejected) 98762345","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"bofeng1999"},"content":"3. Joe Doe (Rejected) 91234321","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"bofeng1999"},"content":"```","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"bofeng1999"},"content":"(**Code contributions**)","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"bofeng1999"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dbofeng1999\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"bofeng1999"},"content":"- **Project management**:","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"bofeng1999"},"content":"  - Helped teammates on debugging to ensure that everyone is on task.","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"bofeng1999"},"content":"(**Enhancements implemented**)","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"bofeng1999"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"bofeng1999"},"content":"- Enhanced the `FindCommand` to check the `equals` method to return true when `namePredicate`, `phonePredicate`,","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"bofeng1999"},"content":" `nameAndPhoneContainsKeywordsPredicate` returns true if both objects are null to prevent NullPointerException.","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"bofeng1999"},"content":"- Created test cases for AdvanceCommand and AdvanceCommandParser.","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"bofeng1999"},"content":"- Enhanced the `EditCommand` to allow edits on `InterviewDateTime` method.","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"bofeng1999"},"content":"- Improved test cases for EditCommand and EditCommandParser. ","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"bofeng1999"},"content":"- Enhanced the `EditCommand` and `AdvanceCommand` to check that `applicateDateTime` \u003c\u003d `interviewDateTime`.","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"bofeng1999"},"content":"- **Documentation**:","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"bofeng1999"},"content":"  - Wrote the Commands Section for UserGuide.","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"bofeng1999"},"content":"  ","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"bofeng1999"},"content":"  - Wrote the Feature Implementation Section for Developer Guide","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"bofeng1999"},"content":"- **Community**:","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"bofeng1999"},"content":"  - to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"bofeng1999"},"content":"- **Tools**:","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"bofeng1999"},"content":"  - to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"bofeng1999"},"content":"- _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bofeng1999":132}},{"path":"docs/team/dunliang0513.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"---","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"layout: page","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"title: \u003cFoo Dun Liang\u003e Project Portfolio Page","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"---","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"### Project: HMHero","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"### What should be included","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"- [x] Code contributed","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"- [x] Enhancements implemented","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"- [x] Contributions to the UG (Optional)","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"- [x] Contributions to the DG (Optional)","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"- [x] Contributions to team-based tasks","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"- [x] Review/mentoring contributions","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"- [x] Contributions beyond the project team","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"(**Overview**)","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"- HMHero helps Hiring Managers track the statuses of candidates\u0027 applications","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"(**Summary of Contributions**)","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"(**Code contributions**)","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003ddunliang0513\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"- **Project Management**","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"(**Enhancements implemented**)","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"- **Features implemented**","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"1. Implemented Find Command","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"  - Can use applicant\u0027s name or phone or both as a keyword","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"Example Input: `find n/Pauline`","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"\u003e Original List 1:","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"Listed all applicants","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"Total Applicants: 3","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"Applied: 2","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"Shortlisted: 1","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"1. Alice Pauline 91234567 (Applied)","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"2. Alex Pauline 94351253 (Shortlisted)","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"3. Joe Doe 92849104 (Applied)","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"Example Output:","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"2 persons listed!","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"dunliang0513"},"content":"1. Alice Pauline 91234567 (Applied)","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"dunliang0513"},"content":"2. Alex Pauline 94351253 (Shortlisted)","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"dunliang0513"},"content":"Example Input: `find p/91234567`","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"dunliang0513"},"content":"\u003e Original List 2:","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"dunliang0513"},"content":"Listed all applicants","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"dunliang0513"},"content":"Total Applicants: 3","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"dunliang0513"},"content":"Applied: 2","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"dunliang0513"},"content":"Shortlisted: 1","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"dunliang0513"},"content":"1. Alice Pauline 91234567 (Applied)","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"dunliang0513"},"content":"2. Alex Pauline 94351253 (Shortlisted)","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"dunliang0513"},"content":"3. Joe Doe 92849104 (Applied)","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"dunliang0513"},"content":"Example Output:","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"dunliang0513"},"content":"1 persons listed!","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"dunliang0513"},"content":"1. Alice Pauline 91234567 (Applied)","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"dunliang0513"},"content":"2. Implemented Remind Command","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"dunliang0513"},"content":"  - Remind the Hiring Manager when there is any applicant going to have interview within three days.","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"dunliang0513"},"content":"Assume current time is 22-03-2023 18:00","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"dunliang0513"},"content":"Example Input: `remind`","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"dunliang0513"},"content":"\u003e Original List 1:","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"dunliang0513"},"content":"Listed all applicants","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"dunliang0513"},"content":"Total Applicants: 3","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"dunliang0513"},"content":"Applied: 2","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"dunliang0513"},"content":"Shortlisted: 1","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"dunliang0513"},"content":"1. Alice Pauline (Applied)","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"dunliang0513"},"content":"2. Alex Pauline (Shortlisted) 24-03-2023 18:00","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"dunliang0513"},"content":"3. Joe Doe (Applied)","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"dunliang0513"},"content":"Example Output:","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"dunliang0513"},"content":"Listed all applicants that going to have interview within three days!","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"dunliang0513"},"content":"1. Alex Pauline (Shortlisted) 24-03-2023 18:00","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"dunliang0513"},"content":"\u003e Original List 2:","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"dunliang0513"},"content":"Listed all applicants","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"dunliang0513"},"content":"Total Applicants: 3","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"dunliang0513"},"content":"Applied: 2","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"dunliang0513"},"content":"Shortlisted: 1","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"dunliang0513"},"content":"1. Alice Pauline (Applied)","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"dunliang0513"},"content":"2. Alex Pauline (Shortlisted) 26-03-2023 18:00","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"dunliang0513"},"content":"3. Joe Doe (Applied)","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"dunliang0513"},"content":"Example Output 2:","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"dunliang0513"},"content":"There is no applicant having interview within three days.","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"dunliang0513"},"content":"3. Implement Skill Command","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"dunliang0513"},"content":"   - Allow hiring manager to filter the applicant using specific keywords about the skill set they are looking for.","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"dunliang0513"},"content":"   - Help hiring manager better identify candidates who are most qualified for the job.","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"dunliang0513"},"content":"     ","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"dunliang0513"},"content":"Example Input: `skill Python`","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"dunliang0513"},"content":"\u003e Original List:","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"dunliang0513"},"content":"Listed all applicants","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"dunliang0513"},"content":"Total Applicants: 3","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"dunliang0513"},"content":"Applied: 2","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"dunliang0513"},"content":"Shortlisted: 1","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"dunliang0513"},"content":"1. Alice Pauline 91234567 (Applied) [Python, Java]","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"dunliang0513"},"content":"2. Alex Tan 94351253 (Shortlisted) [Python, C++]","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"dunliang0513"},"content":"3. Joe Doe 92849104 (Applied) [Communication skill, ReactJS]","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"dunliang0513"},"content":"Example Output:","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"dunliang0513"},"content":"2 persons listed!","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"dunliang0513"},"content":"1. Alice Pauline 91234567 (Applied) [Python, Java]","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"dunliang0513"},"content":"2. Alex Tan 94351253 (Shortlisted) [Python, C++]","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"dunliang0513"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"dunliang0513"},"content":"- **Test Cases**:","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"dunliang0513"},"content":"1. Wrote test cases for RemindCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"dunliang0513"},"content":"  - Test cases that cover possible paths taken by `execute(Model)` in `RemindCommand` class","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"dunliang0513"},"content":"- **Documentation**:","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":167,"author":{"gitId":"dunliang0513"},"content":"  - User Guide","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"dunliang0513"},"content":"    - Created the template of our team User Guide","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"dunliang0513"},"content":"    - Added documentation for the Troubleshooting","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"dunliang0513"},"content":"    - Added documentation for the FAQ","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"dunliang0513"},"content":"    - Added documentation for the Glossary","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"dunliang0513"},"content":"  - Developer Guide","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"dunliang0513"},"content":"    - Added documentation and diagram for Architecture","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"dunliang0513"},"content":"    - Added documentation and diagram for Ui","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"dunliang0513"},"content":"    - Added documentation and diagram for Storage","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"dunliang0513"},"content":"    - Added documentation and diagram for Design","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":180,"author":{"gitId":"dunliang0513"},"content":"- **Community**:","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"dunliang0513"},"content":"  - Reviewed Pull Requests (PRs) made by team members","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":184,"author":{"gitId":"dunliang0513"},"content":"- **Tools**:","lastModifiedDate":"2023-03-07"},{"lineNumber":185,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":186,"author":{"gitId":"dunliang0513"},"content":"  - to be added soon","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"dunliang0513":186}},{"path":"docs/team/fredericchow00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"title: \u003cFrederic Chow\u003e Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"### Project: HMHero","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"### What should be included","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"- [x] Code contributed","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"- [x] Enhancements implemented","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"- [x] Contributions to the UG (Optional)","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"- [x] Contributions to the DG (Optional)","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"- [x] Contributions to team-based tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"- [x] Review/mentoring contributions","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"- [x] Contributions beyond the project team","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"(**Overview**)","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"- HMHero helps Hiring Managers track the statuses of candidates\u0027 applications","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"(**Summary of Contributions**)","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"(**Code contributions**)","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"- **Code contributed**: ","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"[RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dfredericchow00\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"- **Project management**:","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"  - Liaised with teammates on deadlines during meetings to ensure that everyone is on task.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"(**Enhancements implemented**)","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"- **Features implemented**","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"1. Implemented `list` feature that lists out all applicants across all statuses,","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"   with a statistic that shows the number of applicants in each status","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"Example Input: `list`","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"Example Output:","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"Here are the list of all applicants:","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"1. John Doe (Applied)","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"2. Jane Doe (Shortlisted)","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"3. Joe Doe (Accepted)","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"There are a total of 3 applicants.","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"Applied: 1","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"Shortlisted: 1","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"Accepted: 1","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"Rejected: 0","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"```","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"2. Implemented `ApplicationDateTime` class that is an additional field under Person,","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"   so as to track the date of application for usage in other commands.","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"FredericChow00"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"FredericChow00"},"content":"1. Enhanced `AdvanceCommand` and `AdvanceCommandParser` to detect when there should or should not be","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"   a need for the user to provide an interview date for the applicant when the user calls the `Advance` feature","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"FredericChow00"},"content":"\u003e Example Situation: John Doe\u0027s application status is `Applied`, so calling the `Advance` command would change","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"FredericChow00"},"content":"John Doe\u0027s status to `Shortlisted`, where an interview date is mandatory.","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"FredericChow00"},"content":"Example Input: `advance n/John Doe p/(John Doe\u0027s number)`","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"FredericChow00"},"content":"Output: `Please provide an interview date and time! (dd-MM-yyyy HH:mm)`","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"FredericChow00"},"content":"Example Input: `advance n/John Doe p/(John Doe\u0027s number) d/05-05-2023 18:00`","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"FredericChow00"},"content":"Output: `Successfully advanced John Doe`","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"FredericChow00"},"content":"\u003e Follow-up Situation: Calling `Advance` on John Doe again change John Doe\u0027s status to `Accepted` and hence, the command","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"FredericChow00"},"content":"would *NOT* require an interview date.","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"FredericChow00"},"content":"Example Input: `advance n/John Doe p/(John Doe\u0027s number) d/05-05-2023 18:00`","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"FredericChow00"},"content":"Output: `Interview date and time is not required!`","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"FredericChow00"},"content":"Example Input: `advance n/John Doe p/(John Doe\u0027s number)`","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"FredericChow00"},"content":"Output: `Successfully advanced John Doe`","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"FredericChow00"},"content":"2. Enhanced `AdvanceCommand` to detect for duplicate interview date and time when","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"FredericChow00"},"content":"advancing an applicant from `APPLIED` to `SHORTLISTED`.","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"FredericChow00"},"content":"\u003e Example Situation: There is an applicant, Jane Goh, whose status is","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"FredericChow00"},"content":"`SHORTLISTED` with the `InterviewDateTime` of `05-05-2023 18:00`.","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"FredericChow00"},"content":"Example Input: `advance n/John Doe p/(John Doe\u0027s number) d/05-05-2023 18:00`","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"FredericChow00"},"content":"Output: `There is a clash of interview date and time with Jane Goh!`","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"FredericChow00"},"content":"3. Changed GUI to make the application look nicer.","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"FredericChow00"},"content":"- **Test Cases**:","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"FredericChow00"},"content":"1. Wrote test cases for RejectCommand","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"FredericChow00"},"content":"    - Test cases that covers possible paths taken by `execute(Model model)` and","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"FredericChow00"},"content":"   `equals()` in `RejectCommand` class.","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"FredericChow00"},"content":"2. Wrote test cases for RejectCommandParser","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"FredericChow00"},"content":"    - Test cases that covers possible paths taken by `parse(String args)`","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"FredericChow00"},"content":"   in `RejectCommandParser` class.","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"FredericChow00"},"content":"- **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"FredericChow00"},"content":"  - User Guide","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"FredericChow00"},"content":"    - Added documentation for the features `list`","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"FredericChow00"},"content":"    - Added documentation for About and How to Use the User Guide.","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"FredericChow00"},"content":"  - Developer Guide","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"FredericChow00"},"content":"    - Added documentation for Product Scope and User Stories","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"FredericChow00"},"content":"    - Added documentation for Annex such as User Stories and Manual Testing.","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"FredericChow00"},"content":"- **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"FredericChow00"},"content":"  - Reviewed Pull Requests (PRs) made by team members","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"FredericChow00"},"content":"  - Ensure timely closure of milestones and issues","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"FredericChow00"},"content":"  - Set deadlines before the hard deadline so that the team does not fall behind.","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":130,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"FredericChow00":128,"Merrickneo":2}},{"path":"docs/team/jxleejiaxin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jxleejiaxin"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Jxleejiaxin"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Jxleejiaxin"},"content":"title: \u003cLee Jia Xin\u003e Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Jxleejiaxin"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":"### Project: HMHero","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Jxleejiaxin"},"content":"### What should be included","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Jxleejiaxin"},"content":"- [x] Code contirbuted","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Jxleejiaxin"},"content":"- [x] Enhancements implemented","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"- [x] Contributions to the UG (Optional)","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Jxleejiaxin"},"content":"- [x] Contributions to the DG (Optional)","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Jxleejiaxin"},"content":"- [x] Contributions to team-based tasks","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"- [x] Review/mentoring contributions","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Jxleejiaxin"},"content":"- [x] Contributions beyond the project team","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Jxleejiaxin"},"content":"(**Overview**)","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Jxleejiaxin"},"content":"- HMHero helps Hiring Managers track the statuses of candidates\u0027 applications","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Jxleejiaxin"},"content":"(**Summary of Contributions**)","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Jxleejiaxin"},"content":"(**Code contributions**)","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Jxleejiaxin"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003djxleejiaxin\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Jxleejiaxin"},"content":"- **Project management**:","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Jxleejiaxin"},"content":"  - to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Jxleejiaxin"},"content":"(**Enhancements implemented**)","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Jxleejiaxin"},"content":"- **New Features Added**:","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"Jxleejiaxin"},"content":"  - Interview Command which displays all shortlisted applicants sorted by interview date.","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"Jxleejiaxin"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Jxleejiaxin"},"content":"  - Added Status field to Person class and updating JsonAdaptedPerson.","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"Jxleejiaxin"},"content":"  - Update JsonAdaptedPerson for all subsequent fields added.","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Jxleejiaxin"},"content":"  - Improve find command to find based on note prefix (adapted to skill command)","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Jxleejiaxin"},"content":"- **Documentation**:","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Jxleejiaxin"},"content":"  - Wrote the `About HMHero` and `Features` section in the User Guide.","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"Jxleejiaxin"},"content":"  - Wrote and ensured correctness of Feature implementation section in Developer Guide.","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Jxleejiaxin"},"content":"  - Drew add, find, advance command activity diagrams and find command sequence diagram.","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Jxleejiaxin"},"content":"- **Community**:","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Jxleejiaxin"},"content":"  - Reviewed PRs from team members.","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Jxleejiaxin"},"content":"- **Tools**:","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Jxleejiaxin"},"content":"  - to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Jxleejiaxin"},"content":"- _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Jxleejiaxin":58}},{"path":"docs/team/merrickneo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"title: \u003cMerrick Neo\u003e Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"### Project: HMHero","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"### What should be included","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"- [x] Code contributed","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"- [x] Enhancements implemented","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"- [x] Contributions to the UG (Optional)","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"- [x] Contributions to the DG (Optional)","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"- [x] Contributions to team-based tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"- [x] Review/mentoring contributions","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"- [x] Contributions beyond the project team","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"(**Overview**)","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"- HMHero helps Hiring Managers track the statuses of candidates\u0027 applications","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"(**Summary of Contributions**)","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"1.  Enhanced `DeleteCommand` and `DeleteCommandParser` to remove an applicant based on their name and phone number, which was previously implemented using indexes.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"Example Input: `delete n/John Doe p/(John Doe\u0027s number)`","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"Output: `Deleted Person: John Doe; Phone: 91234567; Email: johndoe@gmail.com; Address: SoC; Status: REJECTED; Tags: [Python]`","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"2. Refactor tags to notes to allow users to note down traits and skillsets of applicants","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"3. Implemented a `DateTimeParser` class to help check and validate interview dates for applicants.","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"\u003e Format: `DD-MM-YYYY HH:MM`","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"- If the date provided is not in the right format, the error message `Invalid date and time provided` will be presented to the user.","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"### Test Cases","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"1. Wrote test cases for `DateTimeParser` and `InterviewDateTime`","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"- Test cases provides full path coverage for the classes","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"- Checks all valid and invalid datetime scenarios provided by the user","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"2. Wrote test cases for  `DeleteCommand` and `DeleteCommandParser`","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"- Rewrote test cases to test the new format for a  `DeleteCommand`","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"- Checked positive cases where both name and phone number was provided","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"- Checked negative cases where either the name or phone fields were missing","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"(**This part can change according to your contributions**)","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"Example","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"- to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"(**Code contributions**)","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"Example","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dmerrickneo\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"- **Project management**:","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"  - Set up Google Drive to help facilitate document sharing within team members","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"  - Set up recurring Zoom meetings to discuss the team\u0027s progress and future plans","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"(**Enhancements implemented**)","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"  - Make error messages presented more specific to the user\u0027s situation","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"  - Example:","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"  `Invalid Date and Time Provided. Expected Format: \"DD-MM-YYYY HH:MM\"`","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"- **Documentation**:","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"  - User Guide","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"    - Added documentation for the feature `add`","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"  - Developer Guide","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"    - Added non-functional requirements for the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"- **Community**:","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"  - Reviewed Pull Requests (PRs) made by team members","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"- **Tools**:","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"Merrickneo"},"content":"  - to be added soon","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Merrickneo":84}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.storage.HMHeroStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.storage.JsonHMHeroStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"        HMHeroStorage HMHeroStorage \u003d new JsonHMHeroStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"        storage \u003d new StorageManager(HMHeroStorage, userPrefsStorage);","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"Merrickneo"},"content":"            initialData \u003d new HMHero();","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"Merrickneo"},"content":"            initialData \u003d new HMHero();","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Merrickneo":7,"-":176}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n\\n%1$s\";","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"bofeng1999"},"content":"    public static final String MESSAGE_NO_PERSON_WITH_NAME_AND_PHONE \u003d \"No person with name and phone found!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    public static final String MESSAGE_INVALID_DATETIME \u003d \"Invalid date and time provided\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_INTERVIEW_DATETIME_NOT_REQUIRED \u003d \"Interview date and time is not required!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_INTERVIEW_DATETIME_IS_REQUIRED \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"            \"Please provide an interview date and time! (dd-MM-yyyy HH:mm)\";","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_DUPLICATE_INTERVIEW_DATE \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"            \"There is a clash of interview date and time with %s!\";","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"bofeng1999"},"content":"    public static final String MESSAGE_INTERVIEW_BEFORE_APPLICATION \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"            \"Interview date and time should be after application date and time!\\n\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"                    + \"%s\u0027s application date and time: %s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bofeng1999"},"content":"    public static final String MESSAGE_INVALID_STATUS_WITH_INTERVIEW \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"bofeng1999"},"content":"            \"Interview date and time not required for this status!\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bofeng1999":4,"FredericChow00":8,"Merrickneo":1,"-":11}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.logic.parser.HMHeroParser;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    @SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    private final HMHeroParser HMHeroParser;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"        HMHeroParser \u003d new HMHeroParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"        Command command \u003d HMHeroParser.parseCommand(commandText);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Merrickneo":5,"-":77}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLIEDTIME;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"            + \"[\" + PREFIX_APPLIEDTIME + \"APPLIED DATE TIME \"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE]...\\n\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"Jxleejiaxin"},"content":"            + PREFIX_APPLIEDTIME + \"04-04-2023 14:00 \"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"            + PREFIX_NOTE + \"java \"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"            + PREFIX_NOTE + \"leadership \";","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"FredericChow00":5,"Jxleejiaxin":3,"-":62}},{"path":"src/main/java/seedu/address/logic/commands/AdvanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bofeng1999"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"bofeng1999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_INTERVIEW_DATE;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"bofeng1999"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"bofeng1999"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.InterviewDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"bofeng1999"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"bofeng1999"},"content":" * Advances an applicant in HMHero.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"bofeng1999"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"bofeng1999"},"content":"public class AdvanceCommand extends Command {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"bofeng1999"},"content":"    public static final String COMMAND_WORD \u003d \"advance\";","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Advance an applicant in HMHero. \"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"            + \"If applicant\u0027s current status is APPLIED, please provide an interview date time\\n\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"bofeng1999"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"bofeng1999"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"            + \"[\" + PREFIX_DATETIME + \"INTERVIEW DATETIME]\\n\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"bofeng1999"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"bofeng1999"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"            + PREFIX_DATETIME + \"08-03-2023 18:00\";","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_ADVANCE_PERSON_SUCCESS \u003d \"Advanced Applicant: %s\\n\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"            + \"Old Status: %s\\nNew Status: %s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_PERSON_CANNOT_BE_ADVANCED \u003d \"%s\u0027s status cannot be advanced!\";","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"bofeng1999"},"content":"    private final NamePhoneNumberPredicate predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"    private final Optional\u003cInterviewDateTime\u003e interviewDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"bofeng1999"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"bofeng1999"},"content":"     * Creates an AdvanceCommand to advance the specified {@code Person}","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"     * @param predicate predicate to check the name and phone of applicant provided by user","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"     * @param interviewDateTime interviewDateTime provided by the user (if any)","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"bofeng1999"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"    public AdvanceCommand(NamePhoneNumberPredicate predicate, Optional\u003cInterviewDateTime\u003e interviewDateTime) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"bofeng1999"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"        this.interviewDateTime \u003d interviewDateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"bofeng1999"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"bofeng1999"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"bofeng1999"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"bofeng1999"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"bofeng1999"},"content":"        assert personList.size() \u003c\u003d 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"bofeng1999"},"content":"        if (personList.isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"            throw new CommandException(Messages.MESSAGE_NO_PERSON_WITH_NAME_AND_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"bofeng1999"},"content":"        Person personToAdvance \u003d personList.get(0);","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"FredericChow00"},"content":"        checkAdvanceApplicant(personToAdvance);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"FredericChow00"},"content":"        checkValidInterviewDateInput(model, personToAdvance, this.interviewDateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"FredericChow00"},"content":"        Person advancedPerson \u003d createAdvancedPerson(personToAdvance, this.interviewDateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"FredericChow00"},"content":"        model.setPerson(personToAdvance, advancedPerson);","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"FredericChow00"},"content":"        model.refreshListWithPredicate(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"FredericChow00"},"content":"        return new CommandResult(String.format(MESSAGE_ADVANCE_PERSON_SUCCESS,","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"FredericChow00"},"content":"                personToAdvance.getName(), personToAdvance.getStatus(), advancedPerson.getStatus()));","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"FredericChow00"},"content":"     * Checks whether the interview date-time input is needed or not needed","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"FredericChow00"},"content":"     * @param personToAdvance the applicant to be advanced","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"FredericChow00"},"content":"     * @param interviewDateTime the interview date-time input","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"FredericChow00"},"content":"     * @throws CommandException if there is a mismatch of whether interview date-time is required","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"FredericChow00"},"content":"    private void checkValidInterviewDateInput(Model model, Person personToAdvance,","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"FredericChow00"},"content":"            Optional\u003cInterviewDateTime\u003e interviewDateTime) throws CommandException {","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"FredericChow00"},"content":"        model.refreshListWithPredicate(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"FredericChow00"},"content":"        // interviewDateTime is only required if the applicant\u0027s status is Applied","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"FredericChow00"},"content":"        if (interviewDateTime.isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"bofeng1999"},"content":"            if (!isValidForAdvanceWithDateTime(model, personToAdvance, interviewDateTime.get())) {","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"FredericChow00"},"content":"                throw new CommandException(Messages.MESSAGE_INTERVIEW_DATETIME_NOT_REQUIRED);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"bofeng1999"},"content":"            } else if (!isAfterApplicationDateTime(personToAdvance, interviewDateTime.get())) {","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"FredericChow00"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_INTERVIEW_BEFORE_APPLICATION,","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"FredericChow00"},"content":"                        personToAdvance.getName(), personToAdvance.getApplicationDateTime()));","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"bofeng1999"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"FredericChow00"},"content":"            if (personToAdvance.getStatus() \u003d\u003d Status.APPLIED) {","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"FredericChow00"},"content":"                throw new CommandException(Messages.MESSAGE_INTERVIEW_DATETIME_IS_REQUIRED);","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"bofeng1999"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"bofeng1999"},"content":"     * Checks whether applicant\u0027s interviewDateTIme is after applicationDateTime","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"bofeng1999"},"content":"     * @param personToAdvance Applicant that user wants to advance to the next stage in application cycle","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"bofeng1999"},"content":"     * @param interviewDateTime date and time of the interview for the applicant","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"bofeng1999"},"content":"     * @return true if interviewDateTime is after applicationDateTime","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"bofeng1999"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"bofeng1999"},"content":"    private boolean isAfterApplicationDateTime(Person personToAdvance, InterviewDateTime interviewDateTime) {","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"bofeng1999"},"content":"        LocalDateTime applicationDateTime \u003d personToAdvance.getApplicationDateTime().getApplicationDateTime();","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"bofeng1999"},"content":"        return interviewDateTime.getDateTime().isAfter(applicationDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"FredericChow00"},"content":"     * Checks whether applicant that user wants to advance is of status {@code APPLIED}","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"FredericChow00"},"content":"     * Checks whether the interview date time has any clashes with current applicants who have the","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"FredericChow00"},"content":"     * status {@code SHORTLISTED}","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"FredericChow00"},"content":"     * @param model current state of the model","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"FredericChow00"},"content":"     * @param personToAdvance Applicant that user wants to advance to the next stage in application cycle","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"FredericChow00"},"content":"     * @param interviewDateTime date and time of the interview for the applicant","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"FredericChow00"},"content":"    private boolean isValidForAdvanceWithDateTime(Model model, Person personToAdvance,","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"FredericChow00"},"content":"            InterviewDateTime interviewDateTime) throws CommandException {","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"bofeng1999"},"content":"        return personToAdvance.getStatus() \u003d\u003d Status.APPLIED","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"bofeng1999"},"content":"                \u0026\u0026 !isDuplicateDateTime(model, personToAdvance, interviewDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"FredericChow00"},"content":"     * Checks with the current list of Shortlisted applicants to see if there are any clashing interview date timings.","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"FredericChow00"},"content":"     * @param interviewDateTime new date and time of the interview for the applicant","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"FredericChow00"},"content":"    private boolean isDuplicateDateTime(","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"FredericChow00"},"content":"            Model model, Person personToAdvance, InterviewDateTime interviewDateTime) throws CommandException {","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"FredericChow00"},"content":"        Predicate\u003cPerson\u003e shortlistedPredicate \u003d person -\u003e (person.getStatus() \u003d\u003d Status.SHORTLISTED);","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"bofeng1999"},"content":"        ObservableList\u003cPerson\u003e shortlistedApplicants \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"bofeng1999"},"content":"                model.getAddressBook().getPersonList().filtered(shortlistedPredicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"FredericChow00"},"content":"        for (Person applicant : shortlistedApplicants) {","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"FredericChow00"},"content":"            if (applicant.getInterviewDateTime().get().equals(interviewDateTime)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"bofeng1999"},"content":"                Predicate\u003cPerson\u003e sameInterviewDTPredicate \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"bofeng1999"},"content":"                        person -\u003e (person.equals(applicant) || person.equals(personToAdvance));","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"bofeng1999"},"content":"                model.refreshListWithPredicate(sameInterviewDTPredicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"FredericChow00"},"content":"                throw new CommandException(String.format(MESSAGE_DUPLICATE_INTERVIEW_DATE, applicant.getName()));","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"FredericChow00"},"content":"        return false;","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"FredericChow00"},"content":"     * Checks whether applicant can be advanced","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"FredericChow00"},"content":"    private void checkAdvanceApplicant(Person personToAdvance) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"FredericChow00"},"content":"        Status status \u003d personToAdvance.getStatus();","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"FredericChow00"},"content":"        if (status.equals(Status.ACCEPTED) || status.equals(Status.REJECTED)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"FredericChow00"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_CANNOT_BE_ADVANCED,","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"FredericChow00"},"content":"                    personToAdvance.getName().fullName));","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":167,"author":{"gitId":"FredericChow00"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToAdvance}","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"FredericChow00"},"content":"    private static Person createAdvancedPerson(Person personToAdvance, Optional\u003cInterviewDateTime\u003e interviewDateTime) {","lastModifiedDate":"2023-03-16"},{"lineNumber":170,"author":{"gitId":"FredericChow00"},"content":"        assert personToAdvance !\u003d null;","lastModifiedDate":"2023-03-16"},{"lineNumber":171,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"FredericChow00"},"content":"        return personToAdvance.advancePerson(interviewDateTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":173,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"bofeng1999"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"bofeng1999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"bofeng1999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"bofeng1999"},"content":"                || (other instanceof AdvanceCommand // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"bofeng1999"},"content":"                \u0026\u0026 predicate.equals(((AdvanceCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"bofeng1999"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"bofeng1999":72,"FredericChow00":101,"Merrickneo":8}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"        model.setAddressBook(new HMHero());","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Merrickneo":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"            + \": Deletes the person identified by their name and phone number as in the displayed person list.\\n\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"            + PREFIX_PHONE + \"PHONE\\n\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"            + PREFIX_PHONE + \"98765432\";","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    public final NamePhoneNumberPredicate predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"     * Creates an DeleteCommand to delete the specified {@Code Person}","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"     * @param predicate Checks if the Person matches the name and phone number provided.","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"    public DeleteCommand(NamePhoneNumberPredicate predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"        if (personList.isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"            throw new CommandException(Messages.MESSAGE_NO_PERSON_WITH_NAME_AND_PHONE);","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"        Person personToDelete \u003d personList.get(0);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"                \u0026\u0026 predicate.equals(((DeleteCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"FredericChow00":4,"Merrickneo":23,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"bofeng1999"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.ApplicationDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.InterviewDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"            + \"Existing values will be overwritten by the input values.\\n\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"            + \"[\" + PREFIX_DATETIME + \"INTERVIEW DATETIME] \"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE]...\\n\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"FredericChow00"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToReject}","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"bofeng1999"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"bofeng1999"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"Jxleejiaxin"},"content":"        Status updatedStatus \u003d personToEdit.getStatus(); //User not allowed to edit applicant status directly","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"Jxleejiaxin"},"content":"        ApplicationDateTime applicationDateTime \u003d personToEdit.getApplicationDateTime();","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"bofeng1999"},"content":"        Optional\u003cInterviewDateTime\u003e updatedInterviewDateTime \u003d editPersonDescriptor.getDateTime();","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"bofeng1999"},"content":"        if (!updatedInterviewDateTime.isPresent()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"bofeng1999"},"content":"            updatedInterviewDateTime \u003d personToEdit.getInterviewDateTime();","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"bofeng1999"},"content":"        } else if (personToEdit.getStatus() !\u003d Status.SHORTLISTED) {","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"bofeng1999"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STATUS_WITH_INTERVIEW);","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"FredericChow00"},"content":"        } else if (!isAfterApplicationDateTime(personToEdit, updatedInterviewDateTime.get())) {","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"FredericChow00"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INTERVIEW_BEFORE_APPLICATION,","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"FredericChow00"},"content":"                    personToEdit.getName(), personToEdit.getApplicationDateTime()));","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"bofeng1999"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"Merrickneo"},"content":"        Set\u003cNote\u003e updatedNotes \u003d editPersonDescriptor.getNotes().orElse(personToEdit.getNotes());","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"Jxleejiaxin"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedStatus,","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"Jxleejiaxin"},"content":"                applicationDateTime, updatedInterviewDateTime, updatedNotes);","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"bofeng1999"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"bofeng1999"},"content":"     * Checks whether applicant\u0027s interviewDateTime is after applicationDateTime","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"bofeng1999"},"content":"     * @param personToEdit Applicant that user wants to edit","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"bofeng1999"},"content":"     * @param interviewDateTime date and time of the interview for the applicant","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"bofeng1999"},"content":"     * @return true if interviewDateTime is after applicationDateTime","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"bofeng1999"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"bofeng1999"},"content":"    private static boolean isAfterApplicationDateTime(Person personToEdit, InterviewDateTime interviewDateTime) {","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"bofeng1999"},"content":"        LocalDateTime applicationDateTime \u003d personToEdit.getApplicationDateTime().getApplicationDateTime();","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"bofeng1999"},"content":"        return interviewDateTime.getDateTime().isAfter(applicationDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"bofeng1999"},"content":"        private InterviewDateTime dateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":164,"author":{"gitId":"Merrickneo"},"content":"        private Set\u003cNote\u003e notes;","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"bofeng1999"},"content":"            setDateTime(toCopy.dateTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"Merrickneo"},"content":"            setNotes(toCopy.notes);","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"bofeng1999"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, dateTime, notes);","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"bofeng1999"},"content":"        public void setDateTime(InterviewDateTime dateTime) {","lastModifiedDate":"2023-03-16"},{"lineNumber":221,"author":{"gitId":"bofeng1999"},"content":"            this.dateTime \u003d dateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":222,"author":{"gitId":"bofeng1999"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":223,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":224,"author":{"gitId":"bofeng1999"},"content":"        public Optional\u003cInterviewDateTime\u003e getDateTime() {","lastModifiedDate":"2023-03-16"},{"lineNumber":225,"author":{"gitId":"bofeng1999"},"content":"            return Optional.ofNullable(this.dateTime);","lastModifiedDate":"2023-03-21"},{"lineNumber":226,"author":{"gitId":"bofeng1999"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":227,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"Merrickneo"},"content":"        public void setNotes(Set\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-12"},{"lineNumber":233,"author":{"gitId":"Merrickneo"},"content":"            this.notes \u003d (notes !\u003d null) ? new HashSet\u003c\u003e(notes) : null;","lastModifiedDate":"2023-03-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"Merrickneo"},"content":"         * Returns an unmodifiable note set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"Merrickneo"},"content":"        public Optional\u003cSet\u003cNote\u003e\u003e getNotes() {","lastModifiedDate":"2023-03-12"},{"lineNumber":242,"author":{"gitId":"Merrickneo"},"content":"            return (notes !\u003d null) ? Optional.of(Collections.unmodifiableSet(notes)) : Optional.empty();","lastModifiedDate":"2023-03-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":264,"author":{"gitId":"bofeng1999"},"content":"                    \u0026\u0026 getDateTime().equals(e.getDateTime())","lastModifiedDate":"2023-03-16"},{"lineNumber":265,"author":{"gitId":"Merrickneo"},"content":"                    \u0026\u0026 getNotes().equals(e.getNotes());","lastModifiedDate":"2023-03-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"bofeng1999":33,"FredericChow00":7,"Jxleejiaxin":7,"Merrickneo":11,"-":210}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":" * Finds and lists all persons in HMHero whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"bofeng1999"},"content":"            + \"the specified keywords such as name(case-insensitive) or phone number displays them as a \"","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"            + \"list with index numbers.\\n\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"            + \"Parameters: n/NAME p/PHONE NUMBER\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"            + \"Providing just one of name or phone prefix is sufficient.\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"            + \"Providing both name and phone prefixes narrows down the scope.\\n\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice p/98752354\";","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"Jxleejiaxin"},"content":"    private final Predicate\u003cPerson\u003e findPredicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"Jxleejiaxin"},"content":"    public FindCommand(Predicate\u003cPerson\u003e findPredicate) {","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"Jxleejiaxin"},"content":"        this.findPredicate \u003d findPredicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"Jxleejiaxin"},"content":"        model.updateFilteredPersonList(findPredicate);","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"bofeng1999"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"bofeng1999"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"bofeng1999"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"bofeng1999"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"bofeng1999"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"bofeng1999"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"bofeng1999"},"content":"        FindCommand otherCmd \u003d (FindCommand) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Jxleejiaxin"},"content":"        return this.findPredicate.equals(otherCmd.findPredicate);","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"dunliang0513":2,"bofeng1999":9,"FredericChow00":5,"Jxleejiaxin":7,"Merrickneo":1,"-":29}},{"path":"src/main/java/seedu/address/logic/commands/InterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jxleejiaxin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Jxleejiaxin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.util.SortByInterviewDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Jxleejiaxin"},"content":" * Filters out all shortlisted applicants and sorts them based on interview date","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Jxleejiaxin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"public class InterviewCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final String COMMAND_WORD \u003d \"interview\";","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final Predicate\u003cPerson\u003e SHORTLISTED_PREDICATE \u003d person -\u003e (person.getStatus() \u003d\u003d Status.SHORTLISTED);","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT \u003d \"Listed all shortlisted applicants and their corresponding \"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"            + \"interview date and times!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Jxleejiaxin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Jxleejiaxin"},"content":"     * Returns a filtered list of applicants with SHORTLISTED status and sorts by earliest interview date","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Jxleejiaxin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Jxleejiaxin"},"content":"    public String getSuccessMessage(Model model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Jxleejiaxin"},"content":"        model.updateFilteredPersonList(SHORTLISTED_PREDICATE);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Jxleejiaxin"},"content":"        model.sortFilteredPersonList(new SortByInterviewDate());","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Jxleejiaxin"},"content":"        return MESSAGE_SUCCESS_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Jxleejiaxin"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Jxleejiaxin"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Jxleejiaxin"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Jxleejiaxin"},"content":"        return new CommandResult(getSuccessMessage(model));","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Jxleejiaxin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"FredericChow00":2,"Jxleejiaxin":36}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":" * Lists all applicants in HMHero to the user.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"            \"Listed all applicants\\n\\nTotal Applicants: %d\\nApplied: %d\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"                    + \"Shortlisted: %d\\nAccepted: %d\\nRejected: %d\";","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"     * Returns the list of all applicants in HMHero as well as the breakdown of","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"     * the number of applicants in each application stages.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"     * @param model model of all applicants","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"    public String getSuccessMessage(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"        model.sortFilteredPersonList(Comparator.comparing(p -\u003e p.getName().toString().toLowerCase()));","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"        return String.format(MESSAGE_SUCCESS_FORMAT, getNumApplicants(model), getNumApplied(model),","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"                getNumShortlisted(model), getNumAccepted(model), getNumRejected(model));","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"     * Returns the number of applicants in total","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"    private int getNumApplicants(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"        ObservableList\u003cPerson\u003e applicants \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"        return applicants.size();","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"     * Returns the number of applicants whose status is \"Applied\"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"    private int getNumApplied(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"        ObservableList\u003cPerson\u003e applicants \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"        int numApplied \u003d 0;","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"        for (Person applicant : applicants) {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"            if (applicant.getStatus().equals(Status.APPLIED)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"                numApplied++;","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"        return numApplied;","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"FredericChow00"},"content":"     * Returns the number of applicants whose status is \"Shortlisted\"","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"FredericChow00"},"content":"    private int getNumShortlisted(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"        ObservableList\u003cPerson\u003e applicants \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"        int numShortlisted \u003d 0;","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"FredericChow00"},"content":"        for (Person applicant : applicants) {","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"FredericChow00"},"content":"            if (applicant.getStatus().equals(Status.SHORTLISTED)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"FredericChow00"},"content":"                numShortlisted++;","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"FredericChow00"},"content":"        return numShortlisted;","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"FredericChow00"},"content":"     * Returns the number of applicants whose status is \"Accepted\"","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"FredericChow00"},"content":"    private int getNumAccepted(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"FredericChow00"},"content":"        ObservableList\u003cPerson\u003e applicants \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"FredericChow00"},"content":"        int numAccepted \u003d 0;","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"FredericChow00"},"content":"        for (Person applicant : applicants) {","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"FredericChow00"},"content":"            if (applicant.getStatus().equals(Status.ACCEPTED)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"FredericChow00"},"content":"                numAccepted++;","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"FredericChow00"},"content":"        return numAccepted;","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"FredericChow00"},"content":"    private int getNumRejected(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"FredericChow00"},"content":"        ObservableList\u003cPerson\u003e applicants \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"FredericChow00"},"content":"        int numRejected \u003d 0;","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"FredericChow00"},"content":"        for (Person applicant : applicants) {","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"FredericChow00"},"content":"            if (applicant.getStatus().equals(Status.REJECTED)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"FredericChow00"},"content":"                numRejected++;","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"FredericChow00"},"content":"        return numRejected;","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"FredericChow00"},"content":"        return new CommandResult(getSuccessMessage(model));","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"FredericChow00":82,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/RejectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bofeng1999"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bofeng1999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bofeng1999"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bofeng1999"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bofeng1999"},"content":" * Rejects an applicant in HMHero.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bofeng1999"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bofeng1999"},"content":"public class RejectCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bofeng1999"},"content":"    public static final String COMMAND_WORD \u003d \"reject\";","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Reject an applicant in HMHero.\\n\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"bofeng1999"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bofeng1999"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"            + PREFIX_PHONE + \"PHONE\\n\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"bofeng1999"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bofeng1999"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bofeng1999"},"content":"            + PREFIX_PHONE + \"98765432\";","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_REJECT_PERSON_SUCCESS \u003d \"Rejected Applicant: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_PERSON_CANNOT_BE_REJECTED \u003d \"%s has already been rejected!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bofeng1999"},"content":"    private final NamePhoneNumberPredicate predicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bofeng1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bofeng1999"},"content":"     * Creates an RejectCommand to reject the specified {@code Person}","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bofeng1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bofeng1999"},"content":"    public RejectCommand(NamePhoneNumberPredicate predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bofeng1999"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bofeng1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"bofeng1999"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bofeng1999"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bofeng1999"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bofeng1999"},"content":"        assert personList.size() \u003c\u003d 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bofeng1999"},"content":"        if (personList.isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"            throw new CommandException(Messages.MESSAGE_NO_PERSON_WITH_NAME_AND_PHONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"bofeng1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bofeng1999"},"content":"        Person personToReject \u003d personList.get(0);","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"        Person rejectedPerson;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"        /* this if-statement will check whether the applicant can be rejected.","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"        If applicant cannot be rejected, CommandException will be thrown */","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"        if (canRejectApplicant(personToReject)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"FredericChow00"},"content":"            rejectedPerson \u003d createRejectedPerson(personToReject);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"            model.setPerson(personToReject, rejectedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"        model.refreshListWithPredicate(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"        return new CommandResult(String.format(MESSAGE_REJECT_PERSON_SUCCESS, personToReject.getName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"FredericChow00"},"content":"     * Checks whether applicant can be rejected","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"FredericChow00"},"content":"     * @throws CommandException if applicant is already rejected","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"FredericChow00"},"content":"    private boolean canRejectApplicant(Person personToReject) throws CommandException {","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"FredericChow00"},"content":"        Status status \u003d personToReject.getStatus();","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"FredericChow00"},"content":"        if (status.equals(Status.REJECTED)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"FredericChow00"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_CANNOT_BE_REJECTED,","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"FredericChow00"},"content":"                    personToReject.getName().fullName));","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"FredericChow00"},"content":"        return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"FredericChow00"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToReject}","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"FredericChow00"},"content":"    private static Person createRejectedPerson(Person personToReject) {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"FredericChow00"},"content":"        assert personToReject !\u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"FredericChow00"},"content":"        return personToReject.rejectPerson();","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bofeng1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bofeng1999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bofeng1999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bofeng1999"},"content":"                || (other instanceof RejectCommand // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bofeng1999"},"content":"                \u0026\u0026 predicate.equals(((RejectCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bofeng1999"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bofeng1999":52,"FredericChow00":44}},{"path":"src/main/java/seedu/address/logic/commands/RemindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.model.util.SortByInterviewDate;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":" * List all applicants that are going to have interview in three days","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"public class RemindCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"    public static final String COMMAND_WORD \u003d \"remind\";","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT_WITH_APPLICANTS \u003d \"Listed all applicants that have an \"","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"            + \"interview in the next three days!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT_WITHOUT_APPLICANTS \u003d \"There are no upcoming interviews \"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"            + \"in the next three days.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"    public static final Predicate\u003cPerson\u003e INTERVIEW_IN_THREE_DAYS_PREDICATE \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"            person -\u003e (person.getStatus() \u003d\u003d Status.SHORTLISTED","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"                    \u0026\u0026 person.getInterviewDateTime().get().isWithinThreeDays());","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"     * Return a filtered list of applicants that are going to have interview within three days.","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"    public String getSuccessMessage(Model model) {","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"        model.updateFilteredPersonList(INTERVIEW_IN_THREE_DAYS_PREDICATE);","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"        int listSize \u003d personList.size();","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"        assert(listSize \u003e\u003d 0);","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"        if (listSize \u003e\u003d 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"            model.sortFilteredPersonList(new SortByInterviewDate());","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"            return MESSAGE_SUCCESS_FORMAT_WITH_APPLICANTS;","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"            return MESSAGE_SUCCESS_FORMAT_WITHOUT_APPLICANTS;","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"        return new CommandResult(getSuccessMessage(model));","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"dunliang0513":47,"FredericChow00":3,"Jxleejiaxin":1}},{"path":"src/main/java/seedu/address/logic/commands/SkillCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":" * Finds and lists all persons in HMHero whose note contains any of the argument keywords.","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"public class SkillCommand extends Command {","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"    public static final String COMMAND_WORD \u003d \"skill\";","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons with notes that\"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"            + \"matches all the keywords input and displays them as a \"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"            + \"list with index numbers.\\n\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"            + \"Parameters: KEYWORDS (Space-separated, Case-insensitive)\\n\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"            + \"Example: \" + COMMAND_WORD + \" java c++\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"    private final Predicate\u003cPerson\u003e findPredicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"    public SkillCommand(Predicate\u003cPerson\u003e findPredicate) {","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"        this.findPredicate \u003d findPredicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"        model.updateFilteredPersonList(findPredicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"            return true;","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"        if (!(other instanceof SkillCommand)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"            return false;","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"        SkillCommand otherCmd \u003d (SkillCommand) other;","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"        return this.findPredicate.equals(otherCmd.findPredicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"dunliang0513":47,"FredericChow00":5}},{"path":"src/main/java/seedu/address/logic/commands/SummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":" * Produces a summary statistic of lead time between applicants applying","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":" * to getting an interview to the user.","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"public class SummaryCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    public static final String COMMAND_WORD \u003d \"summary\";","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"            \"Here are some summary statistics for your hiring cycle\\n\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"            + \"Average days-to-interview (rounded down nearest day): %.2f days\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"            + \"Percentage of applicants with interview: %.1f\";","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"    public static final String MESSAGE_NO_INTERVIEW \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"            \"No summary statistic is available at the moment because there has been no scheduled interviews!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"     * Returns the average \u0027time to interview\u0027 for applicants in HMHero.","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"     * @param model model of all applicants","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    public String getSuccessMessage(Model model) {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        model.sortFilteredPersonList((p1, p2) -\u003e 0); //revert back to original ordering","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"        float[] values \u003d getAverageTimeToInterview(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"        if (values[0] \u003d\u003d 0) {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"            return MESSAGE_NO_INTERVIEW;","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        return String.format(MESSAGE_SUCCESS_FORMAT, values[0], values[1]) + \"%\";","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"     * Returns the mean `time-to-interview` and percentage of applicants that got an interview.","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"     * @param model model of all applicants.","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"    public float[] getAverageTimeToInterview(Model model) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"        ObservableList\u003cPerson\u003e applicants \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"        long sumTimeTaken \u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"        int numApplicantsWithInterview \u003d 0;","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"        int size \u003d applicants.size();","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"        for (Person applicant : applicants) {","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"            if (applicant.getInterviewDateTime().isEmpty() !\u003d true) {","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"                LocalDateTime interviewDateTime \u003d applicant.getInterviewDateTime().get().getDateTime();","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"                Duration duration \u003d Duration.between(applicant.getApplicationDateTime().getApplicationDateTime(),","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"                        interviewDateTime);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"                sumTimeTaken +\u003d duration.toDays();","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"                numApplicantsWithInterview++;","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"        if (numApplicantsWithInterview \u003d\u003d 0) {","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"            return new float[] {0, 0};","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"        float averageTimeTaken \u003d sumTimeTaken / numApplicantsWithInterview;","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"        float percentageApplicantsGotInterview \u003d (numApplicantsWithInterview / (float) size) * 100;","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"        return new float[] {averageTimeTaken, percentageApplicantsGotInterview};","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"        return new CommandResult(getSuccessMessage(model));","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"FredericChow00":5,"Merrickneo":68}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Merrickneo":2,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLIEDTIME;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.ApplicationDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"Jxleejiaxin"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Jxleejiaxin"},"content":"                        PREFIX_APPLIEDTIME, PREFIX_NOTE);","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"        Set\u003cNote\u003e noteList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_NOTE));","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"        for (Note note: noteList) {","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"            if (note.getNoteName().length() \u003e Note.MAX_LENGTH) {","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"                throw new ParseException(\"Length of each note cannot be more than 45 characters long!\");","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"Jxleejiaxin"},"content":"        Status status \u003d Status.APPLIED;","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Jxleejiaxin"},"content":"        ApplicationDateTime applicationDateTime \u003d ParserUtil.parseApplied(argMultimap","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Jxleejiaxin"},"content":"                .getValue(PREFIX_APPLIEDTIME).orElse(\"\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"        if (applicationDateTime.getApplicationDateTime().isAfter(LocalDateTime.now())) {","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"FredericChow00"},"content":"            throw new ParseException(\"Application Date cannot be in the future!\");","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"Jxleejiaxin"},"content":"        Person person \u003d new Person(name, phone, email, address, status, applicationDateTime,","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"                Optional.empty(), noteList);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"FredericChow00":11,"Jxleejiaxin":10,"Merrickneo":2,"-":55}},{"path":"src/main/java/seedu/address/logic/parser/AdvanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bofeng1999"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.model.person.InterviewDateTime.EMPTY_DATE_TIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"bofeng1999"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.logic.commands.AdvanceCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.person.InterviewDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"bofeng1999"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"bofeng1999"},"content":" * Parses input arguments and creates a new AdvanceCommand object","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"bofeng1999"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"bofeng1999"},"content":"public class AdvanceCommandParser implements Parser\u003cAdvanceCommand\u003e {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"bofeng1999"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"bofeng1999"},"content":"     * Parses the given {@code String} of arguments in the context of the AdvanceCommand","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"bofeng1999"},"content":"     * and returns a AdvanceCommand object for execution.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"bofeng1999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"bofeng1999"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"bofeng1999"},"content":"    public AdvanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_DATETIME);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"bofeng1999"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"bofeng1999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AdvanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"bofeng1999"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"bofeng1999"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"bofeng1999"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"        InterviewDateTime dateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATETIME)","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"                .orElse(EMPTY_DATE_TIME)).orElse(null);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"        return new AdvanceCommand(new NamePhoneNumberPredicate(name, phone), Optional.ofNullable(dateTime));","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"bofeng1999"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"bofeng1999"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"bofeng1999"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"bofeng1999"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"bofeng1999"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"bofeng1999"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"bofeng1999"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"bofeng1999":42,"FredericChow00":6,"Merrickneo":3}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"note/\");","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final Prefix PREFIX_APPLIEDTIME \u003d new Prefix(\"applied/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Jxleejiaxin":1,"Merrickneo":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DateTimeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.InterviewDateTime;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":" * Parses input arguments and creates a new LocalDateTime object","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"     * Static method to format datetime string into a LocalDateTime object.","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"     * @param dateTimeString String input for datetime.","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"     * @return LocalDateTime object representing the current datetime.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"     * @throws ParseException If the input is not in the write format to be converted.","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) throws ParseException {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"        // Format DD-MM-YYYY HH:MM","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"        if (dateTimeString.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"            return LocalDateTime.parse(dateTimeString, format);","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"bofeng1999"},"content":"            throw new ParseException(InterviewDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"     * Takes in the dateTime object to produce the right format to show to the User.","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"     * @param datetime LocalDateTime object","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"     * @return String output of the datetime.","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    public static String datetimeFormatter(LocalDateTime datetime) {","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Jxleejiaxin"},"content":"        return datetime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Jxleejiaxin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Jxleejiaxin"},"content":"     * Returns if a given dateTime string is valid","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Jxleejiaxin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Jxleejiaxin"},"content":"    public static boolean isValidDateTime(String dateTime) {","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Jxleejiaxin"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Jxleejiaxin"},"content":"            DateTimeParser.parseDateTime(dateTime);","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Jxleejiaxin"},"content":"            return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Jxleejiaxin"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Jxleejiaxin"},"content":"            return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"bofeng1999":2,"Jxleejiaxin":13,"Merrickneo":39}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE);","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"        return new DeleteCommand(new NamePhoneNumberPredicate(name, phone));","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Merrickneo":24,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.InterviewDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"bofeng1999"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"bofeng1999"},"content":"                        PREFIX_DATETIME, PREFIX_NOTE);","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"bofeng1999"},"content":"        if (argMultimap.getValue(PREFIX_DATETIME).isPresent()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"bofeng1999"},"content":"            String optionalDateTime \u003d argMultimap.getValue(PREFIX_DATETIME).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"bofeng1999"},"content":"            InterviewDateTime dateTime \u003d ParserUtil.parseDateTime(optionalDateTime).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"bofeng1999"},"content":"            editPersonDescriptor.setDateTime(dateTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"bofeng1999"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_NOTE)).ifPresent(editPersonDescriptor::setNotes);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"    private Optional\u003cSet\u003cNote\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"FredericChow00"},"content":"        Set\u003cNote\u003e noteList \u003d ParserUtil.parseTags(tagSet);","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"FredericChow00"},"content":"        for (Note note: noteList) {","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"FredericChow00"},"content":"            if (note.getNoteName().length() \u003e Note.MAX_LENGTH) {","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"FredericChow00"},"content":"                throw new ParseException(\"Length of each note cannot be more than 45 characters long!\");","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"FredericChow00"},"content":"        return Optional.of(noteList);","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bofeng1999":9,"FredericChow00":7,"Merrickneo":4,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLIEDTIME;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"    private static final Prefix[] ALLOWED_PREFIXES \u003d {PREFIX_NAME, PREFIX_PHONE};","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"Jxleejiaxin"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, ALLOWED_PREFIXES);","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"Jxleejiaxin"},"content":"        Predicate\u003cPerson\u003e findPredicate \u003d x -\u003e true; //always true predicate as default","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"Jxleejiaxin"},"content":"        if (args.isBlank()","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"Jxleejiaxin"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_APPLIEDTIME, PREFIX_DATETIME)","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"Jxleejiaxin"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"Jxleejiaxin"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"Jxleejiaxin"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"            String[] nameKeywords \u003d name.fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Jxleejiaxin"},"content":"            findPredicate \u003d findPredicate.and(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"Jxleejiaxin"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_PHONE)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"Jxleejiaxin"},"content":"            Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"            String[] phoneKeywords \u003d phone.value.split(\"\\\\s+\");","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"Jxleejiaxin"},"content":"            findPredicate \u003d findPredicate.and(new PhoneContainsKeywordsPredicate(Arrays.asList(phoneKeywords)));","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"Jxleejiaxin"},"content":"        return new FindCommand(findPredicate);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"dunliang0513"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"dunliang0513"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"dunliang0513"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"dunliang0513"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"dunliang0513":14,"Jxleejiaxin":28,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/HMHeroParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.logic.commands.AdvanceCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.logic.commands.InterviewCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.logic.commands.RejectCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.logic.commands.RemindCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.logic.commands.SkillCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.logic.commands.SummaryCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"@SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"public class HMHeroParser {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"        case SummaryCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"            return new SummaryCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"bofeng1999"},"content":"        case AdvanceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"bofeng1999"},"content":"            return new AdvanceCommandParser().parse(arguments);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"bofeng1999"},"content":"        case RejectCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bofeng1999"},"content":"            return new RejectCommandParser().parse(arguments);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"Jxleejiaxin"},"content":"        case InterviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Jxleejiaxin"},"content":"            return new InterviewCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"dunliang0513"},"content":"        case RemindCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"dunliang0513"},"content":"            return new RemindCommand();","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"dunliang0513"},"content":"        case SkillCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"dunliang0513"},"content":"            return new SkillCommandParser().parse(arguments);","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dunliang0513":8,"bofeng1999":8,"Jxleejiaxin":4,"Merrickneo":6,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.ApplicationDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.person.InterviewDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"Merrickneo"},"content":"     * Parses a {@code String note} into a {@code Tag}.","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"Merrickneo"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"FredericChow00"},"content":"    public static Note parseTag(String tag) {","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"Merrickneo"},"content":"        return new Note(trimmedTag);","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"Merrickneo"},"content":"    public static Set\u003cNote\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":120,"author":{"gitId":"Merrickneo"},"content":"        final Set\u003cNote\u003e noteSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"Merrickneo"},"content":"            noteSet.add(parseTag(tagName));","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"Merrickneo"},"content":"        return noteSet;","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"Merrickneo"},"content":"     * Parses a {@code String dateTime} into an {@code LocalDateTime}.","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"Merrickneo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"Merrickneo"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"Merrickneo"},"content":"     * @throws ParseException if the given {@code dateTime} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"FredericChow00"},"content":"    public static Optional\u003cInterviewDateTime\u003e parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"Merrickneo"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"Merrickneo"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"FredericChow00"},"content":"        if (trimmedDateTime.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"FredericChow00"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"FredericChow00"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"FredericChow00"},"content":"            return Optional.of(new InterviewDateTime(trimmedDateTime));","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"Jxleejiaxin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"Jxleejiaxin"},"content":"     * Parses a {@code String dateTime} into an {@code ApplicationDateTime}.","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"Jxleejiaxin"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"Jxleejiaxin"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"Jxleejiaxin"},"content":"     * @return Now if empty argument","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"Jxleejiaxin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"Jxleejiaxin"},"content":"    public static ApplicationDateTime parseApplied(String dateTime) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"Jxleejiaxin"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"Jxleejiaxin"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"Jxleejiaxin"},"content":"        if (trimmedDateTime.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"Jxleejiaxin"},"content":"            return new ApplicationDateTime(LocalDateTime.now().truncatedTo(ChronoUnit.MINUTES));","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"Jxleejiaxin"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"Jxleejiaxin"},"content":"            return new ApplicationDateTime(DateTimeParser.parseDateTime(trimmedDateTime));","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"FredericChow00":8,"Jxleejiaxin":17,"Merrickneo":19,"-":114}},{"path":"src/main/java/seedu/address/logic/parser/RejectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bofeng1999"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bofeng1999"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.logic.commands.RejectCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bofeng1999"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bofeng1999"},"content":" * Parses input arguments and creates a new RejectCommand object","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bofeng1999"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bofeng1999"},"content":"public class RejectCommandParser implements Parser\u003cRejectCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bofeng1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bofeng1999"},"content":"     * Parses the given {@code String} of arguments in the context of the RejectCommand","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bofeng1999"},"content":"     * and returns a RejectCommand object for execution.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bofeng1999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bofeng1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bofeng1999"},"content":"    public RejectCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bofeng1999"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE);","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bofeng1999"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bofeng1999"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bofeng1999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RejectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bofeng1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bofeng1999"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bofeng1999"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bofeng1999"},"content":"        return new RejectCommand(new NamePhoneNumberPredicate(name, phone));","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bofeng1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bofeng1999"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bofeng1999"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bofeng1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bofeng1999"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bofeng1999"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bofeng1999"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bofeng1999":45}},{"path":"src/main/java/seedu/address/logic/parser/SkillCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.logic.commands.SkillCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.model.person.NoteContainsKeywordsPredicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":" * Parses input arguments and creates a new SkillCommand object","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"public class SkillCommandParser implements Parser\u003cSkillCommand\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"     * Parses the given {@code String} of arguments in the context of the SkillCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"     * and returns a SkillCommand object for execution.","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"    public SkillCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"        Predicate\u003cPerson\u003e findPredicate \u003d x -\u003e true; //always true predicate as default","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SkillCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"            if (keyword.length() \u003e Note.MAX_LENGTH) {","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"                throw new ParseException(\"Length of skills cannot be more than 45 characters long!\");","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"            findPredicate \u003d findPredicate.and(new NoteContainsKeywordsPredicate(keyword));","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"        return new SkillCommand(findPredicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"dunliang0513":39,"FredericChow00":4}},{"path":"src/main/java/seedu/address/model/HMHero.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"@SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"public class HMHero implements ReadOnlyAddressBook {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    public HMHero() {}","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"    public HMHero(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"Merrickneo"},"content":"                || (other instanceof HMHero // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"Merrickneo"},"content":"                \u0026\u0026 persons.equals(((HMHero) other).persons));","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Merrickneo":6,"-":115}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Jxleejiaxin"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"bofeng1999"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"bofeng1999"},"content":"     * Refreshes the list after a command.","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"bofeng1999"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"bofeng1999"},"content":"    void refreshListWithPredicate(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"Jxleejiaxin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"Jxleejiaxin"},"content":"     * Sets the comparator of the filtered person list","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"Jxleejiaxin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"Jxleejiaxin"},"content":"    void sortFilteredPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bofeng1999":5,"Jxleejiaxin":6,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    @SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"    private final HMHero HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"    private Comparator\u003cPerson\u003e personComparator \u003d Comparator.comparing(p -\u003e p.getName().toString().toLowerCase());","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"        this.HMHero \u003d new HMHero(addressBook);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.HMHero.getPersonList());","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"        this(new HMHero(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"        this.HMHero.resetData(addressBook);","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"Merrickneo"},"content":"        return HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"Merrickneo"},"content":"        return HMHero.hasPerson(person);","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"Merrickneo"},"content":"        HMHero.removePerson(target);","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"Merrickneo"},"content":"        HMHero.addPerson(person);","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"FredericChow00"},"content":"        sortFilteredPersonList(personComparator);","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"Merrickneo"},"content":"        HMHero.setPerson(target, editedPerson);","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"bofeng1999"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"bofeng1999"},"content":"    public void refreshListWithPredicate(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"bofeng1999"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"bofeng1999"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"Jxleejiaxin"},"content":"        return filteredPersons.sorted(personComparator);","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"Jxleejiaxin"},"content":"    public void sortFilteredPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"Jxleejiaxin"},"content":"        personComparator \u003d comparator;","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"Merrickneo"},"content":"        return HMHero.equals(other.HMHero)","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bofeng1999":4,"FredericChow00":2,"Jxleejiaxin":6,"Merrickneo":12,"-":139}},{"path":"src/main/java/seedu/address/model/ReadOnlyHMHero.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"public interface ReadOnlyHMHero {","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Merrickneo":17}},{"path":"src/main/java/seedu/address/model/note/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.address.model.note;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":" * Represents a Note in the HMHero.","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":" * Guarantees: immutable;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"public class Note {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"    public static final int MAX_LENGTH \u003d 45;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    public final String noteName;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"     * Constructs a {@code Note}.","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"     * @param noteName A valid note name.","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    public Note(String noteName) {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"        requireNonNull(noteName);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"        this.noteName \u003d noteName;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"    public String getNoteName() {","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"        return this.noteName;","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"                || (other instanceof Note // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"                \u0026\u0026 noteName.equals(((Note) other).noteName)); // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"        return noteName.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"        return \u0027[\u0027 + noteName + \u0027]\u0027;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"FredericChow00":7,"Merrickneo":40}},{"path":"src/main/java/seedu/address/model/person/ApplicationDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":" * Represents a Person\u0027s interview date and time in the address book.","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"public class ApplicationDateTime {","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Invalid application date time format!\";","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"    private final LocalDateTime applicationDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"     * Constructor for ApplicationDateTime","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"     * @param applicationDateTime LocalDateTime of the current time and date","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"    public ApplicationDateTime(LocalDateTime applicationDateTime) {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"        requireNonNull(applicationDateTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"        this.applicationDateTime \u003d applicationDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"     * @return LocalDateTime object of the application date and time.","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"    public LocalDateTime getApplicationDateTime() {","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"        return this.applicationDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"        return DateTimeParser.datetimeFormatter(applicationDateTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"                || (other instanceof ApplicationDateTime // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"                \u0026\u0026 applicationDateTime.equals(((ApplicationDateTime) other).applicationDateTime)); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"FredericChow00":45,"Jxleejiaxin":2}},{"path":"src/main/java/seedu/address/model/person/InterviewDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import java.time.Period;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":" * Represents a Person\u0027s interview date and time in the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"public class InterviewDateTime {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Interview date time not in valid format!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final String EMPTY_DATE_TIME \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    public InterviewDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"        this.dateTime \u003d DateTimeParser.parseDateTime(dateTime);","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Jxleejiaxin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Jxleejiaxin"},"content":"     * method to create InterviewDateTime, used in converting from json","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Jxleejiaxin"},"content":"     * @param dateTime String form of dateTime or empty string","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"     * @return {@code Optional.empty()} if empty String, otherwise returns {@code Optional\u003cInterviewDateTime\u003e}.","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"Jxleejiaxin"},"content":"     * @throws ParseException if dateTime String cannot be parsed","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Jxleejiaxin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"    public static Optional\u003cInterviewDateTime\u003e createInterviewDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Jxleejiaxin"},"content":"        if (dateTime.equals(\"\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Jxleejiaxin"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"            return Optional.of(new InterviewDateTime(dateTime));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Jxleejiaxin"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Jxleejiaxin"},"content":"        return dateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"     * Method to check whether the applicant is going to have an interview in three days.","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"     * @return True if the applicant is going to have interview in three days.","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"    public boolean isWithinThreeDays() {","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"        LocalDateTime currTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"        Period interval \u003d Period.between(currTime.toLocalDate(), dateTime.toLocalDate());","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"        int yearsFromNow \u003d interval.getYears();","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"        int monthsFromNow \u003d interval.getMonths();","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"        int daysFromNow \u003d interval.getDays();","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"        return (daysFromNow \u003c\u003d 3 \u0026\u0026 daysFromNow \u003e\u003d 0)","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"                \u0026\u0026 monthsFromNow \u003d\u003d 0","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"                \u0026\u0026 yearsFromNow \u003d\u003d 0;","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"bofeng1999"},"content":"    public int compareTo(InterviewDateTime other) {","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"bofeng1999"},"content":"        return this.dateTime.compareTo(other.getDateTime());","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"        return DateTimeParser.datetimeFormatter(dateTime);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"                || (other instanceof InterviewDateTime // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"                \u0026\u0026 dateTime.equals(((InterviewDateTime) other).dateTime)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"dunliang0513":16,"bofeng1999":4,"FredericChow00":6,"Jxleejiaxin":19,"Merrickneo":27}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"Jxleejiaxin"},"content":"            \"Names should only contain alphabets and spaces, and it should not be blank\";","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z]+[a-zA-Z ]*$\";","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jxleejiaxin":2,"-":57}},{"path":"src/main/java/seedu/address/model/person/NameAndPhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":" * Tests that a {@code Person}\u0027s {@code Name} and {@code Phone Number} match any of the keywords given.","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"public class NameAndPhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    private final List\u003cString\u003e keywordsContainsNameAndPhone;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    public NameAndPhoneContainsKeywordsPredicate(List\u003cString\u003e keywordsContainsNameAndPhone) {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"        this.keywordsContainsNameAndPhone \u003d keywordsContainsNameAndPhone;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"        boolean result \u003d keywordsContainsNameAndPhone.stream()","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"                .allMatch(keyword -\u003e (StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword))","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"                        || (StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword)));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"        return result;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"dunliang0513":26}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Jxleejiaxin"},"content":"                .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jxleejiaxin":1,"-":30}},{"path":"src/main/java/seedu/address/model/person/NamePhoneNumberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bofeng1999"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"bofeng1999"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"bofeng1999"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"bofeng1999"},"content":" * Tests that a {@code Person}\u0027s {@code Name} and {@code Phone} matches the name and phone given.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"bofeng1999"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"bofeng1999"},"content":"public class NamePhoneNumberPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"bofeng1999"},"content":"    private final Name name;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"bofeng1999"},"content":"    private final Phone phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"bofeng1999"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"bofeng1999"},"content":"     * Constructor for NamePhoneNumberPredicate.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"bofeng1999"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"bofeng1999"},"content":"    public NamePhoneNumberPredicate(Name name, Phone phone) {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"bofeng1999"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"bofeng1999"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"bofeng1999"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"bofeng1999"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"bofeng1999"},"content":"        return person.getName().equals(name) \u0026\u0026 person.getPhone().equals(phone);","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"bofeng1999"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"bofeng1999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"bofeng1999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"bofeng1999"},"content":"                || (other instanceof NamePhoneNumberPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"bofeng1999"},"content":"                \u0026\u0026 name.equals(((NamePhoneNumberPredicate) other).name) // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"bofeng1999"},"content":"                \u0026\u0026 phone.equals(((NamePhoneNumberPredicate) other).phone)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"bofeng1999"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"bofeng1999":32}},{"path":"src/main/java/seedu/address/model/person/NoteContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jxleejiaxin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"Jxleejiaxin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"Jxleejiaxin"},"content":" * Tests that any of a {@code Person}\u0027s {@code Note} matches the keyword given.","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"Jxleejiaxin"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"Jxleejiaxin"},"content":"public class NoteContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"    private final String keyword;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"Jxleejiaxin"},"content":"    public NoteContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"Jxleejiaxin"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"Jxleejiaxin"},"content":"        return person.getNotes().stream().anyMatch(note -\u003e StringUtil.containsWordIgnoreCase(note.noteName, keyword));","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"Jxleejiaxin"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"Jxleejiaxin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"Jxleejiaxin"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"Jxleejiaxin"},"content":"                || (other instanceof NoteContainsKeywordsPredicate","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"Jxleejiaxin"},"content":"                \u0026\u0026 keyword.equals(((NoteContainsKeywordsPredicate) other).keyword));","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"Jxleejiaxin"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"Jxleejiaxin":29}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"    private final Status status;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    private final Set\u003cNote\u003e notes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"    private final Optional\u003cInterviewDateTime\u003e interviewDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"    private final ApplicationDateTime applicationDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Jxleejiaxin"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Status status,","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Jxleejiaxin"},"content":"                  ApplicationDateTime applicationDateTime, Optional\u003cInterviewDateTime\u003e interviewDateTime,","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Jxleejiaxin"},"content":"                  Set\u003cNote\u003e notes) {","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"        requireAllNonNull(name, phone, email, address, notes);","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"Jxleejiaxin"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Jxleejiaxin"},"content":"        this.applicationDateTime \u003d applicationDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"        this.interviewDateTime \u003d interviewDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"        this.notes.addAll(notes);","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"     * Constructor for updating status of person","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"    public Person(Person person, Status newStatus) {","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"        this(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"Jxleejiaxin"},"content":"                newStatus, person.getApplicationDateTime(), person.getInterviewDateTime(), person.getNotes());","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"     * Constructor for updating status and interview date time of person","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"    public Person(Person person, Status newStatus, Optional\u003cInterviewDateTime\u003e interviewDateTime) {","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"        this(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"Jxleejiaxin"},"content":"                newStatus, person.getApplicationDateTime(), interviewDateTime, person.getNotes());","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"Jxleejiaxin"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Jxleejiaxin"},"content":"        return status;","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"     * Returns an immutable note set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"Merrickneo"},"content":"    public Set\u003cNote\u003e getNotes() {","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"Merrickneo"},"content":"        return Collections.unmodifiableSet(notes);","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"FredericChow00"},"content":"     * Returns the {@code ApplicationDateTime} of the applicant.","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"FredericChow00"},"content":"     * @return Application date and time of the applicant.","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"FredericChow00"},"content":"    public ApplicationDateTime getApplicationDateTime() {","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"FredericChow00"},"content":"        return applicationDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"FredericChow00"},"content":"     * Returns the {@code Optional\u003cInterviewDateTime\u003e} for the applicant.","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"Merrickneo"},"content":"     * @return Interview date of the applicant.","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"FredericChow00"},"content":"    public Optional\u003cInterviewDateTime\u003e getInterviewDateTime() {","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"FredericChow00"},"content":"        return interviewDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"Jxleejiaxin"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"Jxleejiaxin"},"content":"     * Returns String representation of {@code Optional\u003cInterviewDateTime\u003e}","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"Jxleejiaxin"},"content":"     * for conversion to {@code JsonAdaptedPerson}","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"Jxleejiaxin"},"content":"     * @return InterviewDateTime as String","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"Jxleejiaxin"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"Jxleejiaxin"},"content":"    public String getInterviewDateTimeString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"Jxleejiaxin"},"content":"        return interviewDateTime.map(InterviewDateTime::toString).orElse(\"\");","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"FredericChow00"},"content":"    public String getApplicationDateTimeString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"FredericChow00"},"content":"        return applicationDateTime.toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"Jxleejiaxin"},"content":"     * Returns a String to be displayed in the UI","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"Jxleejiaxin"},"content":"     * @return desired String to be displayed for InterviewDateTime","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"Jxleejiaxin"},"content":"    public String getInterviewDateTimeDisplay() {","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"Jxleejiaxin"},"content":"        if (this.getStatus() \u003d\u003d Status.SHORTLISTED) {","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"Jxleejiaxin"},"content":"            return interviewDateTime.map(InterviewDateTime::toString).orElse(\"\");","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"Jxleejiaxin"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"Jxleejiaxin"},"content":"            return \"\";","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"FredericChow00"},"content":"     * Advances status of applicants, according to application cycle","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"FredericChow00"},"content":"    public Person advancePerson(Optional\u003cInterviewDateTime\u003e interviewDateTime) {","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"FredericChow00"},"content":"        switch (this.status) {","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"FredericChow00"},"content":"        case APPLIED:","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"FredericChow00"},"content":"            return new Person(this, Status.SHORTLISTED, interviewDateTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"FredericChow00"},"content":"        case SHORTLISTED:","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"FredericChow00"},"content":"            return new Person(this, Status.ACCEPTED);","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"FredericChow00"},"content":"        default:","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"FredericChow00"},"content":"            throw new AssertionError(\"This person\u0027s application status cannot be advanced!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"FredericChow00"},"content":"     * Changes the status of the applicant to Rejected","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"FredericChow00"},"content":"    public Person rejectPerson() {","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"FredericChow00"},"content":"        return new Person(this, Status.REJECTED);","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"Merrickneo"},"content":"     * Returns true if both persons have the same name and phone number.","lastModifiedDate":"2023-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"Merrickneo"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2023-03-25"},{"lineNumber":164,"author":{"gitId":"Merrickneo"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2023-03-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"Jxleejiaxin"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"Jxleejiaxin"},"content":"     * Returns true if the other person has the same interview date.","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"Jxleejiaxin"},"content":"     * This is needed as Optional\u0027s equals method fails when two different Optional objects","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"Jxleejiaxin"},"content":"     * are created with same value.","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"Jxleejiaxin"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"FredericChow00"},"content":"    public boolean hasSameInterviewDate(Person other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":173,"author":{"gitId":"Jxleejiaxin"},"content":"        Optional\u003cInterviewDateTime\u003e idt1 \u003d getInterviewDateTime();","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"Jxleejiaxin"},"content":"        Optional\u003cInterviewDateTime\u003e idt2 \u003d other.getInterviewDateTime();","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"Jxleejiaxin"},"content":"        if (idt1.isEmpty() \u0026\u0026 idt2.isEmpty()) { //both dates are null","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"Jxleejiaxin"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"Jxleejiaxin"},"content":"        } else if (idt1.isPresent() \u0026\u0026 idt2.isPresent()) { //both dates exist","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"Jxleejiaxin"},"content":"            return idt1.get().getDateTime().equals(idt2.get().getDateTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"Jxleejiaxin"},"content":"        } else { //only one exists","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"Jxleejiaxin"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":185,"author":{"gitId":"FredericChow00"},"content":"     * Returns true if the other person has the same application date.","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"FredericChow00"},"content":"     * The application date is only precise until the nearest minute.","lastModifiedDate":"2023-03-20"},{"lineNumber":187,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":188,"author":{"gitId":"FredericChow00"},"content":"    public boolean hasSameApplicationDate(Person other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":189,"author":{"gitId":"FredericChow00"},"content":"        ApplicationDateTime app1 \u003d getApplicationDateTime();","lastModifiedDate":"2023-03-20"},{"lineNumber":190,"author":{"gitId":"FredericChow00"},"content":"        ApplicationDateTime app2 \u003d other.getApplicationDateTime();","lastModifiedDate":"2023-03-20"},{"lineNumber":191,"author":{"gitId":"FredericChow00"},"content":"        return app1.equals(app2);","lastModifiedDate":"2023-03-20"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":209,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":214,"author":{"gitId":"FredericChow00"},"content":"                \u0026\u0026 otherPerson.getNotes().equals(getNotes())","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"FredericChow00"},"content":"                \u0026\u0026 otherPerson.getStatus().equals(getStatus())","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"FredericChow00"},"content":"                \u0026\u0026 otherPerson.hasSameInterviewDate(this)","lastModifiedDate":"2023-03-20"},{"lineNumber":217,"author":{"gitId":"FredericChow00"},"content":"                \u0026\u0026 otherPerson.hasSameApplicationDate(this);","lastModifiedDate":"2023-03-20"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":223,"author":{"gitId":"FredericChow00"},"content":"        return Objects.hash(name, phone, email, address, notes, status, interviewDateTime, applicationDateTime);","lastModifiedDate":"2023-03-20"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":230,"author":{"gitId":"FredericChow00"},"content":"                .append(\"\\n\\nPhone: \")","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"FredericChow00"},"content":"                .append(\"\\nEmail: \")","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"FredericChow00"},"content":"                .append(\"\\nAddress: \")","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"FredericChow00"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"FredericChow00"},"content":"                .append(\"\\nStatus: \")","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"FredericChow00"},"content":"                .append(getStatus())","lastModifiedDate":"2023-03-20"},{"lineNumber":238,"author":{"gitId":"FredericChow00"},"content":"                .append(\"\\nApplication Date: \")","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"FredericChow00"},"content":"                .append(getApplicationDateTimeString());","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"bofeng1999"},"content":"        if (interviewDateTime.isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":242,"author":{"gitId":"FredericChow00"},"content":"            builder.append(\"\\nInterviewDateTime: \")","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"bofeng1999"},"content":"                    .append(interviewDateTime.get());","lastModifiedDate":"2023-03-18"},{"lineNumber":244,"author":{"gitId":"bofeng1999"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":246,"author":{"gitId":"Merrickneo"},"content":"        Set\u003cNote\u003e notes \u003d getNotes();","lastModifiedDate":"2023-03-12"},{"lineNumber":247,"author":{"gitId":"Merrickneo"},"content":"        if (!notes.isEmpty()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":248,"author":{"gitId":"FredericChow00"},"content":"            builder.append(\"\\n\\nNotes: \");","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"Merrickneo"},"content":"            notes.forEach(builder::append);","lastModifiedDate":"2023-03-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bofeng1999":3,"FredericChow00":78,"Jxleejiaxin":45,"Merrickneo":19,"-":108}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":" * Tests that a {@code Person}\u0027s {@code Phone Number} matches any of the keywords given.","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"                \u0026\u0026 keywords.equals(((PhoneContainsKeywordsPredicate) other).keywords));","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"dunliang0513":31}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jxleejiaxin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Jxleejiaxin"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Jxleejiaxin"},"content":" * Represents an Applicant\u0027s status","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"public enum Status {","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Jxleejiaxin"},"content":"    APPLIED,","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Jxleejiaxin"},"content":"    SHORTLISTED,","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Jxleejiaxin"},"content":"    ACCEPTED,","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Jxleejiaxin"},"content":"    REJECTED;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Status can only be APPLIED, SHORTLISTED, ACCEPTED, REJECTED.\";","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Jxleejiaxin"},"content":"     * Returns if a given string is a valid status.","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Jxleejiaxin"},"content":"    public static boolean isValidStatus(String value) {","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":"        for (Status status : Status.values()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Jxleejiaxin"},"content":"            if (value.equals(status.name())) {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Jxleejiaxin"},"content":"                return true;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Jxleejiaxin"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Jxleejiaxin"},"content":"        return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Jxleejiaxin"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Jxleejiaxin":26}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"Jxleejiaxin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.ApplicationDateTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"    private static final LocalDateTime SAMPLE_DATE_TIME \u003d LocalDateTime.of(2023, 01, 01, 16, 25);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"Jxleejiaxin"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), Status.APPLIED,","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"Jxleejiaxin"},"content":"                    new ApplicationDateTime(SAMPLE_DATE_TIME),","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"                    Optional.empty(), getNoteSet(\"C#\")),","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), Status.APPLIED,","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Jxleejiaxin"},"content":"                    new ApplicationDateTime(SAMPLE_DATE_TIME),","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"                    Optional.empty(), getNoteSet(\"C++\", \"Java\")),","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), Status.REJECTED,","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Jxleejiaxin"},"content":"                    new ApplicationDateTime(SAMPLE_DATE_TIME), Optional.empty(),","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"                getNoteSet(\"C\")),","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), Status.APPLIED,","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Jxleejiaxin"},"content":"                    new ApplicationDateTime(SAMPLE_DATE_TIME),","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"                    Optional.empty(), getNoteSet(\"Leadership\")),","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"Jxleejiaxin"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), Status.APPLIED,","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Jxleejiaxin"},"content":"                    new ApplicationDateTime(SAMPLE_DATE_TIME), Optional.empty(),","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"                getNoteSet(\"Python\")),","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"Jxleejiaxin"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), Status.APPLIED,","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Jxleejiaxin"},"content":"                    new ApplicationDateTime(SAMPLE_DATE_TIME), Optional.empty(),","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"                getNoteSet(\"Java\"))","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"        HMHero sampleAb \u003d new HMHero();","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"     * Returns a note set containing the list of strings given.","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"    public static Set\u003cNote\u003e getNoteSet(String... strings) {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"                .map(Note::new)","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"FredericChow00":13,"Jxleejiaxin":10,"Merrickneo":6,"-":42}},{"path":"src/main/java/seedu/address/model/util/SortByInterviewDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jxleejiaxin"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Jxleejiaxin"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Jxleejiaxin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Jxleejiaxin"},"content":" * Comparator that compares the interview date between shortlisted applicants.","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Jxleejiaxin"},"content":" * Does not change the ordering between non-shortlisted applicants.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Jxleejiaxin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"public class SortByInterviewDate implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Jxleejiaxin"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Jxleejiaxin"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"        if (p1.getStatus() !\u003d Status.SHORTLISTED || p2.getStatus() !\u003d Status.SHORTLISTED) {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Jxleejiaxin"},"content":"            return 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Jxleejiaxin"},"content":"            return p1.getInterviewDateTime().get()","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":"                    .getDateTime()","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Jxleejiaxin"},"content":"                    .compareTo(p2.getInterviewDateTime().get()","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Jxleejiaxin"},"content":"                            .getDateTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Jxleejiaxin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Jxleejiaxin":24}},{"path":"src/main/java/seedu/address/storage/HMHeroStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":" * Represents a storage for {@link HMHero}.","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"public interface HMHeroStorage {","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"     * Returns HMHero data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Merrickneo":4,"-":42}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNote.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":" * Jackson-friendly version of {@link Note}.","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"class JsonAdaptedNote {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    private final String noteName;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"     * Constructs a {@code JsonAdaptedNote} with the given {@code noteName}.","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    public JsonAdaptedNote(String noteName) {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"        this.noteName \u003d noteName;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"     * Converts a given {@code Note} into this class for Jackson use.","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    public JsonAdaptedNote(Note source) {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        noteName \u003d source.noteName;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    @JsonValue","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    public String getNoteName() {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        return noteName;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"     * Converts this Jackson-friendly adapted note object into the model\u0027s {@code Note} object.","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    public Note toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"        return new Note(noteName);","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Merrickneo":43}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.ApplicationDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.InterviewDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Jxleejiaxin"},"content":"    private final String status;","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"    private final String interviewDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"    private final String applicationDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"Jxleejiaxin"},"content":"    private final List\u003cJsonAdaptedNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"            @JsonProperty(\"status\") String status, @JsonProperty(\"applicationDate\") String applicationDate,","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"            @JsonProperty(\"interviewDate\") String interviewDate,","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"Jxleejiaxin"},"content":"            @JsonProperty(\"notes\") List\u003cJsonAdaptedNote\u003e notes) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Jxleejiaxin"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Jxleejiaxin"},"content":"        this.interviewDate \u003d interviewDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"        this.applicationDate \u003d applicationDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"        if (notes !\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"            this.notes.addAll(notes);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Jxleejiaxin"},"content":"        status \u003d source.getStatus().name();","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Jxleejiaxin"},"content":"        interviewDate \u003d source.getInterviewDateTimeString();","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"FredericChow00"},"content":"        applicationDate \u003d source.getApplicationDateTimeString();","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"        notes.addAll(source.getNotes().stream()","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"                .map(JsonAdaptedNote::new)","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"Merrickneo"},"content":"        final List\u003cNote\u003e personNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"        for (JsonAdaptedNote note : notes) {","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"Merrickneo"},"content":"            personNotes.add(note.toModelType());","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"Jxleejiaxin"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"Jxleejiaxin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"Jxleejiaxin"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"Jxleejiaxin"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"Jxleejiaxin"},"content":"        final Status modelStatus \u003d Status.valueOf(status);","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"Jxleejiaxin"},"content":"        if (applicationDate \u003d\u003d null) {","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"Jxleejiaxin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"Jxleejiaxin"},"content":"                    ApplicationDateTime.class.getSimpleName()));","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"Jxleejiaxin"},"content":"        if (!DateTimeParser.isValidDateTime(applicationDate)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"Jxleejiaxin"},"content":"            throw new IllegalValueException(ApplicationDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"Jxleejiaxin"},"content":"        final ApplicationDateTime modelApplicationDateTime \u003d new ApplicationDateTime(","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"Jxleejiaxin"},"content":"                DateTimeParser","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"Jxleejiaxin"},"content":"                .parseDateTime(applicationDate));","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"Jxleejiaxin"},"content":"        if (interviewDate \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"Jxleejiaxin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"Jxleejiaxin"},"content":"                    InterviewDateTime.class.getSimpleName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"Jxleejiaxin"},"content":"        if (!DateTimeParser.isValidDateTime(interviewDate)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"Jxleejiaxin"},"content":"            throw new IllegalValueException(InterviewDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"Jxleejiaxin"},"content":"        //will not throw ParseException as it has been checked in previous line","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"Jxleejiaxin"},"content":"        final Optional\u003cInterviewDateTime\u003e modelInterviewDateTime \u003d InterviewDateTime","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"Jxleejiaxin"},"content":"                .createInterviewDateTime(interviewDate);","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"Merrickneo"},"content":"        final Set\u003cNote\u003e modelNotes \u003d new HashSet\u003c\u003e(personNotes);","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"Jxleejiaxin"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelStatus, modelApplicationDateTime,","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"Jxleejiaxin"},"content":"                modelInterviewDateTime, modelNotes);","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"FredericChow00":7,"Jxleejiaxin":47,"Merrickneo":9,"-":97}},{"path":"src/main/java/seedu/address/storage/JsonHMHeroStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"public class JsonHMHeroStorage implements HMHeroStorage {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonHMHeroStorage.class);","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"    public JsonHMHeroStorage(Path filePath) {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Merrickneo":3,"-":77}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"    @SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"    public HMHero toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"        HMHero HMHero \u003d new HMHero();","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"            if (HMHero.hasPerson(person)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"            HMHero.addPerson(person);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"        return HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Merrickneo":7,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonSerializableHMHero.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.ReadOnlyHMHero;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":" * An Immutable HMHero that is serializable to JSON format.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"class JsonSerializableHMHero {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    public JsonSerializableHMHero(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"     * Converts a given {@code ReadOnlyHMHero} into this class for Jackson use.","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableHMHero}.","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    public JsonSerializableHMHero(ReadOnlyHMHero source) {","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"     * Converts this address book into the model\u0027s {@code HMhero} object.","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"    @SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"    public HMHero toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"        HMHero HMHero \u003d new HMHero();","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"            if (HMHero.hasPerson(person)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"            HMHero.addPerson(person);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"        return HMHero;","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Merrickneo":61}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"public interface Storage extends HMHeroStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Merrickneo":1,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    private HMHeroStorage HMHeroStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"    public StorageManager(HMHeroStorage HMHeroStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        this.HMHeroStorage \u003d HMHeroStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"        return HMHeroStorage.getAddressBookFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"        return readAddressBook(HMHeroStorage.getAddressBookFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"        return HMHeroStorage.readAddressBook(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"        saveAddressBook(addressBook, HMHeroStorage.getAddressBookFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"        HMHeroStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Merrickneo":8,"-":70}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-w14-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Merrickneo":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"    private final String initialMessage;","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"    public MainWindow(Stage primaryStage, Logic logic, String initialMessage) {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"        this.initialMessage \u003d initialMessage;","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"FredericChow00"},"content":"        TextArea message \u003d new TextArea(initialMessage);","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"FredericChow00"},"content":"        message.setWrapText(true);","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"FredericChow00"},"content":"        message.setEditable(false);","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"FredericChow00"},"content":"        message.setMinHeight(1000);","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"FredericChow00"},"content":"        message.setStyle(\"-fx-font-size: 16;\");","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"FredericChow00"},"content":"        resultDisplay.place(message);","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"FredericChow00"},"content":"            resultDisplay.clear();","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"Jxleejiaxin"},"content":"            personListPanel.updateListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"FredericChow00"},"content":"            TextArea message \u003d new TextArea(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"FredericChow00"},"content":"            message.setWrapText(true);","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"FredericChow00"},"content":"            message.setEditable(false);","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"FredericChow00"},"content":"            message.setMinHeight(1000);","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"FredericChow00"},"content":"            message.setStyle(\"-fx-font-size: 16;\");","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"FredericChow00"},"content":"            resultDisplay.place(message);","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"FredericChow00"},"content":"            TextArea message \u003d new TextArea(e.getMessage());","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"FredericChow00"},"content":"            message.setWrapText(true);","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"FredericChow00"},"content":"            message.setEditable(false);","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"FredericChow00"},"content":"            message.setMinHeight(1000);","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"FredericChow00"},"content":"            message.setStyle(\"-fx-font-size: 16;\");","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"FredericChow00"},"content":"            resultDisplay.place(message);","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"FredericChow00":23,"Jxleejiaxin":1,"-":192}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Jxleejiaxin"},"content":"    private Label status;","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Jxleejiaxin"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"Jxleejiaxin"},"content":"        status.setText(person.getStatus().name() + \" \" + person.getInterviewDateTimeDisplay());","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"        person.getNotes().stream()","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"                .sorted(Comparator.comparing(note -\u003e note.noteName))","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"                .forEach(note -\u003e tags.getChildren().add(new Label(note.noteName)));","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Jxleejiaxin":4,"Merrickneo":4,"-":74}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"Jxleejiaxin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Jxleejiaxin"},"content":"     * Updates {@code PersonListPanel} with the sorted {@code ObservableList}.","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Jxleejiaxin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Jxleejiaxin"},"content":"    public void updateListPanel(ObservableList\u003cPerson\u003e filteredPersonList) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Jxleejiaxin"},"content":"        personListView.setItems(filteredPersonList);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Jxleejiaxin"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Jxleejiaxin":8,"-":49}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"    @FXML private ScrollPane scrollPane;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"    @FXML private VBox pane;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"    public void clear() {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"        pane.getChildren().clear();","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"     * Places a node into the scrollPane.","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"    public void place(Node item) {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"        pane.getChildren().add(item);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"        scrollPane.setContent(pane);","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"FredericChow00":16,"-":19}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"    private static final String INITIAL_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"            \"Welcome to HMHero!\\n\\nType help to obtain the link to our User Guide \"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"            + \"where you can see all the commands available!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic, INITIAL_MESSAGE);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"FredericChow00":4,"-":87}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"\u003cStackPane styleClass\u003d\"command-box\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"             style\u003d\"-fx-text-fill: black;\"/\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"FredericChow00":3,"-":7}},{"path":"src/main/resources/view/HMHero.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":".main-body {","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"  -fx-background-color: #F0FFFF;","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"  -fx-padding: 16;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":".menu-bar {","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"  -fx-alignment: center-right;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"  -fx-background-color: #00BFFF;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"  -fx-text-fill: black;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":".menu {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":".command-placeholder,","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":".list-placeholder,","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":".result-placeholder {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"  -fx-border-color: black;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"  -fx-border-radius: 5;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"  -fx-padding: 5;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"  -fx-min-width: 340;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"  -fx-pref-width: 1000;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":".command-placeholder {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":".list-placeholder,","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":".result-placeholder {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":".result-placeholder {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"  -fx-min-height: 300;","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"  -fx-pref-height: 300;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"FredericChow00":43}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"  -fx-background-color: #f1e4c2;","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"  -fx-background-radius: 10px;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"  -fx-border-color: black;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"  -fx-border-radius: 10px;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"  -fx-background-color: #0096c9;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"  -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"  -fx-background-color: #7FFFD4;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"  -fx-padding: 16;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"  -fx-font-family: \"JetBrains Mono\";","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"FredericChow00":9,"-":8}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy UserGuide URL\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"FredericChow00":1,"-":43}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"\u003cfx:root minHeight\u003d\"800\" minWidth\u003d\"1000\" onCloseRequest\u003d\"#handleExit\" title\u003d\"HMHero\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"        \u003cURL value\u003d\"@HMHero.css\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" styleClass\u003d\"menu-bar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"          \u003cMenu text\u003d\"Menu\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"            \u003cMenuItem onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"        \u003c!-- Main Body --\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"        \u003cHBox spacing\u003d\"16\" styleClass\u003d\"main-body\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"          \u003c!-- Left Column --\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"          \u003cVBox spacing\u003d\"12\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"            \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"command-placeholder\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"            \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"list-placeholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"          \u003c!-- Right Column --\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"          \u003cVBox spacing\u003d\"12\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"            \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" styleClass\u003d\"result-placeholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"FredericChow00":25,"-":40}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"          \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"        \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"  wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"  wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"  wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"FredericChow00":7,"-":31}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"\u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" styleClass\u003d\"scroll-result-box\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"  \u003cVBox fx:id\u003d\"pane\" styleClass\u003d\"result-box\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"FredericChow00":5,"-":3}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_PERSON_WITH_NAME_AND_PHONE;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.APPLIED_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.storage.JsonHMHeroStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"        JsonHMHeroStorage addressBookStorage \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"                new JsonHMHeroStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"        String deleteCommand \u003d \"delete n/Bob p/12345678\";","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"        assertCommandException(deleteCommand, MESSAGE_NO_PERSON_WITH_NAME_AND_PHONE);","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"FredericChow00"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"FredericChow00"},"content":"        assertCommandSuccess(ListCommand.COMMAND_WORD, listCommand.getSuccessMessage(model), model);","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"        JsonHMHeroStorage addressBookStorage \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"                new JsonHMHeroIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"Jxleejiaxin"},"content":"                + ADDRESS_DESC_AMY + APPLIED_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"bofeng1999"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withNotes().withInterviewDateTime(\"\").build();","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"Merrickneo"},"content":"    private static class JsonHMHeroIoExceptionThrowingStub extends JsonHMHeroStorage {","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"Merrickneo"},"content":"        private JsonHMHeroIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bofeng1999":1,"FredericChow00":2,"Jxleejiaxin":2,"Merrickneo":10,"-":148}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"bofeng1999"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"bofeng1999"},"content":"        public void refreshListWithPredicate(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"bofeng1999"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"bofeng1999"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"Jxleejiaxin"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"Jxleejiaxin"},"content":"        public void sortFilteredPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"Jxleejiaxin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"Merrickneo"},"content":"            return new HMHero();","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"bofeng1999":5,"Jxleejiaxin":6,"Merrickneo":2,"-":192}},{"path":"src/test/java/seedu/address/logic/commands/AdvanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bofeng1999"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bofeng1999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"bofeng1999"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"bofeng1999"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"bofeng1999"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bofeng1999"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bofeng1999"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bofeng1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.InterviewDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bofeng1999"},"content":"public class AdvanceCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"bofeng1999"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"bofeng1999"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"bofeng1999"},"content":"    public void execute_invalidPerson_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"bofeng1999"},"content":"        AdvanceCommand advanceCommand \u003d new AdvanceCommand(new NamePhoneNumberPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"bofeng1999"},"content":"                new Name(\"invalid name\"), new Phone(\"9999\")), Optional.empty());","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"bofeng1999"},"content":"        CommandException exceptionThrown \u003d assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"bofeng1999"},"content":"            advanceCommand.execute(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"bofeng1999"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"bofeng1999"},"content":"        assertEquals(Messages.MESSAGE_NO_PERSON_WITH_NAME_AND_PHONE, exceptionThrown.getMessage());","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"bofeng1999"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"bofeng1999"},"content":"    public void execute_validShortlistedPersonWithDateTime_throwsCommandException() throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"bofeng1999"},"content":"        Person personToAdvance \u003d new PersonBuilder().withStatus(String.valueOf(Status.SHORTLISTED)).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"bofeng1999"},"content":"        model.addPerson(personToAdvance);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"bofeng1999"},"content":"        InterviewDateTime dateTime \u003d new InterviewDateTime(\"01-01-2023 12:00\");","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"bofeng1999"},"content":"        AdvanceCommand advanceCommand \u003d new AdvanceCommand(new NamePhoneNumberPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"bofeng1999"},"content":"                personToAdvance.getName(), personToAdvance.getPhone()), Optional.ofNullable(dateTime));","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"bofeng1999"},"content":"        CommandException exceptionThrown \u003d assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"bofeng1999"},"content":"            advanceCommand.execute(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"bofeng1999"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"bofeng1999"},"content":"        assertEquals(Messages.MESSAGE_INTERVIEW_DATETIME_NOT_REQUIRED, exceptionThrown.getMessage());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"bofeng1999"},"content":"        model.deletePerson(personToAdvance);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"bofeng1999"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"bofeng1999"},"content":"    public void execute_validAppliedPersonWithNoDateTime_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"bofeng1999"},"content":"        Person personToAdvance \u003d new PersonBuilder().withStatus(String.valueOf(Status.APPLIED)).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"bofeng1999"},"content":"        model.addPerson(personToAdvance);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"bofeng1999"},"content":"        AdvanceCommand advanceCommand \u003d new AdvanceCommand(new NamePhoneNumberPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"bofeng1999"},"content":"                personToAdvance.getName(), personToAdvance.getPhone()), Optional.empty());","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"bofeng1999"},"content":"        CommandException exceptionThrown \u003d assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"bofeng1999"},"content":"            advanceCommand.execute(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"bofeng1999"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"bofeng1999"},"content":"        assertEquals(Messages.MESSAGE_INTERVIEW_DATETIME_IS_REQUIRED, exceptionThrown.getMessage());","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"bofeng1999"},"content":"        model.deletePerson(personToAdvance);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"bofeng1999"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"bofeng1999"},"content":"    public void execute_validAcceptedPerson_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"bofeng1999"},"content":"        Person personToAdvance \u003d new PersonBuilder().withStatus(String.valueOf(Status.ACCEPTED)).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"bofeng1999"},"content":"        model.addPerson(personToAdvance);","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"bofeng1999"},"content":"        AdvanceCommand advanceCommand \u003d new AdvanceCommand(new NamePhoneNumberPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"bofeng1999"},"content":"                personToAdvance.getName(), personToAdvance.getPhone()), Optional.empty());","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"bofeng1999"},"content":"        CommandException exceptionThrown \u003d assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"bofeng1999"},"content":"            advanceCommand.execute(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"bofeng1999"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"FredericChow00"},"content":"        assertEquals(String.format(AdvanceCommand.MESSAGE_PERSON_CANNOT_BE_ADVANCED,","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"FredericChow00"},"content":"                personToAdvance.getName().fullName), exceptionThrown.getMessage());","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"bofeng1999"},"content":"        model.deletePerson(personToAdvance);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"FredericChow00"},"content":"    public void execute_duplicateInterviewDateApplicant_failure() throws Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"FredericChow00"},"content":"        Person personToAdvance \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"FredericChow00"},"content":"        Person clashingPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"FredericChow00"},"content":"        InterviewDateTime clashingDateTime \u003d new InterviewDateTime(\"02-03-2023 14:00\");","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(personToAdvance.getName(), personToAdvance.getPhone());","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate clashingNamePhonePredicate \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(clashingPerson.getName(), clashingPerson.getPhone());","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"FredericChow00"},"content":"        AdvanceCommand advanceCommand \u003d new AdvanceCommand(namePhonePredicate, Optional.of(clashingDateTime));","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"FredericChow00"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_DUPLICATE_INTERVIEW_DATE,","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"FredericChow00"},"content":"                clashingPerson.getName());","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"bofeng1999"},"content":"        Predicate\u003cPerson\u003e sameInterviewDTPredicate \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"bofeng1999"},"content":"                person -\u003e (person.equals(clashingPerson) || person.equals(personToAdvance));","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"bofeng1999"},"content":"        model.refreshListWithPredicate(sameInterviewDTPredicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"FredericChow00"},"content":"        assertCommandFailure(advanceCommand, model, expectedMessage);","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"bofeng1999"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"bofeng1999"},"content":"    public void execute_validShortlistedPerson_shouldAdvanceToAccepted() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"Merrickneo"},"content":"        Model expectedModel \u003d new ModelManager(new HMHero(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"FredericChow00"},"content":"        Person personToAdvance \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToAdvance);","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"FredericChow00"},"content":"        Person advancedPerson \u003d personInList.withStatus(\"ACCEPTED\").build();","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(advancedPerson.getName(), advancedPerson.getPhone());","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"FredericChow00"},"content":"        AdvanceCommand advanceCommand \u003d new AdvanceCommand(namePhonePredicate, Optional.empty());","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"FredericChow00"},"content":"        String expectedMessage \u003d String.format(AdvanceCommand.MESSAGE_ADVANCE_PERSON_SUCCESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"FredericChow00"},"content":"                personToAdvance.getName(), personToAdvance.getStatus(), advancedPerson.getStatus());","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"FredericChow00"},"content":"        expectedModel.setPerson(personToAdvance, advancedPerson);","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"FredericChow00"},"content":"        expectedModel.updateFilteredPersonList(namePhonePredicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"FredericChow00"},"content":"        assertCommandSuccess(advanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"bofeng1999"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"bofeng1999"},"content":"    public void execute_validAppliedPersonWithInterviewDate_shouldAdvanceToShortlisted() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"Merrickneo"},"content":"        Model expectedModel \u003d new ModelManager(new HMHero(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"FredericChow00"},"content":"        Person personToAdvance \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToAdvance);","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"bofeng1999"},"content":"        InterviewDateTime dateTime \u003d new InterviewDateTime(\"01-01-2025 13:00\");","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"FredericChow00"},"content":"        Person advancedPerson \u003d personInList.withStatus(\"SHORTLISTED\")","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"bofeng1999"},"content":"                .withInterviewDateTime(\"01-01-2025 13:00\").build();","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(advancedPerson.getName(), advancedPerson.getPhone());","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"FredericChow00"},"content":"        AdvanceCommand advanceCommand \u003d new AdvanceCommand(namePhonePredicate, Optional.of(dateTime));","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"FredericChow00"},"content":"        String expectedMessage \u003d String.format(AdvanceCommand.MESSAGE_ADVANCE_PERSON_SUCCESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"FredericChow00"},"content":"                personToAdvance.getName(), personToAdvance.getStatus(), advancedPerson.getStatus());","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"FredericChow00"},"content":"        expectedModel.setPerson(personToAdvance, advancedPerson);","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"FredericChow00"},"content":"        expectedModel.updateFilteredPersonList(namePhonePredicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"FredericChow00"},"content":"        assertCommandSuccess(advanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"bofeng1999"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"bofeng1999"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"bofeng1999"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"bofeng1999"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"bofeng1999"},"content":"        NamePhoneNumberPredicate alicePredicate \u003d new NamePhoneNumberPredicate(alice.getName(), alice.getPhone());","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"bofeng1999"},"content":"        NamePhoneNumberPredicate bobPredicate \u003d new NamePhoneNumberPredicate(bob.getName(), bob.getPhone());","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"bofeng1999"},"content":"        AdvanceCommand advanceFirstCommand \u003d new AdvanceCommand(alicePredicate, Optional.empty());","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"bofeng1999"},"content":"        AdvanceCommand advanceSecondCommand \u003d new AdvanceCommand(bobPredicate, Optional.empty());","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"bofeng1999"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"bofeng1999"},"content":"        assertTrue(advanceFirstCommand.equals(advanceFirstCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"bofeng1999"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"bofeng1999"},"content":"        AdvanceCommand advanceFirstCommandCopy \u003d new AdvanceCommand(alicePredicate, Optional.empty());","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"bofeng1999"},"content":"        assertTrue(advanceFirstCommand.equals(advanceFirstCommandCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"bofeng1999"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"bofeng1999"},"content":"        assertFalse(advanceFirstCommand.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"bofeng1999"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"bofeng1999"},"content":"        assertFalse(advanceFirstCommand.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"bofeng1999"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"bofeng1999"},"content":"        assertFalse(advanceFirstCommand.equals(advanceSecondCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"bofeng1999"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"bofeng1999":125,"FredericChow00":52,"Merrickneo":3}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        expectedModel.setAddressBook(new HMHero());","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Merrickneo":2,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLIEDTIME;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"    public static final String VALID_NAME_JOE \u003d \"Joe Choo\";","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"    public static final String VALID_PHONE_JOE \u003d \"33333333\";","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"    public static final String VALID_EMAIL_JOE \u003d \"joe@example.com\";","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"    public static final String VALID_ADDRESS_JOE \u003d \"Block 123, Joe Street 3\";","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final String VALID_STATUS_AMY \u003d \"APPLIED\";","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"bofeng1999"},"content":"    public static final String VALID_INTERVIEW_DATE_AMY \u003d \"20-03-2023 12:12\";","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"    public static final String VALID_STATUS_BOB \u003d \"APPLIED\";","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"    public static final String VALID_STATUS_JOE \u003d \"REJECTED\";","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"    public static final String VALID_APPLICATIONDATE_AMY \u003d \"03-01-2023 13:00\";","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"    public static final String VALID_APPLICATIONDATE_BOB \u003d \"04-01-2023 19:30\";","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"    public static final String VALID_NOTE_HUSBAND \u003d \"husband\";","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"    public static final String VALID_NOTE_FRIEND \u003d \"friends\";","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"FredericChow00"},"content":"    public static final String NAME_DESC_JOE \u003d \" \" + PREFIX_NAME + VALID_NAME_JOE;","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"FredericChow00"},"content":"    public static final String PHONE_DESC_JOE \u003d \" \" + PREFIX_PHONE + VALID_PHONE_JOE;","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"FredericChow00"},"content":"    public static final String EMAIL_DESC_JOE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_JOE;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"FredericChow00"},"content":"    public static final String ADDRESS_DESC_JOE \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_JOE;","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"bofeng1999"},"content":"    public static final String INTERVIEW_AMY \u003d \" \" + PREFIX_DATETIME + VALID_INTERVIEW_DATE_AMY;","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final String APPLIED_DESC_AMY \u003d \" \" + PREFIX_APPLIEDTIME + VALID_APPLICATIONDATE_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final String APPLIED_DESC_BOB \u003d \" \" + PREFIX_APPLIEDTIME + VALID_APPLICATIONDATE_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_NOTE + VALID_NOTE_FRIEND;","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"FredericChow00"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_NOTE + VALID_NOTE_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"bofeng1999"},"content":"    public static final String INVALID_DATETIME_DESC \u003d \" \" + PREFIX_DATETIME + \"20-may-2023 12:12\";","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"bofeng1999"},"content":"    // words not allowed in dateTime","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"Merrickneo"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_NOTE + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"FredericChow00"},"content":"    public static final String EMPTY_PREAMBLE \u003d \" \";","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"FredericChow00"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_JOE;","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"FredericChow00"},"content":"    public static final NamePhoneNumberPredicate NAME_PHONE_PREDICATE_AMY \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"FredericChow00"},"content":"            new NamePhoneNumberPredicate(new Name(VALID_NAME_AMY), new Phone(VALID_PHONE_AMY));","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"FredericChow00"},"content":"    public static final NamePhoneNumberPredicate NAME_PHONE_PREDICATE_BOB \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"FredericChow00"},"content":"            new NamePhoneNumberPredicate(new Name(VALID_NAME_BOB), new Phone(VALID_PHONE_BOB));","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"Merrickneo"},"content":"                .withNotes(VALID_NOTE_FRIEND).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"FredericChow00"},"content":"                .withNotes(VALID_NOTE_HUSBAND, VALID_NOTE_FRIEND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"FredericChow00"},"content":"        DESC_JOE \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_JOE)","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"FredericChow00"},"content":"                .withPhone(VALID_PHONE_JOE).withEmail(VALID_EMAIL_JOE).withAddress(VALID_ADDRESS_JOE)","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"FredericChow00"},"content":"                .withNotes(VALID_NOTE_HUSBAND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"Merrickneo"},"content":"        HMHero expectedHMHero \u003d new HMHero(actualModel.getAddressBook());","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":155,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"FredericChow00"},"content":"        /* we don\u0027t check for filtered list if reject command fails because we still want list to be filtered","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"FredericChow00"},"content":"        so that user can see */","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"FredericChow00"},"content":"        if (!(command instanceof RejectCommand)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"Merrickneo"},"content":"            assertEquals(expectedHMHero, actualModel.getAddressBook());","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"FredericChow00"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bofeng1999":5,"FredericChow00":45,"Jxleejiaxin":6,"Merrickneo":7,"-":116}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"@SuppressWarnings(\"checkstyle:CommentsIndentation\")","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"    //    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    //    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"    //        Person personToDelete \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    //        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    //        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    //        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    //        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    //        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"    //    }","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"    //    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"    //    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    //        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"    //        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"    //        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"    //    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"    //    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"    //    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"    //        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"    //        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"    //        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"    //        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"    //        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"    //        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"    //        showNoPerson(expectedModel);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"    //        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"    //    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"    //    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"    //    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"    //        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"    //        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"    //        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"    //        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"    //        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"    //","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"    //        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"    //    }","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"        NamePhoneNumberPredicate alicePredicate \u003d new NamePhoneNumberPredicate(alice.getName(), alice.getPhone());","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"        NamePhoneNumberPredicate bobPredicate \u003d new NamePhoneNumberPredicate(bob.getName(), bob.getPhone());","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(alicePredicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(bobPredicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"Merrickneo"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(alicePredicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Merrickneo":59,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FORTH_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"        Model expectedModel \u003d new ModelManager(new HMHero(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"                .withNotes(VALID_NOTE_HUSBAND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"                .withPhone(VALID_PHONE_BOB).withNotes(VALID_NOTE_HUSBAND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"        Model expectedModel \u003d new ModelManager(new HMHero(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"        Model expectedModel \u003d new ModelManager(new HMHero(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"Merrickneo"},"content":"        Model expectedModel \u003d new ModelManager(new HMHero(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"bofeng1999"},"content":"    public void execute_duplicatePersonFilteredList_failure() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"bofeng1999"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_FORTH_PERSON.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"bofeng1999"},"content":"        // object \u003d this -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":162,"author":{"gitId":"bofeng1999"},"content":"        assertTrue(copyDescriptor.equals(copyDescriptor));","lastModifiedDate":"2023-03-21"},{"lineNumber":163,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":164,"author":{"gitId":"bofeng1999"},"content":"        // object \u003d null -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"bofeng1999"},"content":"        assertFalse(copyDescriptor.equals(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":166,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":167,"author":{"gitId":"bofeng1999"},"content":"        copyDescriptor.isAnyFieldEdited();","lastModifiedDate":"2023-03-21"},{"lineNumber":168,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"bofeng1999":11,"FredericChow00":4,"Merrickneo":5,"-":162}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withNotes(VALID_NOTE_HUSBAND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"FredericChow00":2,"-":56}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"Jxleejiaxin"},"content":"    // Commented out as new FindCommand will cause these tests to fail","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"Jxleejiaxin"},"content":"    // TODO: add new similar test cases","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"Jxleejiaxin"},"content":"    //@Test","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"Jxleejiaxin"},"content":"    //public void execute_zeroKeywords_errorThrown() {","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"Jxleejiaxin"},"content":"    //    String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"Jxleejiaxin"},"content":"    //    NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"Jxleejiaxin"},"content":"    //    FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"Jxleejiaxin"},"content":"    //    expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"Jxleejiaxin"},"content":"    //}","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"Jxleejiaxin"},"content":"    //","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"Jxleejiaxin"},"content":"    //@Test","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"Jxleejiaxin"},"content":"    //public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"Jxleejiaxin"},"content":"    //    String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"Jxleejiaxin"},"content":"    //    NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"Jxleejiaxin"},"content":"    //    FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"Jxleejiaxin"},"content":"    //    expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"Jxleejiaxin"},"content":"    //}","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jxleejiaxin":21,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"        assertCommandSuccess(listCommand, model, listCommand.getSuccessMessage(model), expectedModel);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"     * ListCommand still shows every applicant after FindCommand is called","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"        assertCommandSuccess(listCommand, model, listCommand.getSuccessMessage(model), expectedModel);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"FredericChow00":7,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/RejectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_PHONE_PREDICATE_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_PHONE_PREDICATE_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FORTH_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"public class RejectCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"    public void execute_appliedStatusApplicant_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        Model expectedModel \u003d new ModelManager(new HMHero(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"        Person personToReject \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToReject);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"        Person rejectedPerson \u003d personInList.withStatus(\"REJECTED\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(rejectedPerson.getName(), rejectedPerson.getPhone());","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"        RejectCommand rejectCommand \u003d new RejectCommand(namePhonePredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"        String expectedMessage \u003d String.format(RejectCommand.MESSAGE_REJECT_PERSON_SUCCESS, rejectedPerson.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"        expectedModel.setPerson(personToReject, rejectedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"        expectedModel.updateFilteredPersonList(namePhonePredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"        assertCommandSuccess(rejectCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"    public void execute_shortlistedStatusApplicant_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"        Model expectedModel \u003d new ModelManager(new HMHero(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"        Person personToReject \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToReject);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"        Person rejectedPerson \u003d personInList.withStatus(\"REJECTED\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(rejectedPerson.getName(), rejectedPerson.getPhone());","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"        RejectCommand rejectCommand \u003d new RejectCommand(namePhonePredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"        String expectedMessage \u003d String.format(RejectCommand.MESSAGE_REJECT_PERSON_SUCCESS, rejectedPerson.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"FredericChow00"},"content":"        expectedModel.setPerson(personToReject, rejectedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"FredericChow00"},"content":"        expectedModel.updateFilteredPersonList(namePhonePredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"FredericChow00"},"content":"        assertCommandSuccess(rejectCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"FredericChow00"},"content":"    public void execute_acceptedStatusApplicant_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"        Model expectedModel \u003d new ModelManager(new HMHero(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"FredericChow00"},"content":"        Person personToReject \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToReject);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"FredericChow00"},"content":"        Person rejectedPerson \u003d personInList.withStatus(\"REJECTED\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(rejectedPerson.getName(), rejectedPerson.getPhone());","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"FredericChow00"},"content":"        RejectCommand rejectCommand \u003d new RejectCommand(namePhonePredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"FredericChow00"},"content":"        String expectedMessage \u003d String.format(RejectCommand.MESSAGE_REJECT_PERSON_SUCCESS, rejectedPerson.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"FredericChow00"},"content":"        expectedModel.setPerson(personToReject, rejectedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"FredericChow00"},"content":"        expectedModel.updateFilteredPersonList(namePhonePredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"FredericChow00"},"content":"        assertCommandSuccess(rejectCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"FredericChow00"},"content":"     * Edits filtered list to show the person that the user wants to reject.","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"FredericChow00"},"content":"     * User is still able to reject applicants from outside the filtered list","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"FredericChow00"},"content":"     * without having to call the list command again to show the unfiltered list","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"FredericChow00"},"content":"    public void execute_validNamePhoneFilteredList_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"FredericChow00"},"content":"        Person personToReject \u003d model.getFilteredPersonList().get(INDEX_FORTH_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"FredericChow00"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToReject);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"FredericChow00"},"content":"        Person rejectedPerson \u003d personInList.withStatus(\"REJECTED\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(rejectedPerson.getName(), rejectedPerson.getPhone());","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"FredericChow00"},"content":"        RejectCommand rejectCommand \u003d new RejectCommand(namePhonePredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"FredericChow00"},"content":"        String expectedMessage \u003d String.format(RejectCommand.MESSAGE_REJECT_PERSON_SUCCESS, rejectedPerson.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"Merrickneo"},"content":"        Model expectedModel \u003d new ModelManager(new HMHero(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"FredericChow00"},"content":"        expectedModel.setPerson(personToReject, rejectedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"FredericChow00"},"content":"        expectedModel.updateFilteredPersonList(namePhonePredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"FredericChow00"},"content":"        assertCommandSuccess(rejectCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"FredericChow00"},"content":"    public void execute_rejectedStatusApplicant_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"FredericChow00"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"FredericChow00"},"content":"        Person personToReject \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToReject);","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"FredericChow00"},"content":"        Person rejectedPerson \u003d personInList.withStatus(\"REJECTED\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(rejectedPerson.getName(), rejectedPerson.getPhone());","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"FredericChow00"},"content":"        RejectCommand rejectCommand \u003d new RejectCommand(namePhonePredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"FredericChow00"},"content":"        String expectedMessage \u003d String.format(RejectCommand.MESSAGE_PERSON_CANNOT_BE_REJECTED,","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"FredericChow00"},"content":"                rejectedPerson.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"FredericChow00"},"content":"        assertCommandFailure(rejectCommand, model, expectedMessage);","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"FredericChow00"},"content":"    public void execute_invalidNameUnfilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"FredericChow00"},"content":"        Person personToReject \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToReject);","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"FredericChow00"},"content":"        Person invalidNamePerson \u003d personInList.withName(\"wrongName\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(invalidNamePerson.getName(), invalidNamePerson.getPhone());","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"FredericChow00"},"content":"        RejectCommand rejectCommand \u003d new RejectCommand(namePhonePredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"FredericChow00"},"content":"        assertCommandFailure(rejectCommand, model, Messages.MESSAGE_NO_PERSON_WITH_NAME_AND_PHONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"FredericChow00"},"content":"     * Edit filtered list but user is still able to reject applicants from outside the filtered list","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"FredericChow00"},"content":"     * without having to call the list command again to show the unfiltered list","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"FredericChow00"},"content":"    public void execute_invalidNameFilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"FredericChow00"},"content":"        Person personToReject \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"FredericChow00"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToReject);","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"FredericChow00"},"content":"        Person invalidNamePerson \u003d personInList.withName(\"wrongName\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(invalidNamePerson.getName(), invalidNamePerson.getPhone());","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"FredericChow00"},"content":"        RejectCommand rejectCommand \u003d new RejectCommand(namePhonePredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"FredericChow00"},"content":"        assertCommandFailure(rejectCommand, model, Messages.MESSAGE_NO_PERSON_WITH_NAME_AND_PHONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"FredericChow00"},"content":"    public void execute_invalidPhoneUnfilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"FredericChow00"},"content":"        Person personToReject \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToReject);","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"FredericChow00"},"content":"        Person invalidNamePerson \u003d personInList.withPhone(\"999\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(invalidNamePerson.getName(), invalidNamePerson.getPhone());","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"FredericChow00"},"content":"        RejectCommand rejectCommand \u003d new RejectCommand(namePhonePredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"FredericChow00"},"content":"        assertCommandFailure(rejectCommand, model, Messages.MESSAGE_NO_PERSON_WITH_NAME_AND_PHONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"FredericChow00"},"content":"     * Edit filtered list but user is still able to reject applicants from outside the filtered list","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"FredericChow00"},"content":"     * without having to call the list command again to show the unfiltered list","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"FredericChow00"},"content":"    public void execute_invalidPhoneFilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"FredericChow00"},"content":"        Person personToReject \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"FredericChow00"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToReject);","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"FredericChow00"},"content":"        Person invalidNamePerson \u003d personInList.withPhone(\"999\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(invalidNamePerson.getName(), invalidNamePerson.getPhone());","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"FredericChow00"},"content":"        RejectCommand rejectCommand \u003d new RejectCommand(namePhonePredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"FredericChow00"},"content":"        assertCommandFailure(rejectCommand, model, Messages.MESSAGE_NO_PERSON_WITH_NAME_AND_PHONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"FredericChow00"},"content":"    public void execute_invalidNamePhoneCombinationFilteredList_failure() {","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"FredericChow00"},"content":"        Person personToReject \u003d model.getFilteredPersonList().get(INDEX_FORTH_PERSON.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"FredericChow00"},"content":"        Person wrongPerson \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"FredericChow00"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToReject);","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder wrongPersonInList \u003d new PersonBuilder(wrongPerson);","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"FredericChow00"},"content":"        Person rejectedPerson \u003d personInList.withStatus(\"REJECTED\").build();","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"FredericChow00"},"content":"        Person wrongRejectedPerson \u003d wrongPersonInList.withStatus(\"REJECTED\").build();","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(rejectedPerson.getName(), wrongRejectedPerson.getPhone());","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"FredericChow00"},"content":"        RejectCommand rejectCommand \u003d new RejectCommand(namePhonePredicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"FredericChow00"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_NO_PERSON_WITH_NAME_AND_PHONE);","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"FredericChow00"},"content":"        assertCommandFailure(rejectCommand, model, expectedMessage);","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"FredericChow00"},"content":"    public void execute_invalidNamePhoneCombinationUnfilteredList_failure() {","lastModifiedDate":"2023-03-15"},{"lineNumber":220,"author":{"gitId":"FredericChow00"},"content":"        Person personToReject \u003d model.getFilteredPersonList().get(INDEX_FORTH_PERSON.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"FredericChow00"},"content":"        Person wrongPerson \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToReject);","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"FredericChow00"},"content":"        PersonBuilder wrongPersonInList \u003d new PersonBuilder(wrongPerson);","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":226,"author":{"gitId":"FredericChow00"},"content":"        Person rejectedPerson \u003d personInList.withStatus(\"REJECTED\").build();","lastModifiedDate":"2023-03-15"},{"lineNumber":227,"author":{"gitId":"FredericChow00"},"content":"        Person wrongRejectedPerson \u003d wrongPersonInList.withStatus(\"REJECTED\").build();","lastModifiedDate":"2023-03-15"},{"lineNumber":228,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":229,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate namePhonePredicate \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"FredericChow00"},"content":"                new NamePhoneNumberPredicate(rejectedPerson.getName(), wrongRejectedPerson.getPhone());","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"FredericChow00"},"content":"        RejectCommand rejectCommand \u003d new RejectCommand(namePhonePredicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"FredericChow00"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_NO_PERSON_WITH_NAME_AND_PHONE);","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"FredericChow00"},"content":"        assertCommandFailure(rejectCommand, model, expectedMessage);","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":237,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":238,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"FredericChow00"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"FredericChow00"},"content":"        final RejectCommand standardCommand \u003d new RejectCommand(NAME_PHONE_PREDICATE_AMY);","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"FredericChow00"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"FredericChow00"},"content":"        RejectCommand commandWithSamePredicate \u003d new RejectCommand(NAME_PHONE_PREDICATE_AMY);","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"FredericChow00"},"content":"        assertTrue(standardCommand.equals(commandWithSamePredicate));","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"FredericChow00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"FredericChow00"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"FredericChow00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"FredericChow00"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"FredericChow00"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"FredericChow00"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"FredericChow00"},"content":"        // different predicates -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"FredericChow00"},"content":"        assertFalse(standardCommand.equals(new RejectCommand(NAME_PHONE_PREDICATE_BOB)));","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":259,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"FredericChow00":254,"Merrickneo":5}},{"path":"src/test/java/seedu/address/logic/commands/RemindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dunliang0513"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"dunliang0513"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"dunliang0513"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"dunliang0513"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"dunliang0513"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"dunliang0513"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"dunliang0513"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"dunliang0513"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"dunliang0513"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"dunliang0513"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"dunliang0513"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"dunliang0513"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemindCommand.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"dunliang0513"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"dunliang0513"},"content":"public class RemindCommandTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"dunliang0513"},"content":"    private Model model;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"dunliang0513"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"dunliang0513"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"dunliang0513"},"content":"    public void setup() {","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"dunliang0513"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"        expectedModel \u003d new ModelManager(new HMHero(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"dunliang0513"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"dunliang0513"},"content":"    public void execute_remind_noPersonFound() {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"dunliang0513"},"content":"        Person personToRemind \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"dunliang0513"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToRemind);","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"dunliang0513"},"content":"        LocalDateTime currentDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"dunliang0513"},"content":"        //Set the interview time to four days from now","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"dunliang0513"},"content":"        LocalDateTime newDate \u003d currentDate.plusDays(4);","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"dunliang0513"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"dunliang0513"},"content":"        String interviewTime \u003d newDate.format(formatter);","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"dunliang0513"},"content":"        Person remindPerson \u003d personInList","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"dunliang0513"},"content":"                .withStatus(String.valueOf(Status.SHORTLISTED))","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"dunliang0513"},"content":"                .withInterviewDateTime(interviewTime)","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"dunliang0513"},"content":"                .build();","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"dunliang0513"},"content":"        RemindCommand remindCommand \u003d new RemindCommand();","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"dunliang0513"},"content":"        expectedModel.setPerson(personToRemind, remindPerson);","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"dunliang0513"},"content":"        expectedModel.updateFilteredPersonList(RemindCommand.INTERVIEW_IN_THREE_DAYS_PREDICATE);","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"dunliang0513"},"content":"        String expectedMessage \u003d RemindCommand.MESSAGE_SUCCESS_FORMAT_WITHOUT_APPLICANTS;","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"dunliang0513"},"content":"        CommandResult result \u003d remindCommand.execute(model);","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"dunliang0513"},"content":"        CommandResult expectedResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"dunliang0513"},"content":"        assertEquals(expectedResult, result);","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"dunliang0513"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"dunliang0513"},"content":"    public void execute_remind_showsEverything() {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"dunliang0513"},"content":"        Person personToRemind \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getOneBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"dunliang0513"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToRemind);","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"dunliang0513"},"content":"        LocalDateTime currentDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"dunliang0513"},"content":"        //Set the interview date to within three days","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"dunliang0513"},"content":"        LocalDateTime newDate \u003d currentDate.plusDays(1);","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"dunliang0513"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"dunliang0513"},"content":"        String interviewTime \u003d newDate.format(formatter);","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"dunliang0513"},"content":"        Person remindPerson \u003d personInList","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"dunliang0513"},"content":"                .withStatus(String.valueOf(Status.SHORTLISTED))","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"dunliang0513"},"content":"                .withInterviewDateTime(interviewTime)","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"dunliang0513"},"content":"                .build();","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"dunliang0513"},"content":"        RemindCommand remindCommand \u003d new RemindCommand();","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"dunliang0513"},"content":"        model.setPerson(personToRemind, remindPerson);","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"dunliang0513"},"content":"        model.updateFilteredPersonList(RemindCommand.INTERVIEW_IN_THREE_DAYS_PREDICATE);","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"dunliang0513"},"content":"        String expectedMessage \u003d RemindCommand.MESSAGE_SUCCESS_FORMAT_WITH_APPLICANTS;","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"dunliang0513"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"dunliang0513"},"content":"        CommandResult result \u003d remindCommand.execute(model);","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"dunliang0513"},"content":"        CommandResult expectedResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"dunliang0513"},"content":"        assertEquals(expectedResult, result);","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"dunliang0513"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"dunliang0513"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"dunliang0513":89,"Merrickneo":2}},{"path":"src/test/java/seedu/address/logic/commands/SummaryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"public class SummaryCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    private Model model;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    public void execute_listHasApplicantsWithInterviewDate_outputsCorrectCalculation() {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        Model expectedModel \u003d new ModelManager(new HMHero(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand();","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        CommandResult expectedResult \u003d summaryCommand.execute(expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        assertCommandSuccess(summaryCommand, model, expectedResult, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"    public void execute_listHasNoApplicantsWithInterview_showDefaultMessage() {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        ClearCommand clearCommand \u003d new ClearCommand();","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"        clearCommand.execute(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"        model.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"        model.addPerson(TypicalPersons.DANIEL);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"        SummaryCommand summaryCommand \u003d new SummaryCommand();","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(SummaryCommand.MESSAGE_NO_INTERVIEW, summaryCommand.getSuccessMessage(model));","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Merrickneo":41}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.APPLIED_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.APPLIED_DESC_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_FRIEND;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"bofeng1999"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withNotes(VALID_NOTE_FRIEND).withInterviewDateTime(\"\").build();","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"Jxleejiaxin"},"content":"                + ADDRESS_DESC_BOB + APPLIED_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"Jxleejiaxin"},"content":"                + ADDRESS_DESC_BOB + APPLIED_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"Jxleejiaxin"},"content":"                + ADDRESS_DESC_BOB + APPLIED_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"Jxleejiaxin"},"content":"                + ADDRESS_DESC_BOB + APPLIED_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"Jxleejiaxin"},"content":"                + ADDRESS_DESC_BOB + APPLIED_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"FredericChow00"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withNotes(VALID_NOTE_FRIEND, VALID_NOTE_HUSBAND)","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"bofeng1999"},"content":"                .withInterviewDateTime(\"\").build();","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"Jxleejiaxin"},"content":"                + APPLIED_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withNotes().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"Jxleejiaxin"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"Jxleejiaxin"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + APPLIED_DESC_AMY,","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bofeng1999":2,"FredericChow00":3,"Jxleejiaxin":10,"Merrickneo":2,"-":121}},{"path":"src/test/java/seedu/address/logic/parser/AdvanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bofeng1999"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bofeng1999"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bofeng1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.logic.commands.AdvanceCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"bofeng1999"},"content":"public class AdvanceCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"    private final AdvanceCommandParser parser \u003d new AdvanceCommandParser();","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bofeng1999"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bofeng1999"},"content":"    public void parse_validArgs_returnsAdvanceCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bofeng1999"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"bofeng1999"},"content":"        Person amy \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"bofeng1999"},"content":"        NamePhoneNumberPredicate predicate \u003d new NamePhoneNumberPredicate(amy.getName(), amy.getPhone());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bofeng1999"},"content":"        AdvanceCommand expectedAdvanceCommand \u003d new AdvanceCommand(predicate, Optional.empty());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"        // standard preamble","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"bofeng1999"},"content":"        assertParseSuccess(parser, \" n/Amy Bee p/11111111\", expectedAdvanceCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"bofeng1999"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"bofeng1999"},"content":"        assertParseSuccess(parser, \" \\n n/Amy Bee \\n \\t p/11111111  \\t\", expectedAdvanceCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"        // multiple persons - last person accepted (Bob)","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + NAME_DESC_AMY + PHONE_DESC_AMY, expectedAdvanceCommand);","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"        // one person, multiple phones - last phone accepted","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_BOB + PHONE_DESC_AMY, expectedAdvanceCommand);","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"        // one person, multiple names - last names accepted","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + NAME_DESC_AMY + PHONE_DESC_AMY, expectedAdvanceCommand);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"bofeng1999"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"bofeng1999"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"bofeng1999"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"bofeng1999"},"content":"                AdvanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"bofeng1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"bofeng1999"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"bofeng1999"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"bofeng1999"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"bofeng1999"},"content":"                AdvanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"bofeng1999"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"bofeng1999"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"bofeng1999":40,"FredericChow00":20}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"        String argsString \u003d \"  some random string /t note with leading and trailing spaces \";","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Merrickneo":1,"-":149}},{"path":"src/test/java/seedu/address/logic/parser/DateTimeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    private static final String templateDateTimeString \u003d \"12-02-2023 18:00\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    private final LocalDateTime template \u003d LocalDateTime.of(2023, 02, 12, 18, 0);","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    public void createDateTime_validFormat() throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"        LocalDateTime dateTime \u003d DateTimeParser.parseDateTime(\"12-02-2023 18:00\");","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(template, dateTime);","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    public void createDateTime_invalidFormat_parseExceptionThrown() {","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        assertThrows(ParseException.class, () -\u003e DateTimeParser.parseDateTime(\"2020-02-12 18:00\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    public void createDateTime_emptyString_nullDateTimeField() throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        LocalDateTime dateTime \u003d DateTimeParser.parseDateTime(\"\");","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(dateTime, null);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"    @Test void dateTimeFormatter_formatsDateTimeInValidFormat() {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        String formattedDateTime \u003d DateTimeParser.datetimeFormatter(template);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(formattedDateTime, templateDateTimeString);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Merrickneo":37}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"        Person amy \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"        NamePhoneNumberPredicate predicate \u003d new NamePhoneNumberPredicate(amy.getName(), amy.getPhone());","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"        DeleteCommand expectedDeleteCommand \u003d new DeleteCommand(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        assertParseSuccess(parser, \" n/Amy Bee p/11111111\", expectedDeleteCommand);","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"        assertParseSuccess(parser, \" \\n n/Amy Bee \\n \\t p/11111111  \\t\", expectedDeleteCommand);","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Merrickneo":17,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INTERVIEW_AMY;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATETIME_DESC;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"bofeng1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_DATE_AMY;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_FRIEND;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.InterviewDateTime;","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_NOTE;","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"bofeng1999"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATETIME_DESC, InterviewDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"bofeng1999"},"content":"        //invalid dateTime","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"bofeng1999"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"bofeng1999"},"content":"                        + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"bofeng1999"},"content":"    public void parse_allFieldsSpecified_success() throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":109,"author":{"gitId":"bofeng1999"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND + INTERVIEW_AMY;","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"bofeng1999"},"content":"                .withNotes(VALID_NOTE_HUSBAND, VALID_NOTE_FRIEND).withDateTime(VALID_INTERVIEW_DATE_AMY).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"Merrickneo"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withNotes(VALID_NOTE_FRIEND).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"Merrickneo"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"FredericChow00"},"content":"                .withNotes(VALID_NOTE_FRIEND, VALID_NOTE_HUSBAND)","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"Merrickneo"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withNotes().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"bofeng1999":11,"FredericChow00":2,"Merrickneo":6,"-":190}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"Jxleejiaxin"},"content":"    //TODO: add new test cases","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"Jxleejiaxin"},"content":"    //@Test","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"Jxleejiaxin"},"content":"    //public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"Jxleejiaxin"},"content":"    //    // no leading and trailing whitespaces","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"Jxleejiaxin"},"content":"    //    FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"Jxleejiaxin"},"content":"    //            new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"Jxleejiaxin"},"content":"    //","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"Jxleejiaxin"},"content":"    //    // multiple whitespaces between keywords","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"Jxleejiaxin"},"content":"    //}","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Jxleejiaxin":12,"-":20}},{"path":"src/test/java/seedu/address/logic/parser/HMHeroParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"public class HMHeroParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    private final HMHeroParser parser \u003d new HMHeroParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + PersonUtil.getPersonNameAndPhoneNumber(person));","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(new DeleteCommand(new NamePhoneNumberPredicate(person.getName(), person.getPhone())), command);","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"Jxleejiaxin"},"content":"    // TODO: add new test case","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"Jxleejiaxin"},"content":"    //@Test","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"Jxleejiaxin"},"content":"    //public void parseCommand_find() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"Jxleejiaxin"},"content":"    //    List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"Jxleejiaxin"},"content":"    //    FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"Jxleejiaxin"},"content":"    //            FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"Jxleejiaxin"},"content":"    //}","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Jxleejiaxin":8,"Merrickneo":6,"-":84}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"Merrickneo"},"content":"        Note expectedNote \u003d new Note(VALID_TAG_1);","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(expectedNote, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"Merrickneo"},"content":"        Note expectedNote \u003d new Note(VALID_TAG_1);","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(expectedNote, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"Merrickneo"},"content":"        Set\u003cNote\u003e actualNoteSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"Merrickneo"},"content":"        Set\u003cNote\u003e expectedNoteSet \u003d new HashSet\u003cNote\u003e(Arrays.asList(new Note(VALID_TAG_1), new Note(VALID_TAG_2)));","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(expectedNoteSet, actualNoteSet);","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Merrickneo":8,"-":178}},{"path":"src/test/java/seedu/address/logic/parser/RejectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_PREAMBLE;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.logic.commands.RejectCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.NamePhoneNumberPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"public class RejectCommandParserTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"    private final RejectCommandParser parser \u003d new RejectCommandParser();","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"        Name validName \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"        Phone validPhone \u003d new Phone(VALID_PHONE_BOB);","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"        NamePhoneNumberPredicate validNamePhonePredicate \u003d new NamePhoneNumberPredicate(validName, validPhone);","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"        // standard preamble","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"                new RejectCommand(validNamePhonePredicate));","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"        // multiple persons - last person accepted (Bob)","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"                new RejectCommand(validNamePhonePredicate));","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"        // one person, multiple phones - last phone accepted","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB,","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"                new RejectCommand(validNamePhonePredicate));","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"        // one person, multiple names - last names accepted","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"                new RejectCommand(validNamePhonePredicate));","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RejectCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"        // missing name prefix","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"        assertParseFailure(parser, PHONE_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"        // missing phone prefix","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"        assertParseFailure(parser, NAME_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"        // all prefixes missing","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"        assertParseFailure(parser, EMPTY_PREAMBLE, expectedMessage);","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"FredericChow00":60}},{"path":"src/test/java/seedu/address/model/HMHeroTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"public class HMHeroTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    private final HMHero HMHero \u003d new HMHero();","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(Collections.emptyList(), HMHero.getPersonList());","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"        assertThrows(NullPointerException.class, () -\u003e HMHero.resetData(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"        HMHero newData \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"        HMHero.resetData(newData);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(newData, HMHero);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withNotes(VALID_NOTE_HUSBAND)","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e HMHero.resetData(newData));","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"        assertThrows(NullPointerException.class, () -\u003e HMHero.hasPerson(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"        assertFalse(HMHero.hasPerson(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"        HMHero.addPerson(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"        assertTrue(HMHero.hasPerson(ALICE));","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"        HMHero.addPerson(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"FredericChow00"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withNotes(VALID_NOTE_HUSBAND)","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"        assertTrue(HMHero.hasPerson(editedAlice));","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e HMHero.getPersonList().remove(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"FredericChow00":3,"Merrickneo":15,"-":84}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(new HMHero(), new HMHero(modelManager.getAddressBook()));","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"Merrickneo"},"content":"        HMHero HMHero \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"Merrickneo"},"content":"        HMHero differentHMHero \u003d new HMHero();","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"Merrickneo"},"content":"        modelManager \u003d new ModelManager(HMHero, userPrefs);","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"Merrickneo"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(HMHero, userPrefs);","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"Merrickneo"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentHMHero, userPrefs)));","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"Merrickneo"},"content":"        assertFalse(modelManager.equals(new ModelManager(HMHero, userPrefs)));","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"Merrickneo"},"content":"        assertFalse(modelManager.equals(new ModelManager(HMHero, differentUserPrefs)));","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Merrickneo":8,"-":124}},{"path":"src/test/java/seedu/address/model/note/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.address.model.note;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"public class NoteTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Note(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Merrickneo":14}},{"path":"src/test/java/seedu/address/model/person/ApplicationDateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"class ApplicationDateTimeTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"    private static final ApplicationDateTime truncatedApplicationDateTime \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"            new ApplicationDateTime(LocalDateTime.now().truncatedTo(ChronoUnit.MINUTES));","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"    private static final ApplicationDateTime notTruncatedapplicationDateTime \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"            new ApplicationDateTime(LocalDateTime.now());","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ApplicationDateTime(null));","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"    public void getApplicationDate() {","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"        ApplicationDateTime sameApplicationDateTimeTruncated \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"                new ApplicationDateTime(LocalDateTime.now().truncatedTo(ChronoUnit.MINUTES));","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"        ApplicationDateTime otherApplicationDateTime \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"                new ApplicationDateTime(LocalDateTime.of(2023, 05, 05, 18, 00));","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"        // if LocalDateTime is same --\u003e equals","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"        assertEquals(truncatedApplicationDateTime.getApplicationDateTime(),","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"                sameApplicationDateTimeTruncated.getApplicationDateTime());","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"        // if LocalDateTime is different --\u003e not equals","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"        assertNotEquals(truncatedApplicationDateTime.getApplicationDateTime(),","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"                otherApplicationDateTime.getApplicationDateTime());","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"        // if LocalDateTime is not truncated --\u003e not equals","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"        assertNotEquals(truncatedApplicationDateTime.getApplicationDateTime(),","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"                notTruncatedapplicationDateTime.getApplicationDateTime());","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"    public void equals() {","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"        ApplicationDateTime otherApplicationDateTime \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"                new ApplicationDateTime(LocalDateTime.of(2023, 05, 05, 18, 00));","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"        // different LocalDateTime --\u003e not equals","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"        assertNotEquals(truncatedApplicationDateTime, otherApplicationDateTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"        // same LocalDateTime --\u003e trivially equals to each other","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"        assertEquals(truncatedApplicationDateTime, truncatedApplicationDateTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"        // same LocalDateTime but one is not truncated --\u003e not equals to each other due to milliseconds difference","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"        assertNotEquals(truncatedApplicationDateTime, notTruncatedapplicationDateTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"FredericChow00":60}},{"path":"src/test/java/seedu/address/model/person/InterviewDateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"public class InterviewDateTimeTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"    private static final String templateDateTimeString \u003d \"12-02-2023 18:00\";","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    private static InterviewDateTime template;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    static {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"            template \u003d new InterviewDateTime(templateDateTimeString);","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    public void createInterviewDateTime_emptyString_returnsNullInterviewDateTime() throws NullPointerException {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new InterviewDateTime(InterviewDateTime.EMPTY_DATE_TIME)","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"                .toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    public void createInterviewDateTime_validFormat() throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"        InterviewDateTime interviewDateTime \u003d new InterviewDateTime(templateDateTimeString);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(interviewDateTime, template);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Merrickneo":33}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"Jxleejiaxin"},"content":"    //TODO: add new test cases","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"Jxleejiaxin"},"content":"    //@Test","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"Jxleejiaxin"},"content":"    //public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"Jxleejiaxin"},"content":"    //    // One keyword","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"Jxleejiaxin"},"content":"    //    NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"Jxleejiaxin"},"content":"    //    new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"Jxleejiaxin"},"content":"    //","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"Jxleejiaxin"},"content":"    //    // Multiple keywords","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"Jxleejiaxin"},"content":"    //    predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"Jxleejiaxin"},"content":"    //","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"Jxleejiaxin"},"content":"    //    // Only one matching keyword","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"Jxleejiaxin"},"content":"    //    predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"Jxleejiaxin"},"content":"    //","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"Jxleejiaxin"},"content":"    //    // Mixed-case keywords","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"Jxleejiaxin"},"content":"    //    predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"Jxleejiaxin"},"content":"    //}","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"Jxleejiaxin"},"content":"    //@Test","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"Jxleejiaxin"},"content":"    //public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"Jxleejiaxin"},"content":"    //    // Zero keywords","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"Jxleejiaxin"},"content":"    //    NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"Jxleejiaxin"},"content":"    //","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"Jxleejiaxin"},"content":"    //    // Non-matching keyword","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"Jxleejiaxin"},"content":"    //    predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"Jxleejiaxin"},"content":"    //","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"Jxleejiaxin"},"content":"    //    // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"Jxleejiaxin"},"content":"    //    predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"Jxleejiaxin"},"content":"    //    assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"Jxleejiaxin"},"content":"    //            .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"Jxleejiaxin"},"content":"    //}","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jxleejiaxin":36,"-":39}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"Jxleejiaxin"},"content":"        assertFalse(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"Jxleejiaxin"},"content":"        assertFalse(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"Jxleejiaxin"},"content":"        assertFalse(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Jxleejiaxin":4,"-":37}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getNotes().remove(0));","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        // same name and phone, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"                .withAddress(VALID_ADDRESS_BOB).withNotes(VALID_NOTE_HUSBAND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"FredericChow00"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNotes(VALID_NOTE_HUSBAND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"FredericChow00":3,"Merrickneo":3,"-":85}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withNotes(VALID_NOTE_HUSBAND)","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"FredericChow00"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withNotes(VALID_NOTE_HUSBAND)","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"FredericChow00":3,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.ApplicationDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.InterviewDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Jxleejiaxin"},"content":"    private static final String INVALID_STATUS \u003d \"FIRED\";","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Jxleejiaxin"},"content":"    private static final String INVALID_INTERVIEW_DATETIME \u003d \"3-2-123 4:543\";","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"    private static final String INVALID_APPLICATION_DATETIME \u003d \"3-2-123 4:543\";","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    private static final String INVALID_NOTE \u003d \"#friend\";","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Jxleejiaxin"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Jxleejiaxin"},"content":"    private static final String VALID_INTERVIEW_DATETIME \u003d BENSON.getInterviewDateTimeString();","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"    private static final String VALID_APPLICATION_DATETIME \u003d BENSON.getApplicationDateTimeString();","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"    private static final List\u003cJsonAdaptedNote\u003e VALID_TAGS \u003d BENSON.getNotes().stream()","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"            .map(JsonAdaptedNote::new)","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Jxleejiaxin"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"                        VALID_STATUS, VALID_APPLICATION_DATETIME, VALID_INTERVIEW_DATETIME, VALID_TAGS);","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Jxleejiaxin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"                VALID_STATUS, VALID_APPLICATION_DATETIME, VALID_INTERVIEW_DATETIME, VALID_TAGS);","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Jxleejiaxin"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"FredericChow00"},"content":"                        VALID_STATUS, VALID_APPLICATION_DATETIME, VALID_INTERVIEW_DATETIME, VALID_TAGS);","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"Jxleejiaxin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"FredericChow00"},"content":"                VALID_STATUS, VALID_APPLICATION_DATETIME, VALID_INTERVIEW_DATETIME, VALID_TAGS);","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"Jxleejiaxin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"FredericChow00"},"content":"                VALID_STATUS, VALID_APPLICATION_DATETIME, VALID_INTERVIEW_DATETIME, VALID_TAGS);","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"Jxleejiaxin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"FredericChow00"},"content":"                VALID_ADDRESS, VALID_APPLICATION_DATETIME, VALID_STATUS, VALID_INTERVIEW_DATETIME, VALID_TAGS);","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"Jxleejiaxin"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"FredericChow00"},"content":"                        VALID_STATUS, VALID_APPLICATION_DATETIME, VALID_INTERVIEW_DATETIME, VALID_TAGS);","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"Jxleejiaxin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"FredericChow00"},"content":"                VALID_STATUS, VALID_APPLICATION_DATETIME, VALID_INTERVIEW_DATETIME, VALID_TAGS);","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"Jxleejiaxin"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"Jxleejiaxin"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"FredericChow00"},"content":"                        INVALID_STATUS, VALID_APPLICATION_DATETIME, VALID_INTERVIEW_DATETIME, VALID_TAGS);","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"Jxleejiaxin"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"Jxleejiaxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"Jxleejiaxin"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"Jxleejiaxin"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"Jxleejiaxin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"FredericChow00"},"content":"                null, VALID_APPLICATION_DATETIME, VALID_INTERVIEW_DATETIME, VALID_TAGS);","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"Jxleejiaxin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName());","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"Jxleejiaxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"FredericChow00"},"content":"    public void toModelType_invalidApplicationDateTime_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"FredericChow00"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"FredericChow00"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"FredericChow00"},"content":"                        VALID_STATUS, INVALID_APPLICATION_DATETIME, INVALID_INTERVIEW_DATETIME, VALID_TAGS);","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"Jxleejiaxin"},"content":"        String expectedMessage \u003d ApplicationDateTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"FredericChow00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"Jxleejiaxin"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"Jxleejiaxin"},"content":"    public void toModelType_invalidInterviewDateTime_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"Jxleejiaxin"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"Jxleejiaxin"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"FredericChow00"},"content":"                        VALID_STATUS, VALID_APPLICATION_DATETIME, INVALID_INTERVIEW_DATETIME, VALID_TAGS);","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"Jxleejiaxin"},"content":"        String expectedMessage \u003d InterviewDateTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"Jxleejiaxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"FredericChow00":22,"Jxleejiaxin":35,"Merrickneo":3,"-":92}},{"path":"src/test/java/seedu/address/storage/JsonHMHeroStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"public class JsonHMHeroStorageTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        return new JsonHMHeroStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"        HMHero original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"        JsonHMHeroStorage jsonAddressBookStorage \u003d new JsonHMHeroStorage(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(original, new HMHero(readBack));","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(original, new HMHero(readBack));","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(original, new HMHero(readBack));","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"Merrickneo"},"content":"            new JsonHMHeroStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"Merrickneo"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new HMHero(), null));","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Merrickneo":10,"-":100}},{"path":"src/test/java/seedu/address/storage/JsonSerializableHMHeroTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"public class JsonSerializableHMHeroTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        HMHero HMHeroFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        HMHero typicalPersonsHMHero \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(HMHeroFromFile, typicalPersonsHMHero);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Merrickneo":5,"-":42}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        JsonHMHeroStorage addressBookStorage \u003d new JsonHMHeroStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"        HMHero original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(original, new HMHero(retrieved));","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Merrickneo":4,"-":64}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    private HMHero HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"        HMHero \u003d new HMHero();","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    public AddressBookBuilder(HMHero HMHero) {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"        this.HMHero \u003d HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        HMHero.addPerson(person);","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    public HMHero build() {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"        return HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Merrickneo":8,"-":26}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"bofeng1999"},"content":"import seedu.address.model.person.InterviewDateTime;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"        descriptor.setNotes(person.getNotes());","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"bofeng1999"},"content":"        descriptor.setDateTime(person.getInterviewDateTime().orElse(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"     * Parses the {@code notes} into a {@code Set\u003cNote\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"    public EditPersonDescriptorBuilder withNotes(String... notes) {","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"        Set\u003cNote\u003e noteSet \u003d Stream.of(notes).map(Note::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"        descriptor.setNotes(noteSet);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"bofeng1999"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"bofeng1999"},"content":"     * Sets the {@code dateTime} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"bofeng1999"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"bofeng1999"},"content":"    public EditPersonDescriptorBuilder withDateTime(String dateTime) throws Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"bofeng1999"},"content":"        descriptor.setDateTime(InterviewDateTime.createInterviewDateTime(dateTime).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"bofeng1999":7,"Jxleejiaxin":1,"Merrickneo":6,"-":84}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"Jxleejiaxin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"import seedu.address.model.person.ApplicationDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.InterviewDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"Jxleejiaxin"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final String DEFAULT_STATUS \u003d \"APPLIED\";","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Jxleejiaxin"},"content":"    public static final LocalDateTime DEFAULT_APPLICATIONDATETIME \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"Jxleejiaxin"},"content":"            LocalDateTime.of(2023, 02, 02, 14, 0);","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"Jxleejiaxin"},"content":"    private Status status;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"    private ApplicationDateTime applicationDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"Jxleejiaxin"},"content":"    private Optional\u003cInterviewDateTime\u003e interviewDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    private Set\u003cNote\u003e notes;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"Jxleejiaxin"},"content":"        status \u003d Status.valueOf(DEFAULT_STATUS);","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Jxleejiaxin"},"content":"        applicationDateTime \u003d new ApplicationDateTime(DEFAULT_APPLICATIONDATETIME);","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Jxleejiaxin"},"content":"        interviewDateTime \u003d Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"        notes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"Jxleejiaxin"},"content":"        status \u003d personToCopy.getStatus();","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"Jxleejiaxin"},"content":"        applicationDateTime \u003d personToCopy.getApplicationDateTime();","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Jxleejiaxin"},"content":"        interviewDateTime \u003d personToCopy.getInterviewDateTime();","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"        notes \u003d new HashSet\u003c\u003e(personToCopy.getNotes());","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"     * Parses the {@code notes} into a {@code Set\u003cNote\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"    public PersonBuilder withNotes(String ... notes) {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"        this.notes \u003d SampleDataUtil.getNoteSet(notes);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"Jxleejiaxin"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"Jxleejiaxin"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"Jxleejiaxin"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"Jxleejiaxin"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"Jxleejiaxin"},"content":"        this.status \u003d Status.valueOf(status);","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"Jxleejiaxin"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"Jxleejiaxin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"Jxleejiaxin"},"content":"     * Sets the {@code InterviewDateTime} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"Jxleejiaxin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"Jxleejiaxin"},"content":"    public PersonBuilder withInterviewDateTime(String interviewDateTime) {","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"Jxleejiaxin"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"Jxleejiaxin"},"content":"            if (interviewDateTime.equals(\"\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"Jxleejiaxin"},"content":"                this.interviewDateTime \u003d Optional.empty();","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"Jxleejiaxin"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"Jxleejiaxin"},"content":"                this.interviewDateTime \u003d Optional.of(new InterviewDateTime(interviewDateTime));","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"Jxleejiaxin"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"Jxleejiaxin"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"Jxleejiaxin"},"content":"            this.interviewDateTime \u003d Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"Jxleejiaxin"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"Jxleejiaxin"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"Jxleejiaxin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"Jxleejiaxin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"FredericChow00"},"content":"     * Sets the {@code InterviewDateTime} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"FredericChow00"},"content":"    public PersonBuilder withApplicationDateTime(String applicationDateTime) throws AssertionError {","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"FredericChow00"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"FredericChow00"},"content":"            assert (!applicationDateTime.equals(\"\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"FredericChow00"},"content":"            this.applicationDateTime \u003d new ApplicationDateTime(DateTimeParser.parseDateTime(applicationDateTime));","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"FredericChow00"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"FredericChow00"},"content":"            throw new AssertionError(\"There should never be a ParseException thrown here.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"FredericChow00"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":149,"author":{"gitId":"Jxleejiaxin"},"content":"        return new Person(name, phone, email, address, status, applicationDateTime, interviewDateTime, notes);","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"FredericChow00":16,"Jxleejiaxin":41,"Merrickneo":7,"-":88}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLIEDTIME;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"Jxleejiaxin"},"content":"        sb.append(PREFIX_APPLIEDTIME + person.getApplicationDateTimeString() + \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        person.getNotes().stream().forEach(","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"            s -\u003e sb.append(PREFIX_NOTE + s.noteName + \" \")","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"        if (descriptor.getNotes().isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"            Set\u003cNote\u003e notes \u003d descriptor.getNotes().get();","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"            if (notes.isEmpty()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"                sb.append(PREFIX_NOTE);","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"                notes.forEach(s -\u003e sb.append(PREFIX_NOTE).append(s.noteName).append(\" \"));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"     * Returns the part of command string for the given {@code person}\u0027s name and phone number.","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"    public static String getPersonNameAndPhoneNumber(Person person) {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"        person.getNotes().stream().forEach(","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"                s -\u003e sb.append(PREFIX_NOTE + s.noteName + \" \")","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"        );","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Jxleejiaxin":3,"Merrickneo":23,"-":53}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"    public static final Index INDEX_FORTH_PERSON \u003d Index.fromOneBased(4);","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"FredericChow00":2,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPLICATIONDATE_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPLICATIONDATE_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_FRIEND;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_HUSBAND;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Jxleejiaxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"import seedu.address.model.HMHero;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"Jxleejiaxin"},"content":"            .withPhone(\"94351253\").withStatus(\"APPLIED\")","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"Jxleejiaxin"},"content":"            .withApplicationDateTime(\"02-02-2023 14:00\")","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"Jxleejiaxin"},"content":"            .withInterviewDateTime(\"\")","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"            .withNotes(\"friends\").build();","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":38,"author":{"gitId":"Jxleejiaxin"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withStatus(\"SHORTLISTED\")","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Jxleejiaxin"},"content":"            .withApplicationDateTime(\"02-02-2023 14:00\")","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"            .withInterviewDateTime(\"02-03-2023 14:00\")","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"            .withNotes(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"Jxleejiaxin"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"            .withStatus(\"ACCEPTED\")","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"            .withApplicationDateTime(\"02-02-2023 14:00\")","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"            .withInterviewDateTime(\"04-03-2024 13:00\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"Jxleejiaxin"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withStatus(\"APPLIED\")","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"            .withApplicationDateTime(\"02-02-2023 14:00\")","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"Jxleejiaxin"},"content":"            .withInterviewDateTime(\"\").withNotes(\"friends\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"Jxleejiaxin"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"            .withStatus(\"SHORTLISTED\")","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"Jxleejiaxin"},"content":"            .withApplicationDateTime(\"02-02-2023 14:00\")","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"            .withInterviewDateTime(\"04-03-2024 13:00\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"Jxleejiaxin"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"            .withStatus(\"ACCEPTED\")","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"            .withApplicationDateTime(\"02-02-2023 14:00\")","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"            .withInterviewDateTime(\"04-03-2024 13:00\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"Jxleejiaxin"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"FredericChow00"},"content":"            .withStatus(\"REJECTED\")","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"            .withApplicationDateTime(\"02-02-2023 14:00\")","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"            .withInterviewDateTime(\"\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"Jxleejiaxin"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"FredericChow00"},"content":"            .withStatus(\"APPLIED\")","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"FredericChow00"},"content":"            .withApplicationDateTime(\"02-02-2023 14:00\")","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"FredericChow00"},"content":"            .withInterviewDateTime(\"\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"Jxleejiaxin"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"FredericChow00"},"content":"            .withStatus(\"SHORTLISTED\")","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"FredericChow00"},"content":"            .withApplicationDateTime(\"02-02-2023 14:00\")","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"FredericChow00"},"content":"            .withInterviewDateTime(\"05-07-2023 19:00\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"Jxleejiaxin"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Jxleejiaxin"},"content":"            .withApplicationDateTime(VALID_APPLICATIONDATE_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"Jxleejiaxin"},"content":"            .withStatus(VALID_STATUS_AMY).withInterviewDateTime(\"\")","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"Jxleejiaxin"},"content":"            .withNotes(VALID_NOTE_FRIEND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"Jxleejiaxin"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"Jxleejiaxin"},"content":"            .withStatus(VALID_STATUS_BOB).withInterviewDateTime(\"\")","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"Jxleejiaxin"},"content":"            .withApplicationDateTime(VALID_APPLICATIONDATE_BOB)","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"FredericChow00"},"content":"            .withNotes(VALID_NOTE_HUSBAND, VALID_NOTE_FRIEND)","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"Merrickneo"},"content":"    public static HMHero getTypicalAddressBook() {","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"Merrickneo"},"content":"        HMHero ab \u003d new HMHero();","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"FredericChow00":20,"Jxleejiaxin":27,"Merrickneo":5,"-":58}}]
