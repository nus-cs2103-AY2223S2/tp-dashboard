[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Where Got Time","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T09-2/tp/branch/master/graph/badge.svg?token\u003dHYGLQGPHET)](https://codecov.io/gh/AY2223S2-CS2103T-T09-2/tp)","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"Hi there,","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"Welcome to Where Got Time (WGT) - a perfect desktop app dedicate to managing your events and plan out your","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"meetings with your friends and family. It is developed for university student, who can type fast to efficiently","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"keep track of all of their events and their friends\u0027 events via a Command Line Interface.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"We are sure that as a university student, you have struggled to find a date that all your friends are free to meet.","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"Fret not because _WGT_ got your back! This desktop app aims to **automate the process** for you, saving","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"you all the pain and \"scratching head moment\" you face when trying to find a time that all of you are free!","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"Not just that, WGT allows you to **keep track of all your events** such as your weekly tutorials,","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"lectures and cca timings. No more digging through your pinned messages or photo album to find your timetable","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"anymore!","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"## Useful links:","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"- [User Guide](https://ay2223s2-cs2103t-t09-2.github.io/tp/UserGuide.html) to start your journey with WGT","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"- [Developer Guide](https://ay2223s2-cs2103t-t09-2.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"- [About us](https://ay2223s2-cs2103t-t09-2.github.io/tp/AboutUs.html)","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"## Acknowledgement:","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"gmengqi":13,"lyndonlim27":7,"-":7,"clydelhui":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"run {","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"lyndonlim27"},"content":"    archiveFileName \u003d \u0027wheregottime.jar\u0027","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"edures888":4,"lyndonlim27":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"### Clyde Lhui","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"\u003cimg src\u003d\"images/clydelhui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"[[github](https://github.com/clydelhui)]","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"[[portfolio](team/clydelhui.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"* Roles: Documentation and Scheduling and Tracking","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"* Responsibilities: Responsible for the quality of various project documents.","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"In charge of defining, assigning and tracking project tasks.","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"### Lyndon Lim Liang Hng","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"\u003cimg src\u003d\"images/lyndonlim27.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"[[github](http://github.com/lyndonlim27)]","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"[[portfolio](team/lyndonlim27.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"* Role: Team Lead and Testing","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"* Responsibilities: Responsible for overall project coordination and ensure testing of project is done properly and on time.","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"### Du Jiahua","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"\u003cimg src\u003d\"images/edures888.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"[[github](https://github.com/edures888)]","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"[[portfolio](team/edures888.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"* Role: Integration","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"* Responsibilities: In charge of versioning of the code, maintaining the code repository, integrating various parts of","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"  the software to create a whole.","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"### Gao Mengqi","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"gmengqi"},"content":"\u003cimg src\u003d\"images/gmengqi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"[[github](https://github.com/gmengqi)]","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"[[portfolio](team/gmengqi.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"gmengqi"},"content":"* Role: Deliverables \u0026 deadline","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"gmengqi"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"### Kristen Chung Jia Yi","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"\u003cimg src\u003d\"images/alvozyn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"[[github](http://github.com/alvozyn)]","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"[[portfolio](team/alvozyn.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"* Role: Code Quality","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"* Responsibilities: Check if the code quality adherence to coding standard","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Alvozyn":12,"gmengqi":5,"edures888":7,"lyndonlim27":4,"-":30,"clydelhui":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103T-T09-2/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-04-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"The rest of the App consists of four components and an extra `Importer` component.","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"* [**`Importer`**](#importer-component): Imports data from export files.","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"**NOTE**: The `Importer` class works separately and is described in further detail below.","lastModifiedDate":"2023-04-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-04-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"clydelhui"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-T09-2/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-04-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"clydelhui"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-04-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"clydelhui"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-04-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"clydelhui"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-04-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"clydelhui"},"content":"### Importer Component","lastModifiedDate":"2023-04-10"},{"lineNumber":150,"author":{"gitId":"clydelhui"},"content":"**API**: [`Importer.java`](https://github.com/AY2223S2-CS2103T-T09-2/tp/blob/master/src/main/java/seedu/address/storage/Importer.java)","lastModifiedDate":"2023-04-10"},{"lineNumber":151,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":152,"author":{"gitId":"clydelhui"},"content":"\u003cimg src\u003d\"images/ImporterClassDiagram.png\" width\u003d\"150\" /\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":153,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":154,"author":{"gitId":"clydelhui"},"content":"The `Importer` component,","lastModifiedDate":"2023-04-10"},{"lineNumber":155,"author":{"gitId":"clydelhui"},"content":"* is used to import data from export files","lastModifiedDate":"2023-04-10"},{"lineNumber":156,"author":{"gitId":"clydelhui"},"content":"* is only used by the specific command `ImportCommand` in order to read the data from the given export file.","lastModifiedDate":"2023-04-10"},{"lineNumber":157,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":158,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"lyndonlim27"},"content":"### \\[Developed\\] Group create","lastModifiedDate":"2023-03-26"},{"lineNumber":169,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":170,"author":{"gitId":"lyndonlim27"},"content":"The group create feature allows users to create group. Only one group can be created at a time.","lastModifiedDate":"2023-03-26"},{"lineNumber":171,"author":{"gitId":"lyndonlim27"},"content":"This is implemented using the `GroupCreateCommand`, `GroupCreateCommandParser` and","lastModifiedDate":"2023-03-26"},{"lineNumber":172,"author":{"gitId":"lyndonlim27"},"content":"`UniqueGroupList` classes.","lastModifiedDate":"2023-03-26"},{"lineNumber":173,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":174,"author":{"gitId":"lyndonlim27"},"content":"The `GroupCreateCommand` receives a `Group` to be added into `UniqueGroupList`.","lastModifiedDate":"2023-03-26"},{"lineNumber":175,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":176,"author":{"gitId":"lyndonlim27"},"content":"#### Activity diagram","lastModifiedDate":"2023-03-26"},{"lineNumber":177,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":178,"author":{"gitId":"lyndonlim27"},"content":"The following activity diagram summarises what happens when a user executes a group create command:","lastModifiedDate":"2023-03-26"},{"lineNumber":179,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":180,"author":{"gitId":"lyndonlim27"},"content":"\u003cimg src\u003d\"images/GroupCreateCommandActivityDiagram.png\" width\u003d\"200\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":181,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":182,"author":{"gitId":"lyndonlim27"},"content":"#### Sequence Diagram","lastModifiedDate":"2023-03-26"},{"lineNumber":183,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":184,"author":{"gitId":"lyndonlim27"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the execute API call.","lastModifiedDate":"2023-03-26"},{"lineNumber":185,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":186,"author":{"gitId":"lyndonlim27"},"content":"\u003cimg src\u003d\"images/GroupCreateCommandSequenceDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":187,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":188,"author":{"gitId":"lyndonlim27"},"content":"1. When `LogicManager` is called upon to execute the user\u0027s command, it calls the `AddressBookParser` class to","lastModifiedDate":"2023-03-26"},{"lineNumber":189,"author":{"gitId":"lyndonlim27"},"content":"   parse the user command.","lastModifiedDate":"2023-03-26"},{"lineNumber":190,"author":{"gitId":"lyndonlim27"},"content":"2. If the user command has the group create `COMMAND_WORD`, the `AddressBookParser` creates a `GroupCreateCommandParser`","lastModifiedDate":"2023-03-26"},{"lineNumber":191,"author":{"gitId":"lyndonlim27"},"content":"to parse the user input.","lastModifiedDate":"2023-03-26"},{"lineNumber":192,"author":{"gitId":"lyndonlim27"},"content":"3. If `GroupCreateCommandParser` parse the command successfully, it creates a `GroupCreateCommand` and initialise it","lastModifiedDate":"2023-03-26"},{"lineNumber":193,"author":{"gitId":"lyndonlim27"},"content":"with a `Group`.","lastModifiedDate":"2023-03-26"},{"lineNumber":194,"author":{"gitId":"lyndonlim27"},"content":"4. The `GroupCreateCommand` instance is then returned to the `LogicManager`","lastModifiedDate":"2023-03-26"},{"lineNumber":195,"author":{"gitId":"lyndonlim27"},"content":"5. The `LogicManager` then executes the `GroupCreateCommand` instance which adds the `Group` into the","lastModifiedDate":"2023-03-26"},{"lineNumber":196,"author":{"gitId":"lyndonlim27"},"content":"   `UniqueGroupList` (If group does not exist).","lastModifiedDate":"2023-03-26"},{"lineNumber":197,"author":{"gitId":"lyndonlim27"},"content":"6. Execution of `GroupCreateCommand` results in a `CommandResult` created and returned back to the `LogicManager`.","lastModifiedDate":"2023-03-26"},{"lineNumber":198,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"lyndonlim27"},"content":"#### Design consideration","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":201,"author":{"gitId":"lyndonlim27"},"content":"**Aspect: Creating multiple groups**","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"lyndonlim27"},"content":"* **Alternative 1:** Create multiple `Group` in one user command.","lastModifiedDate":"2023-03-26"},{"lineNumber":203,"author":{"gitId":"lyndonlim27"},"content":"    * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":204,"author":{"gitId":"lyndonlim27"},"content":"      * Users can create multiple groups at once instead of creating each group one at a time.","lastModifiedDate":"2023-03-26"},{"lineNumber":205,"author":{"gitId":"lyndonlim27"},"content":"    * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":206,"author":{"gitId":"lyndonlim27"},"content":"      * More bug-prone due to duplicate groups.","lastModifiedDate":"2023-03-26"},{"lineNumber":207,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":208,"author":{"gitId":"lyndonlim27"},"content":"* **[Current implementation] Alternative 2:** Only allow one group to be added in one user command.","lastModifiedDate":"2023-03-26"},{"lineNumber":209,"author":{"gitId":"lyndonlim27"},"content":"    * Note: If user input more than one group, only the last group will be added.","lastModifiedDate":"2023-03-26"},{"lineNumber":210,"author":{"gitId":"lyndonlim27"},"content":"    * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":211,"author":{"gitId":"lyndonlim27"},"content":"      * Easy to implement.","lastModifiedDate":"2023-03-26"},{"lineNumber":212,"author":{"gitId":"lyndonlim27"},"content":"      * Less bug-prone as only one group has to be checked for validity.","lastModifiedDate":"2023-03-26"},{"lineNumber":213,"author":{"gitId":"lyndonlim27"},"content":"    * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":214,"author":{"gitId":"lyndonlim27"},"content":"      * Users have to key in the `group_create` command multiple times if they want to create multiple groups.","lastModifiedDate":"2023-03-26"},{"lineNumber":215,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":216,"author":{"gitId":"lyndonlim27"},"content":"* **Justification**","lastModifiedDate":"2023-03-26"},{"lineNumber":217,"author":{"gitId":"lyndonlim27"},"content":"    * As the other parameters such as phone and number only take the last occurrence of an input, it is best to","lastModifiedDate":"2023-03-26"},{"lineNumber":218,"author":{"gitId":"lyndonlim27"},"content":"      standardise the same for groups as well.","lastModifiedDate":"2023-03-26"},{"lineNumber":219,"author":{"gitId":"lyndonlim27"},"content":"    * Reduces the length of command input for users as they are prone to input duplicate groups in one command.","lastModifiedDate":"2023-03-26"},{"lineNumber":220,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":221,"author":{"gitId":"lyndonlim27"},"content":"**Aspect: Creating new group through add command**","lastModifiedDate":"2023-04-04"},{"lineNumber":222,"author":{"gitId":"lyndonlim27"},"content":"* **Alternative 1:** Create a new `Group` using the existing add command.","lastModifiedDate":"2023-04-04"},{"lineNumber":223,"author":{"gitId":"lyndonlim27"},"content":"    * Pros:","lastModifiedDate":"2023-04-04"},{"lineNumber":224,"author":{"gitId":"lyndonlim27"},"content":"      * Lesser commands for users to use","lastModifiedDate":"2023-04-04"},{"lineNumber":225,"author":{"gitId":"lyndonlim27"},"content":"      * Easier to implement","lastModifiedDate":"2023-04-04"},{"lineNumber":226,"author":{"gitId":"lyndonlim27"},"content":"    * Cons:","lastModifiedDate":"2023-04-04"},{"lineNumber":227,"author":{"gitId":"lyndonlim27"},"content":"      * More bug-prone due to having multiple parameters to check including group","lastModifiedDate":"2023-04-04"},{"lineNumber":228,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":229,"author":{"gitId":"lyndonlim27"},"content":"* **[Current implementation] Alternative 2:** Create a new `Group` using a new command \u0027group_create\u0027.","lastModifiedDate":"2023-04-04"},{"lineNumber":230,"author":{"gitId":"lyndonlim27"},"content":"    * Pros:","lastModifiedDate":"2023-04-04"},{"lineNumber":231,"author":{"gitId":"lyndonlim27"},"content":"      * Dedicated command for creating a group","lastModifiedDate":"2023-04-04"},{"lineNumber":232,"author":{"gitId":"lyndonlim27"},"content":"      * Less bug-prone as the only input is one group instead of having multiple information such as name, email etc.","lastModifiedDate":"2023-04-04"},{"lineNumber":233,"author":{"gitId":"lyndonlim27"},"content":"    * Cons:","lastModifiedDate":"2023-04-04"},{"lineNumber":234,"author":{"gitId":"lyndonlim27"},"content":"      * Users need to create a group first before adding a person to it.","lastModifiedDate":"2023-04-04"},{"lineNumber":235,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":236,"author":{"gitId":"lyndonlim27"},"content":"* **Justification**","lastModifiedDate":"2023-04-04"},{"lineNumber":237,"author":{"gitId":"lyndonlim27"},"content":"    * As the add command is relatively lengthy, having more input parameters would result in users creating a wrong group.","lastModifiedDate":"2023-04-04"},{"lineNumber":238,"author":{"gitId":"lyndonlim27"},"content":"    * Having a dedicated command for creating groups is less bug-prone as it only has to check for the validity of one group","lastModifiedDate":"2023-04-04"},{"lineNumber":239,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":240,"author":{"gitId":"lyndonlim27"},"content":"### \\[Developed\\] Group delete","lastModifiedDate":"2023-03-26"},{"lineNumber":241,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":242,"author":{"gitId":"lyndonlim27"},"content":"The group delete feature allows users to delete a group and remove persons from that group.","lastModifiedDate":"2023-03-26"},{"lineNumber":243,"author":{"gitId":"lyndonlim27"},"content":"Only one group can be deleted at a time.","lastModifiedDate":"2023-03-26"},{"lineNumber":244,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":245,"author":{"gitId":"lyndonlim27"},"content":"This is implemented using the `GroupDeleteCommand`, `GroupDeleteCommandParser` and","lastModifiedDate":"2023-03-26"},{"lineNumber":246,"author":{"gitId":"lyndonlim27"},"content":"`UniqueGroupList` classes.","lastModifiedDate":"2023-03-26"},{"lineNumber":247,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":248,"author":{"gitId":"lyndonlim27"},"content":"The `GroupDeleteCommand` receives an `Index` of a `Group` to be deleted from the `UniqueGroupList`.","lastModifiedDate":"2023-03-26"},{"lineNumber":249,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":250,"author":{"gitId":"lyndonlim27"},"content":"#### Activity diagram","lastModifiedDate":"2023-03-26"},{"lineNumber":251,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"lyndonlim27"},"content":"The following activity diagram summarises what happens when a user executes a group delete command:","lastModifiedDate":"2023-03-26"},{"lineNumber":253,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"lyndonlim27"},"content":"\u003cimg src\u003d\"images/GroupDeleteCommandActivityDiagram.png\" width\u003d\"200\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":256,"author":{"gitId":"lyndonlim27"},"content":"#### Sequence Diagram","lastModifiedDate":"2023-03-26"},{"lineNumber":257,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":258,"author":{"gitId":"lyndonlim27"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the execute API call.","lastModifiedDate":"2023-03-26"},{"lineNumber":259,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":260,"author":{"gitId":"lyndonlim27"},"content":"\u003cimg src\u003d\"images/GroupDeleteCommandSequenceDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":261,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":262,"author":{"gitId":"lyndonlim27"},"content":"1. When `LogicManager` is called upon to execute the user\u0027s command, it calls the `AddressBookParser` class to","lastModifiedDate":"2023-03-26"},{"lineNumber":263,"author":{"gitId":"lyndonlim27"},"content":"   parse the user command.","lastModifiedDate":"2023-03-26"},{"lineNumber":264,"author":{"gitId":"lyndonlim27"},"content":"2. If the user command has the group delete `COMMAND_WORD`, the `AddressBookParser` creates a `GroupDeleteCommandParser`","lastModifiedDate":"2023-03-26"},{"lineNumber":265,"author":{"gitId":"lyndonlim27"},"content":"to parse the user input.","lastModifiedDate":"2023-03-26"},{"lineNumber":266,"author":{"gitId":"lyndonlim27"},"content":"3. If `GroupDeleteCommandParser` parse the command successfully, it creates a `GroupDeleteCommand` and initialise it","lastModifiedDate":"2023-03-26"},{"lineNumber":267,"author":{"gitId":"lyndonlim27"},"content":"with an `Index`.","lastModifiedDate":"2023-03-26"},{"lineNumber":268,"author":{"gitId":"lyndonlim27"},"content":"4. The `GroupDeleteCommand` instance is then returned to the `LogicManager`","lastModifiedDate":"2023-03-26"},{"lineNumber":269,"author":{"gitId":"lyndonlim27"},"content":"5. The `LogicManager` then executes the `GroupDeleteCommand` instance which deletes the `Group` from the","lastModifiedDate":"2023-03-26"},{"lineNumber":270,"author":{"gitId":"lyndonlim27"},"content":"   `UniqueGroupList` (If the group exist).","lastModifiedDate":"2023-03-26"},{"lineNumber":271,"author":{"gitId":"lyndonlim27"},"content":"6. Execution of `GroupDeleteCommand` results in a `CommandResult` created and returned back to the `LogicManager`.","lastModifiedDate":"2023-03-26"},{"lineNumber":272,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":273,"author":{"gitId":"lyndonlim27"},"content":"#### Design consideration","lastModifiedDate":"2023-03-26"},{"lineNumber":274,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":275,"author":{"gitId":"lyndonlim27"},"content":"**Aspect: Deleting multiple groups**","lastModifiedDate":"2023-03-26"},{"lineNumber":276,"author":{"gitId":"lyndonlim27"},"content":"* **Alternative 1:** Delete multiple `Group` in one user command.","lastModifiedDate":"2023-03-26"},{"lineNumber":277,"author":{"gitId":"lyndonlim27"},"content":"    * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":278,"author":{"gitId":"lyndonlim27"},"content":"      * Users can delete multiple groups at once instead of deleting each group one at a time.","lastModifiedDate":"2023-03-26"},{"lineNumber":279,"author":{"gitId":"lyndonlim27"},"content":"    * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":280,"author":{"gitId":"lyndonlim27"},"content":"      * More bug-prone due to multiple index given by user","lastModifiedDate":"2023-03-26"},{"lineNumber":281,"author":{"gitId":"lyndonlim27"},"content":"      * Once a group is deleted, the index will shift, this will cause errors.","lastModifiedDate":"2023-03-26"},{"lineNumber":282,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":283,"author":{"gitId":"lyndonlim27"},"content":"* **[Current implementation] Alternative 2:** Only allow one group to be deleted in one user command.","lastModifiedDate":"2023-03-26"},{"lineNumber":284,"author":{"gitId":"lyndonlim27"},"content":"    * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":285,"author":{"gitId":"lyndonlim27"},"content":"      * Easy to implement.","lastModifiedDate":"2023-03-26"},{"lineNumber":286,"author":{"gitId":"lyndonlim27"},"content":"      * Less bug-prone as only one index has to be checked for validity","lastModifiedDate":"2023-03-26"},{"lineNumber":287,"author":{"gitId":"lyndonlim27"},"content":"    * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":288,"author":{"gitId":"lyndonlim27"},"content":"      * Users have to key in the `group_delete` command multiple times if they want to create multiple groups.","lastModifiedDate":"2023-03-26"},{"lineNumber":289,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":290,"author":{"gitId":"lyndonlim27"},"content":"* **Justification**","lastModifiedDate":"2023-03-26"},{"lineNumber":291,"author":{"gitId":"lyndonlim27"},"content":"    * When a group is deleted, the index of the groups will shift. Continuing to delete the remaining groups","lastModifiedDate":"2023-03-26"},{"lineNumber":292,"author":{"gitId":"lyndonlim27"},"content":"  based on index would result in the wrong group deleted.","lastModifiedDate":"2023-03-26"},{"lineNumber":293,"author":{"gitId":"lyndonlim27"},"content":"    * Handling the offset of the index due to a group deleted is challenging as users may not key in the index in","lastModifiedDate":"2023-03-26"},{"lineNumber":294,"author":{"gitId":"lyndonlim27"},"content":"  numerical order.","lastModifiedDate":"2023-03-26"},{"lineNumber":295,"author":{"gitId":"lyndonlim27"},"content":"    ","lastModifiedDate":"2023-03-26"},{"lineNumber":296,"author":{"gitId":"lyndonlim27"},"content":"### \\[Developed\\] Find group(s)","lastModifiedDate":"2023-03-26"},{"lineNumber":297,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":298,"author":{"gitId":"lyndonlim27"},"content":"The find group feature allows users to find group(s) and persons who are in those group(s).","lastModifiedDate":"2023-03-26"},{"lineNumber":299,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":300,"author":{"gitId":"lyndonlim27"},"content":"This is implemented using the `GroupFindCommand`, `GroupFindCommandParser`, `UniqueGroupList` and `UniquePersonList`","lastModifiedDate":"2023-03-26"},{"lineNumber":301,"author":{"gitId":"lyndonlim27"},"content":"classes.","lastModifiedDate":"2023-03-26"},{"lineNumber":302,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":303,"author":{"gitId":"lyndonlim27"},"content":"The `GroupFindCommand` receives a group and member predicate,","lastModifiedDate":"2023-03-26"},{"lineNumber":304,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":305,"author":{"gitId":"lyndonlim27"},"content":"#### Activity diagram","lastModifiedDate":"2023-03-26"},{"lineNumber":306,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":307,"author":{"gitId":"lyndonlim27"},"content":"The following activity diagram summarises what happens when a user executes a group find command:","lastModifiedDate":"2023-03-26"},{"lineNumber":308,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":309,"author":{"gitId":"lyndonlim27"},"content":"\u003cimg src\u003d\"images/GroupFindCommandActivityDiagram.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":310,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":311,"author":{"gitId":"lyndonlim27"},"content":"#### Sequence Diagram","lastModifiedDate":"2023-03-26"},{"lineNumber":312,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":313,"author":{"gitId":"lyndonlim27"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the execute API call.","lastModifiedDate":"2023-03-26"},{"lineNumber":314,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":315,"author":{"gitId":"lyndonlim27"},"content":"\u003cimg src\u003d\"images/GroupFindCommandSequenceDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":316,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":317,"author":{"gitId":"lyndonlim27"},"content":"1. When `LogicManager` is called upon to execute the user\u0027s command, it calls the `AddressBookParser` class to","lastModifiedDate":"2023-03-26"},{"lineNumber":318,"author":{"gitId":"lyndonlim27"},"content":"   parse the user command.","lastModifiedDate":"2023-03-26"},{"lineNumber":319,"author":{"gitId":"lyndonlim27"},"content":"2. If the user command has the group find `COMMAND_WORD`, the `AddressBookParser` creates a `GroupFindCommandParser`","lastModifiedDate":"2023-03-26"},{"lineNumber":320,"author":{"gitId":"lyndonlim27"},"content":"   to parse the user input.","lastModifiedDate":"2023-03-26"},{"lineNumber":321,"author":{"gitId":"lyndonlim27"},"content":"3. If `GroupFindCommandParser` parse the command successfully, it creates`GroupFindCommand` and initialise it with","lastModifiedDate":"2023-03-26"},{"lineNumber":322,"author":{"gitId":"lyndonlim27"},"content":"`GroupNameContainsKeywordsPredicate` and `MemberOfGroupPredicate`.","lastModifiedDate":"2023-03-26"},{"lineNumber":323,"author":{"gitId":"lyndonlim27"},"content":"4. The `GroupFindCommand` instance is then returned to the `LogicManager`","lastModifiedDate":"2023-03-26"},{"lineNumber":324,"author":{"gitId":"lyndonlim27"},"content":"5. The `LogicManager` then executes the `GroupFindCommand` instance which filters the `UniqueGroupList` and","lastModifiedDate":"2023-03-26"},{"lineNumber":325,"author":{"gitId":"lyndonlim27"},"content":"`UniquePersonList` based on the group and member predicate","lastModifiedDate":"2023-03-26"},{"lineNumber":326,"author":{"gitId":"lyndonlim27"},"content":"6. Execution of `GroupFindCommand` results in a `CommandResult` created and returned back to the `LogicManager`.","lastModifiedDate":"2023-03-26"},{"lineNumber":327,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":328,"author":{"gitId":"lyndonlim27"},"content":"### \\[Developed\\] Editing a person","lastModifiedDate":"2023-03-23"},{"lineNumber":329,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":330,"author":{"gitId":"lyndonlim27"},"content":"Users can edit a person\u0027s `Name`, `Phone`, `Email`, `Address`, `Group` and `Tag`.","lastModifiedDate":"2023-03-23"},{"lineNumber":331,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":332,"author":{"gitId":"lyndonlim27"},"content":"**Note:** Editing a person\u0027s event uses another command. Explanation is given at the end.","lastModifiedDate":"2023-03-26"},{"lineNumber":333,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":334,"author":{"gitId":"lyndonlim27"},"content":"This is implemented using the `EditCommand`, `EditPersonDescriptor` and `EditCommandParser` classes.","lastModifiedDate":"2023-03-23"},{"lineNumber":335,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":336,"author":{"gitId":"lyndonlim27"},"content":"The `EditCommand` receives an index of the person to be edited and an editable `EditPersonDescriptor` class which","lastModifiedDate":"2023-03-23"},{"lineNumber":337,"author":{"gitId":"lyndonlim27"},"content":"consists of the updated fields of the person.","lastModifiedDate":"2023-03-23"},{"lineNumber":338,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":339,"author":{"gitId":"lyndonlim27"},"content":"#### Activity diagram","lastModifiedDate":"2023-03-26"},{"lineNumber":340,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":341,"author":{"gitId":"lyndonlim27"},"content":"The following activity diagram summarises what happens when a user executes an edit command:","lastModifiedDate":"2023-03-26"},{"lineNumber":342,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":343,"author":{"gitId":"lyndonlim27"},"content":"\u003cimg src\u003d\"images/EditCommandActivityDiagram.png\" width\u003d\"200\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":344,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":345,"author":{"gitId":"lyndonlim27"},"content":"#### Sequence Diagram","lastModifiedDate":"2023-03-23"},{"lineNumber":346,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":347,"author":{"gitId":"lyndonlim27"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the execute API call.","lastModifiedDate":"2023-03-23"},{"lineNumber":348,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":349,"author":{"gitId":"lyndonlim27"},"content":"\u003cimg src\u003d\"images/EditCommandSequenceDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":350,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":351,"author":{"gitId":"lyndonlim27"},"content":"1. When `LogicManager` is called upon to execute the user\u0027s command, it calls the `AddressBookParser` class to","lastModifiedDate":"2023-03-23"},{"lineNumber":352,"author":{"gitId":"lyndonlim27"},"content":"   parse the user command.","lastModifiedDate":"2023-03-23"},{"lineNumber":353,"author":{"gitId":"lyndonlim27"},"content":"2. If the user command has the edit `COMMAND_WORD`, the `AddressBookParser`  creates an `EditCommandParser`","lastModifiedDate":"2023-03-26"},{"lineNumber":354,"author":{"gitId":"lyndonlim27"},"content":"to parse the user input.","lastModifiedDate":"2023-03-26"},{"lineNumber":355,"author":{"gitId":"lyndonlim27"},"content":"3. If `EditCommandParser` parse the command successfully, it creates a `EditCommand` and initialise it with","lastModifiedDate":"2023-03-26"},{"lineNumber":356,"author":{"gitId":"lyndonlim27"},"content":"`EditPersonDescriptor`, `Index` and a boolean (shouldMerge).","lastModifiedDate":"2023-03-26"},{"lineNumber":357,"author":{"gitId":"lyndonlim27"},"content":"4. The `EditCommand` instance is then returned to the `LogicManager`","lastModifiedDate":"2023-03-23"},{"lineNumber":358,"author":{"gitId":"lyndonlim27"},"content":"5. The `LogicManager` then executes the `EditCommand` instance which edits the `Person` in the `UniquePersonList`.","lastModifiedDate":"2023-03-26"},{"lineNumber":359,"author":{"gitId":"lyndonlim27"},"content":"If shouldMerge is true, it adds on groups and tags (if specified), otherwise it overwrites existing tags/groups.","lastModifiedDate":"2023-03-26"},{"lineNumber":360,"author":{"gitId":"lyndonlim27"},"content":"6. Execution of `EditCommand` results in a `CommandResult` created and returned back to the `LogicManager`.","lastModifiedDate":"2023-03-23"},{"lineNumber":361,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":362,"author":{"gitId":"lyndonlim27"},"content":"#### Design consideration","lastModifiedDate":"2023-03-23"},{"lineNumber":363,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":364,"author":{"gitId":"lyndonlim27"},"content":"**Aspect: Overwriting or merging**","lastModifiedDate":"2023-03-23"},{"lineNumber":365,"author":{"gitId":"lyndonlim27"},"content":"* **Alternative 1:** Only allows group and tag to be overwritten.","lastModifiedDate":"2023-03-23"},{"lineNumber":366,"author":{"gitId":"lyndonlim27"},"content":"  * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":367,"author":{"gitId":"lyndonlim27"},"content":"    * Easy implementation and reduces editing errors.","lastModifiedDate":"2023-03-26"},{"lineNumber":368,"author":{"gitId":"lyndonlim27"},"content":"  * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":369,"author":{"gitId":"lyndonlim27"},"content":"    * Users had to retype every existing group/tag in addition to the new group/tag they want to include in.","lastModifiedDate":"2023-03-26"},{"lineNumber":370,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":371,"author":{"gitId":"lyndonlim27"},"content":"* **[Current implementation] Alternative 2:** Allows group and tag to be added on instead of overwritten.","lastModifiedDate":"2023-03-23"},{"lineNumber":372,"author":{"gitId":"lyndonlim27"},"content":"   * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":373,"author":{"gitId":"lyndonlim27"},"content":"     * Users can just add on one or more group/tag instead of retyping existing group/tag.","lastModifiedDate":"2023-03-26"},{"lineNumber":374,"author":{"gitId":"lyndonlim27"},"content":"   * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":375,"author":{"gitId":"lyndonlim27"},"content":"     * More bug-prone due to duplicate group/tag and adding to non-existing group.","lastModifiedDate":"2023-03-26"},{"lineNumber":376,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":377,"author":{"gitId":"lyndonlim27"},"content":"* **Justification**","lastModifiedDate":"2023-03-23"},{"lineNumber":378,"author":{"gitId":"lyndonlim27"},"content":"  * Users had to retype existing groups/tags plus additional groups/tags they want to add on to a person.","lastModifiedDate":"2023-03-23"},{"lineNumber":379,"author":{"gitId":"lyndonlim27"},"content":"  * Reduces the length of command input for users by allowing them to add/merge without overwriting current groups/tags.","lastModifiedDate":"2023-03-23"},{"lineNumber":380,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":381,"author":{"gitId":"lyndonlim27"},"content":"**Aspect: User command for GroupCommand**","lastModifiedDate":"2023-03-23"},{"lineNumber":382,"author":{"gitId":"lyndonlim27"},"content":"* **Alternative 1:** Edit the group attribute of a person with a separate command.","lastModifiedDate":"2023-03-23"},{"lineNumber":383,"author":{"gitId":"lyndonlim27"},"content":"   * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":384,"author":{"gitId":"lyndonlim27"},"content":"     * Reduce coupling.","lastModifiedDate":"2023-03-26"},{"lineNumber":385,"author":{"gitId":"lyndonlim27"},"content":"   * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":386,"author":{"gitId":"lyndonlim27"},"content":"     * More commands for user to work with.","lastModifiedDate":"2023-03-26"},{"lineNumber":387,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":388,"author":{"gitId":"lyndonlim27"},"content":"* **[Current implementation] Alternative 2:** Edit the group attribute of a person using the existing edit command.","lastModifiedDate":"2023-03-26"},{"lineNumber":389,"author":{"gitId":"lyndonlim27"},"content":"   * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":390,"author":{"gitId":"lyndonlim27"},"content":"     * Easy to implement","lastModifiedDate":"2023-03-26"},{"lineNumber":391,"author":{"gitId":"lyndonlim27"},"content":"     * lesser commands for user to remember.","lastModifiedDate":"2023-03-26"},{"lineNumber":392,"author":{"gitId":"lyndonlim27"},"content":"   * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":393,"author":{"gitId":"lyndonlim27"},"content":"     * Easy for user to make an erroneous command.","lastModifiedDate":"2023-03-26"},{"lineNumber":394,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":395,"author":{"gitId":"lyndonlim27"},"content":"* **Justification**","lastModifiedDate":"2023-03-23"},{"lineNumber":396,"author":{"gitId":"lyndonlim27"},"content":"  * As editing a group requires the same index as the existing `EditCommand`, it would be better to reuse the same","lastModifiedDate":"2023-03-23"},{"lineNumber":397,"author":{"gitId":"lyndonlim27"},"content":"    command.","lastModifiedDate":"2023-03-23"},{"lineNumber":398,"author":{"gitId":"lyndonlim27"},"content":"  * Lesser commands for users to remember.","lastModifiedDate":"2023-03-26"},{"lineNumber":399,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":400,"author":{"gitId":"lyndonlim27"},"content":"#### Differences between editing a person and a person\u0027s event(s)","lastModifiedDate":"2023-03-26"},{"lineNumber":401,"author":{"gitId":"lyndonlim27"},"content":"* As editing for events require two index, `[INDEX_OF_PERSON]` and `[INDEX_OF_EVENT]`, it is different from the","lastModifiedDate":"2023-03-23"},{"lineNumber":402,"author":{"gitId":"lyndonlim27"},"content":"existing command.","lastModifiedDate":"2023-03-23"},{"lineNumber":403,"author":{"gitId":"lyndonlim27"},"content":"* This significantly increases the chances of users inputting a wrong command","lastModifiedDate":"2023-03-23"},{"lineNumber":404,"author":{"gitId":"lyndonlim27"},"content":"* Hence, editing events using a separate command from the existing `EditCommand` is more convenient and appropriate.","lastModifiedDate":"2023-03-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"gmengqi"},"content":"### \\[Developed\\] Adding Isolated Event","lastModifiedDate":"2023-03-26"},{"lineNumber":407,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":408,"author":{"gitId":"gmengqi"},"content":"Users can add an isolated/non-recurring event. This is implemented using `AddIsolatedEventCommand`,","lastModifiedDate":"2023-03-26"},{"lineNumber":409,"author":{"gitId":"gmengqi"},"content":"`AddIsolatedEventCommandParser` and `IsolatedEventList` classes.","lastModifiedDate":"2023-03-26"},{"lineNumber":410,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":411,"author":{"gitId":"gmengqi"},"content":"The `AddIsolatedEventCommand` receives an isolated event to be added into the person\u0027s `IsolatedEventList`.","lastModifiedDate":"2023-03-26"},{"lineNumber":412,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":413,"author":{"gitId":"gmengqi"},"content":"#### Activity diagram","lastModifiedDate":"2023-03-26"},{"lineNumber":414,"author":{"gitId":"gmengqi"},"content":"The following activity diagram summarises what happens when a user executes an `event_create` command:","lastModifiedDate":"2023-03-26"},{"lineNumber":415,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":416,"author":{"gitId":"gmengqi"},"content":"\u003cimg src\u003d\"images/AddIsolatedEventCommandActivityDiagram.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":417,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":418,"author":{"gitId":"lyndonlim27"},"content":"#### Sequence diagram","lastModifiedDate":"2023-04-10"},{"lineNumber":419,"author":{"gitId":"gmengqi"},"content":"The following sequence diagram illustrates the interaction within the Logic component for the execute","lastModifiedDate":"2023-03-26"},{"lineNumber":420,"author":{"gitId":"gmengqi"},"content":"API call.","lastModifiedDate":"2023-03-26"},{"lineNumber":421,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":422,"author":{"gitId":"gmengqi"},"content":"\u003cimg src\u003d\"images/AddIsolatedEventCommandSequenceDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":423,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":424,"author":{"gitId":"gmengqi"},"content":"Given below is an example usage scenario and how the command mechanism behaves at each step.","lastModifiedDate":"2023-03-26"},{"lineNumber":425,"author":{"gitId":"gmengqi"},"content":"1. When `LogicManager` is called upon to execute the user\u0027s command","lastModifiedDate":"2023-03-26"},{"lineNumber":426,"author":{"gitId":"gmengqi"},"content":"`event_create 1 ie/biking f/26/03/2023 14:00 t/26/03/2023 15:00`, it calls the `AddressBookParser` class to parse the","lastModifiedDate":"2023-03-26"},{"lineNumber":427,"author":{"gitId":"gmengqi"},"content":"user command.","lastModifiedDate":"2023-03-26"},{"lineNumber":428,"author":{"gitId":"gmengqi"},"content":"2. Since the user command has the `event_create` command word, it is a valid command. The `AddressBookParser` creates an","lastModifiedDate":"2023-03-26"},{"lineNumber":429,"author":{"gitId":"gmengqi"},"content":"   `AddIsolatedEventCommandParser` to parse the user input.","lastModifiedDate":"2023-03-26"},{"lineNumber":430,"author":{"gitId":"gmengqi"},"content":"3. The `AddIsolatedEventCommandParser` will checks if the command is valid through the `parse()` method.","lastModifiedDate":"2023-03-26"},{"lineNumber":431,"author":{"gitId":"gmengqi"},"content":"If it parses the command successfully, `AddIsolatedEventCommand` is created.","lastModifiedDate":"2023-03-26"},{"lineNumber":432,"author":{"gitId":"gmengqi"},"content":"4. The `AddIsolatedEventCommand` instance is then returned to the `LogicManager`.","lastModifiedDate":"2023-03-26"},{"lineNumber":433,"author":{"gitId":"gmengqi"},"content":"5. The `LogicManager` then executes the `AddIsolatedEventCommand` instance which add the isolated event to the requested","lastModifiedDate":"2023-03-26"},{"lineNumber":434,"author":{"gitId":"gmengqi"},"content":"person\u0027s IsolatedEventList.","lastModifiedDate":"2023-03-26"},{"lineNumber":435,"author":{"gitId":"gmengqi"},"content":"6. Execution of `AddIsolatedEventCommand` results in a CommandResult created and returned to the LogicManager.","lastModifiedDate":"2023-03-26"},{"lineNumber":436,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":437,"author":{"gitId":"gmengqi"},"content":"#### Design consideration","lastModifiedDate":"2023-03-26"},{"lineNumber":438,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":439,"author":{"gitId":"gmengqi"},"content":"**Aspect: Concern while adding a new command**","lastModifiedDate":"2023-03-26"},{"lineNumber":440,"author":{"gitId":"gmengqi"},"content":"- Workflow must be consistent with other commands.","lastModifiedDate":"2023-03-26"},{"lineNumber":441,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":442,"author":{"gitId":"gmengqi"},"content":"**Aspect: Should we allow isolated event\u0027s duration to span over multiple days**","lastModifiedDate":"2023-03-26"},{"lineNumber":443,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":444,"author":{"gitId":"gmengqi"},"content":"* **Alternative 1:** Only allows isolated event to start and end on the same day.","lastModifiedDate":"2023-03-26"},{"lineNumber":445,"author":{"gitId":"gmengqi"},"content":"    * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":446,"author":{"gitId":"gmengqi"},"content":"        * Easy implementation and will be easier to implement find free time slots.","lastModifiedDate":"2023-03-26"},{"lineNumber":447,"author":{"gitId":"gmengqi"},"content":"    * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":448,"author":{"gitId":"gmengqi"},"content":"        * There will be instances when users will have event that span over multiple days such as travelling. Hence,","lastModifiedDate":"2023-03-26"},{"lineNumber":449,"author":{"gitId":"gmengqi"},"content":"      it will reduce the user-friendliness if we restrict isolated events to be only one day long.","lastModifiedDate":"2023-03-26"},{"lineNumber":450,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":451,"author":{"gitId":"gmengqi"},"content":"* **[Current implementation] Alternative 2:** Allows isolated events\u0027 duration to span over two or more days.","lastModifiedDate":"2023-03-26"},{"lineNumber":452,"author":{"gitId":"gmengqi"},"content":"    * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":453,"author":{"gitId":"gmengqi"},"content":"        * Users can just add one isolated event instead of adding the isolated event multiple times.","lastModifiedDate":"2023-03-26"},{"lineNumber":454,"author":{"gitId":"gmengqi"},"content":"    * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":455,"author":{"gitId":"gmengqi"},"content":"        * Harder to implement finding free time slots.","lastModifiedDate":"2023-03-26"},{"lineNumber":456,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":457,"author":{"gitId":"gmengqi"},"content":"### \\[Developed\\] Editing Isolated Event","lastModifiedDate":"2023-03-26"},{"lineNumber":458,"author":{"gitId":"gmengqi"},"content":"This feature allows the user to edit a specific isolated event in the person\u0027s isolated event list.","lastModifiedDate":"2023-03-26"},{"lineNumber":459,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":460,"author":{"gitId":"lyndonlim27"},"content":"#### Activity Diagram","lastModifiedDate":"2023-04-10"},{"lineNumber":461,"author":{"gitId":"gmengqi"},"content":"The following activity diagram summarises what happens when a user executes an `ie_edit` command:","lastModifiedDate":"2023-03-26"},{"lineNumber":462,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":463,"author":{"gitId":"gmengqi"},"content":"\u003cimg src\u003d\"images/EditIsolatedEventCommandActivityDiagram.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":464,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":465,"author":{"gitId":"lyndonlim27"},"content":"#### Sequence diagram","lastModifiedDate":"2023-04-10"},{"lineNumber":466,"author":{"gitId":"gmengqi"},"content":"The following sequence diagram illustrates the interaction within the Logic component for the execute","lastModifiedDate":"2023-03-26"},{"lineNumber":467,"author":{"gitId":"gmengqi"},"content":"API call.","lastModifiedDate":"2023-03-26"},{"lineNumber":468,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":469,"author":{"gitId":"gmengqi"},"content":"\u003cimg src\u003d\"images/EditIsolatedEventCommandSequenceDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":470,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":471,"author":{"gitId":"gmengqi"},"content":"Given below is an example usage scenario and how the command mechanism behaves at each step.","lastModifiedDate":"2023-03-26"},{"lineNumber":472,"author":{"gitId":"gmengqi"},"content":"1. When `LogicManager` is called upon to execute the user\u0027s command","lastModifiedDate":"2023-03-26"},{"lineNumber":473,"author":{"gitId":"gmengqi"},"content":"   `ie_edit 1 1 ie/biking`, it calls the `AddressBookParser` class to parse the","lastModifiedDate":"2023-03-26"},{"lineNumber":474,"author":{"gitId":"gmengqi"},"content":"   user command.","lastModifiedDate":"2023-03-26"},{"lineNumber":475,"author":{"gitId":"gmengqi"},"content":"2. Since the user command has the `ie_edit` command word, it is a valid command. The `AddressBookParser` creates an","lastModifiedDate":"2023-03-26"},{"lineNumber":476,"author":{"gitId":"gmengqi"},"content":"   `EditIsolatedEventCommandParser` to parse the user input.","lastModifiedDate":"2023-03-26"},{"lineNumber":477,"author":{"gitId":"gmengqi"},"content":"3. The `EditIsolatedEventCommandParser` will checks if the command is valid through the `parse()` method.","lastModifiedDate":"2023-03-26"},{"lineNumber":478,"author":{"gitId":"gmengqi"},"content":"   If it parses the command successfully, `EditIsolatedEventCommand` is created.","lastModifiedDate":"2023-03-26"},{"lineNumber":479,"author":{"gitId":"gmengqi"},"content":"4. The `EditIsolatedEventCommand` instance is then returned to the `LogicManager`.","lastModifiedDate":"2023-03-26"},{"lineNumber":480,"author":{"gitId":"gmengqi"},"content":"5. The `LogicManager` then executes the `EditIsolatedEventCommand` instance which edit the isolated event to the","lastModifiedDate":"2023-03-26"},{"lineNumber":481,"author":{"gitId":"gmengqi"},"content":"respective field requested.","lastModifiedDate":"2023-03-26"},{"lineNumber":482,"author":{"gitId":"gmengqi"},"content":"6. Execution of `EditIsolatedEventCommand` results in a CommandResult created and returned to the LogicManager.","lastModifiedDate":"2023-03-26"},{"lineNumber":483,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":484,"author":{"gitId":"gmengqi"},"content":"#### Design consideration","lastModifiedDate":"2023-03-26"},{"lineNumber":485,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":486,"author":{"gitId":"gmengqi"},"content":"**Aspect: Concern while adding a new command**","lastModifiedDate":"2023-03-26"},{"lineNumber":487,"author":{"gitId":"gmengqi"},"content":"- Workflow must be consistent with other commands.","lastModifiedDate":"2023-03-26"},{"lineNumber":488,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":489,"author":{"gitId":"gmengqi"},"content":"**Aspect: Should we edit isolated event using the existing EditCommand**","lastModifiedDate":"2023-03-26"},{"lineNumber":490,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":491,"author":{"gitId":"gmengqi"},"content":"* **Alternative 1:** Use existing EditCommand for users\u0027 to edit isolated event.","lastModifiedDate":"2023-03-26"},{"lineNumber":492,"author":{"gitId":"gmengqi"},"content":"    * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":493,"author":{"gitId":"gmengqi"},"content":"        * Fewer things to implement and reduce the instances of duplicating code.","lastModifiedDate":"2023-03-26"},{"lineNumber":494,"author":{"gitId":"gmengqi"},"content":"    * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":495,"author":{"gitId":"gmengqi"},"content":"        * More prone to bugs.","lastModifiedDate":"2023-03-26"},{"lineNumber":496,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":497,"author":{"gitId":"gmengqi"},"content":"* **[Current implementation] Alternative 2:** Create a separate command to edit isolated event.","lastModifiedDate":"2023-03-26"},{"lineNumber":498,"author":{"gitId":"gmengqi"},"content":"    * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":499,"author":{"gitId":"gmengqi"},"content":"        * Easier to debug.","lastModifiedDate":"2023-03-26"},{"lineNumber":500,"author":{"gitId":"gmengqi"},"content":"    * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":501,"author":{"gitId":"gmengqi"},"content":"        * Some part of the code is the same as EditCommand.","lastModifiedDate":"2023-03-26"},{"lineNumber":502,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":503,"author":{"gitId":"Alvozyn"},"content":"### \\[Developed\\] Adding Recurring Event","lastModifiedDate":"2023-04-09"},{"lineNumber":504,"author":{"gitId":"Alvozyn"},"content":"User can add recurring events. Adding a recurring event is almost similar to the adding isolated event except that it is implemented using `AddRecurringEventCommand`,","lastModifiedDate":"2023-04-09"},{"lineNumber":505,"author":{"gitId":"Alvozyn"},"content":"`AddRecurringEventCommandParser` and `RecurringEventList`, `TimeMaksk`  classes.","lastModifiedDate":"2023-04-09"},{"lineNumber":506,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":507,"author":{"gitId":"Alvozyn"},"content":"The `AddRecurringEventCommand` receives a recurring event to be added into the person\u0027s `RecurringEventList` and updates the `TimeMask` in the perons\u0027s `RecurringEventList`.","lastModifiedDate":"2023-04-09"},{"lineNumber":508,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":509,"author":{"gitId":"Alvozyn"},"content":"#### Activity diagram","lastModifiedDate":"2023-04-09"},{"lineNumber":510,"author":{"gitId":"Alvozyn"},"content":"The following activity diagram summarises what happens when a user executes an `event_create_recur` command:","lastModifiedDate":"2023-04-09"},{"lineNumber":511,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":512,"author":{"gitId":"Alvozyn"},"content":"\u003cimg src\u003d\"images/AddRecurringEventCommandActivityDiagram.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":513,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":514,"author":{"gitId":"Alvozyn"},"content":"The recurring event list is fix to span over 7 days from Monday to Sunday, while the isolated events in the list may span over an infinite amount of days.","lastModifiedDate":"2023-04-09"},{"lineNumber":515,"author":{"gitId":"Alvozyn"},"content":"Since there is only 7 days in the recurring event list, it would be guaranteed that the TimeMask will only have a maximum of 7 days. Therefore, updating the ","lastModifiedDate":"2023-04-09"},{"lineNumber":516,"author":{"gitId":"Alvozyn"},"content":"TimeMask while adding a recurring event is possible and convenient for finding free time slots.","lastModifiedDate":"2023-04-09"},{"lineNumber":517,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":518,"author":{"gitId":"lyndonlim27"},"content":"#### Sequence diagram","lastModifiedDate":"2023-04-10"},{"lineNumber":519,"author":{"gitId":"Alvozyn"},"content":"The following sequence diagram illustrates the interaction within the Logic component for the execute","lastModifiedDate":"2023-04-09"},{"lineNumber":520,"author":{"gitId":"Alvozyn"},"content":"API call.","lastModifiedDate":"2023-04-09"},{"lineNumber":521,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":522,"author":{"gitId":"Alvozyn"},"content":"\u003cimg src\u003d\"images/AddRecurringEventCommandSequenceDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":523,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":524,"author":{"gitId":"Alvozyn"},"content":"Given below is an example usage scenario and how the command mechanism behaves at each step.","lastModifiedDate":"2023-04-09"},{"lineNumber":525,"author":{"gitId":"Alvozyn"},"content":"1. When `LogicManager` is called upon to execute the user\u0027s command","lastModifiedDate":"2023-04-09"},{"lineNumber":526,"author":{"gitId":"Alvozyn"},"content":"   `event_create_recur 1 ie/biking d/Monday 14:00 t/15:00`, it calls the `AddressBookParser` class to parse the","lastModifiedDate":"2023-04-09"},{"lineNumber":527,"author":{"gitId":"Alvozyn"},"content":"   user command.","lastModifiedDate":"2023-04-09"},{"lineNumber":528,"author":{"gitId":"Alvozyn"},"content":"2. Since the user command has the `event_create_recur` command word, it is a valid command. The `AddressBookParser` creates an","lastModifiedDate":"2023-04-09"},{"lineNumber":529,"author":{"gitId":"Alvozyn"},"content":"   `AddRecurringEventCommandParser` to parse the user input.","lastModifiedDate":"2023-04-09"},{"lineNumber":530,"author":{"gitId":"Alvozyn"},"content":"3. The `AddRecurringEventCommandParser` will checks if the command is valid through the `parse()` method.","lastModifiedDate":"2023-04-09"},{"lineNumber":531,"author":{"gitId":"Alvozyn"},"content":"   If it parses the command successfully, `AddRecurringEventCommand` is created.","lastModifiedDate":"2023-04-09"},{"lineNumber":532,"author":{"gitId":"Alvozyn"},"content":"4. The `AddRecurringEventCommand` instance is then returned to the `LogicManager`.","lastModifiedDate":"2023-04-09"},{"lineNumber":533,"author":{"gitId":"Alvozyn"},"content":"5. The `LogicManager` then executes the `AddRecurringEventCommand` instance which add the recurring event to the requested","lastModifiedDate":"2023-04-09"},{"lineNumber":534,"author":{"gitId":"Alvozyn"},"content":"   person\u0027s `RecurringEventList` and updates the `TimeMask` in the person\u0027s `RecurringEventList`.","lastModifiedDate":"2023-04-09"},{"lineNumber":535,"author":{"gitId":"Alvozyn"},"content":"6. Execution of `AddRecurringEventCommand` results in a CommandResult created and returned to the LogicManager.","lastModifiedDate":"2023-04-09"},{"lineNumber":536,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":537,"author":{"gitId":"Alvozyn"},"content":"#### Design consideration","lastModifiedDate":"2023-04-09"},{"lineNumber":538,"author":{"gitId":"Alvozyn"},"content":"**Aspect: Concern while adding a new command**","lastModifiedDate":"2023-04-09"},{"lineNumber":539,"author":{"gitId":"Alvozyn"},"content":"- Workflow must be consistent with other commands.","lastModifiedDate":"2023-04-09"},{"lineNumber":540,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":541,"author":{"gitId":"Alvozyn"},"content":"**Aspect: Should we allow recurring event\u0027s duration to span over multiple days**","lastModifiedDate":"2023-04-09"},{"lineNumber":542,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":543,"author":{"gitId":"Alvozyn"},"content":"* **Alternative 1:** Allows recurring events\u0027 duration to span over two or more days.","lastModifiedDate":"2023-04-09"},{"lineNumber":544,"author":{"gitId":"Alvozyn"},"content":"    * Pros:","lastModifiedDate":"2023-04-09"},{"lineNumber":545,"author":{"gitId":"Alvozyn"},"content":"        * Users can just add one recurring event instead of adding the recurring event multiple times.","lastModifiedDate":"2023-04-09"},{"lineNumber":546,"author":{"gitId":"Alvozyn"},"content":"    * Cons:","lastModifiedDate":"2023-04-09"},{"lineNumber":547,"author":{"gitId":"Alvozyn"},"content":"        * Harder to implement finding free time slots.","lastModifiedDate":"2023-04-09"},{"lineNumber":548,"author":{"gitId":"Alvozyn"},"content":"      ","lastModifiedDate":"2023-04-09"},{"lineNumber":549,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":550,"author":{"gitId":"Alvozyn"},"content":"* **[Current implementation] Alternative 2:** Only allows recurring event to start and end on the same day.","lastModifiedDate":"2023-04-09"},{"lineNumber":551,"author":{"gitId":"Alvozyn"},"content":"    * Pros:","lastModifiedDate":"2023-04-09"},{"lineNumber":552,"author":{"gitId":"Alvozyn"},"content":"        * Easy implementation and will be easier to implement find free time slots.","lastModifiedDate":"2023-04-09"},{"lineNumber":553,"author":{"gitId":"Alvozyn"},"content":"        * Having an event be fixed to one day is less prone to bugs","lastModifiedDate":"2023-04-09"},{"lineNumber":554,"author":{"gitId":"Alvozyn"},"content":"    * Cons:","lastModifiedDate":"2023-04-09"},{"lineNumber":555,"author":{"gitId":"Alvozyn"},"content":"        * There will be instances when users will have event that span over multiple days such as studying overnight ","lastModifiedDate":"2023-04-09"},{"lineNumber":556,"author":{"gitId":"Alvozyn"},"content":"          from 23:00 to 01:00. Hence, it will reduce the user-friendliness if we restrict isolated events to be only one day long.","lastModifiedDate":"2023-04-09"},{"lineNumber":557,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":558,"author":{"gitId":"edures888"},"content":"### \\[Developed\\] Finding free time slots","lastModifiedDate":"2023-04-09"},{"lineNumber":559,"author":{"gitId":"edures888"},"content":"This feature allows a user to display unoccupied time slots shared by members of a group.","lastModifiedDate":"2023-04-09"},{"lineNumber":560,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":561,"author":{"gitId":"edures888"},"content":"Time slot finding feature requires a few pre-processing steps to function with efficiency.","lastModifiedDate":"2023-04-09"},{"lineNumber":562,"author":{"gitId":"edures888"},"content":"Instead of traversing through the IsolatedEvents and RecurringEvents of each Person in the Group, it would be a better to have some an auxiliary table to reduce computation. ","lastModifiedDate":"2023-04-09"},{"lineNumber":563,"author":{"gitId":"edures888"},"content":"The current implementation uses the idea of a bitmask to determine which intervals are occupied. A TimeMask is simply an array of 7 numbers, each reflecting the occupancy of each time slot (1 hour each) throughout a day. Thus, it reflects the occupancies of each time slot in a week. The ordering of the days follow that of Java’s DayOfWeek API where Monday has the lowest value of 1. The first number in the array then represents Monday, the second represents Tuesday and so on. Each Person’s RecurringEventList will then maintain a TimeMask that gets updated whenever a RecurringEvent is added for that Person. ","lastModifiedDate":"2023-04-09"},{"lineNumber":564,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":565,"author":{"gitId":"lyndonlim27"},"content":"#### Activity Diagram","lastModifiedDate":"2023-04-10"},{"lineNumber":566,"author":{"gitId":"edures888"},"content":"The following activity diagram summarises what happens when a user executes a `free` command:","lastModifiedDate":"2023-04-09"},{"lineNumber":567,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":568,"author":{"gitId":"edures888"},"content":"\u003cimg src\u003d\"images/FindTimeCommandActivityDiagram.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":569,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":570,"author":{"gitId":"edures888"},"content":"When the FindTimeCommand executes with a Group and Date as its parameters,","lastModifiedDate":"2023-04-09"},{"lineNumber":571,"author":{"gitId":"edures888"},"content":"1. A empty parent TimeMask is created, meaning that all time slots in the 7 days are unoccupied by default. ","lastModifiedDate":"2023-04-09"},{"lineNumber":572,"author":{"gitId":"edures888"},"content":"2. Then iterate through all Persons in the UniquePersonList and if they are members of the specified Group:","lastModifiedDate":"2023-04-09"},{"lineNumber":573,"author":{"gitId":"edures888"},"content":"   a. Check the Person\u0027s RecurringEventList and get its TimeMask and merge with the parent TimeMask. This is done by comparing all 7 integers, each representing a day, doing a bitwise OR operation.","lastModifiedDate":"2023-04-09"},{"lineNumber":574,"author":{"gitId":"edures888"},"content":"   b. Check through the Person\u0027s IsolatedEventList for any events that fall within 7 days from the specified Date and update the corresponding integer in the parent TimeMask. ","lastModifiedDate":"2023-04-09"},{"lineNumber":575,"author":{"gitId":"edures888"},"content":"3. The parent TimeMask is then converted to a list of unoccupied time slots, and it is updated in the AddressBook\u0027s ScheduleWeek, that acts as an internal list that UI observes.","lastModifiedDate":"2023-04-09"},{"lineNumber":576,"author":{"gitId":"edures888"},"content":"4. The UI detects the changes and then displays the updated timetable.","lastModifiedDate":"2023-04-09"},{"lineNumber":577,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":578,"author":{"gitId":"lyndonlim27"},"content":"#### Sequence Diagram","lastModifiedDate":"2023-04-10"},{"lineNumber":579,"author":{"gitId":"edures888"},"content":"The following sequence diagram illustrates the interaction within the Logic component for the execute","lastModifiedDate":"2023-04-09"},{"lineNumber":580,"author":{"gitId":"edures888"},"content":"API call for FindTimeCommand.","lastModifiedDate":"2023-04-09"},{"lineNumber":581,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":582,"author":{"gitId":"edures888"},"content":"\u003cimg src\u003d\"images/FindTimeCommandSequenceDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":583,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":584,"author":{"gitId":"edures888"},"content":"Given below is an example usage scenario and how the command mechanism behaves at each step.","lastModifiedDate":"2023-04-09"},{"lineNumber":585,"author":{"gitId":"edures888"},"content":"1. When `LogicManager` is called upon to execute the user\u0027s command","lastModifiedDate":"2023-04-09"},{"lineNumber":586,"author":{"gitId":"edures888"},"content":"   `free 1 f/04/04/2023`, it calls the `AddressBookParser` class to parse the","lastModifiedDate":"2023-04-09"},{"lineNumber":587,"author":{"gitId":"edures888"},"content":"   user command.","lastModifiedDate":"2023-04-09"},{"lineNumber":588,"author":{"gitId":"edures888"},"content":"2. Since the user command has the `free` command word, it is a valid command. The `AddressBookParser` creates an","lastModifiedDate":"2023-04-09"},{"lineNumber":589,"author":{"gitId":"edures888"},"content":"   `FindTimeCommandParser` to parse the user input.","lastModifiedDate":"2023-04-09"},{"lineNumber":590,"author":{"gitId":"edures888"},"content":"3. The `FindTimeCommandParser` will checks if the command is valid through the `parse()` method.","lastModifiedDate":"2023-04-09"},{"lineNumber":591,"author":{"gitId":"edures888"},"content":"   If it parses the command successfully, `FindTimeCommand` is created.","lastModifiedDate":"2023-04-09"},{"lineNumber":592,"author":{"gitId":"edures888"},"content":"4. The `FindTimeCommand` instance is then returned to the `LogicManager`.","lastModifiedDate":"2023-04-09"},{"lineNumber":593,"author":{"gitId":"edures888"},"content":"5. The `LogicManager` then executes the `FindTimeCommand` instance which edit the isolated event to the","lastModifiedDate":"2023-04-09"},{"lineNumber":594,"author":{"gitId":"edures888"},"content":"   respective field requested.","lastModifiedDate":"2023-04-09"},{"lineNumber":595,"author":{"gitId":"edures888"},"content":"6. Execution of `FindTimeCommand` results in a CommandResult created and returned to the LogicManager.","lastModifiedDate":"2023-04-09"},{"lineNumber":596,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":597,"author":{"gitId":"lyndonlim27"},"content":"#### Design Consideration","lastModifiedDate":"2023-04-10"},{"lineNumber":598,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":599,"author":{"gitId":"edures888"},"content":"**Aspect: Algorithm and data structure for finding of free time slot**","lastModifiedDate":"2023-04-09"},{"lineNumber":600,"author":{"gitId":"edures888"},"content":"* **Alternative 1: List of occupied intervals (start date time and end date time)**","lastModifiedDate":"2023-04-09"},{"lineNumber":601,"author":{"gitId":"edures888"},"content":"    * With each command call, merge all the intervals of Events belonging to all Persons in a Group. The Events would be limited within a week from the date parameter in the FindTimeCommand. It helps that the EventLists are already sorted. The ideal approach would be to combine all the lists of Events, then sort them based on the start DateTime and then sieve through the list for any overlapping intervals and combine them.","lastModifiedDate":"2023-04-09"},{"lineNumber":602,"author":{"gitId":"edures888"},"content":"    * Pros:","lastModifiedDate":"2023-04-09"},{"lineNumber":603,"author":{"gitId":"edures888"},"content":"        * Allows free time output to be more flexible. The time slots do not have to follow the fixed granularity of 1 hour. Instead of hour time slots, there can be slots like \u002712:33 to 13:11\u0027.","lastModifiedDate":"2023-04-09"},{"lineNumber":604,"author":{"gitId":"edures888"},"content":"    * Cons:","lastModifiedDate":"2023-04-09"},{"lineNumber":605,"author":{"gitId":"edures888"},"content":"        * More complex to implement. This requires maintenance of lists of non-overlapping intervals.","lastModifiedDate":"2023-04-09"},{"lineNumber":606,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":607,"author":{"gitId":"edures888"},"content":"* **[Current implementation] Alternative 2: Use integers to store occupancy of daily time slots across the week**","lastModifiedDate":"2023-04-09"},{"lineNumber":608,"author":{"gitId":"edures888"},"content":"    * Use bits of 1s and 0s to represent the occupancy of a time slot. Thus, use 24 bits of a int data type for a day and have 7 of them to represent a week.","lastModifiedDate":"2023-04-09"},{"lineNumber":609,"author":{"gitId":"edures888"},"content":"    * Pros:","lastModifiedDate":"2023-04-09"},{"lineNumber":610,"author":{"gitId":"edures888"},"content":"      * Allows for simpler and faster comparisons of schedules with the use of Bitwise operations","lastModifiedDate":"2023-04-09"},{"lineNumber":611,"author":{"gitId":"edures888"},"content":"    * Cons:","lastModifiedDate":"2023-04-09"},{"lineNumber":612,"author":{"gitId":"edures888"},"content":"      * Fixed time slot granularity of 1 hour, requiring them to follow the hourly format.","lastModifiedDate":"2023-04-09"},{"lineNumber":613,"author":{"gitId":"edures888"},"content":"      * More complex to implement arbitrary granularity value, since int data type has a limit of 32 bits and exceeding that will cause overflow and thus cause unexpected calculation differences. It is only feasible to implement 0.5 hour granularity since a long data type can be used to cater 64 bits.","lastModifiedDate":"2023-04-09"},{"lineNumber":614,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":615,"author":{"gitId":"edures888"},"content":"* **Justification**","lastModifiedDate":"2023-04-09"},{"lineNumber":616,"author":{"gitId":"edures888"},"content":"    * Alternative 2 capitalizes on the property of RecurringEvents. It is more performant when users only has RecurringEvents and not IsolatedEvents. It may be more common and meaningful to find time slots that are recurring.","lastModifiedDate":"2023-04-09"},{"lineNumber":617,"author":{"gitId":"edures888"},"content":"      * Losing flexibility in the range of time slots may not be that significant since users may not require it.","lastModifiedDate":"2023-04-09"},{"lineNumber":618,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":619,"author":{"gitId":"edures888"},"content":"**Aspect: Additional storing of combined timetables**","lastModifiedDate":"2023-04-09"},{"lineNumber":620,"author":{"gitId":"edures888"},"content":"* **Alternative: Store the calculated timetables in the corresponding Group**","lastModifiedDate":"2023-04-09"},{"lineNumber":621,"author":{"gitId":"edures888"},"content":"  * Instead of having to recompute the timetables for Groups by checking every member, simply store them when they are calculated and retrieve directly when needed ","lastModifiedDate":"2023-04-09"},{"lineNumber":622,"author":{"gitId":"edures888"},"content":"  * Pros: ","lastModifiedDate":"2023-04-09"},{"lineNumber":623,"author":{"gitId":"edures888"},"content":"    * More efficient retrieval","lastModifiedDate":"2023-04-09"},{"lineNumber":624,"author":{"gitId":"edures888"},"content":"  * Cons:","lastModifiedDate":"2023-04-09"},{"lineNumber":625,"author":{"gitId":"edures888"},"content":"    * Bug-prone, requires more maintenance. ","lastModifiedDate":"2023-04-09"},{"lineNumber":626,"author":{"gitId":"edures888"},"content":"      * There are a couple of factors involved that might affect the correctness of this approach. For example, if a person were to be removed from a group, it is not certain that the Group now has more free time slots since there may be other members who share the same occupied time slots. Suppose Alice and Bob are both in the ‘CS2103’ Group and Alice has a recurring Lecture on Mondays from 1pm to 2pm. Alice has now been removed from the Group. We cannot update the shared ‘CS2103’ Group to free the 1pm time slot, since Bob might also have the same Event. ","lastModifiedDate":"2023-04-09"},{"lineNumber":627,"author":{"gitId":"edures888"},"content":"      * So, why not check if Bob has the same Event? It is then a possible approach to follow this implementation, but this requires extra checking of each member’s Events upon modification of any Group’s information.","lastModifiedDate":"2023-04-09"},{"lineNumber":628,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":629,"author":{"gitId":"edures888"},"content":"* **Justification**","lastModifiedDate":"2023-04-09"},{"lineNumber":630,"author":{"gitId":"edures888"},"content":"    * To ensure the correctness of our application within the insufficient amount of time remaining, we have decided not to implement this.","lastModifiedDate":"2023-04-09"},{"lineNumber":631,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":632,"author":{"gitId":"lyndonlim27"},"content":"### \\[Developed\\] Export","lastModifiedDate":"2023-04-06"},{"lineNumber":633,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":634,"author":{"gitId":"lyndonlim27"},"content":"The export feature allows users to export a person\u0027s details to a json file. Groups and tags are not exported.","lastModifiedDate":"2023-04-06"},{"lineNumber":635,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":636,"author":{"gitId":"lyndonlim27"},"content":"This is implemented using the `ExportCommand`, `ExportCommandParser` and","lastModifiedDate":"2023-04-06"},{"lineNumber":637,"author":{"gitId":"lyndonlim27"},"content":"`UniquePersonList` and `Storage` classes.","lastModifiedDate":"2023-04-06"},{"lineNumber":638,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":639,"author":{"gitId":"lyndonlim27"},"content":"The `ExportCommand` receives an `Index` of a `Person` to be exported from the `UniquePersonList`.","lastModifiedDate":"2023-04-06"},{"lineNumber":640,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":641,"author":{"gitId":"lyndonlim27"},"content":"#### Activity diagram","lastModifiedDate":"2023-04-06"},{"lineNumber":642,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":643,"author":{"gitId":"lyndonlim27"},"content":"The following activity diagram summarises what happens when a user executes an export command:","lastModifiedDate":"2023-04-06"},{"lineNumber":644,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":645,"author":{"gitId":"lyndonlim27"},"content":"\u003cimg src\u003d\"images/ExportCommandActivityDiagram.png\" width\u003d\"200\" /\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":646,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":647,"author":{"gitId":"lyndonlim27"},"content":"#### Sequence Diagram","lastModifiedDate":"2023-04-06"},{"lineNumber":648,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":649,"author":{"gitId":"lyndonlim27"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the execute API call.","lastModifiedDate":"2023-04-06"},{"lineNumber":650,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":651,"author":{"gitId":"lyndonlim27"},"content":"\u003cimg src\u003d\"images/ExportCommandSequenceDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":652,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":653,"author":{"gitId":"lyndonlim27"},"content":"1. When `LogicManager` is called upon to execute the user\u0027s command, it calls the `AddressBookParser` class to","lastModifiedDate":"2023-04-06"},{"lineNumber":654,"author":{"gitId":"lyndonlim27"},"content":"   parse the user command.","lastModifiedDate":"2023-04-06"},{"lineNumber":655,"author":{"gitId":"lyndonlim27"},"content":"2. If the user command has the export `COMMAND_WORD`, the `AddressBookParser` creates a `ExportCommandParser`","lastModifiedDate":"2023-04-06"},{"lineNumber":656,"author":{"gitId":"lyndonlim27"},"content":"   to parse the user input.","lastModifiedDate":"2023-04-06"},{"lineNumber":657,"author":{"gitId":"lyndonlim27"},"content":"3. If `ExportCommandParser` parse the command successfully, it creates a `ExportCommand` and initialise it","lastModifiedDate":"2023-04-06"},{"lineNumber":658,"author":{"gitId":"lyndonlim27"},"content":"   with an `Index`.","lastModifiedDate":"2023-04-06"},{"lineNumber":659,"author":{"gitId":"lyndonlim27"},"content":"4. The `ExportCommand` instance is then returned to the `LogicManager`","lastModifiedDate":"2023-04-06"},{"lineNumber":660,"author":{"gitId":"lyndonlim27"},"content":"5. The `LogicManager` then executes the `ExportCommand` instance which obtains the person from the ","lastModifiedDate":"2023-04-06"},{"lineNumber":661,"author":{"gitId":"lyndonlim27"},"content":"   `UniquePersonList`.","lastModifiedDate":"2023-04-06"},{"lineNumber":662,"author":{"gitId":"lyndonlim27"},"content":"6. Execution of `ExportCommand` results in a `CommandResult` created and returned back to the `LogicManager`.","lastModifiedDate":"2023-04-06"},{"lineNumber":663,"author":{"gitId":"lyndonlim27"},"content":"7. `LogicManager` then passes the person obtained from `ExportCommand` to the method `exportPerson()` of `Storage`","lastModifiedDate":"2023-04-07"},{"lineNumber":664,"author":{"gitId":"lyndonlim27"},"content":"8. `Storage` then creates a json file of the person to be exported in data/export.json","lastModifiedDate":"2023-04-07"},{"lineNumber":665,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":666,"author":{"gitId":"lyndonlim27"},"content":"#### Design consideration","lastModifiedDate":"2023-04-06"},{"lineNumber":667,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":668,"author":{"gitId":"lyndonlim27"},"content":"**Aspect: Exporting multiple persons**","lastModifiedDate":"2023-04-06"},{"lineNumber":669,"author":{"gitId":"lyndonlim27"},"content":"* **Alternative 1:** Export multiple `Person` in one user command.","lastModifiedDate":"2023-04-06"},{"lineNumber":670,"author":{"gitId":"lyndonlim27"},"content":"    * Pros:","lastModifiedDate":"2023-04-06"},{"lineNumber":671,"author":{"gitId":"lyndonlim27"},"content":"        * Users can export multiple persons at once instead of exporting each person one at a time.","lastModifiedDate":"2023-04-06"},{"lineNumber":672,"author":{"gitId":"lyndonlim27"},"content":"    * Cons:","lastModifiedDate":"2023-04-06"},{"lineNumber":673,"author":{"gitId":"lyndonlim27"},"content":"        * More bug-prone due to multiple index given by user","lastModifiedDate":"2023-04-06"},{"lineNumber":674,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":675,"author":{"gitId":"lyndonlim27"},"content":"* **[Current implementation] Alternative 2:** Only allow one person to be exported in one user command.","lastModifiedDate":"2023-04-06"},{"lineNumber":676,"author":{"gitId":"lyndonlim27"},"content":"    * Pros:","lastModifiedDate":"2023-04-06"},{"lineNumber":677,"author":{"gitId":"lyndonlim27"},"content":"        * Easy to implement.","lastModifiedDate":"2023-04-06"},{"lineNumber":678,"author":{"gitId":"lyndonlim27"},"content":"        * Less bug-prone as only one index has to be checked for validity","lastModifiedDate":"2023-04-06"},{"lineNumber":679,"author":{"gitId":"lyndonlim27"},"content":"    * Cons:","lastModifiedDate":"2023-04-06"},{"lineNumber":680,"author":{"gitId":"lyndonlim27"},"content":"        * Users have to export one person at a time.","lastModifiedDate":"2023-04-06"},{"lineNumber":681,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":682,"author":{"gitId":"lyndonlim27"},"content":"* **Justification**","lastModifiedDate":"2023-04-06"},{"lineNumber":683,"author":{"gitId":"lyndonlim27"},"content":"    * Purpose of exporting is to export one\u0027s details and send to their friends instead of exporting multiple persons\u0027 details ","lastModifiedDate":"2023-04-06"},{"lineNumber":684,"author":{"gitId":"lyndonlim27"},"content":"    * Exporting multiple persons\u0027 details increase the length of the command which leads to more error ","lastModifiedDate":"2023-04-06"},{"lineNumber":685,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":686,"author":{"gitId":"lyndonlim27"},"content":"**Aspect: Exporting all details**","lastModifiedDate":"2023-04-07"},{"lineNumber":687,"author":{"gitId":"lyndonlim27"},"content":"* **Alternative 1:** Export all details of a `Person`.","lastModifiedDate":"2023-04-07"},{"lineNumber":688,"author":{"gitId":"lyndonlim27"},"content":"    * Pros:","lastModifiedDate":"2023-04-07"},{"lineNumber":689,"author":{"gitId":"lyndonlim27"},"content":"        * Users can export all details of a `Person` including `Groups` and `Tags`","lastModifiedDate":"2023-04-07"},{"lineNumber":690,"author":{"gitId":"lyndonlim27"},"content":"        * Easier to implement","lastModifiedDate":"2023-04-07"},{"lineNumber":691,"author":{"gitId":"lyndonlim27"},"content":"    * Cons:","lastModifiedDate":"2023-04-07"},{"lineNumber":692,"author":{"gitId":"lyndonlim27"},"content":"        * Exporting groups and tags is not used in import","lastModifiedDate":"2023-04-07"},{"lineNumber":693,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":694,"author":{"gitId":"lyndonlim27"},"content":"* **[Current implementation] Alternative 2:** Export all details of a `Person` except `Group` and `Tag`","lastModifiedDate":"2023-04-07"},{"lineNumber":695,"author":{"gitId":"lyndonlim27"},"content":"    * Pros:","lastModifiedDate":"2023-04-07"},{"lineNumber":696,"author":{"gitId":"lyndonlim27"},"content":"        * Less bug prone as lesser details are exported.","lastModifiedDate":"2023-04-07"},{"lineNumber":697,"author":{"gitId":"lyndonlim27"},"content":"        * Do not have to recreate a new UniqueGroupList for exported `Person`.","lastModifiedDate":"2023-04-07"},{"lineNumber":698,"author":{"gitId":"lyndonlim27"},"content":"    * Cons:","lastModifiedDate":"2023-04-07"},{"lineNumber":699,"author":{"gitId":"lyndonlim27"},"content":"        * Harder to implement","lastModifiedDate":"2023-04-07"},{"lineNumber":700,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":701,"author":{"gitId":"lyndonlim27"},"content":"* **Justification**","lastModifiedDate":"2023-04-07"},{"lineNumber":702,"author":{"gitId":"lyndonlim27"},"content":"    * As import does not import `Group` and `Tag`. Exporting all details of a `Person` is not required.","lastModifiedDate":"2023-04-07"},{"lineNumber":703,"author":{"gitId":"lyndonlim27"},"content":"    * Different users may have different `Tag` or `Group` for their contact. Hence `Group` and `Tag` is not exported/imported.","lastModifiedDate":"2023-04-07"},{"lineNumber":704,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":705,"author":{"gitId":"clydelhui"},"content":"### \\[Developed\\] Import","lastModifiedDate":"2023-04-10"},{"lineNumber":706,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":707,"author":{"gitId":"clydelhui"},"content":"The export feature allows users to import a person\u0027s details to a json file. Groups and tags are not imported.","lastModifiedDate":"2023-04-10"},{"lineNumber":708,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":709,"author":{"gitId":"clydelhui"},"content":"This is implemented using the `ImportCommand`, `JsonImporter`.","lastModifiedDate":"2023-04-10"},{"lineNumber":710,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":711,"author":{"gitId":"clydelhui"},"content":"The `ImportCommand` uses a `JsonImporter` to import data from the file `data/export.json`","lastModifiedDate":"2023-04-10"},{"lineNumber":712,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":713,"author":{"gitId":"clydelhui"},"content":"#### Activity diagram","lastModifiedDate":"2023-04-10"},{"lineNumber":714,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":715,"author":{"gitId":"clydelhui"},"content":"The following activity diagram summarises what happens when a user executes an export command:","lastModifiedDate":"2023-04-10"},{"lineNumber":716,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":717,"author":{"gitId":"clydelhui"},"content":"\u003cimg src\u003d\"images/ImportCommandActivityDiagram.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":718,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":719,"author":{"gitId":"clydelhui"},"content":"#### Sequence Diagram","lastModifiedDate":"2023-04-10"},{"lineNumber":720,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":721,"author":{"gitId":"clydelhui"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the execute API call when a `Person` is being updated:","lastModifiedDate":"2023-04-10"},{"lineNumber":722,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":723,"author":{"gitId":"clydelhui"},"content":"\u003cimg src\u003d\"images/ImportCommandSequenceDiagramSetPerson.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":724,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":725,"author":{"gitId":"clydelhui"},"content":"1. When `LogicManager` is called upon to execute the user\u0027s command, it calls the `AddressBookParser` class to","lastModifiedDate":"2023-04-10"},{"lineNumber":726,"author":{"gitId":"clydelhui"},"content":"   parse the user command.","lastModifiedDate":"2023-04-10"},{"lineNumber":727,"author":{"gitId":"clydelhui"},"content":"2. If the user command has the import `COMMAND_WORD`, the `AddressBookParser` creates a `ImportCommand`.","lastModifiedDate":"2023-04-10"},{"lineNumber":728,"author":{"gitId":"clydelhui"},"content":"4. The `ImportCommand` instance is then returned to the `LogicManager`","lastModifiedDate":"2023-04-10"},{"lineNumber":729,"author":{"gitId":"clydelhui"},"content":"5. The `LogicManager` then executes the `ImportCommand` instance which obtains the data from the file (as a `ReadonlyAddressBook`) via the `Importer` API call","lastModifiedDate":"2023-04-10"},{"lineNumber":730,"author":{"gitId":"clydelhui"},"content":"6. A `Person` is then created via the `createImportPerson()` call","lastModifiedDate":"2023-04-10"},{"lineNumber":731,"author":{"gitId":"clydelhui"},"content":"7. The `Person` is set in the `Model`","lastModifiedDate":"2023-04-10"},{"lineNumber":732,"author":{"gitId":"clydelhui"},"content":"8. Execution of `ImportCommand` results in a `CommandResult` created and returned back to the `LogicManager`, completing the execution.","lastModifiedDate":"2023-04-10"},{"lineNumber":733,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":734,"author":{"gitId":"clydelhui"},"content":"In the event that a new person is added due to the import:","lastModifiedDate":"2023-04-10"},{"lineNumber":735,"author":{"gitId":"clydelhui"},"content":"\u003cimg src\u003d\"images/ImportCommandSequenceDiagramAddPerson.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":736,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":737,"author":{"gitId":"clydelhui"},"content":"1. When `LogicManager` is called upon to execute the user\u0027s command, it calls the `AddressBookParser` class to","lastModifiedDate":"2023-04-10"},{"lineNumber":738,"author":{"gitId":"clydelhui"},"content":"   parse the user command.","lastModifiedDate":"2023-04-10"},{"lineNumber":739,"author":{"gitId":"clydelhui"},"content":"2. If the user command has the import `COMMAND_WORD`, the `AddressBookParser` creates a `ImportCommand`.","lastModifiedDate":"2023-04-10"},{"lineNumber":740,"author":{"gitId":"clydelhui"},"content":"4. The `ImportCommand` instance is then returned to the `LogicManager`","lastModifiedDate":"2023-04-10"},{"lineNumber":741,"author":{"gitId":"clydelhui"},"content":"5. The `LogicManager` then executes the `ImportCommand` instance which obtains the data from the file (as a `ReadonlyAddressBook`) via the `Importer` API call","lastModifiedDate":"2023-04-10"},{"lineNumber":742,"author":{"gitId":"clydelhui"},"content":"6. A new `Person` is then created via the `createNewImportPerson()` call","lastModifiedDate":"2023-04-10"},{"lineNumber":743,"author":{"gitId":"clydelhui"},"content":"7. The `Person` is added to the `Model`","lastModifiedDate":"2023-04-10"},{"lineNumber":744,"author":{"gitId":"clydelhui"},"content":"8. Execution of `ImportCommand` results in a `CommandResult` created and returned back to the `LogicManager`, completing the execution.","lastModifiedDate":"2023-04-10"},{"lineNumber":745,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":746,"author":{"gitId":"clydelhui"},"content":"#### Design consideration","lastModifiedDate":"2023-04-10"},{"lineNumber":747,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":748,"author":{"gitId":"clydelhui"},"content":"**Aspect: Importing multiple persons**","lastModifiedDate":"2023-04-10"},{"lineNumber":749,"author":{"gitId":"clydelhui"},"content":"* **Alternative 1:** Import multiple `Person` in one user command.","lastModifiedDate":"2023-04-10"},{"lineNumber":750,"author":{"gitId":"clydelhui"},"content":"    * Pros:","lastModifiedDate":"2023-04-10"},{"lineNumber":751,"author":{"gitId":"clydelhui"},"content":"        * Users can import multiple persons at once instead of importing each person one at a time.","lastModifiedDate":"2023-04-10"},{"lineNumber":752,"author":{"gitId":"clydelhui"},"content":"    * Cons:","lastModifiedDate":"2023-04-10"},{"lineNumber":753,"author":{"gitId":"clydelhui"},"content":"        * More bug-prone as unable to verify the source of import files, import files could possibly be corrupted.","lastModifiedDate":"2023-04-10"},{"lineNumber":754,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":755,"author":{"gitId":"clydelhui"},"content":"* **[Current implementation] Alternative 2:** Only allow one person to be imported in one user command.","lastModifiedDate":"2023-04-10"},{"lineNumber":756,"author":{"gitId":"clydelhui"},"content":"    * Pros:","lastModifiedDate":"2023-04-10"},{"lineNumber":757,"author":{"gitId":"clydelhui"},"content":"        * Easy to implement.","lastModifiedDate":"2023-04-10"},{"lineNumber":758,"author":{"gitId":"clydelhui"},"content":"        * Less bug-prone as import files are less likely to be from external sources.","lastModifiedDate":"2023-04-10"},{"lineNumber":759,"author":{"gitId":"clydelhui"},"content":"    * Cons:","lastModifiedDate":"2023-04-10"},{"lineNumber":760,"author":{"gitId":"clydelhui"},"content":"        * Users have to export one person at a time.","lastModifiedDate":"2023-04-10"},{"lineNumber":761,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":762,"author":{"gitId":"clydelhui"},"content":"* **Justification**","lastModifiedDate":"2023-04-10"},{"lineNumber":763,"author":{"gitId":"clydelhui"},"content":"    * Importing is meant to be paired with exports. Ensuring that files that are imported are likley to be valid exports will reduce issues and bugs during importing.","lastModifiedDate":"2023-04-10"},{"lineNumber":764,"author":{"gitId":"clydelhui"},"content":"    * Import command can be easily modified to accept larger export files in future iterations.","lastModifiedDate":"2023-04-10"},{"lineNumber":765,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":767,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":770,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":831,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":832,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":834,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":852,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":853,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":854,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":855,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":857,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":859,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":869,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"Alvozyn"},"content":"* has a need to keep track of events happening in their life","lastModifiedDate":"2023-02-28"},{"lineNumber":871,"author":{"gitId":"Alvozyn"},"content":"* has to manage different projects","lastModifiedDate":"2023-02-28"},{"lineNumber":872,"author":{"gitId":"Alvozyn"},"content":"* needs a way view their friend\u0027s free time","lastModifiedDate":"2023-02-28"},{"lineNumber":873,"author":{"gitId":"Alvozyn"},"content":"* wants to organise their contacts into groups","lastModifiedDate":"2023-02-28"},{"lineNumber":874,"author":{"gitId":"clydelhui"},"content":"* needs a method which is able to compile every group member\u0027s FTS","lastModifiedDate":"2023-02-28"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"edures888"},"content":"**Value proposition**:","lastModifiedDate":"2023-02-28"},{"lineNumber":877,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":878,"author":{"gitId":"edures888"},"content":"* Helps users to keep track of personal and friends timetable","lastModifiedDate":"2023-02-28"},{"lineNumber":879,"author":{"gitId":"clydelhui"},"content":"* Students find it hard to find FTS within their group of friends in NUS as they have to compare their","lastModifiedDate":"2023-02-28"},{"lineNumber":880,"author":{"gitId":"clydelhui"},"content":"timetables one by one. WGT then helps students to easily find FTS within their friend groups","lastModifiedDate":"2023-02-28"},{"lineNumber":881,"author":{"gitId":"edures888"},"content":"* Students can keep track of group meetings across all modules","lastModifiedDate":"2023-02-28"},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":886,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"gmengqi"},"content":"| Priority | As a …​                        | I can …​                                                       | So that I can…​                                                       |","lastModifiedDate":"2023-03-02"},{"lineNumber":890,"author":{"gitId":"Alvozyn"},"content":"|----------|--------------------------------|----------------------------------------------------------------|-----------------------------------------------------------------------|","lastModifiedDate":"2023-04-06"},{"lineNumber":891,"author":{"gitId":"-"},"content":"| `* * *`  | new user                       | see usage instructions                                         | refer to instructions when I forget how to use the App                |","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"gmengqi"},"content":"| `* * *`  | user                           | add a new friend                                               | store their events                                                    |","lastModifiedDate":"2023-02-28"},{"lineNumber":893,"author":{"gitId":"gmengqi"},"content":"| `* * *`  | user                           | delete a friend                                                | remove entries that I no longer need                                  |","lastModifiedDate":"2023-02-28"},{"lineNumber":894,"author":{"gitId":"gmengqi"},"content":"| `* * `   | user                           | find a person by name                                          | locate details of friend without having to go through the entire list |","lastModifiedDate":"2023-02-28"},{"lineNumber":895,"author":{"gitId":"gmengqi"},"content":"| `* * *`  | user                           | store my timetable                                             | keep track of my timetable                                            |","lastModifiedDate":"2023-02-28"},{"lineNumber":896,"author":{"gitId":"gmengqi"},"content":"| `* * *`  | user                           | store my friends\u0027 timetable                                    | keep track of my friends\u0027 timetable                                   |","lastModifiedDate":"2023-02-28"},{"lineNumber":897,"author":{"gitId":"clydelhui"},"content":"| `* * *`  | student                        | find a FTS within my group of friends                          | know when my friends are free                                         |","lastModifiedDate":"2023-02-28"},{"lineNumber":898,"author":{"gitId":"gmengqi"},"content":"| `* *`    | student with many friends      | be able to have multiple groups                                | manage my groups better                                               |","lastModifiedDate":"2023-02-28"},{"lineNumber":899,"author":{"gitId":"Alvozyn"},"content":"| `* *`    | forgetful student              | be notified about upcoming meetings i have with my friends     | make sure I wouldn\u0027t miss a meeting                                   |","lastModifiedDate":"2023-04-06"},{"lineNumber":900,"author":{"gitId":"gmengqi"},"content":"| `* *`    | user                           | be able to categorize my contact lists                         | easily find someone                                                   |","lastModifiedDate":"2023-02-28"},{"lineNumber":901,"author":{"gitId":"Alvozyn"},"content":"| `*`      | student with a lot of projects | be able to set recurring tasks such as weekly project meetings | remember my tasks                                                     |","lastModifiedDate":"2023-04-06"},{"lineNumber":902,"author":{"gitId":"gmengqi"},"content":"| `*`      | user                           | easily find out the venue and time of my upcoming lessons      | make my life more convenient                                          |","lastModifiedDate":"2023-02-28"},{"lineNumber":903,"author":{"gitId":"Alvozyn"},"content":"| `* * *`  | student                        | find a FTS within my group of friends                          | know when my friends are free                                         |","lastModifiedDate":"2023-04-06"},{"lineNumber":904,"author":{"gitId":"Alvozyn"},"content":"| `* *`    | student with many friends      | be able to have multiple groups                                | manage my groups better                                               |","lastModifiedDate":"2023-04-06"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":908,"author":{"gitId":"gmengqi"},"content":"(For all use cases below, the **System** is the `Where Got Time` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-02"},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"clydelhui"},"content":"**Use case: UC01 - Delete a person**","lastModifiedDate":"2023-02-28"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":917,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"Alvozyn"},"content":"* 2a. The Person list is empty.","lastModifiedDate":"2023-04-06"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"Alvozyn"},"content":"**Use Case: UC02 - Add an isolated event**","lastModifiedDate":"2023-03-28"},{"lineNumber":934,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":935,"author":{"gitId":"clydelhui"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":936,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":937,"author":{"gitId":"clydelhui"},"content":"1. User requests to list persons","lastModifiedDate":"2023-02-28"},{"lineNumber":938,"author":{"gitId":"clydelhui"},"content":"2. WGT shows a list of persons","lastModifiedDate":"2023-02-28"},{"lineNumber":939,"author":{"gitId":"clydelhui"},"content":"3. User requests to add an event to a specific person in the list","lastModifiedDate":"2023-02-28"},{"lineNumber":940,"author":{"gitId":"clydelhui"},"content":"4. WGT adds event to the person","lastModifiedDate":"2023-02-28"},{"lineNumber":941,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":942,"author":{"gitId":"clydelhui"},"content":"    Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":943,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":944,"author":{"gitId":"clydelhui"},"content":"**Extensions**","lastModifiedDate":"2023-02-28"},{"lineNumber":945,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":946,"author":{"gitId":"Alvozyn"},"content":"* 2a. The Person list is empty.","lastModifiedDate":"2023-04-06"},{"lineNumber":947,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":948,"author":{"gitId":"clydelhui"},"content":"    Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":949,"author":{"gitId":"clydelhui"},"content":"  ","lastModifiedDate":"2023-02-28"},{"lineNumber":950,"author":{"gitId":"Alvozyn"},"content":"* 3a. The given index of the person is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":951,"author":{"gitId":"Alvozyn"},"content":"  * 3a1. WGT shows an error message.","lastModifiedDate":"2023-03-28"},{"lineNumber":952,"author":{"gitId":"Alvozyn"},"content":"  ","lastModifiedDate":"2023-03-28"},{"lineNumber":953,"author":{"gitId":"Alvozyn"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-03-28"},{"lineNumber":954,"author":{"gitId":"Alvozyn"},"content":"* 3b. User enters the wrong name or date format","lastModifiedDate":"2023-03-28"},{"lineNumber":955,"author":{"gitId":"Alvozyn"},"content":"  * 3b1. WGT shows an error message.","lastModifiedDate":"2023-03-28"},{"lineNumber":956,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":957,"author":{"gitId":"Alvozyn"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-03-28"},{"lineNumber":958,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":959,"author":{"gitId":"Alvozyn"},"content":"* 3c. The starting time is later than the ending time of the isolated event","lastModifiedDate":"2023-03-28"},{"lineNumber":960,"author":{"gitId":"Alvozyn"},"content":"    * 3c1. WGT shows an error message.","lastModifiedDate":"2023-03-28"},{"lineNumber":961,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":962,"author":{"gitId":"Alvozyn"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-28"},{"lineNumber":963,"author":{"gitId":"Alvozyn"},"content":"  ","lastModifiedDate":"2023-03-28"},{"lineNumber":964,"author":{"gitId":"Alvozyn"},"content":"* 3d. The Isolated event period clashes with an existing isolated event or a recurring event","lastModifiedDate":"2023-03-28"},{"lineNumber":965,"author":{"gitId":"Alvozyn"},"content":"  * 3d1. WGT shows an error message.","lastModifiedDate":"2023-03-28"},{"lineNumber":966,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":967,"author":{"gitId":"Alvozyn"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-03-28"},{"lineNumber":968,"author":{"gitId":"Alvozyn"},"content":"  ","lastModifiedDate":"2023-03-28"},{"lineNumber":969,"author":{"gitId":"Alvozyn"},"content":"**Use Case: UC03 - Add a recurring event**","lastModifiedDate":"2023-03-28"},{"lineNumber":970,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":971,"author":{"gitId":"Alvozyn"},"content":"Similar to UC02","lastModifiedDate":"2023-03-28"},{"lineNumber":972,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":973,"author":{"gitId":"Alvozyn"},"content":"**Use Case: UC04 - Editing isolated event**","lastModifiedDate":"2023-03-28"},{"lineNumber":974,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":975,"author":{"gitId":"Alvozyn"},"content":"**MSS**","lastModifiedDate":"2023-03-28"},{"lineNumber":976,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":977,"author":{"gitId":"Alvozyn"},"content":"1. User requests to list persons","lastModifiedDate":"2023-03-28"},{"lineNumber":978,"author":{"gitId":"Alvozyn"},"content":"2. WGT shows a list of persons","lastModifiedDate":"2023-03-28"},{"lineNumber":979,"author":{"gitId":"Alvozyn"},"content":"3. User requests to edit an event to a specific isolated event that belong to the person in the list","lastModifiedDate":"2023-03-28"},{"lineNumber":980,"author":{"gitId":"Alvozyn"},"content":"4. WGT edits the specified isolated event belonging to the person","lastModifiedDate":"2023-03-28"},{"lineNumber":981,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":982,"author":{"gitId":"Alvozyn"},"content":"    Use case ends.","lastModifiedDate":"2023-03-28"},{"lineNumber":983,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":984,"author":{"gitId":"Alvozyn"},"content":"**Extensions**","lastModifiedDate":"2023-03-28"},{"lineNumber":985,"author":{"gitId":"Alvozyn"},"content":"* 2a. The Person list is empty.","lastModifiedDate":"2023-04-06"},{"lineNumber":986,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":987,"author":{"gitId":"Alvozyn"},"content":"    Use case ends.","lastModifiedDate":"2023-03-28"},{"lineNumber":988,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":989,"author":{"gitId":"Alvozyn"},"content":"* 3a. The given index of the person is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":990,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":991,"author":{"gitId":"clydelhui"},"content":"  * 3a1. WGT shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":992,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":993,"author":{"gitId":"clydelhui"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-02-28"},{"lineNumber":994,"author":{"gitId":"clydelhui"},"content":"  ","lastModifiedDate":"2023-02-28"},{"lineNumber":995,"author":{"gitId":"Alvozyn"},"content":"* 3b. The given index of the isolated event is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":996,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":997,"author":{"gitId":"Alvozyn"},"content":"  * 3b1. WGT shows an error message.","lastModifiedDate":"2023-03-28"},{"lineNumber":998,"author":{"gitId":"Alvozyn"},"content":"    ","lastModifiedDate":"2023-03-28"},{"lineNumber":999,"author":{"gitId":"Alvozyn"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-03-28"},{"lineNumber":1000,"author":{"gitId":"Alvozyn"},"content":"* 3c. User enters the wrong name or date format ","lastModifiedDate":"2023-03-28"},{"lineNumber":1001,"author":{"gitId":"Alvozyn"},"content":"  * 3c1. WGT shows an error message.","lastModifiedDate":"2023-03-28"},{"lineNumber":1002,"author":{"gitId":"Alvozyn"},"content":"  ","lastModifiedDate":"2023-03-28"},{"lineNumber":1003,"author":{"gitId":"Alvozyn"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-28"},{"lineNumber":1004,"author":{"gitId":"Alvozyn"},"content":"* 3d. User newly edited isolated event clashes with an existing Isolated or Recurring events","lastModifiedDate":"2023-03-28"},{"lineNumber":1005,"author":{"gitId":"Alvozyn"},"content":"  * 3d1. WGT shows an error message.","lastModifiedDate":"2023-03-28"},{"lineNumber":1006,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1007,"author":{"gitId":"Alvozyn"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-03-28"},{"lineNumber":1008,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1009,"author":{"gitId":"Alvozyn"},"content":"**Use Case: UC04 - Editing recurring event**","lastModifiedDate":"2023-03-28"},{"lineNumber":1010,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1011,"author":{"gitId":"Alvozyn"},"content":"Similar to UC03","lastModifiedDate":"2023-03-28"},{"lineNumber":1012,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1013,"author":{"gitId":"Alvozyn"},"content":"**Use Case: UC05 - Find FTS**","lastModifiedDate":"2023-03-28"},{"lineNumber":1014,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1015,"author":{"gitId":"clydelhui"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":1016,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1017,"author":{"gitId":"clydelhui"},"content":"1. User requests to list persons","lastModifiedDate":"2023-02-28"},{"lineNumber":1018,"author":{"gitId":"clydelhui"},"content":"2. WGT shows a list of persons","lastModifiedDate":"2023-02-28"},{"lineNumber":1019,"author":{"gitId":"clydelhui"},"content":"3. User requests to find FTS with a specific person in the list","lastModifiedDate":"2023-02-28"},{"lineNumber":1020,"author":{"gitId":"clydelhui"},"content":"4. WGT lists the common FTS","lastModifiedDate":"2023-02-28"},{"lineNumber":1021,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1022,"author":{"gitId":"clydelhui"},"content":"    Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":1023,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1024,"author":{"gitId":"clydelhui"},"content":"**Extensions**","lastModifiedDate":"2023-02-28"},{"lineNumber":1025,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1026,"author":{"gitId":"Alvozyn"},"content":"* 2a. The Person list is empty.","lastModifiedDate":"2023-04-06"},{"lineNumber":1027,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1028,"author":{"gitId":"clydelhui"},"content":"  Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":1029,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1030,"author":{"gitId":"clydelhui"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2023-02-28"},{"lineNumber":1031,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1032,"author":{"gitId":"clydelhui"},"content":"    * 3a1. WGT shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":1033,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1034,"author":{"gitId":"clydelhui"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-28"},{"lineNumber":1035,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1036,"author":{"gitId":"Alvozyn"},"content":"**Use Case: UC06 - Make Group**","lastModifiedDate":"2023-03-28"},{"lineNumber":1037,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1038,"author":{"gitId":"clydelhui"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":1039,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1040,"author":{"gitId":"clydelhui"},"content":"1. User requests to list persons","lastModifiedDate":"2023-02-28"},{"lineNumber":1041,"author":{"gitId":"clydelhui"},"content":"2. WGT shows a list of persons","lastModifiedDate":"2023-02-28"},{"lineNumber":1042,"author":{"gitId":"clydelhui"},"content":"3. User creates group with several specific people in the list","lastModifiedDate":"2023-02-28"},{"lineNumber":1043,"author":{"gitId":"clydelhui"},"content":"    Use case ends","lastModifiedDate":"2023-02-28"},{"lineNumber":1044,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1045,"author":{"gitId":"clydelhui"},"content":"**Extensions**","lastModifiedDate":"2023-02-28"},{"lineNumber":1046,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1047,"author":{"gitId":"Alvozyn"},"content":"* 2a. The Person list is empty.","lastModifiedDate":"2023-04-06"},{"lineNumber":1048,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1049,"author":{"gitId":"clydelhui"},"content":"  Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":1050,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1051,"author":{"gitId":"clydelhui"},"content":"* 3a. One of the given indices is invalid","lastModifiedDate":"2023-02-28"},{"lineNumber":1052,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1053,"author":{"gitId":"clydelhui"},"content":"    * 3a1. WGT shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":1054,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1055,"author":{"gitId":"clydelhui"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-28"},{"lineNumber":1056,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1057,"author":{"gitId":"clydelhui"},"content":"* 3b. Group name given is not unique","lastModifiedDate":"2023-02-28"},{"lineNumber":1058,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1059,"author":{"gitId":"clydelhui"},"content":"    * 3b1.  WGT shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":1060,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1061,"author":{"gitId":"clydelhui"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-28"},{"lineNumber":1062,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1066,"author":{"gitId":"lyndonlim27"},"content":"1.  Compatibility: The system should be compatible for any _mainstream operating systems_ with Java `11` or above installed","lastModifiedDate":"2023-02-28"},{"lineNumber":1067,"author":{"gitId":"lyndonlim27"},"content":"2.  Capacity: The system should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-28"},{"lineNumber":1068,"author":{"gitId":"lyndonlim27"},"content":"3.  Domain rules: The system should ideally be an NUS student.","lastModifiedDate":"2023-02-28"},{"lineNumber":1069,"author":{"gitId":"lyndonlim27"},"content":"4.  Efficiency: A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-02-28"},{"lineNumber":1070,"author":{"gitId":"lyndonlim27"},"content":"5.  Performance: The system should respond to user commands within 2 seconds.","lastModifiedDate":"2023-02-28"},{"lineNumber":1071,"author":{"gitId":"lyndonlim27"},"content":"6.  Maintainability: The system shall be designed to allow for easy maintenance and updates.","lastModifiedDate":"2023-02-28"},{"lineNumber":1072,"author":{"gitId":"lyndonlim27"},"content":"7.  Domain rules: The system should ideally be an NUS student.","lastModifiedDate":"2023-02-28"},{"lineNumber":1073,"author":{"gitId":"lyndonlim27"},"content":"8.  Notes about project scope: The product is not required to handle people with the same full name","lastModifiedDate":"2023-02-28"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":1079,"author":{"gitId":"gmengqi"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2023-02-28"},{"lineNumber":1080,"author":{"gitId":"gmengqi"},"content":"* **FTS**: Free Time Slot","lastModifiedDate":"2023-02-28"},{"lineNumber":1081,"author":{"gitId":"gmengqi"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2023-02-28"},{"lineNumber":1082,"author":{"gitId":"gmengqi"},"content":"* **MSS**: Main Success Scenario","lastModifiedDate":"2023-02-28"},{"lineNumber":1083,"author":{"gitId":"gmengqi"},"content":"* **API**: Application Programming Interface","lastModifiedDate":"2023-03-02"},{"lineNumber":1084,"author":{"gitId":"edures888"},"content":"* **Time slots**: Hourly time intervals ","lastModifiedDate":"2023-04-09"},{"lineNumber":1085,"author":{"gitId":"edures888"},"content":"* **Free time slots**: Unoccupied time intervals that a Person or a Group has","lastModifiedDate":"2023-04-09"},{"lineNumber":1086,"author":{"gitId":"edures888"},"content":"* **Timetable**: Collection of occupied and unoccupied time slots throughout a week","lastModifiedDate":"2023-04-09"},{"lineNumber":1087,"author":{"gitId":"edures888"},"content":"* **Schedule**: Used interchangeably with timetable","lastModifiedDate":"2023-04-09"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1105,"author":{"gitId":"Alvozyn"},"content":"   1. Double-click the jar file \u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":1106,"author":{"gitId":"Alvozyn"},"content":"    Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-04-06"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"       ","lastModifiedDate":"2020-05-23"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1116,"author":{"gitId":"lyndonlim27"},"content":"### Editing a person","lastModifiedDate":"2023-04-06"},{"lineNumber":1117,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1118,"author":{"gitId":"lyndonlim27"},"content":"1. Editing a person while all persons are being shown","lastModifiedDate":"2023-04-06"},{"lineNumber":1119,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1120,"author":{"gitId":"lyndonlim27"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list. ","lastModifiedDate":"2023-04-06"},{"lineNumber":1121,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1122,"author":{"gitId":"lyndonlim27"},"content":"   2. Test case: `edit 1 n/Bob`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1123,"author":{"gitId":"lyndonlim27"},"content":"      Expected: First contact is edited from the visible list. List is updated to show edited contact with new name.","lastModifiedDate":"2023-04-06"},{"lineNumber":1124,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1125,"author":{"gitId":"lyndonlim27"},"content":"   3. Test case: `edit 1 p/98765432`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1126,"author":{"gitId":"lyndonlim27"},"content":"      Expected: First contact is edited from the visible list. List is updated to show edited contact with new phone number.","lastModifiedDate":"2023-04-06"},{"lineNumber":1127,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1128,"author":{"gitId":"lyndonlim27"},"content":"   4. Test case: `edit 1 n/Tom p/92223333`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1129,"author":{"gitId":"lyndonlim27"},"content":"   Expected: First contact is edited from the visible list. List is updated to show edited contact with new name and phone number.","lastModifiedDate":"2023-04-06"},{"lineNumber":1130,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1131,"author":{"gitId":"lyndonlim27"},"content":"   5. Test case: `edit 1 g/`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1132,"author":{"gitId":"lyndonlim27"},"content":"      Expected: First contact is edited from the visible list. List is updated to show edited contact with no groups.","lastModifiedDate":"2023-04-06"},{"lineNumber":1133,"author":{"gitId":"lyndonlim27"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":1134,"author":{"gitId":"lyndonlim27"},"content":"   6. Test case: `edit 1 g/CS103`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1135,"author":{"gitId":"lyndonlim27"},"content":"      Expected: First contact is edited from the visible list. List is updated to show edited contact with new group.","lastModifiedDate":"2023-04-06"},{"lineNumber":1136,"author":{"gitId":"lyndonlim27"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":1137,"author":{"gitId":"lyndonlim27"},"content":"   7. Test case: `edit ``m/ g/CS2101`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1138,"author":{"gitId":"lyndonlim27"},"content":"      Expected: First contact is edited from the visible list. List is updated to show edited contact with new group and existing group.","lastModifiedDate":"2023-04-06"},{"lineNumber":1139,"author":{"gitId":"lyndonlim27"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":1140,"author":{"gitId":"lyndonlim27"},"content":"   8. Test case: `edit 1 t/`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1141,"author":{"gitId":"lyndonlim27"},"content":"      Expected: First contact is edited from the visible list. List is updated to show edited contact with no tags.","lastModifiedDate":"2023-04-06"},{"lineNumber":1142,"author":{"gitId":"lyndonlim27"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":1143,"author":{"gitId":"lyndonlim27"},"content":"   9. Test case: `edit 1 t/Borrowed my pen`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1144,"author":{"gitId":"lyndonlim27"},"content":"      Expected: First contact is edited from the visible list. List is updated to show edited contact with new tag.","lastModifiedDate":"2023-04-06"},{"lineNumber":1145,"author":{"gitId":"lyndonlim27"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":1146,"author":{"gitId":"lyndonlim27"},"content":"   10. Test case: `edit 1 m/ t/Saw at school today`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1147,"author":{"gitId":"lyndonlim27"},"content":"       Expected: First contact is edited from the visible list. List is updated to show edited contact with new tag and existing tag.","lastModifiedDate":"2023-04-06"},{"lineNumber":1148,"author":{"gitId":"lyndonlim27"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":1149,"author":{"gitId":"lyndonlim27"},"content":"   11. Test case: `edit 1 g/Somegroup`","lastModifiedDate":"2023-04-06"},{"lineNumber":1150,"author":{"gitId":"lyndonlim27"},"content":"       Expected: No contact is edited. Error details shown in the status message. The group(s) provided does not exist","lastModifiedDate":"2023-04-06"},{"lineNumber":1151,"author":{"gitId":"lyndonlim27"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":1152,"author":{"gitId":"lyndonlim27"},"content":"   12. Test case: `edit 0 n/Bob`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1153,"author":{"gitId":"lyndonlim27"},"content":"       Expected: No contact is edited. Error details shown in the status message.","lastModifiedDate":"2023-04-06"},{"lineNumber":1154,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1155,"author":{"gitId":"lyndonlim27"},"content":"   13. Test case : `edit 1`","lastModifiedDate":"2023-04-06"},{"lineNumber":1156,"author":{"gitId":"lyndonlim27"},"content":"      Expected: No contact is edited. Error details shown in the status message. At least one field to edit must be provided.","lastModifiedDate":"2023-04-06"},{"lineNumber":1157,"author":{"gitId":"lyndonlim27"},"content":"      ","lastModifiedDate":"2023-04-06"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1168,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1174,"author":{"gitId":"lyndonlim27"},"content":"### Creating a group","lastModifiedDate":"2023-04-06"},{"lineNumber":1175,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1176,"author":{"gitId":"lyndonlim27"},"content":"1. Prerequisities: The preloaded data for groups are not modified. (No groups are removed or added)","lastModifiedDate":"2023-04-06"},{"lineNumber":1177,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1178,"author":{"gitId":"lyndonlim27"},"content":"2. Test case: `group_create g/CS2100`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1179,"author":{"gitId":"lyndonlim27"},"content":"   Expected: Group created with name \u0027CS2100\u0027.","lastModifiedDate":"2023-04-06"},{"lineNumber":1180,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1181,"author":{"gitId":"lyndonlim27"},"content":"3. Test case: `group_create g/Best friends`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1182,"author":{"gitId":"lyndonlim27"},"content":"   Expected: Group not created. Status message indicates that group name can only be alphanumeric","lastModifiedDate":"2023-04-06"},{"lineNumber":1183,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1184,"author":{"gitId":"lyndonlim27"},"content":"4. Test case: `group_create g/CS2103`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1185,"author":{"gitId":"lyndonlim27"},"content":"   Expected: Group not created. Status message indicates that group already exists.","lastModifiedDate":"2023-04-06"},{"lineNumber":1186,"author":{"gitId":"lyndonlim27"},"content":"      ","lastModifiedDate":"2023-04-06"},{"lineNumber":1187,"author":{"gitId":"lyndonlim27"},"content":"### Deleting a group","lastModifiedDate":"2023-04-06"},{"lineNumber":1188,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1189,"author":{"gitId":"lyndonlim27"},"content":"1. Deleting a group while all groups are being shown","lastModifiedDate":"2023-04-06"},{"lineNumber":1190,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1191,"author":{"gitId":"lyndonlim27"},"content":"   1. Prerequisities: List all groups using `group_list` command. The preloaded data for groups are not modified. (No groups are removed or added)","lastModifiedDate":"2023-04-06"},{"lineNumber":1192,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1193,"author":{"gitId":"lyndonlim27"},"content":"   2. Test case: `group_delete 1`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1194,"author":{"gitId":"lyndonlim27"},"content":"      Expected: Group named CS2103 deleted and all persons removed from that group","lastModifiedDate":"2023-04-06"},{"lineNumber":1195,"author":{"gitId":"lyndonlim27"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":1196,"author":{"gitId":"lyndonlim27"},"content":"   3. Test case: `group_create g/Best friends`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1197,"author":{"gitId":"lyndonlim27"},"content":"      Expected: Group not deleted. Status message indicates invalid command format","lastModifiedDate":"2023-04-06"},{"lineNumber":1198,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1199,"author":{"gitId":"lyndonlim27"},"content":"### Finding a group","lastModifiedDate":"2023-04-06"},{"lineNumber":1200,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1201,"author":{"gitId":"lyndonlim27"},"content":"1. Prerequisities: The preloaded data for groups are not modified. (No groups are removed or added)","lastModifiedDate":"2023-04-06"},{"lineNumber":1202,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1203,"author":{"gitId":"lyndonlim27"},"content":"2. Test case: `group_find CS2103`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1204,"author":{"gitId":"lyndonlim27"},"content":"   Expected: GroupList will list out 1 group with name \u0027CS2103\u0027 and personList will list out all person in group \u0027CS2103\u0027. 1 group listed shown in status message.","lastModifiedDate":"2023-04-06"},{"lineNumber":1205,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1206,"author":{"gitId":"lyndonlim27"},"content":"3. Test case: `group_find Bestfriends`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1207,"author":{"gitId":"Alvozyn"},"content":"   Expected: Group and person list will not display anything","lastModifiedDate":"2023-04-10"},{"lineNumber":1208,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":1209,"author":{"gitId":"Alvozyn"},"content":"### Creating an Isolated event","lastModifiedDate":"2023-04-10"},{"lineNumber":1210,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":1211,"author":{"gitId":"Alvozyn"},"content":"1. Prerequisities: The preloaded data for person are not modified.","lastModifiedDate":"2023-04-10"},{"lineNumber":1212,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":1213,"author":{"gitId":"Alvozyn"},"content":"2. Test case: `event_create 1 ie/Swimming f/10/04/2025 14:00 t/10/04/2025 16:00`\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1214,"author":{"gitId":"Alvozyn"},"content":"   Expected: An Isolated event \u0027Swimming from: 10/04/2024 14:00 to: 10/04/2025 16:00\u0027 will be created for Alex Tan","lastModifiedDate":"2023-04-10"},{"lineNumber":1215,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":1216,"author":{"gitId":"Alvozyn"},"content":"3. Test case: `event_create 1 ie/Camping f/10/04/2020 14:00 t/13/04/2020 12:00`\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1217,"author":{"gitId":"Alvozyn"},"content":"   Expected: Isolated event not created. Status message indicates that event date cannot be before the current time","lastModifiedDate":"2023-04-10"},{"lineNumber":1218,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":1219,"author":{"gitId":"Alvozyn"},"content":"4. Test case: `event_create 1 ie/Karoke with friends f/13/04/2025 14:00 t/12/04/2025 12:00`\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1220,"author":{"gitId":"Alvozyn"},"content":"   Expected: Isolated event not created. Status message indicates that end time should not be earlier than start time.","lastModifiedDate":"2023-04-10"},{"lineNumber":1221,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":1222,"author":{"gitId":"Alvozyn"},"content":"5. Test case: `event_create 1 ie/Watching movie f/10/04/2025 14:00 t/10/04/2025 16:00`\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1223,"author":{"gitId":"Alvozyn"},"content":"   Expected: Isolated event not created. Status message indicates that event has conflict with Isolated Event List followed by","lastModifiedDate":"2023-04-10"},{"lineNumber":1224,"author":{"gitId":"Alvozyn"},"content":"   the index of the isolated event that it conflicted with and \u0027Swimming from: 10/04/2024 14:00 to: 10/04/2025 16:00\u0027.","lastModifiedDate":"2023-04-10"},{"lineNumber":1225,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":1226,"author":{"gitId":"Alvozyn"},"content":"### Creating a Recurring event","lastModifiedDate":"2023-04-10"},{"lineNumber":1227,"author":{"gitId":"Alvozyn"},"content":"1. Prerequisities: The preloaded data for person are not modified.","lastModifiedDate":"2023-04-10"},{"lineNumber":1228,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":1229,"author":{"gitId":"Alvozyn"},"content":"2. Test case: `event_create_recur 1 re/CS2103 Lecture d/Friday f/14:00 t/16:00`\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1230,"author":{"gitId":"Alvozyn"},"content":"   Expected: A Recurring Event \u0027CS2103 Lecture on FRIDAY from 14:00\u0027 will be created for Alex Tan","lastModifiedDate":"2023-04-10"},{"lineNumber":1231,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":1232,"author":{"gitId":"Alvozyn"},"content":"3. Test case: `event_create_recur 1 re/CS2101 Lecture d/Tuueeesdayy f/14:00 t/16:00`\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1233,"author":{"gitId":"Alvozyn"},"content":"   Expected: Recurring event not created. Status message indicates that the day of the week should be either MONDAY, ","lastModifiedDate":"2023-04-10"},{"lineNumber":1234,"author":{"gitId":"Alvozyn"},"content":"   TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY or SUNDAY.","lastModifiedDate":"2023-04-10"},{"lineNumber":1235,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":1236,"author":{"gitId":"Alvozyn"},"content":"4. Test case: `event_create_recur 1 re/CS2103 Tutorial d/Thursday f/10:00 t/09:00`\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1237,"author":{"gitId":"Alvozyn"},"content":"   Expected: Recurring event not created. Status message indicates that end time should not be earlier than start time.","lastModifiedDate":"2023-04-10"},{"lineNumber":1238,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1239,"author":{"gitId":"Alvozyn"},"content":"5. Test case: `event_create_recur 1 re/Self Studying d/Friday f/12:00 t/15:00`\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1240,"author":{"gitId":"Alvozyn"},"content":"   Expected: Recurring event not created. Status message indicates that event has conflict with Recurring Event List followed by","lastModifiedDate":"2023-04-10"},{"lineNumber":1241,"author":{"gitId":"Alvozyn"},"content":"   the index of the recurring event that it conflicted with and \u0027CS2103 Lecture on FRIDAY from 14:00 to 16:00.","lastModifiedDate":"2023-04-10"},{"lineNumber":1242,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1243,"author":{"gitId":"lyndonlim27"},"content":"### Export a person","lastModifiedDate":"2023-04-06"},{"lineNumber":1244,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1245,"author":{"gitId":"lyndonlim27"},"content":"1. Export a person while all persons are being shown","lastModifiedDate":"2023-04-06"},{"lineNumber":1246,"author":{"gitId":"lyndonlim27"},"content":"   1. Prerequisities: List all persons using the `list` command. ","lastModifiedDate":"2023-04-09"},{"lineNumber":1247,"author":{"gitId":"lyndonlim27"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":1248,"author":{"gitId":"lyndonlim27"},"content":"   2. Test case: `export 1`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1249,"author":{"gitId":"lyndonlim27"},"content":"      Expected: First person in the personList is exported and details of the person are shown in the status message","lastModifiedDate":"2023-04-06"},{"lineNumber":1250,"author":{"gitId":"lyndonlim27"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":1251,"author":{"gitId":"lyndonlim27"},"content":"   3. Test case: `export 2`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1252,"author":{"gitId":"lyndonlim27"},"content":"      Expected: Second person in the personList is exported and details of the person are shown in the status message","lastModifiedDate":"2023-04-06"},{"lineNumber":1253,"author":{"gitId":"lyndonlim27"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":1254,"author":{"gitId":"lyndonlim27"},"content":"   4. Test case: `export 99`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1255,"author":{"gitId":"lyndonlim27"},"content":"      Expected: No person is exported. Status message indicated person index provided is invalid","lastModifiedDate":"2023-04-06"},{"lineNumber":1256,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1257,"author":{"gitId":"lyndonlim27"},"content":"2. Export a person while person list is filtered","lastModifiedDate":"2023-04-06"},{"lineNumber":1258,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1259,"author":{"gitId":"lyndonlim27"},"content":"   1. Prerequisities: List one person using the `find` command (e.g `find Bernice`). ","lastModifiedDate":"2023-04-09"},{"lineNumber":1260,"author":{"gitId":"lyndonlim27"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":1261,"author":{"gitId":"lyndonlim27"},"content":"   2. Test case: `export 1`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1262,"author":{"gitId":"lyndonlim27"},"content":"      Expected: First person in the personList is exported and details of the person are shown in the status message","lastModifiedDate":"2023-04-06"},{"lineNumber":1263,"author":{"gitId":"lyndonlim27"},"content":"   ","lastModifiedDate":"2023-04-06"},{"lineNumber":1264,"author":{"gitId":"lyndonlim27"},"content":"   3. Test case: `export 2`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1265,"author":{"gitId":"lyndonlim27"},"content":"      Expected: No person is exported. Status message indicated person index provided is invalid","lastModifiedDate":"2023-04-06"},{"lineNumber":1266,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1267,"author":{"gitId":"lyndonlim27"},"content":"### Find free time slot","lastModifiedDate":"2023-04-09"},{"lineNumber":1268,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1269,"author":{"gitId":"lyndonlim27"},"content":"1. Find free time slot while all groups are being shown","lastModifiedDate":"2023-04-09"},{"lineNumber":1270,"author":{"gitId":"lyndonlim27"},"content":"   1. Prerequisities: List all groups using the `group_list` command. Add an isolated/events to a person with a group to see different time slots available. The preloaded data for groups are not modified. (No groups are removed or added)","lastModifiedDate":"2023-04-09"},{"lineNumber":1271,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1272,"author":{"gitId":"lyndonlim27"},"content":"   2. Test case: `free 1`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1273,"author":{"gitId":"lyndonlim27"},"content":"      Expected: Free time slots shown for the first group in groupList starting from today\u0027s date","lastModifiedDate":"2023-04-09"},{"lineNumber":1274,"author":{"gitId":"lyndonlim27"},"content":"      ","lastModifiedDate":"2023-04-09"},{"lineNumber":1275,"author":{"gitId":"lyndonlim27"},"content":"   3. Test case: `free 2`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1276,"author":{"gitId":"lyndonlim27"},"content":"      Expected: Free time slots shown for the second group in groupList starting from today\u0027s date","lastModifiedDate":"2023-04-09"},{"lineNumber":1277,"author":{"gitId":"lyndonlim27"},"content":"      ","lastModifiedDate":"2023-04-09"},{"lineNumber":1278,"author":{"gitId":"lyndonlim27"},"content":"   4. Test case: `free 99`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1279,"author":{"gitId":"lyndonlim27"},"content":"      Expected: No free time is shown. Status message indicated group index provided is invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":1280,"author":{"gitId":"lyndonlim27"},"content":"      ","lastModifiedDate":"2023-04-09"},{"lineNumber":1281,"author":{"gitId":"lyndonlim27"},"content":"   5. Test case: `free 1 f/20/04/2023`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1282,"author":{"gitId":"lyndonlim27"},"content":"      Expected: Free time slots shown for the first group in groupList starting from 09/04/2023.","lastModifiedDate":"2023-04-09"},{"lineNumber":1283,"author":{"gitId":"lyndonlim27"},"content":"      Note: Results may vary depending on when this test case is ran. ","lastModifiedDate":"2023-04-09"},{"lineNumber":1284,"author":{"gitId":"lyndonlim27"},"content":"      ","lastModifiedDate":"2023-04-09"},{"lineNumber":1285,"author":{"gitId":"lyndonlim27"},"content":"   6. Test case: `free 1 f/aaaa`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1286,"author":{"gitId":"lyndonlim27"},"content":"      Expected: No free time shown. Status message indicated that date format is incorrect.","lastModifiedDate":"2023-04-09"},{"lineNumber":1287,"author":{"gitId":"lyndonlim27"},"content":"      ","lastModifiedDate":"2023-04-09"},{"lineNumber":1288,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1290,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1291,"author":{"gitId":"lyndonlim27"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2023-04-06"},{"lineNumber":1292,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1293,"author":{"gitId":"lyndonlim27"},"content":"### Group name case-sensitive","lastModifiedDate":"2023-04-10"},{"lineNumber":1294,"author":{"gitId":"lyndonlim27"},"content":"* Feature flaw: Users can add groups containing the same letters/numbers but different capitalisation. For example \u0027CS2103\u0027 and \u0027cs2103\u0027 are two different groups","lastModifiedDate":"2023-04-06"},{"lineNumber":1295,"author":{"gitId":"lyndonlim27"},"content":"* Future plan: As we are planning to integrate with NUSMODS in the future. All groups would follow the same naming convention as NUS modules where they are capitalised. So we plan to make all group names capitalised in the future.","lastModifiedDate":"2023-04-06"},{"lineNumber":1296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1297,"author":{"gitId":"lyndonlim27"},"content":"### Data file editable","lastModifiedDate":"2023-04-10"},{"lineNumber":1298,"author":{"gitId":"lyndonlim27"},"content":"* Feature flaw: Users are able to edit the addressbook.json in the data folder. This can cause unwanted errors. We have handled json files with invalid parameters but it wipes out all existing content in the file if its invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":1299,"author":{"gitId":"lyndonlim27"},"content":"* Future plan: We plan to encrypt the json file using methods such as XOR encryption which makes the json file non-human readable. This prevents users from intentionally editing certain parameters.","lastModifiedDate":"2023-04-08"},{"lineNumber":1300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1301,"author":{"gitId":"lyndonlim27"},"content":"### Event names","lastModifiedDate":"2023-04-10"},{"lineNumber":1302,"author":{"gitId":"lyndonlim27"},"content":"* Feature flaw: Exporting a person includes the exact names for all events. This is undesirable for users as they may only want to share which date and time they are unavaliable and not share what event they have.","lastModifiedDate":"2023-04-08"},{"lineNumber":1303,"author":{"gitId":"lyndonlim27"},"content":"* Future plan: We plan to only export date and time of an event while the event name would be a fixed name. (e.g Events).","lastModifiedDate":"2023-04-08"},{"lineNumber":1304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":1305,"author":{"gitId":"lyndonlim27"},"content":"### Recurring Event Time","lastModifiedDate":"2023-04-10"},{"lineNumber":1306,"author":{"gitId":"Alvozyn"},"content":"* Feature flaw: Users cannot add a recurring event that last the whole day due to hourly basis implementation. ie: from today 00:00 to tomorrow 23:59","lastModifiedDate":"2023-04-10"},{"lineNumber":1307,"author":{"gitId":"Alvozyn"},"content":"* Feature plan: We plan to allow users to enter recurring events that spans over more than one day to solve so that it will be more flexible.","lastModifiedDate":"2023-04-10"},{"lineNumber":1308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"Alvozyn":165,"gmengqi":110,"edures888":80,"lyndonlim27":463,"-":338,"clydelhui":152}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"Where Got Time (WGT) **a perfect desktop app** dedicate to managing your events and plan out your meetings with your friends and family. It is developed for university student, who can type fast, to efficiently keep track of all of their events and their friends\u0027 events **via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, WGT can help you find a date that all your friends are free to meet instead of having to manually compare timetables with each other.","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"2. Download the latest `wheregottime.jar` from [here](https://github.com/AY2223S2-CS2103T-T09-2/tp/releases).","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"3. Copy the file to an **empty** folder that you want to use as the _home folder_ for your WhereGotTime. (e.g.: A new folder in your `Desktop`)","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"4. ","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"   1. On Windows, you can click the `wheregottime.jar` file to run the application:","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"   ![WindowsFileExplorerFolder](images/windowsTutorial/WindowsFileExplorerFolder.png)","lastModifiedDate":"2023-04-10"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"   2. Alternatively, open a command terminal:","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"      1. On **Windows**: Click the file path bar and type `cmd` and press the `Enter` button to start the command prompt:","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"      ![WindowsFileExplorerCMD](images/windowsTutorial/WindowsFileExplorerCMD.png)","lastModifiedDate":"2023-04-10"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"      A window similar to the one below should appear:","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"      ![WindowsCMD](images/windowsTutorial/WindowsCMD.png)","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"      Run the command `java -jar wheregottime.jar` to start the application:","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"      ![WindowsJARCommand](images/windowsTutorial/WindowsJARCommand.png)","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"      ","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"      2. On **Macs**: Control-click on the _home folder_ and click on `New Terminal at Folder` \u003c/br\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"      **Note: Do not double click on the jar file as the app may not work as intended.**","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"      ![MacFinder](images/macsTutorial/MacsFinder.png)","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"      A window similar to the one below should appear:","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"      ![MacsCMD](images/macsTutorial/MacsCMD.png)","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"      Run the command `java -jar wheregottime.jar` to start the application:","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"      ![MacsJARCommand](images/macsTutorial/MacsJARCommand.png)","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"5. A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-04-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"**WARNING: Directly editing the saved json file may cause the app to malfunction**","lastModifiedDate":"2023-04-10"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"[Demo video](https://drive.google.com/file/d/1XuYsu0c8_bqnjhY5ssS_eBkieym1VlTC/view?usp\u003dsharing) for the features.","lastModifiedDate":"2023-04-10"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"* Items with `…`​ after them can be used multiple times (Even not at all).\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"clydelhui"},"content":"* If a parameter is specified multiple times when it is only expected once, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":87,"author":{"gitId":"lyndonlim27"},"content":"* For commands that require index, the index is based on the current person/group list shown.","lastModifiedDate":"2023-04-01"},{"lineNumber":88,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"gmengqi"},"content":"## General commands","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"gmengqi"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"gmengqi"},"content":"Clears all entries from the address book.","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"gmengqi"},"content":"Format: `clear`","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"gmengqi"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"gmengqi"},"content":"Exits the program.","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"gmengqi"},"content":"Format: `exit`","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"gmengqi"},"content":"## Person-related commands","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"lyndonlim27"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG] [g/GROUP]…​`","lastModifiedDate":"2023-04-01"},{"lineNumber":118,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":119,"author":{"gitId":"lyndonlim27"},"content":"* A person can only be added to an **existing** group","lastModifiedDate":"2023-04-01"},{"lineNumber":120,"author":{"gitId":"clydelhui"},"content":"* Tags can only contain alphanumeric characters and spaces","lastModifiedDate":"2023-04-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"lyndonlim27"},"content":"A person can have any number of tags and groups (including 0)","lastModifiedDate":"2023-04-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"clydelhui"},"content":"* `add n/Betsy Crowe t/study buddy e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-04-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"lyndonlim27"},"content":"Format: `edit INDEX [m/] [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG] [g/GROUP]…​`","lastModifiedDate":"2023-03-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"clydelhui"},"content":"* At least one of the optional fields (e.g. `NAME`, `PHONE` etc.) must be provided.","lastModifiedDate":"2023-04-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"lyndonlim27"},"content":"* When editing tags/groups, the existing tags/groups of the person will be removed i.e adding of tags/groups is not cumulative.","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"Alvozyn"},"content":"* To add on to existing groups/tags without overwriting it, include the prefix `m/` (merge).","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"Alvozyn"},"content":"* When using prefix `m/`, groups/tags added cannot be empty.","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"clydelhui"},"content":"* Groups can only be added if they have been created.","lastModifiedDate":"2023-04-10"},{"lineNumber":149,"author":{"gitId":"lyndonlim27"},"content":"* You can remove all the person’s tags/groups by typing `t/` and `g/` respectively without","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"lyndonlim27"},"content":"  specifying any tags/groups after it.","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"lyndonlim27"},"content":"* Adding duplicate groups/tags to a `Person` would not result in multiple groups/tags created.","lastModifiedDate":"2023-04-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"lyndonlim27"},"content":"*  `edit 2 n/Betsy Crower t/ g/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags and groups.","lastModifiedDate":"2023-03-19"},{"lineNumber":156,"author":{"gitId":"lyndonlim27"},"content":"*  `edit 3 m/ t/Borrowed 10 dollars` Edit the tags of the 3rd person to be `Borrowed 10 dollars` plus the existing tag of that person.","lastModifiedDate":"2023-04-01"},{"lineNumber":157,"author":{"gitId":"lyndonlim27"},"content":"*  `edit 3 m/ g/CS2103T` Edit the groups of the 3rd person to be `CS2103T` plus the existing groups of that person.","lastModifiedDate":"2023-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"gmengqi"},"content":"## Group-related commands","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"lyndonlim27"},"content":"### Creating a group : `group_create`","lastModifiedDate":"2023-03-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":194,"author":{"gitId":"lyndonlim27"},"content":"Create a group in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":196,"author":{"gitId":"lyndonlim27"},"content":"Format: `group_create g/GROUP_NAME`","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":198,"author":{"gitId":"clydelhui"},"content":"* Creates a group with the specified group name `GROUP_NAME`","lastModifiedDate":"2023-04-10"},{"lineNumber":199,"author":{"gitId":"clydelhui"},"content":"* The group name cannot be empty and can only contain alphanumeric characters!","lastModifiedDate":"2023-04-10"},{"lineNumber":200,"author":{"gitId":"clydelhui"},"content":"* Only one group can be created at a time","lastModifiedDate":"2023-04-10"},{"lineNumber":201,"author":{"gitId":"lyndonlim27"},"content":"* If more than one group is specified, only the last occurrence of a group will be taken","lastModifiedDate":"2023-04-01"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":203,"author":{"gitId":"clydelhui"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-04-10"},{"lineNumber":204,"author":{"gitId":"clydelhui"},"content":"Group names cannot contain spaces!","lastModifiedDate":"2023-04-10"},{"lineNumber":205,"author":{"gitId":"clydelhui"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":207,"author":{"gitId":"lyndonlim27"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":208,"author":{"gitId":"lyndonlim27"},"content":"* `group_create g/CS2103T`","lastModifiedDate":"2023-03-19"},{"lineNumber":209,"author":{"gitId":"lyndonlim27"},"content":"* `group_create g/CS2101`","lastModifiedDate":"2023-03-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":211,"author":{"gitId":"lyndonlim27"},"content":"### Deleting a group : `group_delete`","lastModifiedDate":"2023-03-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":213,"author":{"gitId":"lyndonlim27"},"content":"Deletes an existing group from the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":215,"author":{"gitId":"lyndonlim27"},"content":"Format: `group_delete GROUP_INDEX`","lastModifiedDate":"2023-03-19"},{"lineNumber":216,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":217,"author":{"gitId":"lyndonlim27"},"content":"* Deletes a group with the specified `GROUP_INDEX`","lastModifiedDate":"2023-03-19"},{"lineNumber":218,"author":{"gitId":"lyndonlim27"},"content":"* The group index cannot be empty and must be an existing group","lastModifiedDate":"2023-03-19"},{"lineNumber":219,"author":{"gitId":"lyndonlim27"},"content":"* Deleting a group will remove all persons in that group","lastModifiedDate":"2023-03-19"},{"lineNumber":220,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":221,"author":{"gitId":"lyndonlim27"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":222,"author":{"gitId":"lyndonlim27"},"content":"* `group_delete 1`","lastModifiedDate":"2023-03-19"},{"lineNumber":223,"author":{"gitId":"lyndonlim27"},"content":"* `group_delete 2`","lastModifiedDate":"2023-03-19"},{"lineNumber":224,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":225,"author":{"gitId":"lyndonlim27"},"content":"### List all groups: `group_list`","lastModifiedDate":"2023-03-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":227,"author":{"gitId":"lyndonlim27"},"content":"Shows a list of all existing groups\u0027 name in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":228,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":229,"author":{"gitId":"lyndonlim27"},"content":"Format: `group_list`","lastModifiedDate":"2023-03-19"},{"lineNumber":230,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":231,"author":{"gitId":"lyndonlim27"},"content":"### Find a group: `group_find`","lastModifiedDate":"2023-03-19"},{"lineNumber":232,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":233,"author":{"gitId":"lyndonlim27"},"content":"Finds persons in groups whose group names contain any of the given keywords.","lastModifiedDate":"2023-03-19"},{"lineNumber":234,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":235,"author":{"gitId":"lyndonlim27"},"content":"Format: `group_find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-19"},{"lineNumber":236,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":237,"author":{"gitId":"lyndonlim27"},"content":"* The search is case-insensitive. e.g `CS2103` will match `cs2103`","lastModifiedDate":"2023-03-19"},{"lineNumber":238,"author":{"gitId":"lyndonlim27"},"content":"* The order of the keywords does not matter. e.g. `CS2103 CS2101` will match `CS2101 CS2103`","lastModifiedDate":"2023-03-19"},{"lineNumber":239,"author":{"gitId":"lyndonlim27"},"content":"* Only the group name is searched.","lastModifiedDate":"2023-03-19"},{"lineNumber":240,"author":{"gitId":"lyndonlim27"},"content":"* Only full words will be matched e.g. `CS2103` will not match `CS2103T`","lastModifiedDate":"2023-03-19"},{"lineNumber":241,"author":{"gitId":"lyndonlim27"},"content":"* Persons with groups matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-19"},{"lineNumber":242,"author":{"gitId":"lyndonlim27"},"content":"  e.g. `CS2103 CS2101` will return persons in `CS2101`, `CS2103`","lastModifiedDate":"2023-03-19"},{"lineNumber":243,"author":{"gitId":"lyndonlim27"},"content":"* The group name cannot be empty","lastModifiedDate":"2023-03-19"},{"lineNumber":244,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":245,"author":{"gitId":"lyndonlim27"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":246,"author":{"gitId":"lyndonlim27"},"content":"* `group_find CS2103` returns persons in the group `CS2103`","lastModifiedDate":"2023-03-19"},{"lineNumber":247,"author":{"gitId":"lyndonlim27"},"content":"* `group_find CS2103 CS2101` returns persons in the group `CS2103` and `CS2101`","lastModifiedDate":"2023-03-19"},{"lineNumber":248,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":249,"author":{"gitId":"gmengqi"},"content":"## Event-related commands","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":251,"author":{"gitId":"Alvozyn"},"content":"### Creating an event:","lastModifiedDate":"2023-03-20"},{"lineNumber":252,"author":{"gitId":"clydelhui"},"content":"Create events and add it to a specific person in WGT. WGT supports two types of events:","lastModifiedDate":"2023-04-10"},{"lineNumber":253,"author":{"gitId":"clydelhui"},"content":"1. Isolated events: one off events ","lastModifiedDate":"2023-04-10"},{"lineNumber":254,"author":{"gitId":"clydelhui"},"content":"2. Recurring events: weekly events such as tutorials and lectures ","lastModifiedDate":"2023-04-10"},{"lineNumber":255,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":256,"author":{"gitId":"Alvozyn"},"content":"Note that only **hourly** events can be created.","lastModifiedDate":"2023-04-02"},{"lineNumber":257,"author":{"gitId":"gmengqi"},"content":"**Note** You will not be able to create an isolated event or recurring event if there is existing event happening in the same time period. ","lastModifiedDate":"2023-04-10"},{"lineNumber":258,"author":{"gitId":"clydelhui"},"content":"For example, `17:00` is a valid timing and `17:30` is an invalid timing","lastModifiedDate":"2023-04-03"},{"lineNumber":259,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":260,"author":{"gitId":"Alvozyn"},"content":"#### 1) Isolated event: `event_create`","lastModifiedDate":"2023-03-20"},{"lineNumber":261,"author":{"gitId":"clydelhui"},"content":"Format: `event_create INDEX ie/EVENT_NAME f/START_DATETIME t/END_DATETIME`","lastModifiedDate":"2023-04-10"},{"lineNumber":262,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":263,"author":{"gitId":"gmengqi"},"content":"* `INDEX` refers to the index of the person to add the given isolated event","lastModifiedDate":"2023-04-07"},{"lineNumber":264,"author":{"gitId":"clydelhui"},"content":"* Creates an event with the specified name `EVENT_NAME` using the flag `ie/` which represents the words __Isolated event__","lastModifiedDate":"2023-04-10"},{"lineNumber":265,"author":{"gitId":"Alvozyn"},"content":"* The flags `f/` represent the word __from__ and `t/` represents the word __to__","lastModifiedDate":"2023-03-20"},{"lineNumber":266,"author":{"gitId":"clydelhui"},"content":"* `EVENT_NAME`, `START_DATETIME` and `END_DATETIME` cannot be left empty","lastModifiedDate":"2023-04-10"},{"lineNumber":267,"author":{"gitId":"clydelhui"},"content":"* If there are duplicate attributes (i.e. `event_create INDEX ie/test ie/test2 f/START_DATETIME t/END_DATETIME`), WGT will take the ","lastModifiedDate":"2023-04-10"},{"lineNumber":268,"author":{"gitId":"gmengqi"},"content":"info following the latest attribute (in the example case, WGT will take event name to be test 2). ","lastModifiedDate":"2023-04-09"},{"lineNumber":269,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":270,"author":{"gitId":"clydelhui"},"content":"* The format of both `START_DATETIME` and `END_DATETIME` would be in `dd/MM/yyyy HH:mm`","lastModifiedDate":"2023-04-10"},{"lineNumber":271,"author":{"gitId":"clydelhui"},"content":"* `START_DATETIME` has to be before the `END_DATETIME`","lastModifiedDate":"2023-04-10"},{"lineNumber":272,"author":{"gitId":"clydelhui"},"content":"* `START_DATETIME` and `END_DATETIME` has to be after the current date and time","lastModifiedDate":"2023-04-10"},{"lineNumber":273,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":274,"author":{"gitId":"Alvozyn"},"content":"Examples:","lastModifiedDate":"2023-03-20"},{"lineNumber":275,"author":{"gitId":"Alvozyn"},"content":"* `event_create 1 ie/CS2101 Presentation f/02/02/2025 16:00 t/28/02/2025 18:00`","lastModifiedDate":"2023-04-02"},{"lineNumber":276,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":277,"author":{"gitId":"Alvozyn"},"content":"#### 2) Weekly Recurring Event `event_create_recur`","lastModifiedDate":"2023-03-20"},{"lineNumber":278,"author":{"gitId":"Alvozyn"},"content":"Format: `event_create_recur INDEX re/EVENT_NAME d/DAY_OF_WEEK f/START_TIME t/END_TIME`","lastModifiedDate":"2023-03-20"},{"lineNumber":279,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":280,"author":{"gitId":"Alvozyn"},"content":"* `INDEX` refers to the index of the person whose recurring event list will be added with the given recurring event","lastModifiedDate":"2023-03-20"},{"lineNumber":281,"author":{"gitId":"clydelhui"},"content":"* Creates a recurring event with the specified name `EVENT_NAME` using the flag `re` which represents the words __Recurring event__","lastModifiedDate":"2023-04-10"},{"lineNumber":282,"author":{"gitId":"clydelhui"},"content":"* The flag `d/` represents the __day__ of the week","lastModifiedDate":"2023-04-10"},{"lineNumber":283,"author":{"gitId":"Alvozyn"},"content":"* The remaining flags `f/` represent the word __from__ and `t/` represents the word __to__","lastModifiedDate":"2023-03-20"},{"lineNumber":284,"author":{"gitId":"Alvozyn"},"content":"* The format `DAY_OF_WEEK` accepts the input `Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday`","lastModifiedDate":"2023-02-26"},{"lineNumber":285,"author":{"gitId":"Alvozyn"},"content":"* The format of `START_TIME` and `END_TIME` would be in `HH:mm`","lastModifiedDate":"2023-02-26"},{"lineNumber":286,"author":{"gitId":"Alvozyn"},"content":"* `EVENT_NAME`, `DAY_OF_WEEK`, `START_TIME` and `END_TIME` cannot be left empty","lastModifiedDate":"2023-04-02"},{"lineNumber":287,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":288,"author":{"gitId":"Alvozyn"},"content":"Examples:","lastModifiedDate":"2023-02-26"},{"lineNumber":289,"author":{"gitId":"Alvozyn"},"content":"* `event_create_recur 1 re/CS2103T Weekly Meeting d/Monday f/12:00 t/14:00`","lastModifiedDate":"2023-03-20"},{"lineNumber":290,"author":{"gitId":"Alvozyn"},"content":"* `event_create_recur 1 re/CS2103T Lecture d/Friday f/16:00 t/18:00`","lastModifiedDate":"2023-04-09"},{"lineNumber":291,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":292,"author":{"gitId":"Alvozyn"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Constrains:**","lastModifiedDate":"2023-04-10"},{"lineNumber":293,"author":{"gitId":"Alvozyn"},"content":"Recurring event consisting of the whole day from `00:00` to `00:00` is not allowed. The maximum time period that is allowed is from 00:00 to 23:00.","lastModifiedDate":"2023-04-10"},{"lineNumber":294,"author":{"gitId":"Alvozyn"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":295,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":296,"author":{"gitId":"gmengqi"},"content":"### Deleting an event:","lastModifiedDate":"2023-03-13"},{"lineNumber":297,"author":{"gitId":"Alvozyn"},"content":"Delete either an isolated or a weekly recurring event","lastModifiedDate":"2023-03-20"},{"lineNumber":298,"author":{"gitId":"Alvozyn"},"content":"#### 1) Delete an isolated event: `ie_delete`","lastModifiedDate":"2023-03-20"},{"lineNumber":299,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":300,"author":{"gitId":"gmengqi"},"content":"Deletes an existing isolated event from a person\u0027s isolated event list in WGT.","lastModifiedDate":"2023-04-07"},{"lineNumber":301,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":302,"author":{"gitId":"clydelhui"},"content":"Format: `ie_delete PERSON_INDEX EVENT_INDEX`","lastModifiedDate":"2023-04-10"},{"lineNumber":303,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":304,"author":{"gitId":"clydelhui"},"content":"* Deletes an event with the specified event index `EVENT_INDEX` from the specified person with person index `PERSON_INDEX`","lastModifiedDate":"2023-04-10"},{"lineNumber":305,"author":{"gitId":"clydelhui"},"content":"* Both `PERSON_INDEX` and `EVENT_INDEX` and cannot be empty and must be an existing and valid person and index i.e. if there is ","lastModifiedDate":"2023-04-10"},{"lineNumber":306,"author":{"gitId":"clydelhui"},"content":"only 3 persons stored in WGT, 4 is an invalid `PERSON_INDEX`","lastModifiedDate":"2023-04-10"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-04-07"},{"lineNumber":309,"author":{"gitId":"gmengqi"},"content":"Expired events (events\u0027 end date is before the current date time) will be automatically deleted","lastModifiedDate":"2023-04-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":312,"author":{"gitId":"Alvozyn"},"content":"Examples:","lastModifiedDate":"2023-03-20"},{"lineNumber":313,"author":{"gitId":"Alvozyn"},"content":"* `ie_delete 1 1`","lastModifiedDate":"2023-03-20"},{"lineNumber":314,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":315,"author":{"gitId":"Alvozyn"},"content":"#### 2) Delete recurring event: `re_delete`","lastModifiedDate":"2023-03-20"},{"lineNumber":316,"author":{"gitId":"gmengqi"},"content":"Deletes a recurring event from a person\u0027s recurring event list in WGT.","lastModifiedDate":"2023-04-07"},{"lineNumber":317,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":318,"author":{"gitId":"clydelhui"},"content":"Format: `re_delete PERSON_INDEX EVENT_INDEX`","lastModifiedDate":"2023-04-10"},{"lineNumber":319,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":320,"author":{"gitId":"clydelhui"},"content":"* Deletes an event with the specified event index `EVENT_INDEX` from the specified person index `PERSON_INDEX`","lastModifiedDate":"2023-04-10"},{"lineNumber":321,"author":{"gitId":"clydelhui"},"content":"* Both `PERSON_INDEX` and `EVENT_INDEX` and cannot be empty and must be an existing person and index","lastModifiedDate":"2023-04-10"},{"lineNumber":322,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":323,"author":{"gitId":"Alvozyn"},"content":"Examples:","lastModifiedDate":"2023-02-26"},{"lineNumber":324,"author":{"gitId":"Alvozyn"},"content":"* `re_delete 1 1`","lastModifiedDate":"2023-03-20"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":326,"author":{"gitId":"gmengqi"},"content":"### Editing an event:","lastModifiedDate":"2023-03-13"},{"lineNumber":327,"author":{"gitId":"Alvozyn"},"content":"Edit the attributes of either an isolated event or a weekly recurring event","lastModifiedDate":"2023-03-20"},{"lineNumber":328,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":329,"author":{"gitId":"gmengqi"},"content":"**Note** You will not be able to edit an isolated event or recurring event time period if there is existing event happening in the particular time period.","lastModifiedDate":"2023-04-10"},{"lineNumber":330,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":331,"author":{"gitId":"Alvozyn"},"content":"#### 1) Edit an isolated event: `ie_edit`","lastModifiedDate":"2023-03-20"},{"lineNumber":332,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":333,"author":{"gitId":"gmengqi"},"content":"Edit an existing isolated event from person\u0027s isolated event list in WGT.","lastModifiedDate":"2023-04-07"},{"lineNumber":334,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":335,"author":{"gitId":"clydelhui"},"content":"Format: `ie_edit PERSON_INDEX EVENT_INDEX [ie/NAME] [f/START_DATETIME] [t/END_DATETIME]`","lastModifiedDate":"2023-04-10"},{"lineNumber":336,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":337,"author":{"gitId":"clydelhui"},"content":"* Edit a weekly recurring event with the specified `EVENT_INDEX` that belong to a person with a specified `PERSON_INDEX`","lastModifiedDate":"2023-04-10"},{"lineNumber":338,"author":{"gitId":"clydelhui"},"content":"* **At least one attribute** from isolated event must be included. The attributes are `[ie/NAME]`, `[f/START_DATETIME]` and `[t/END_DATETIME]`","lastModifiedDate":"2023-04-10"},{"lineNumber":339,"author":{"gitId":"Alvozyn"},"content":"* Any attributes being edited on must be valid","lastModifiedDate":"2023-03-20"},{"lineNumber":340,"author":{"gitId":"Alvozyn"},"content":"* `NAME` must only be in alphabetic or numeric terms","lastModifiedDate":"2023-03-20"},{"lineNumber":341,"author":{"gitId":"clydelhui"},"content":"* `START_DATETIME` and `END_DATETIME` must be in the format of `dd/MM/yyyy HH:mm`","lastModifiedDate":"2023-04-10"},{"lineNumber":342,"author":{"gitId":"clydelhui"},"content":"* `START_DATETIME` has to be before the `END_DATETIME`","lastModifiedDate":"2023-04-10"},{"lineNumber":343,"author":{"gitId":"clydelhui"},"content":"* `START_DATETIME` and `END_DATETIME` has to be after the current date time","lastModifiedDate":"2023-04-10"},{"lineNumber":344,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":345,"author":{"gitId":"gmengqi"},"content":"Examples:","lastModifiedDate":"2023-03-13"},{"lineNumber":346,"author":{"gitId":"Alvozyn"},"content":"* `ie_edit 1 1 ie/Biking`","lastModifiedDate":"2023-03-20"},{"lineNumber":347,"author":{"gitId":"gmengqi"},"content":"* `ie_edit 1 1 f/09/03/2024 15:00`","lastModifiedDate":"2023-04-07"},{"lineNumber":348,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":349,"author":{"gitId":"Alvozyn"},"content":"#### 2) Edit a recurring event: `re_edit`","lastModifiedDate":"2023-03-20"},{"lineNumber":350,"author":{"gitId":"Alvozyn"},"content":"Edit an existing recurring event from person\u0027s recurring event list in the address book.","lastModifiedDate":"2023-03-20"},{"lineNumber":351,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":352,"author":{"gitId":"clydelhui"},"content":"Format: `re_edit PERSON_INDEX EVENT_INDEX [re/NAME] [d/DAY_OF_WEEK] [f/START_TIME] [t/END_TIME]`","lastModifiedDate":"2023-04-10"},{"lineNumber":353,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":354,"author":{"gitId":"clydelhui"},"content":"* Edit a weekly recurring event with the specified `EVENT_INDEX` that belong to a person with a specified `PERSON_INDEX`","lastModifiedDate":"2023-04-10"},{"lineNumber":355,"author":{"gitId":"Alvozyn"},"content":"* At least one attribute from recurring event must be included. The attributes are `[re/NAME]`, `[d/DAY_OF_WEEK]`, `[f/START_TIME]` and `[t/END_TIME]`","lastModifiedDate":"2023-04-02"},{"lineNumber":356,"author":{"gitId":"Alvozyn"},"content":"* Any attributes being edited on must be valid","lastModifiedDate":"2023-03-20"},{"lineNumber":357,"author":{"gitId":"Alvozyn"},"content":"* `NAME` must only be in alphabetic or numeric terms","lastModifiedDate":"2023-03-20"},{"lineNumber":358,"author":{"gitId":"Alvozyn"},"content":"* `DAY_OF_WEEK` must be either `Monday, Tuesday, Wednesday, Thursday, Friday, Saturday or Sunday`","lastModifiedDate":"2023-03-20"},{"lineNumber":359,"author":{"gitId":"Alvozyn"},"content":"* `START_TIME` and `END_TIME` must be in the format of `HH:mm`","lastModifiedDate":"2023-03-20"},{"lineNumber":360,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":361,"author":{"gitId":"Alvozyn"},"content":"Examples:","lastModifiedDate":"2023-02-26"},{"lineNumber":362,"author":{"gitId":"Alvozyn"},"content":"* `re_edit 1 1 re/Swimming`","lastModifiedDate":"2023-03-20"},{"lineNumber":363,"author":{"gitId":"Alvozyn"},"content":"* `re_edit 1 1 d/Tuesday`","lastModifiedDate":"2023-03-20"},{"lineNumber":364,"author":{"gitId":"Alvozyn"},"content":"* `re_edit 1 1 t/14:00`","lastModifiedDate":"2023-03-20"},{"lineNumber":365,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":366,"author":{"gitId":"edures888"},"content":"### Find free time slots: `free`","lastModifiedDate":"2023-03-31"},{"lineNumber":367,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":368,"author":{"gitId":"edures888"},"content":"Displays the time slots in a week when all members of the specified group are free (no events).","lastModifiedDate":"2023-03-31"},{"lineNumber":369,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":370,"author":{"gitId":"Alvozyn"},"content":"Format: `free GROUP_INDEX [f/START_DATE]`","lastModifiedDate":"2023-04-07"},{"lineNumber":371,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":372,"author":{"gitId":"clydelhui"},"content":"* Finds unoccupied time slots within members of the group at the specified `GROUP_INDEX`. The index refers to the index number","lastModifiedDate":"2023-04-03"},{"lineNumber":373,"author":{"gitId":"edures888"},"content":"  shown in the displayed group list. The index *must be a positive* 1, 2, 3 ...","lastModifiedDate":"2023-03-31"},{"lineNumber":374,"author":{"gitId":"edures888"},"content":"* The `START_DATE` field is optional. The time slots will be shown for the week ahead, starting from that date. If it is","lastModifiedDate":"2023-03-31"},{"lineNumber":375,"author":{"gitId":"edures888"},"content":"  not provided, then the current date will be used.","lastModifiedDate":"2023-03-31"},{"lineNumber":376,"author":{"gitId":"edures888"},"content":"* `START_DATE` must be of the format: `dd/MM/yyyy`","lastModifiedDate":"2023-03-31"},{"lineNumber":377,"author":{"gitId":"lyndonlim27"},"content":"* Note that if there are any changes to a person\u0027s event(s), the time table will only be updated upon entering the `free` command.","lastModifiedDate":"2023-04-01"},{"lineNumber":378,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":379,"author":{"gitId":"lyndonlim27"},"content":"Example:","lastModifiedDate":"2023-04-09"},{"lineNumber":380,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":381,"author":{"gitId":"lyndonlim27"},"content":"![Free time](images/FreeTime.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":382,"author":{"gitId":"lyndonlim27"},"content":"1) Let\u0027s say you want to find a free time slot within the group \u0027CS2103\u0027.","lastModifiedDate":"2023-04-09"},{"lineNumber":383,"author":{"gitId":"lyndonlim27"},"content":"2) Type the command `free` followed by the group index. In this case, the group index is 2.","lastModifiedDate":"2023-04-09"},{"lineNumber":384,"author":{"gitId":"lyndonlim27"},"content":"3) Hit enter.","lastModifiedDate":"2023-04-09"},{"lineNumber":385,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":386,"author":{"gitId":"lyndonlim27"},"content":"![Free time](images/FreeTime2.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":387,"author":{"gitId":"lyndonlim27"},"content":"1) The free time slots will be generated and shown below.","lastModifiedDate":"2023-04-09"},{"lineNumber":388,"author":{"gitId":"lyndonlim27"},"content":"2) The free time slots are shown from the current day that the command is entered.","lastModifiedDate":"2023-04-09"},{"lineNumber":389,"author":{"gitId":"lyndonlim27"},"content":"3) However, if you would like to change the start date, you can indicate the `START_DATE` but it is optional.","lastModifiedDate":"2023-04-09"},{"lineNumber":390,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":391,"author":{"gitId":"gmengqi"},"content":"## Data-related commands","lastModifiedDate":"2023-04-07"},{"lineNumber":392,"author":{"gitId":"clydelhui"},"content":"### Importing data : `import`","lastModifiedDate":"2023-03-31"},{"lineNumber":393,"author":{"gitId":"clydelhui"},"content":"Import one person into your address book to update their details and events.","lastModifiedDate":"2023-03-31"},{"lineNumber":394,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":395,"author":{"gitId":"clydelhui"},"content":"Format: `import`","lastModifiedDate":"2023-03-31"},{"lineNumber":396,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":397,"author":{"gitId":"clydelhui"},"content":"* Stored data must be in a file called `export.json` and the file must be placed in the folder `data` which is in the same location as the JAR file.","lastModifiedDate":"2023-03-31"},{"lineNumber":398,"author":{"gitId":"clydelhui"},"content":"* Stored data can only contain 1 person.","lastModifiedDate":"2023-03-31"},{"lineNumber":399,"author":{"gitId":"clydelhui"},"content":"* The imported person will not have any tags or groups.","lastModifiedDate":"2023-03-31"},{"lineNumber":400,"author":{"gitId":"lyndonlim27"},"content":"    * This is because groups and tags are dependent on how the user wants to assign them. Therefore, merging or overwriting groups/tags when importing is not appropriate.","lastModifiedDate":"2023-04-04"},{"lineNumber":401,"author":{"gitId":"clydelhui"},"content":"* If the imported person is already an entry in your address book with the same name (case-sensitive), their phone number, address, email as well as their event lists will be updated to the imported data.","lastModifiedDate":"2023-03-31"},{"lineNumber":402,"author":{"gitId":"clydelhui"},"content":"* If the imported person is not yet an entry in your address book, a new entry will be created with the imported person\u0027s details (excluding tags and groups).","lastModifiedDate":"2023-03-31"},{"lineNumber":403,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":404,"author":{"gitId":"lyndonlim27"},"content":"### Export a person: `export`","lastModifiedDate":"2023-03-31"},{"lineNumber":405,"author":{"gitId":"lyndonlim27"},"content":"Export a person\u0027s details from the address book.","lastModifiedDate":"2023-03-31"},{"lineNumber":406,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":407,"author":{"gitId":"clydelhui"},"content":"Format: `export [PERSON_INDEX]`","lastModifiedDate":"2023-04-10"},{"lineNumber":408,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":409,"author":{"gitId":"lyndonlim27"},"content":"* Exports a person\u0027s details with the specified `INDEX`","lastModifiedDate":"2023-03-31"},{"lineNumber":410,"author":{"gitId":"lyndonlim27"},"content":"* All details except groups and tags are exported (Reason mentioned in `Import` section)","lastModifiedDate":"2023-04-04"},{"lineNumber":411,"author":{"gitId":"lyndonlim27"},"content":"* Export data is saved in the data/export.json","lastModifiedDate":"2023-03-31"},{"lineNumber":412,"author":{"gitId":"lyndonlim27"},"content":"* Exporting a person will overwrite any existing export.json file","lastModifiedDate":"2023-03-31"},{"lineNumber":413,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":414,"author":{"gitId":"lyndonlim27"},"content":"Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":415,"author":{"gitId":"lyndonlim27"},"content":"* `export 1`","lastModifiedDate":"2023-03-31"},{"lineNumber":416,"author":{"gitId":"lyndonlim27"},"content":"* `export 2`","lastModifiedDate":"2023-03-31"},{"lineNumber":417,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"lyndonlim27"},"content":"WhereGotTime data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":424,"author":{"gitId":"lyndonlim27"},"content":"WhereGotTime data are saved as a JSON file `[JAR file location]/data/wheregottime.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-27"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":426,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":427,"author":{"gitId":"lyndonlim27"},"content":"If your changes to the data file makes its format invalid, the app will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-27"},{"lineNumber":428,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":430,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"lyndonlim27"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous WhereGotTime home folder.","lastModifiedDate":"2023-02-27"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"gmengqi"},"content":"| Action                     | Format, Examples                                                                                                                                                            |","lastModifiedDate":"2023-03-13"},{"lineNumber":442,"author":{"gitId":"Alvozyn"},"content":"|----------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-20"},{"lineNumber":443,"author":{"gitId":"gmengqi"},"content":"| **Add**                    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`       |","lastModifiedDate":"2023-03-13"},{"lineNumber":444,"author":{"gitId":"gmengqi"},"content":"| **Clear**                  | `clear`                                                                                                                                                                     |","lastModifiedDate":"2023-03-13"},{"lineNumber":445,"author":{"gitId":"gmengqi"},"content":"| **Delete**                 | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                         |","lastModifiedDate":"2023-03-13"},{"lineNumber":446,"author":{"gitId":"Alvozyn"},"content":"| **Edit**                   | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG] [g/GROUP]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com t/CS2103T g/`\u003cbr\u003e e.g., `edit 3 m/ t/CS2103T` |","lastModifiedDate":"2023-03-20"},{"lineNumber":447,"author":{"gitId":"gmengqi"},"content":"| **Find**                   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                  |","lastModifiedDate":"2023-03-13"},{"lineNumber":448,"author":{"gitId":"gmengqi"},"content":"| **List**                   | `list`                                                                                                                                                                      |","lastModifiedDate":"2023-03-13"},{"lineNumber":449,"author":{"gitId":"gmengqi"},"content":"| **Help**                   | `help`                                                                                                                                                                      |","lastModifiedDate":"2023-03-13"},{"lineNumber":450,"author":{"gitId":"Alvozyn"},"content":"| **Group create**           | `group_create g/GROUP_NAME`                                                                                                                                                 |","lastModifiedDate":"2023-03-20"},{"lineNumber":451,"author":{"gitId":"Alvozyn"},"content":"| **Group delete**           | `group_delete GROUP_INDEX`                                                                                                                                                  |","lastModifiedDate":"2023-03-20"},{"lineNumber":452,"author":{"gitId":"Alvozyn"},"content":"| **Group list**             | `group_list`                                                                                                                                                                |","lastModifiedDate":"2023-03-20"},{"lineNumber":453,"author":{"gitId":"Alvozyn"},"content":"| **Group find**             | `group_find KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `group_find CS2103 CS2101`                                                                                                  |","lastModifiedDate":"2023-03-20"},{"lineNumber":454,"author":{"gitId":"clydelhui"},"content":"| **Isolated Event create**  | `event_create INDEX ie/EVENT_NAME f/START_DATETIME t/END_DATETIME`                                                                                                                  |","lastModifiedDate":"2023-04-10"},{"lineNumber":455,"author":{"gitId":"clydelhui"},"content":"| **Isolated Event delete**  | `ie_delete PERSON_INDEX EVENT_INDEX`                                                                                                                                  |","lastModifiedDate":"2023-04-10"},{"lineNumber":456,"author":{"gitId":"clydelhui"},"content":"| **Isolated Event update**  | `ie_edit PERSON_INDEX EVENT_INDEX [ie/NAME] [f/START_DATETIME] [t/END_DATETIME]`                                                                                              |","lastModifiedDate":"2023-04-10"},{"lineNumber":457,"author":{"gitId":"Alvozyn"},"content":"| **Recurring Event create** | `event_create_recur INDEX re/EVENT_NAME d/DAY_OF_WEEK f/START_TIME t/END_TIME`                                                                                              |","lastModifiedDate":"2023-03-20"},{"lineNumber":458,"author":{"gitId":"clydelhui"},"content":"| **Recurring Event delete** | `re_delete PERSON_INDEX EVENT_INDEX`                                                                                                                                  |","lastModifiedDate":"2023-04-10"},{"lineNumber":459,"author":{"gitId":"clydelhui"},"content":"| **Recurring Event update** | `re_edit PERSON_INDEX EVENT_INDEX [re/NAME] [d/DAY_OF_WEEK] [f/START_TIME] [t/END_TIME]`                                                                              |","lastModifiedDate":"2023-04-10"},{"lineNumber":460,"author":{"gitId":"clydelhui"},"content":"| **Export person**          | `export [PERSON_INDEX]`                                                                                                                                                  |                                                                                                                                                     |","lastModifiedDate":"2023-04-10"},{"lineNumber":461,"author":{"gitId":"Alvozyn"},"content":"| **Free**                   | `free GROUP_INDEX [f/START_DATE]`                                                                                                                                           |","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"Alvozyn":79,"gmengqi":42,"edures888":8,"lyndonlim27":98,"-":159,"clydelhui":75}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"edures888"},"content":"    content: \"Where Got Time\";","lastModifiedDate":"2023-02-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"edures888":1,"-":294}},{"path":"docs/diagrams/AddIsolatedEventCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"start","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":":User executes command;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"if() then ([valid arguments])","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"    if() then ([the event not in isolated event list\\n or recurring event list])","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"        :Add event in the addressBook;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"    else([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"        endif","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"else([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"    endif","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"stop","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"gmengqi":18}},{"path":"docs/diagrams/AddIsolatedEventCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"!include style.puml","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"participant \":AddIsolatedEventCommandParser\" as AddIsolatedEventCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"participant \"ie:AddIsolatedEventCommand\" as AddIsolatedEventCommand LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"[-\u003e LogicManager : execute(\"event_create 1 ie/biking \\nf/26/03/2023 14:00 t/26/03/2023 15:00\")","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"activate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"event_create 1 ie/biking\\n f/26/03/2023 14:00 t/26/03/2023 15:00\")","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"create AddIsolatedEventCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"AddressBookParser -\u003e AddIsolatedEventCommandParser : parse(1 ie/biking f/26/03/2023 14:00\\n t/26/03/2023 15:00)","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"activate AddIsolatedEventCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"create AddIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"AddIsolatedEventCommandParser -\u003e AddIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"activate AddIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"AddIsolatedEventCommand --\u003e AddIsolatedEventCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"deactivate AddIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"AddIsolatedEventCommandParser --\u003e AddressBookParser : ie","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"deactivate AddIsolatedEventCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"gmengqi"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"AddIsolatedEventCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"destroy AddIsolatedEventCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"AddressBookParser --\u003e LogicManager : ie","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"gmengqi"},"content":"LogicManager -\u003e AddIsolatedEventCommand : execute()","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"gmengqi"},"content":"activate AddIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"gmengqi"},"content":"AddIsolatedEventCommand -\u003e Model : addIsolatedEvent(personToEdit, eventToAdd)","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"gmengqi"},"content":"activate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"Model --\u003e AddIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"gmengqi"},"content":"deactivate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"gmengqi"},"content":"create CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"gmengqi"},"content":"AddIsolatedEventCommand -\u003e CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"gmengqi"},"content":"activate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"gmengqi"},"content":"CommandResult --\u003e AddIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"gmengqi"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"gmengqi"},"content":"AddIsolatedEventCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"gmengqi"},"content":"deactivate AddIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"gmengqi"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"gmengqi"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"gmengqi"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"gmengqi":63}},{"path":"docs/diagrams/AddRecurringEventCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"start","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":":User executes command;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"if() then ([valid arguments])","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"    if() then ([the event not in recurring event list\\n or isolated event list])","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"        :Add event in the addressBook;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"        :Update TimeMask in the RecurringEventList;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"    else([else])","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"        endif","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"else([else])","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    endif","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"stop","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"Alvozyn":18}},{"path":"docs/diagrams/AddRecurringEventCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"!include style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"participant \":AddRecurringEventCommandParser\" as AddRecurringEventCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"participant \"re:AddRecurringEventCommand\" as AddRecurringEventCommand LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"[-\u003e LogicManager : execute(\"event_create_recur 1 re/biking \\n d/Monday f/14:00 t/15:00\")","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"activate LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"event_create_recur\\n 1 re/biking d/Monday f/14:00 t/15:00\")","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"activate AddressBookParser","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"create AddRecurringEventCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"AddressBookParser -\u003e AddRecurringEventCommandParser : parse(1 re/biking d/Monday \\nf/14:00 t/15:00)","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"activate AddRecurringEventCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"create AddRecurringEventCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"AddRecurringEventCommandParser -\u003e AddRecurringEventCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"activate AddRecurringEventCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"AddRecurringEventCommand --\u003e AddRecurringEventCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"deactivate AddRecurringEventCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"AddRecurringEventCommandParser --\u003e AddressBookParser : re","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"deactivate AddRecurringEventCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"AddRecurringEventCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"destroy AddRecurringEventCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"AddressBookParser --\u003e LogicManager : re","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"LogicManager -\u003e AddRecurringEventCommand : execute()","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"activate AddRecurringEventCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"AddRecurringEventCommand -\u003e Model : addRecurringEvent(personToEdit, \\neventToAdd)","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"activate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"Model --\u003e AddRecurringEventCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"deactivate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"AddRecurringEventCommand --\u003e Model:updateFilteredPersonList(\\nPREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"activate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"Model --\u003e AddRecurringEventCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"deactivate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"create CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"AddRecurringEventCommand -\u003e CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"activate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"CommandResult --\u003e AddRecurringEventCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"AddRecurringEventCommand --\u003e LogicManager : result","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"deactivate AddRecurringEventCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"Alvozyn":70}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/globe_internet\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    Class UI UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Class Logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Class Storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    Class Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class Main #grey","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class Commons LOGIC_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"    Class Importer #purple","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class \"\u003c$user\u003e\" as User MODEL_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c$documents\u003e\" as File UI_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"UI -[#green]\u003e Logic","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"UI -right[#green]-\u003e Model","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Logic -[#blue]-\u003e Storage","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"Logic -[#blue]-\u003e Importer","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Logic -down[#blue]-\u003e Model","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Logic","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Main -up[#grey]-\u003e Model","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Main -down[hidden]-\u003e Commons","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Storage -up[STORAGE_COLOR].\u003e Model","lastModifiedDate":"2021-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Storage .right[STORAGE_COLOR].\u003eFile","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"Importer .right[#purple].\u003eFile","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"User ..\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":33,"clydelhui":3}},{"path":"docs/diagrams/EditCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":":User executes command;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"if() then ([valid arguments])","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"    if() then ([valid index])","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"        :Edit person in addressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"    else([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"        endif","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"else([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"    endif","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"stop","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"lyndonlim27":18}},{"path":"docs/diagrams/EditCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"[-\u003e LogicManager : execute(\"edit 1 e/Bobjones@gmail.com\")","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit 1 e/Bobjones@gmail.com\")","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"create EditCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"AddressBookParser -\u003e EditCommandParser : parse(\"1 e/Bobjones@gmail.com\"\")","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"activate EditCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"create EditCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"EditCommandParser -\u003e EditCommand : index, editPersonDescriptor, shouldMerge","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"activate EditCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"EditCommand --\u003e EditCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"deactivate EditCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"EditCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"deactivate EditCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"activate EditCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"EditCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"CommandResult --\u003e EditCommand :","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"deactivate EditCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"lyndonlim27":60}},{"path":"docs/diagrams/EditIsolatedEventCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"start","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":":User executes command;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"if() then ([valid arguments])","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"    if() then ([valid index])","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"        :Edit isolated event in person\u0027s isolated event list;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"    else([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"        endif","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"else([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"    endif","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"stop","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"@enduml","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"gmengqi":19}},{"path":"docs/diagrams/EditIsolatedEventCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"!include style.puml","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"participant \":EditIsolatedEventCommandParser\" as EditIsolatedEventCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"participant \"ie:EditIsolatedEventCommand\" as EditIsolatedEventCommand LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"[-\u003e LogicManager : execute(\"ie_edit 1 1 ie/biking\")","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"activate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"ie_edit 1 1 ie/biking\")","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"create EditIsolatedEventCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"AddressBookParser -\u003e EditIsolatedEventCommandParser : parse(1 1 ie/biking)","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"activate EditIsolatedEventCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"create EditIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"EditIsolatedEventCommandParser -\u003e EditIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"activate EditIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"EditIsolatedEventCommand --\u003e EditIsolatedEventCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"deactivate EditIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"EditIsolatedEventCommandParser --\u003e AddressBookParser : ie","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"deactivate EditIsolatedEventCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"gmengqi"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"EditIsolatedEventCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"destroy EditIsolatedEventCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"AddressBookParser --\u003e LogicManager : ie","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"gmengqi"},"content":"LogicManager -\u003e EditIsolatedEventCommand : execute()","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"gmengqi"},"content":"activate EditIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"gmengqi"},"content":"EditIsolatedEventCommand -\u003e Model : setIsolatedEvent(personToEdit,\\n originalEvent, editedIsolatedEvent)","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"gmengqi"},"content":"activate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"Model --\u003e EditIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"gmengqi"},"content":"deactivate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"gmengqi"},"content":"create CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"gmengqi"},"content":"EditIsolatedEventCommand -\u003e CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"gmengqi"},"content":"activate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"gmengqi"},"content":"CommandResult --\u003e EditIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"gmengqi"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"gmengqi"},"content":"EditIsolatedEventCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"gmengqi"},"content":"deactivate EditIsolatedEventCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"gmengqi"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"gmengqi"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"gmengqi"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"gmengqi":63}},{"path":"docs/diagrams/ExportCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"@startuml","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"start","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":":User executes command;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"if () then ([command is valid])","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"    if () then ([valid index])","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"        :Export person to storage;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"    else ([else])","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"    endif","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"else([else])","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"endif","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"stop","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"@enduml","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"lyndonlim27":13,"clydelhui":1}},{"path":"docs/diagrams/ExportCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"@startuml","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"!include style.puml","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"participant \":ExportCommandParser\" as ExportCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"participant \"e:ExportCommand\" as ExportCommand LOGIC_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"end box","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"participant \":Storage\" as Storage STORAGE_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"end box","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"[-\u003e LogicManager : execute(\"export 1\")","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"activate LogicManager","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"export 1\")","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"activate AddressBookParser","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"create ExportCommandParser","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"AddressBookParser -\u003e ExportCommandParser : parse(\"1\")","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"activate ExportCommandParser","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"create ExportCommand","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"ExportCommandParser -\u003e ExportCommand : index","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"activate ExportCommand","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"ExportCommand --\u003e ExportCommandParser","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"deactivate ExportCommand","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"ExportCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"deactivate ExportCommandParser","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"LogicManager -\u003e ExportCommand : execute()","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"activate ExportCommand","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"create CommandResult","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"ExportCommand -\u003e CommandResult","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"activate CommandResult","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"CommandResult --\u003e ExportCommand","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"ExportCommand --\u003e LogicManager","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"deactivate ExportCommand","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"LogicManager -\u003e Storage : exportPerson(personToExport)","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"activate Storage","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"Storage --\u003e LogicManager","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"deactivate Storage","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"@enduml","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"lyndonlim27":60}},{"path":"docs/diagrams/FindTimeCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"start","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":":User executes command;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"if() then ([valid arguments])","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    if() then ([index of group present in model])","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"        :creates a completely empty 7-day parent timetable;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"        :checks through the Events of all Persons in specified Group\\nand updates the parent timetable;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"        :UI will display the resulting timetable;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    else([else])","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"        endif","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"else([else])","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    endif","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"stop","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"edures888":20}},{"path":"docs/diagrams/FindTimeCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"!include style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"participant \":FindTimeCommandParser\" as FindTimeCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"participant \":FindTimeCommand\" as FindTimeCommand LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"[-\u003e LogicManager : execute(\"free 1 f/04/04/2023\")","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"activate LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"free 1 f/04/04/2023\")","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"activate AddressBookParser","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"create FindTimeCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"AddressBookParser -\u003e FindTimeCommandParser : parse(\"free 1 f/04/04/2023\")","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"activate FindTimeCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"create FindTimeCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"FindTimeCommandParser -\u003e FindTimeCommand : index, date","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"activate FindTimeCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"FindTimeCommand --\u003e FindTimeCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"deactivate FindTimeCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"FindTimeCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"deactivate FindTimeCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"FindTimeCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"destroy FindTimeCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"LogicManager -\u003e FindTimeCommand : execute()","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"activate FindTimeCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"FindTimeCommand -\u003e Model : getFilteredGroupList()","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"activate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"Model --\u003e FindTimeCommand : lastShownGroups","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"deactivate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"FindTimeCommand -\u003e Model : get(index)","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"activate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"Model --\u003e FindTimeCommand : targetGroup","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"deactivate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"FindTimeCommand -\u003e Model : updateFilteredTimeSlotList\\n(targetGroup,startDate)","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"activate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"Model --\u003e FindTimeCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"deactivate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"create CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"FindTimeCommand -\u003e CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"activate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"CommandResult --\u003e FindTimeCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"FindTimeCommand --\u003e LogicManager : result","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"deactivate FindTimeCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"edures888":75}},{"path":"docs/diagrams/GroupCreateCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"start","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":":User executes command;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"if () then ([command is valid])","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"    if () then ([group not in model])","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"        :Add new group to model;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"    else ([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"    endif","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"else([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"endif","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"stop","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"lyndonlim27":14}},{"path":"docs/diagrams/GroupCreateCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"!include style.puml","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"participant \":GroupCreateCommandParser\" as GroupCreateCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"participant \"g:GroupCreateCommand\" as GroupCreateCommand LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"[-\u003e LogicManager : execute(\"group_create g/CS2103\")","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"activate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"group_create g/CS2103\")","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"create GroupCreateCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"AddressBookParser -\u003e GroupCreateCommandParser : parse(g/CS2103\")","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"activate GroupCreateCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"create GroupCreateCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"GroupCreateCommandParser -\u003e GroupCreateCommand : groupToAdd","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"activate GroupCreateCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"GroupCreateCommand --\u003e GroupCreateCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"deactivate GroupCreateCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"GroupCreateCommandParser --\u003e AddressBookParser : g","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"deactivate GroupCreateCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"AddressBookParser --\u003e LogicManager : g","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"LogicManager -\u003e GroupCreateCommand : execute()","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"activate GroupCreateCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"GroupCreateCommand -\u003e Model : addGroup(groupToAdd)","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"activate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"Model --\u003e GroupCreateCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"deactivate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"create CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"GroupCreateCommand -\u003e CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"activate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"CommandResult --\u003e GroupCreateCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"GroupCreateCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"deactivate GroupCreateCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"lyndonlim27":60}},{"path":"docs/diagrams/GroupDeleteCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"start","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":":User executes command;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"if () then ([command is valid])","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"    if () then ([index of group in model])","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"        :Delete group from model;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"    else ([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"    endif","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"else([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"endif","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"stop","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"lyndonlim27":14}},{"path":"docs/diagrams/GroupDeleteCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"!include style.puml","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"participant \":GroupDeleteCommandParser\" as GroupDeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"participant \"g:GroupDeleteCommand\" as GroupDeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"[-\u003e LogicManager : execute(\"group_delete 1\")","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"activate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"group_delete 1\")","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"create GroupDeleteCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"AddressBookParser -\u003e GroupDeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"activate GroupDeleteCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"create GroupDeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"GroupDeleteCommandParser -\u003e GroupDeleteCommand : index","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"activate GroupDeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"GroupDeleteCommand --\u003e GroupDeleteCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"deactivate GroupDeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"GroupDeleteCommandParser --\u003e AddressBookParser : g","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"deactivate GroupDeleteCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"AddressBookParser --\u003e LogicManager : g","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"LogicManager -\u003e GroupDeleteCommand : execute()","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"activate GroupDeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"GroupDeleteCommand -\u003e Model : deleteGroup(groupToDelete)","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"activate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"Model --\u003e GroupDeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"deactivate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"create CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"GroupDeleteCommand -\u003e CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"activate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"CommandResult --\u003e GroupDeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"GroupDeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"deactivate GroupDeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"lyndonlim27":60}},{"path":"docs/diagrams/GroupFindCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"start","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":":User executes command;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"if () then ([command is valid])","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"    :Keywords are parsed into Predicates;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"    :Group and person list is filtered using predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"    :GUI display the search results;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"else([else])","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"endif","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"stop","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"lyndonlim27":12}},{"path":"docs/diagrams/GroupFindCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"!include style.puml","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"participant \":GroupFindCommandParser\" as GroupFindCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"participant \"g:GroupFindCommand\" as GroupFindCommand LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"[-\u003e LogicManager : execute(\"group_find CS2103\")","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"activate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"group_find CS2103\")","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"create GroupFindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"AddressBookParser -\u003e GroupFindCommandParser : parse(\"CS2103\")","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"activate GroupFindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"create GroupFindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"GroupFindCommandParser -\u003e GroupFindCommand : groupPredicate, memberPredicate","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"activate GroupFindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"GroupFindCommand --\u003e GroupFindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"deactivate GroupFindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"GroupFindCommandParser --\u003e AddressBookParser : g","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"deactivate GroupFindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"AddressBookParser --\u003e LogicManager : g","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"LogicManager -\u003e GroupFindCommand : execute()","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"activate GroupFindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"GroupFindCommand -\u003e Model : updateFilteredGroupList(groupPredicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"activate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"Model --\u003e GroupFindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"deactivate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"GroupFindCommand -\u003e Model : updateFilteredPersonList(memberPredicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"activate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"Model --\u003e GroupFindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"deactivate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"create CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"GroupFindCommand -\u003e CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"activate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"CommandResult --\u003e GroupFindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"GroupFindCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"deactivate GroupFindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"lyndonlim27":66}},{"path":"docs/diagrams/ImportCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"@startuml","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"start","lastModifiedDate":"2023-04-10"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":":User executes command;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"if () then ([command is valid])","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"    if () then ([file exists])","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"        :Read data in file;","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"        if () then ([person in list])","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"            :Combine data to create new Person;","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"            :Replace person in list with new person;","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"        else ([else])","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"            :Create new person based on data;","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"            :Insert new person into list;","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"        endif","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"    else ([else])","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"    endif","lastModifiedDate":"2023-04-10"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"else([else])","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"endif","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"stop","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"@enduml","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"clydelhui":21}},{"path":"docs/diagrams/ImportCommandSequenceDiagramAddPerson.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"@startuml","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"!include style.puml","lastModifiedDate":"2023-04-10"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"participant \"i:ImportCommand\" as ImportCommand LOGIC_COLOR","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"end box","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"box Importer #pink","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"participant \":Importer\" as Importer #purple","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"end box","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-10"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"end box","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"[-\u003e LogicManager : execute(\"import\")","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"activate LogicManager","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"import\")","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"activate AddressBookParser","lastModifiedDate":"2023-04-10"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"create ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"AddressBookParser -\u003e ImportCommand : ImportCommand()","lastModifiedDate":"2023-04-10"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"activate ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"ImportCommand --\u003e AddressBookParser","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"deactivate ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"AddressBookParser --\u003e LogicManager : i","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"LogicManager -\u003e ImportCommand : execute()","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"activate ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"ImportCommand -\u003e Importer : readData()","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"activate Importer","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"Importer --\u003e ImportCommand : ReadOnlyAddressBook","lastModifiedDate":"2023-04-10"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"deactivate Importer","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"ImportCommand -\u003e ImportCommand : createNewImportPerson()","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"ImportCommand -\u003e Model : addPerson()","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"activate Model","lastModifiedDate":"2023-04-10"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"Model --\u003e ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"deactivate Model","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"create CommandResult","lastModifiedDate":"2023-04-10"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"ImportCommand -\u003e CommandResult","lastModifiedDate":"2023-04-10"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"activate CommandResult","lastModifiedDate":"2023-04-10"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"CommandResult --\u003e ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-10"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"ImportCommand --\u003e LogicManager","lastModifiedDate":"2023-04-10"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"deactivate ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-10"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-10"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"@enduml","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"clydelhui":64}},{"path":"docs/diagrams/ImportCommandSequenceDiagramSetPerson.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"@startuml","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"!include style.puml","lastModifiedDate":"2023-04-10"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"participant \"i:ImportCommand\" as ImportCommand LOGIC_COLOR","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"end box","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"box Importer #pink","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"participant \":Importer\" as Importer #purple","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"end box","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-10"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"end box","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"[-\u003e LogicManager : execute(\"import\")","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"activate LogicManager","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"import\")","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"activate AddressBookParser","lastModifiedDate":"2023-04-10"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"create ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"AddressBookParser -\u003e ImportCommand : ImportCommand()","lastModifiedDate":"2023-04-10"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"activate ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"ImportCommand --\u003e AddressBookParser","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"deactivate ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"AddressBookParser --\u003e LogicManager : i","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"LogicManager -\u003e ImportCommand : execute()","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"activate ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"ImportCommand -\u003e Importer : readData()","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"activate Importer","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"Importer --\u003e ImportCommand : ReadOnlyAddressBook","lastModifiedDate":"2023-04-10"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"deactivate Importer","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"ImportCommand -\u003e ImportCommand : createImportPerson()","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"ImportCommand -\u003e Model : setPerson()","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"activate Model","lastModifiedDate":"2023-04-10"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"Model --\u003e ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"deactivate Model","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"create CommandResult","lastModifiedDate":"2023-04-10"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"ImportCommand -\u003e CommandResult","lastModifiedDate":"2023-04-10"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"activate CommandResult","lastModifiedDate":"2023-04-10"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"CommandResult --\u003e ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-10"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"ImportCommand --\u003e LogicManager","lastModifiedDate":"2023-04-10"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"deactivate ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-10"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-10"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"@enduml","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"clydelhui":64}},{"path":"docs/diagrams/ImporterClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"@startuml","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"!include style.puml","lastModifiedDate":"2023-04-10"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"skinparam arrowColor #purple","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"skinparam classBackgroundColor #purple","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"package Importer {","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nImporter\" as Importer","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"Class JsonImporter","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"package Logic{","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"Class ImportCommand #blue","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"JsonImporter ..|\u003e Importer","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"ImportCommand .up.\u003e Importer #blue","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"@enduml","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"clydelhui":22}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"Class ImportCommand","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"package Importer{","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"ImportCommand -up-|\u003e Command","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"ImportCommand .up.\u003e Importer","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":45,"clydelhui":8}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"Class Group","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"Class UniqueGroupList","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"Class IsolatedEventList","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"Class IsolatedEvent","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"Class RecurringEventList","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"Class RecurringEvent","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"Class TimeMask","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"AddressBook *--\u003e \"1\" UniqueGroupList","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"UniqueGroupList --\u003e \"*\" Group","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"Person *--\u003e \"*\" Group","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"Person *--\u003e IsolatedEventList","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"Person *--\u003e RecurringEventList","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"Email -[hidden]right-\u003e Tag","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"Tag -[hidden]right-\u003e IsolatedEventList","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"IsolatedEventList -[hidden]right-\u003e RecurringEventList","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"IsolatedEventList *--\u003e \"*\" IsolatedEvent","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"RecurringEventList *--\u003e \"*\" RecurringEvent","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"RecurringEventList *--\u003e TimeMask","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"RecurringEvent-[hidden]left-\u003e TimeMask","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Alvozyn":17,"lyndonlim27":5,"-":49}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"Class JsonAdaptedGroup","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"Class JsonAdaptedRecurringEvent","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"Class JsonAdaptedIsolatedEvent","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"package \"ExportStorage\" #F4F6F6{","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nExportStorage\" as ExportStorage","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"Class JsonExportStorage","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"StorageManager ..|\u003e Storage","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"StorageManager --\u003e \"1\" ExportStorage","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"Storage --|\u003e ExportStorage","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"JsonExportStorage ..|\u003e ExportStorage","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedGroup","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedIsolatedEvent","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedRecurringEvent","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lyndonlim27":6,"-":42,"clydelhui":8}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"Class GroupListPanel","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"Class GroupCard","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"Class WhereGotTimeTable","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"MainWindow *-down-\u003e \"1\" GroupListPanel","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"MainWindow *-down-\u003e \"1\" WhereGotTimeTable","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"GroupListPanel -down-\u003e \"*\" GroupCard","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"WhereGotTimeTable --|\u003e UiPart","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"GroupCard ..\u003e Model","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"WhereGotTimeTable..\u003e Model","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"GroupListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"WhereGotTimeTable -[hidden]left-GroupListPanel","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Alvozyn":5,"lyndonlim27":7,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"title: Where Got Time","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T09-2/tp/branch/master/graph/badge.svg?token\u003dHYGLQGPHET)](https://codecov.io/gh/AY2223S2-CS2103T-T09-2/tp)","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"**Where Got Time (WGT) - a perfect desktop app dedicate to managing your events and plan out your","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"meetings with your friends and family.** It is developed for university student, who can type fast to efficiently","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"keep track of all of their events and their friends\u0027 events via a Command Line Interface.","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"* If you are interested in using Where Got Time, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"* If you are interested about developing Where Got Time, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"gmengqi":3,"lyndonlim27":4,"-":15}},{"path":"docs/team/alvozyn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"title: Kristen Chung Jia Yi\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"### Project: Where Got Time","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"Where Got Time is an addressbook-cum-timetable. Students find it hard to find free time slot within their group of","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"friends in NUS as they have to compare their timetables. Therefore, this product helps students to easily find free time","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"slots within a group of NUS friends, and keep track of personal and friends\u0027 timetable/schedule.","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"### My Contributions to the project","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"* **Code contributed**:","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"    [Respond Link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dalvozyn\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    * **Additional Feature**: Recurring Events","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"      * What it does: Allow users to add weekly recurring events into their schedules","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"      * Justification: This features allow user to create events that happens weekly without having to create multiple instance of them.","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"      * Contribution: Created all the related class related to `CRUD` and also implemented the logic which includes the command and the parser class.","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    * **Additional Feature**: Displaying of the Free Time Slot UI","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"      * What is does: Update the table according to to the free timeslot given","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"      * Justification: Allows user to easily locate the free slot based on colour instead of it just being in text","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"      * Contribution: Set up the related models that are only used to display the free time slot","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"  ","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"  * Updated UI","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    * Contributions: Fix bugs in the UI.","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"  ","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"  * Added documentation for the `event_create_recur` feature","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"  * Added documentation for the `re_edit` feature","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"  * Added documentation for the `re_delete` feature","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"  * Added details for `Command summary`.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"  * Updated user stories for adding and editing events","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"  * Added details for implementation of `event_create_recur` feature","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"  * Added details in manual testing for `Creating an Isolated event` and `Creating Recurring event`","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"  * Contributed to the demo video","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"  * Left detailed bug reports for other teams: [Bugs](https://github.com/Alvozyn/ped/issues)","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"Alvozyn":47}},{"path":"docs/team/clydelhui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"layout: page","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"title: Clyde Lhui\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"### Project: Where Got Time","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"Where Got Time is an addressbook-cum-timetable. Students find it hard to find free time slot within their group of","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"friends in NUS as they have to compare their timetables. Therefore, this product helps students to easily find free time","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"slots within a group of NUS friends, and keep track of personal and friends\u0027 timetable/schedule.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"### My Contributions to the project","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"#### **Code contributed**:","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"[Reposense Link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dclydelhui\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"#### **Enhancements implemented**:","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"* Implemented `Import` command and associated classes.","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"* Implemented abstract class for `Event`.","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"* Contributed to UI for `IsolatedEventList` and `RecurringEventList`","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"#### **Contributions to the UG**:","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"* Added documentation for `Import` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"* Made minor edits for better clarity.","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"#### **Contributions to the DG**:","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"* Added documentation for `Import` classes and commands","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"* Updated Architecture Diagram, `Import` related diagrams","lastModifiedDate":"2023-04-10"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"* Made minor edits to fix errors.","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"#### **Contributions to team-based tasks**:","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"* Reviewed several PRs [PR1](https://github.com/AY2223S2-CS2103T-T09-2/tp/pull/43) [PR2](https://github.com/AY2223S2-CS2103T-T09-2/tp/pull/42).","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"* Suggested changes to method implementations to improve code quality.","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"#### **Contributions beyond the project team**:","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"* Left detailed bug reports: [Bug1](https://github.com/clydelhui/ped/issues/2) [Bug2](https://github.com/clydelhui/ped/issues/6)","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"clydelhui":34}},{"path":"docs/team/edures888.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"layout: page","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"title: Du Jiahua\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"### Project: Where Got Time","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"Where Got Time is an addressbook-cum-timetable. Students find it hard to find free time slot within their group of","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"friends in NUS as they have to compare their timetables. Therefore, this product helps students to easily find free time","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"slots within a group of NUS friends, and keep track of personal and friends\u0027 timetable/schedule.","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"### My Contributions to the project","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"* **Code contributed**:","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"  [Reposense Link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dedures888\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"  * **Additional Feature**: Finding free time slot","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"      * What it does: Allows users to find weekly unoccupied time slots within specified group","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"      * Justification: Main use of the application","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"      * Contributions: Implemented the logic behind finding of common free time slots. Added to related models such as RecurringEventList as a result. Also implemented the command and parser classes for this feature.","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"  * **Additional Feature**: Group creation and deletion","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    * What it does: Allows users to create and delete a group.","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    * Justification: This allows users to organize Persons into Groups, and also allows finding of free time slots to be targeted at Groups","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    * Contributions: Implemented command and parser classes for Group related commands. Added to refinement of Group relate models.","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"  * Added documentation for the `free` feature","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"  ","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"  * Added details for implementation of `free` feature","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"  * Left detailed bug reports: [Bugs](https://github.com/edures888/ped/issues)","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"edures888":35}},{"path":"docs/team/gmengqi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"title: Gao Mengqi\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"### Project: Where Got Time","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"Where Got Time is an addressbook-cum-timetable. Students find it hard to find free time slot within their group","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"of friends in NUS as they have to compare their timetables. Therefore, this product helps students to easily find","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"free time slots within a group of NUS friends, and keep track of personal and friends\u0027 timetable/schedule.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"### My Contributions to the project","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"- **Code contributed**:","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"  [Reposense Link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dgmengqi\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17)","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"  * **Additional Feature**: incorporated IsolatedEvent in finding free time slot","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"    * What it does: Checking of the isolated events in the isolated event list to filter out the weekly free time slots ","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"    * Justification: Main use of the application","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"    * Contributions: Updated IsolatedEventList to find free time slots and added it to the implemented model for free time slot.","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"  * **Additional Feature**: CRUD for Isolated event class ","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"    * What it does: Allows users to create, read, update and delete isolated events. ","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"    * Justification: This allows users to organize Persons\u0027 isolated events, and also making implementation of finding of free time slots easier. ","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"    * Contributions: Implemented command and parser classes for Isolated event related commands.","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"  * **Testing**: Wrote user-related tests","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"    * Wrote JUnit tests to test for isolated events features for CRUD","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"- **Contributions to the UG**:","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"  * Added documentation for the `event_create` feature","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"  * Added documentation for the `ie_edit` feature ","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"  * Added documentation for the `ie_delete` feature ","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"- **Contributions to the DG**:","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"  - Added documentations for user stories in the DeveloperGuide.md","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"  - Added details for implementation of `event_create` feature ","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"gmengqi"},"content":"  - Made sequence diagram and activity diagram for `event_create` feature in the DG ","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"  - Added details for implementation of `ie_edit` feature ","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"  - Made sequence diagram and activity diagram for `ie_edit` feature in the DG","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"- **Contributions to team-based tasks**:","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"  - Added documentations for README.md ","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"  - Created a guideline for the suggested workflow to make it easier for the team to follow [here](https://github.com/AY2223S2-CS2103T-T09-2/tp/issues/17)","lastModifiedDate":"2023-04-10"},{"lineNumber":42,"author":{"gitId":"gmengqi"},"content":"  - Reviewed teammates\u0027 PR. ","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"gmengqi"},"content":"  - Completed tasks and milestones before the deadline. ","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"  - Created issues on the issue tracker to track tasks/bugs, as seen [here](https://github.com/AY2223S2-CS2103T-T09-2/tp/issues?q\u003dis%3Aissue+author%3Agmengqi)","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"gmengqi"},"content":"- **Contributions beyond the project team**:","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"gmengqi"},"content":"  - Reviewed peers\u0027 tP (CS2103T-T12-1)","lastModifiedDate":"2023-04-10"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"  - Reported bugs/flaws in peers\u0027 tp for PED","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"gmengqi":48}},{"path":"docs/team/lyndonlim27.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"title: Lyndon Lim\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"### Project: Where Got Time","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"Where Got Time (WGT) a perfect desktop app dedicate to managing your events and plan out your meetings with your friends and family. It is developed for university student, who can type fast to efficiently keep track of all of their events and their friends\u0027 events via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, WGT can help you find a date that all your friends are free to meet instead of having to manually compare timetables with each other.","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"Contributions to my project are given below. [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dCS2103T-t09-2\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dlyndonlim27\u0026tabRepo\u003dAY2223S2-CS2103T-T09-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"### New Features:","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"* Group create and delete","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"  * What it does: Allows users to create and delete a group.","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"  * Justification: This allows users to create a group to add person into or delete any existing groups.","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"  * Contributions: Set up the group related models and integrated with the group related commmands.","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"* Group add and remove","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"  * What it does: Allows users to add or remove a person from a group.","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"  * Justification: This feature is crucial as a user should be able to add or remove a person from a group.","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"  * Contributions: Set up the group related models and integrated with the group related commmands.","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"* Export","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"  * What it does: Allows users to export one specified person in the addressbook.","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"  * Justification: This feature is useful as a user may want to send their friends their latest details.","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"  * Contributions: Set up import command and integrate with the existing storage related models.","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"### Enhancements implemented:","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"* Project management","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"  * Managed releases of `1.3.trial`, `1.3` and `1.4`.","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"* Edit command","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"  * What it does: Allows the editing of groups. Has a new prefix to allow merging of new tags/groups inputted.","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"  * Justification: This feature is useful as users may want to add on to the existing tags/groups instead of overwriting it.","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"  * Contributions: Implemented the new prefix and updated the `EditCommand` and `EditCommandParser` accordingly.","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"* Updated UI","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"  * Contributions: Changed the layout, colouring scheme and fixed UI bugs","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"  * Added documentation for the features `group create`, `group delete`, `group add`, `group remove`, `group list`, `group find` and `export`.","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"  * Added details for `Command summary`, `About document` and `Quick Start`.","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"  * Updated details for non-functional requirements","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"  * Added details for implementation of `Group Create`, `Group Delete`, `Group Find`, `Edit` and `Export` features, including justifications, sequence and activity diagrams. ","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"  * Added details in manual testing for `Editing a person`, `Creating a group`, `Deleting a group`, `Finding a group`, `Export a person` and `Find free time slot`.","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"  * Added details in Appendix: Planned enhancements for `Group name case-sensitive`, `Data file editable` and `Event names`.","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"  * Set-up team\u0027s organisation and repository.","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"  * Set-up Codecov for team\u0027s repository.","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"  * Contributed to team demo video.","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"  * Reviewed and merged PRs for team members .","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"lyndonlim27":57}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.storage.ExportStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.storage.JsonExportStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"        ExportStorage exportStorage \u003d new JsonExportStorage(userPrefs.getExportFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, exportStorage);","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"gmengqi"},"content":"        model.deleteExpiredEvent();","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gmengqi":1,"lyndonlim27":4,"-":182}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    public static final String MESSAGE_GROUPS_LISTED_OVERVIEW \u003d \"%1$d groups listed!\";","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"    public static final String MESSAGE_INVALID_DATA \u003d \"Invalid data found!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"    public static final String MESSAGE_NO_IMPORT \u003d \"No import data found!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"    public static final String MESSAGE_IMPORT_SIZE_WRONG \u003d \"Invalid size of import!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_UNKNOWN_ISOLATED_EVENT \u003d \"No such event in isolated event list\";","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_INVALID_ISOLATED_EVENT_LIST \u003d \"No such index in the isolated event list\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_INVALID_RECURRING_EVENT_LIST \u003d \"No such index in the recurring event list\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_UNKNOWN_RECURRING_EVENT \u003d \"No such event in recurring event list\";","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    public static final String MESSAGE_EVENT_CLASH \u003d \"You already have an event at this time period:\\n%1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_EVENT_INVALID_DATE \u003d \"Invalid date! The date of event cannot be before the\"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"                                                                + \" current time!\";","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_NONEXISTENT_DATE \u003d \"Date do not exist, please key in a valid date!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_INVALID_EVENT_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_EVENT_START_AFTER_END \u003d \"The end time should be later than the start time\";","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_INVALID_GROUP_DISPLAYED_INDEX \u003d \"The group index provided is invalid\";","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"    public static final String MESSAGE_INVALID_GROUP \u003d \"The group(s) provided does not exist\";","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Alvozyn":3,"gmengqi":10,"edures888":2,"lyndonlim27":1,"-":13,"clydelhui":3}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"            .registerModule(new JavaTimeModule())","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":143,"clydelhui":2}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"    /** Returns an unmodifiable view of the filtered list of groups */","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"    /** Returns an unmodifiable view of the filtered list of time slots */","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    ObservableList\u003cString\u003e getFilteredTimeSlotList();","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"edures888":8,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"        if (command instanceof ExportCommand) {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"            ExportCommand exportCommand \u003d (ExportCommand) command;","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"            try {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"                storage.exportPerson(exportCommand.getExportPerson());","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"                throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"edures888"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"edures888"},"content":"        return model.getFilteredGroupList();","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"edures888"},"content":"    public ObservableList\u003cString\u003e getFilteredTimeSlotList() {","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"        return null;","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Alvozyn":1,"edures888":10,"lyndonlim27":10,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"        for (Group group : toAdd.getGroups()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"            if (!model.hasGroup(group)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_GROUP);","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lyndonlim27":9,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/AddIsolatedEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEventList;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.exceptions.EventConflictException;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":" * Command class for AddIsolatedEventCommand.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"public class AddIsolatedEventCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"    public static final String COMMAND_WORD \u003d \"event_create\";","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New isolated event added: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"            + \": Add an isolated event into the isolated event list\"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"            + \"by the index number used in the last person listing.\\n \"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"            + \"Parameters: index of person to add the event, event name,\"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"            + \" start date and end date (must be in the format of dd/MM/yyyy HH:mm) \"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"            + \"[INDEX] ie/[EVENT_NAME] f/[START_DATE] t/[END_DATE] \\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" ie/biking\" + \" f/09/03/2025 14:00\" + \" t/09/03/2025 15:00\";","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"    public final IsolatedEvent eventToAdd;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"    public final Index index;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"     * Constructor for AddIsolatedEventCommand Object.","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"     * @param index The index of the {@code Person} to which the {@code IsolatedEvent} will be added to.","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"     * @param eventToAdd The {IsolatedEvent} to be added to the {@code Person}.","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"    public AddIsolatedEventCommand(Index index, IsolatedEvent eventToAdd) {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(eventToAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"        this.eventToAdd \u003d eventToAdd;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"gmengqi"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"gmengqi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"        eventToAdd.checkDateTime();","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"gmengqi"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"gmengqi"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"gmengqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"gmengqi"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"gmengqi"},"content":"        IsolatedEventList isolatedEventList \u003d personToEdit.getIsolatedEventList();","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"            isolatedEventList.checkClashingIsolatedEvent(eventToAdd.getStartDate(),","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"gmengqi"},"content":"                    eventToAdd.getEndDate());","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"            eventToAdd.checkConflictsRecurringEventList(personToEdit.getRecurringEventList());","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"        } catch (EventConflictException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_EVENT_CLASH, e.getMessage()));","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"clydelhui"},"content":"        isolatedEventList.insert(eventToAdd);","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"clydelhui"},"content":"        model.setPerson(personToEdit, personToEdit);","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"clydelhui"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"gmengqi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, eventToAdd) + \" to \"","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"gmengqi"},"content":"                + personToEdit.getName());","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Alvozyn":5,"gmengqi":60,"clydelhui":12}},{"path":"src/main/java/seedu/address/logic/commands/AddRecurringEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEventList;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.exceptions.EventConflictException;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":" * Command class for AddRecurringEventCommand.","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"public class AddRecurringEventCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    public static final String COMMAND_WORD \u003d \"event_create_recur\";","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New recurring event added: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"            + \": Add a recurring event into the recurring event list\"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"            + \"by the index number used in the last person listing. \\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"            + \"Parameters: index of person to add the event, event name, week of the day,\"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"            + \" start time and end time (must be in the format HH:mm) \"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"            + \"[INDEX] re/[EVENT_NAME] d/[DAY_OF_WEEK] f/[START_TIME] t/[END_TIME] \\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" re/biking\" + \" d/Monday\" + \" f/14:00\" + \" t/15:00\";","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"    public final RecurringEvent eventToAdd;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    public final Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"     * Constructor for AddRecurringEventCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"     * @param eventToAdd","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"     * @param index","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"    public AddRecurringEventCommand(Index index, RecurringEvent eventToAdd) {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(eventToAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"        this.eventToAdd \u003d eventToAdd;","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"            eventToAdd.checkPeriod();","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"            eventToAdd.listConflictedEventWithIsolated(personToEdit.getIsolatedEventList());","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"        } catch (EventConflictException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"        RecurringEventList recurringEventList \u003d personToEdit.getRecurringEventList();","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"        String checkForEventClash \u003d recurringEventList.checkClashingRecurringEvent(eventToAdd);","lastModifiedDate":"2023-04-10"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"        if (checkForEventClash !\u003d null) {","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_EVENT_CLASH, checkForEventClash));","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"        model.addRecurringEvent(personToEdit, eventToAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"clydelhui"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, eventToAdd) + \" to \"","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"                + personToEdit.getName());","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Alvozyn":69,"gmengqi":4,"clydelhui":10}},{"path":"src/main/java/seedu/address/logic/commands/DeleteIsolatedEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.IsolatedEventList;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":" * Deletes an isolated event from a person\u0027s isolated event list using it\u0027s displayed person index","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":" * and displayed event index from the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"public class DeleteIsolatedEventCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"    public static final String COMMAND_WORD \u003d \"ie_delete\";","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Isolated event deleted: %1$s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"            + \": Delete an isolated event into the isolated event list\"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"            + \"by the index number used in the last person listing.\\n \"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"            + \"Parameters: index number of the person and index number of the event in the event list\"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"            + \" 1 1 \\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" 1\";","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"    private Index personIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"    private Index eventIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"gmengqi"},"content":"     * Constructor for DeleteIsolatedEventCommand.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"     * @param personIndex the index of the person.","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"     * @param eventIndex the index of the event to be deleted.","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"    public DeleteIsolatedEventCommand(Index personIndex, Index eventIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(personIndex);","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(eventIndex);","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"gmengqi"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"gmengqi"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"gmengqi"},"content":"     * Get the Person object and the IsolatedEvent object to be deleted and","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"     * delete the event from the person\u0027s isolated event list.","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"gmengqi"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"gmengqi"},"content":"     * @return Command result displaying the command successful message.","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"gmengqi"},"content":"     * @throws CommandException","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"gmengqi"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"gmengqi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"gmengqi"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"gmengqi"},"content":"        if (personIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"gmengqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"gmengqi"},"content":"        Person personToEdit \u003d lastShownList.get(personIndex.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"        IsolatedEventList isolatedEventList \u003d personToEdit.getIsolatedEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d isolatedEventList.getSize()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ISOLATED_EVENT_LIST);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"        IsolatedEvent event \u003d isolatedEventList.getIsolatedEvent(eventIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"gmengqi"},"content":"        if (event \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"gmengqi"},"content":"            throw new CommandException(Messages.MESSAGE_UNKNOWN_ISOLATED_EVENT);","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"        isolatedEventList.deleteIsolatedEvent(event);","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"clydelhui"},"content":"        model.setPerson(personToEdit, personToEdit);","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"gmengqi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, event) + \" to \"","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"gmengqi"},"content":"                + personToEdit.getName());","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Alvozyn":9,"gmengqi":71,"clydelhui":2}},{"path":"src/main/java/seedu/address/logic/commands/DeleteRecurringEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEventList;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.exceptions.EventConflictException;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":" * Deletes a recurring event from a person\u0027s recurring event list using it\u0027s displayed person index","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":" * and displayed event index from the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"public class DeleteRecurringEventCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    public static final String COMMAND_WORD \u003d \"re_delete\";","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Recurring event deleted: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"            + \": Delete an recurring event into the recurring event list\"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"            + \"by the index number used in the last person listing.\\n \"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"            + \"Parameters: index number of the person and index number of the event in the event list\"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"            + \" 1 1 \\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" 1\";","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"    private Index personIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    private Index eventIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"     * Constructor for DeleteIsolatedEventCommand.","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"     * @param personIndex the index of the person.","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"     * @param eventIndex the index of the event to be deleted.","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"    public DeleteRecurringEventCommand(Index personIndex, Index eventIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"     * Get the Person object and the ReccuringEvent object to be deleted and","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"     * delete the event from the person\u0027s isolated event list.","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"     * @return Command result displaying the command successful message.","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"     * @throws CommandException","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"    public CommandResult execute(Model model) throws CommandException, EventConflictException {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"        if (personIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"        Person personToEdit \u003d lastShownList.get(personIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"        RecurringEventList recurringEventList \u003d personToEdit.getRecurringEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d recurringEventList.getSize()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RECURRING_EVENT_LIST);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent event \u003d recurringEventList.getRecurringEvent(eventIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"        if (event \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"            throw new CommandException(Messages.MESSAGE_UNKNOWN_RECURRING_EVENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"        model.deleteRecurringEvent(personToEdit, event);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, event) + \" to \"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"                + personToEdit.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Alvozyn":81}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.IsolatedEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.RecurringEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"            + \"Existing values will be overwritten by the input values \"","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"            + \"unless prefix m/ is keyed in which merges groups and tags instead.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"            + \"[\" + PREFIX_GROUP + \"GROUP]...\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"    public static final String MESSAGE_NO_TAG_ADDED \u003d \"Tag added cannot be empty unless overwriting\";","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"    public static final String MESSAGE_NO_GROUP_ADDED \u003d \"Group added cannot be empty unless overwriting\";","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"    private final Boolean shouldMerge;","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"lyndonlim27"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor, Boolean shouldMerge) {","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"lyndonlim27"},"content":"        this.shouldMerge \u003d shouldMerge;","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"edures888"},"content":"        // TODO: Refactor","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"lyndonlim27"},"content":"        List\u003cGroup\u003e groups \u003d model.getAddressBook().getGroupList();","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"lyndonlim27"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor, shouldMerge);","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"lyndonlim27"},"content":"        for (Group group : editedPerson.getGroups()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"lyndonlim27"},"content":"            if (!groups.contains(group)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"lyndonlim27"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_GROUP);","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"clydelhui"},"content":"     * edited with {@code editPersonDescriptor}. Does not modify the {@code PersonEventList} of the {@code Person}.","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"lyndonlim27"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor,","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"lyndonlim27"},"content":"                                             Boolean shouldMerge) {","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":123,"author":{"gitId":"lyndonlim27"},"content":"        Set\u003cGroup\u003e updatedGroups \u003d editPersonDescriptor.getGroups().orElse(personToEdit.getGroups());","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"clydelhui"},"content":"        IsolatedEventList originalIsolatedEvents \u003d personToEdit.getIsolatedEventList();","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"clydelhui"},"content":"        RecurringEventList originalRecurringEvents \u003d personToEdit.getRecurringEventList();","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"lyndonlim27"},"content":"        Set\u003cTag\u003e finalTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"lyndonlim27"},"content":"        Set\u003cGroup\u003e finalGroups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"lyndonlim27"},"content":"        finalTags.addAll(updatedTags);","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"lyndonlim27"},"content":"        finalGroups.addAll(updatedGroups);","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"lyndonlim27"},"content":"        // If tag(s) included and should merge, append tags to person","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"lyndonlim27"},"content":"        if (editPersonDescriptor.getTags() !\u003d null \u0026\u0026 shouldMerge) {","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"lyndonlim27"},"content":"            finalTags.addAll(personToEdit.getTags());","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"lyndonlim27"},"content":"        // If group(s) included and should merge, append groups to person","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"lyndonlim27"},"content":"        if (editPersonDescriptor.getGroups() !\u003d null \u0026\u0026 shouldMerge) {","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"lyndonlim27"},"content":"            finalGroups.addAll(personToEdit.getGroups());","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"lyndonlim27"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, finalTags, finalGroups,","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"clydelhui"},"content":"                originalIsolatedEvents, originalRecurringEvents);","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"lyndonlim27"},"content":"        private Set\u003cGroup\u003e groups;","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":187,"author":{"gitId":"lyndonlim27"},"content":"            setGroups(toCopy.groups);","lastModifiedDate":"2023-03-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"lyndonlim27"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, groups);","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"lyndonlim27"},"content":"        /**","lastModifiedDate":"2023-03-11"},{"lineNumber":247,"author":{"gitId":"lyndonlim27"},"content":"         * Sets {@code groups} to this object\u0027s {@code groups}.","lastModifiedDate":"2023-03-11"},{"lineNumber":248,"author":{"gitId":"lyndonlim27"},"content":"         * A defensive copy of {@code groups} is used internally.","lastModifiedDate":"2023-03-11"},{"lineNumber":249,"author":{"gitId":"lyndonlim27"},"content":"         */","lastModifiedDate":"2023-03-11"},{"lineNumber":250,"author":{"gitId":"lyndonlim27"},"content":"        public void setGroups(Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-03-11"},{"lineNumber":251,"author":{"gitId":"lyndonlim27"},"content":"            this.groups \u003d (groups !\u003d null) ? new HashSet\u003c\u003e(groups) : null;","lastModifiedDate":"2023-03-11"},{"lineNumber":252,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":253,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":254,"author":{"gitId":"lyndonlim27"},"content":"        /**","lastModifiedDate":"2023-03-11"},{"lineNumber":255,"author":{"gitId":"lyndonlim27"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-11"},{"lineNumber":256,"author":{"gitId":"lyndonlim27"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-11"},{"lineNumber":257,"author":{"gitId":"lyndonlim27"},"content":"         * Returns {@code Optional#empty()} if {@code groups} is null.","lastModifiedDate":"2023-03-11"},{"lineNumber":258,"author":{"gitId":"lyndonlim27"},"content":"         */","lastModifiedDate":"2023-03-11"},{"lineNumber":259,"author":{"gitId":"lyndonlim27"},"content":"        public Optional\u003cSet\u003cGroup\u003e\u003e getGroups() {","lastModifiedDate":"2023-03-11"},{"lineNumber":260,"author":{"gitId":"lyndonlim27"},"content":"            return (groups !\u003d null) ? Optional.of(Collections.unmodifiableSet(groups)) : Optional.empty();","lastModifiedDate":"2023-03-11"},{"lineNumber":261,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":262,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":263,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"lyndonlim27"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2023-03-11"},{"lineNumber":284,"author":{"gitId":"lyndonlim27"},"content":"                    \u0026\u0026 getGroups().equals(e.getGroups());","lastModifiedDate":"2023-03-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"gmengqi":1,"edures888":4,"lyndonlim27":58,"-":218,"clydelhui":6}},{"path":"src/main/java/seedu/address/logic/commands/EditIsolatedEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATETIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISOEVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATETIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.IsolatedEventList;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.exceptions.EventConflictException;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":" * Edits the details of an existing event in the person\u0027s isolated event list.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"public class EditIsolatedEventCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"    public static final String COMMAND_WORD \u003d \"ie_edit\";","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Isolated event edited to: %1$s for %2$s\";","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"            + \": Edit an isolated event into the isolated event list\"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"            + \"by the index number used in the last person listing.\\n \"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"gmengqi"},"content":"            + \"[index number of the person], \"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"            + \"[index number of the event] in the event list \"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"            + PREFIX_ISOEVENT + \"EVENT_NAME \"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"            + PREFIX_STARTDATETIME + \"START_DATE \"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"            + PREFIX_ENDDATETIME + \"END_DATE\"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" 1\" + \" ie/biking\"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" 1\" + \" f/09/03/2025 14:00\" + \" t/09/03/2025 18:00\";","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"gmengqi"},"content":"    private final Index personIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"    private final Index eventIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"gmengqi"},"content":"    private final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"     * Constructor for EditIsolatedCommand.","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"gmengqi"},"content":"     * @param personIndex in which the event is contained in.","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"gmengqi"},"content":"     * @param eventIndex for the event to be edited.","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"gmengqi"},"content":"     * @param editEventDescriptor of what to be edited.","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"gmengqi"},"content":"    public EditIsolatedEventCommand(Index personIndex, Index eventIndex, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(personIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(eventIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"gmengqi"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"gmengqi"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"gmengqi"},"content":"        this.editEventDescriptor \u003d new EditEventDescriptor(editEventDescriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"gmengqi"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"gmengqi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"gmengqi"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"gmengqi"},"content":"        if (personIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"gmengqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"gmengqi"},"content":"        Person personToEdit \u003d lastShownList.get(personIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"gmengqi"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d personToEdit.getIsolatedEventList().getSize()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"gmengqi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_INDEX);","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent originalEvent \u003d personToEdit.getIsolatedEventList().getIsolatedEvent(eventIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent editedIsolatedEvent \u003d createEditedIsolatedEvent(personToEdit, originalEvent, editEventDescriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"clydelhui"},"content":"        IsolatedEventList isolatedEventList \u003d personToEdit.getIsolatedEventList();","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"gmengqi"},"content":"            editedIsolatedEvent.checkDateTime();","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"clydelhui"},"content":"            isolatedEventList.checkOverlapping(editedIsolatedEvent, eventIndex.getZeroBased());","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"clydelhui"},"content":"            editedIsolatedEvent.checkConflictsRecurringEventList(","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"clydelhui"},"content":"                    personToEdit.getRecurringEventList());","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"clydelhui"},"content":"        } catch (EventConflictException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"clydelhui"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_EVENT_CLASH, e.getMessage()));","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":92,"author":{"gitId":"clydelhui"},"content":"        isolatedEventList.edit(originalEvent, editedIsolatedEvent);","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"clydelhui"},"content":"        model.setPerson(personToEdit, personToEdit);","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":95,"author":{"gitId":"clydelhui"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedIsolatedEvent, personToEdit.getName())","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"clydelhui"},"content":"                + \"\\nOriginal Event: \" + originalEvent + \" for \" + personToEdit.getName());","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"gmengqi"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"gmengqi"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"gmengqi"},"content":"    private static IsolatedEvent createEditedIsolatedEvent(Person personToEdit, IsolatedEvent originalEvent,","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"gmengqi"},"content":"                                                           EditEventDescriptor eventDescriptor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"gmengqi"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"gmengqi"},"content":"        String updatedEventName \u003d eventDescriptor.getEventName().orElse(originalEvent.getEventName());","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime startDate \u003d eventDescriptor.getStartDate().orElse(originalEvent.getStartDate());","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime endDate \u003d eventDescriptor.getEndDate().orElse(originalEvent.getEndDate());","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"gmengqi"},"content":"        return new IsolatedEvent(updatedEventName, startDate, endDate);","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"gmengqi"},"content":"     * Stores the details to edit the event with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"gmengqi"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"gmengqi"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"gmengqi"},"content":"        private LocalDateTime startDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"gmengqi"},"content":"        private LocalDateTime endDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"gmengqi"},"content":"        private String eventName;","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"gmengqi"},"content":"        public EditEventDescriptor() {}","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"gmengqi"},"content":"        /**","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"gmengqi"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"gmengqi"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"gmengqi"},"content":"         */","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"gmengqi"},"content":"        public EditEventDescriptor(EditEventDescriptor toCopy) {","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"gmengqi"},"content":"            setEventName(toCopy.eventName);","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"gmengqi"},"content":"            setStartDate(toCopy.startDate);","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"gmengqi"},"content":"            setEndDate(toCopy.endDate);","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"gmengqi"},"content":"        /**","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"gmengqi"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"gmengqi"},"content":"         */","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"gmengqi"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"gmengqi"},"content":"            return CollectionUtil.isAnyNonNull(endDate, startDate, eventName);","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"gmengqi"},"content":"        public void setEventName(String name) {","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"gmengqi"},"content":"            this.eventName \u003d name;","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"gmengqi"},"content":"        public Optional\u003cString\u003e getEventName() {","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"gmengqi"},"content":"            return Optional.ofNullable(eventName);","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"gmengqi"},"content":"        public void setStartDate(LocalDateTime startDate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"gmengqi"},"content":"            this.startDate \u003d startDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"gmengqi"},"content":"        public Optional\u003cLocalDateTime\u003e getStartDate() {","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"gmengqi"},"content":"            return Optional.ofNullable(startDate);","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"gmengqi"},"content":"        public void setEndDate(LocalDateTime endDate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"gmengqi"},"content":"            this.endDate \u003d endDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"gmengqi"},"content":"        public Optional\u003cLocalDateTime\u003e getEndDate() {","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"gmengqi"},"content":"            return Optional.ofNullable(endDate);","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"gmengqi"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"gmengqi"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"gmengqi"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"gmengqi"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"gmengqi"},"content":"                return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"gmengqi"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"gmengqi"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"gmengqi"},"content":"            if (!(other instanceof EditCommand.EditPersonDescriptor)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"gmengqi"},"content":"                return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"gmengqi"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"gmengqi"},"content":"            // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"gmengqi"},"content":"            EditEventDescriptor e \u003d (EditEventDescriptor) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"gmengqi"},"content":"            return getEventName().equals(e.getEventName())","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"gmengqi"},"content":"                    \u0026\u0026 getEndDate().equals(e.getEndDate())","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"gmengqi"},"content":"                    \u0026\u0026 getStartDate().equals(e.getStartDate());","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":190,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Alvozyn":1,"gmengqi":173,"clydelhui":16}},{"path":"src/main/java/seedu/address/logic/commands/EditRecurringEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAYOFWEEK;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATETIME;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRINGEVENT;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATETIME;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEventList;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.exceptions.EventConflictException;","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":" * Edits the details of an existing event in the person\u0027s recurring event list.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"public class EditRecurringEventCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    public static final String COMMAND_WORD \u003d \"re_edit\";","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Recurring event edited to: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"            + \": Edit a recurring event into the recurring event list\"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"            + \"by the index number used in the person listing.\\n \"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"            + \"[index number of the person], \"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"            + \"[index number of the event] in the event list \"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"            + PREFIX_RECURRINGEVENT + \"EVENT_NAME \"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"            + PREFIX_DAYOFWEEK + \"DAY_OF_WEEK \"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"            + PREFIX_STARTDATETIME + \"START_TIME \"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"            + PREFIX_ENDDATETIME + \"END_TIME \"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1\" + \" 1\" + \" ie/biking\"","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1\" + \" 1\" + \" f/14:00\" + \" t/18:00\";","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"    private final Index personIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"    private final Index eventIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"    private final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"     * Constructor for EditRecurringCommand.","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"     * @param personIndex in which the event is contained in.","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"     * @param eventIndex for the event to be edited.","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"     * @param editEventDescriptor of what to be edited.","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"    public EditRecurringEventCommand(Index personIndex, Index eventIndex,","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"                                     EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(personIndex);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(eventIndex);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"        this.editEventDescriptor \u003d new EditEventDescriptor(editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"        if (personIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"        Person personToEdit \u003d lastShownList.get(personIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"        RecurringEventList recurringEventList \u003d personToEdit.getRecurringEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d recurringEventList.getSize()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_RECURRING_EVENT_LIST);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent originalEvent \u003d recurringEventList.getRecurringEvent(eventIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"        if (originalEvent \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"            throw new CommandException(Messages.MESSAGE_UNKNOWN_RECURRING_EVENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent editedRecurringEvent \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"                createEditedRecurringEvent(personToEdit, originalEvent, editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"gmengqi"},"content":"            editedRecurringEvent.checkPeriod();","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"clydelhui"},"content":"        } catch (EventConflictException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"clydelhui"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"clydelhui"},"content":"        personToEdit.getRecurringEventList().checkForClashesInRecurringEvent(editedRecurringEvent, originalEvent);","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"clydelhui"},"content":"        editedRecurringEvent.listConflictedEventWithIsolated(personToEdit.getIsolatedEventList());","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"Alvozyn"},"content":"        model.setRecurringEvent(personToEdit, originalEvent, editedRecurringEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"Alvozyn"},"content":"        return new CommandResult(\"Original Event: \" + originalEvent + \" for \" + personToEdit.getName()","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"Alvozyn"},"content":"                + \"\\n\" + String.format(MESSAGE_SUCCESS, editedRecurringEvent) + \" for \" + personToEdit.getName());","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"Alvozyn"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"Alvozyn"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"Alvozyn"},"content":"    private static RecurringEvent createEditedRecurringEvent(Person personToEdit, RecurringEvent originalEvent,","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"Alvozyn"},"content":"                                                             EditEventDescriptor eventDescriptor) {","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"Alvozyn"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"Alvozyn"},"content":"        String updatedEventName \u003d eventDescriptor.getEventName().orElse(originalEvent.getEventName());","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"Alvozyn"},"content":"        DayOfWeek dayOfWeek \u003d eventDescriptor.getDayOfWeek().orElse(originalEvent.getDayOfWeek());","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"Alvozyn"},"content":"        LocalTime startTime \u003d eventDescriptor.getStartTime().orElse(originalEvent.getStartTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"Alvozyn"},"content":"        LocalTime endTime \u003d eventDescriptor.getEndTime().orElse(originalEvent.getEndTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent newlyEditedRecurringEvent \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"Alvozyn"},"content":"                new RecurringEvent(updatedEventName, dayOfWeek, startTime, endTime);","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"Alvozyn"},"content":"        return newlyEditedRecurringEvent;","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"Alvozyn"},"content":"     * Stores the details to edit the event with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"Alvozyn"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"Alvozyn"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"Alvozyn"},"content":"        private String eventName;","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"Alvozyn"},"content":"        private DayOfWeek dayOfWeek;","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"Alvozyn"},"content":"        private LocalTime startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"Alvozyn"},"content":"        private LocalTime endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"Alvozyn"},"content":"        public EditEventDescriptor() {}","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"Alvozyn"},"content":"        /**","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"Alvozyn"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"Alvozyn"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"Alvozyn"},"content":"         */","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"Alvozyn"},"content":"        public EditEventDescriptor(EditEventDescriptor toCopy) {","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"Alvozyn"},"content":"            setEventName(toCopy.eventName);","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"Alvozyn"},"content":"            setDayOfWeek(toCopy.dayOfWeek);","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"Alvozyn"},"content":"            setStartTime(toCopy.startTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"Alvozyn"},"content":"            setEndTime(toCopy.endTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"Alvozyn"},"content":"        /**","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"Alvozyn"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"Alvozyn"},"content":"         */","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"Alvozyn"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"Alvozyn"},"content":"            return CollectionUtil.isAnyNonNull(eventName, dayOfWeek, startTime, endTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"Alvozyn"},"content":"        public void setEventName(String name) {","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"Alvozyn"},"content":"            this.eventName \u003d name;","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"Alvozyn"},"content":"        public Optional\u003cString\u003e getEventName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"Alvozyn"},"content":"            return Optional.ofNullable(eventName);","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"Alvozyn"},"content":"        public void setDayOfWeek(DayOfWeek dayOfWeek) {","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"Alvozyn"},"content":"            this.dayOfWeek \u003d dayOfWeek;","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"Alvozyn"},"content":"        public Optional\u003cDayOfWeek\u003e getDayOfWeek() {","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"Alvozyn"},"content":"            return Optional.ofNullable(dayOfWeek);","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"Alvozyn"},"content":"        public void setStartTime(LocalTime startTime) {","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"Alvozyn"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"Alvozyn"},"content":"        public Optional\u003cLocalTime\u003e getStartTime() {","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"Alvozyn"},"content":"            return Optional.ofNullable(startTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"Alvozyn"},"content":"        public void setEndTime(LocalTime endTime) {","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"Alvozyn"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"Alvozyn"},"content":"        public Optional\u003cLocalTime\u003e getEndTime() {","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"Alvozyn"},"content":"            return Optional.ofNullable(endTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"Alvozyn"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"Alvozyn"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"Alvozyn"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"Alvozyn"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"Alvozyn"},"content":"                return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":201,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"Alvozyn"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"clydelhui"},"content":"            if (!(other instanceof EditEventDescriptor)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":205,"author":{"gitId":"Alvozyn"},"content":"                return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"Alvozyn"},"content":"            // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"Alvozyn"},"content":"            EditEventDescriptor e \u003d (EditEventDescriptor) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"Alvozyn"},"content":"            return getEventName().equals(e.getEventName())","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"Alvozyn"},"content":"                    \u0026\u0026 getDayOfWeek().equals(e.getDayOfWeek())","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"Alvozyn"},"content":"                    \u0026\u0026 getStartTime().equals(e.getStartTime())","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"Alvozyn"},"content":"                    \u0026\u0026 getEndTime().equals(e.getEndTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Alvozyn":207,"gmengqi":2,"clydelhui":8}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.IsolatedEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.RecurringEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":" * Export a person\u0027s information to a json file","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Export the details of the person identified \"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"            + \"All details except tags and groups are exported.\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"    public static final String MESSAGE_EXPORT_PERSON_SUCCESS \u003d \"Export Person: %1$s\";","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"    private Person exportPerson;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"     * Creates an ExportCommand to export the specified person at {@code Index}","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"    public ExportCommand(Index targetIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"        Person personToExport \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"        exportPerson \u003d createExportPerson(personToExport);","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"        return new CommandResult(String.format(MESSAGE_EXPORT_PERSON_SUCCESS, exportPerson));","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"    private static Person createExportPerson(Person personToExport) {","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"        assert personToExport !\u003d null;","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"        Name exportName \u003d personToExport.getName();","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"        Phone exportPhone \u003d personToExport.getPhone();","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"lyndonlim27"},"content":"        Email exportEmail \u003d personToExport.getEmail();","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"lyndonlim27"},"content":"        Address exportAddress \u003d personToExport.getAddress();","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"lyndonlim27"},"content":"        Set\u003cTag\u003e exportTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"lyndonlim27"},"content":"        Set\u003cGroup\u003e exportGroups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"clydelhui"},"content":"        IsolatedEventList exportIsolatedEvents \u003d personToExport.getIsolatedEventList();","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"        RecurringEventList exportRecurringEvents \u003d personToExport.getRecurringEventList();","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"lyndonlim27"},"content":"        return new Person(exportName, exportPhone, exportEmail, exportAddress, exportTags, exportGroups,","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"lyndonlim27"},"content":"                exportIsolatedEvents, exportRecurringEvents);","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"lyndonlim27"},"content":"    public Person getExportPerson() {","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"lyndonlim27"},"content":"        return exportPerson;","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"lyndonlim27"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"lyndonlim27"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"lyndonlim27"},"content":"                || (other instanceof ExportCommand// instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"lyndonlim27"},"content":"                \u0026\u0026 targetIndex.equals(((ExportCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"lyndonlim27":87,"clydelhui":4}},{"path":"src/main/java/seedu/address/logic/commands/FindTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATETIME;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":" * Finds free time slot within a group of people within the week from the indicated date.","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"public class FindTimeCommand extends Command {","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"free\";","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"            + \": Finds all free time slots within a week shared by all members in the group \"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"            + \"(identified by the index number used in the displayed group list)\"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"            + \" and displays them in a timetable format.\"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"            + \" The start date can also be specified and time slots generated would be within a week from that date.\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"            + \"Parameters: \" + \"INDEX (must be a positive integer)\" + \" [\" + PREFIX_STARTDATETIME + \"START DATE]\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"            + COMMAND_WORD + \" 2 \" + PREFIX_STARTDATETIME + \"09/03/2023\\n\";","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Timetable generated! It may take some time for the table to display.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    private final Index index;","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"     * Creates a FindTimeCommand to find free time slots within a group","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"    public FindTimeCommand(Index index, LocalDate date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        startDate \u003d date;","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"        List\u003cGroup\u003e lastShownGroups \u003d model.getFilteredGroupList();","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownGroups.size()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"        Group targetGroup \u003d lastShownGroups.get(index.getZeroBased());","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"        model.updateFilteredTimeSlotList(targetGroup, startDate);","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS));","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"edures888":66}},{"path":"src/main/java/seedu/address/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"import seedu.address.storage.Importer;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"import seedu.address.storage.JsonImporter;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"import seedu.address.storage.exceptions.JsonNotFoundException;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":" * Represents a {@code Command} that imports data of a single {@code Person} into the current Address Book.","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Import the person data contained in an \"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"            + \"export file. If the person already exists, the personal information and events are updated.\"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"            + \"Groups and Tags are not modified.\"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"            + \"If not, a new person is added with no Groups and Tags.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"            + \"File must be stored in folder with the path \\\"./data\\\" \"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"            + \"and must be named \\\"export.json\\\" to be read.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"    public static final String MESSAGE_IMPORT_PERSON_SUCCESS \u003d \"Import Person: %1$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"    private static final Path standardPath \u003d Path.of(\"data\", \"export.json\");","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"    private final Importer importer;","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"    public ImportCommand(Importer importer) {","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"        this.importer \u003d importer;","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"    public ImportCommand() {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"        this.importer \u003d new JsonImporter(standardPath);","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"     * @throws seedu.address.logic.commands.exceptions.CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"        ReadOnlyAddressBook importReadOnlyAddressBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"            importReadOnlyAddressBook \u003d importer.readData();","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DATA);","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"        } catch (JsonNotFoundException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"            throw new CommandException(Messages.MESSAGE_NO_IMPORT);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"clydelhui"},"content":"        assert(importReadOnlyAddressBook !\u003d null);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"clydelhui"},"content":"        List\u003cPerson\u003e importPersonList \u003d importReadOnlyAddressBook.getPersonList();","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"clydelhui"},"content":"        if (importPersonList.size() !\u003d 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"clydelhui"},"content":"            throw new CommandException(Messages.MESSAGE_IMPORT_SIZE_WRONG);","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"clydelhui"},"content":"        Person importedPerson \u003d importPersonList.get(0);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"clydelhui"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"clydelhui"},"content":"        List\u003cPerson\u003e allPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"clydelhui"},"content":"        Person personToAdd;","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"clydelhui"},"content":"        for (Person listPerson : allPersonList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"clydelhui"},"content":"            if (listPerson.isSamePerson(importedPerson)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"clydelhui"},"content":"                personToAdd \u003d createImportPerson(importedPerson, listPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"clydelhui"},"content":"                model.setPerson(listPerson, personToAdd);","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"clydelhui"},"content":"                return new CommandResult(String.format(MESSAGE_IMPORT_PERSON_SUCCESS, personToAdd));","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"clydelhui"},"content":"        personToAdd \u003d createNewImportPerson(importedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"clydelhui"},"content":"        model.addPerson(personToAdd);","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"clydelhui"},"content":"        return new CommandResult(String.format(MESSAGE_IMPORT_PERSON_SUCCESS, personToAdd));","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"clydelhui"},"content":"    private static Person createImportPerson(Person importData, Person existingData) {","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"clydelhui"},"content":"        return new Person(importData.getName(),","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"clydelhui"},"content":"                importData.getPhone(),","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"clydelhui"},"content":"                importData.getEmail(),","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"clydelhui"},"content":"                importData.getAddress(),","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"clydelhui"},"content":"                existingData.getTags(), // Do not replace tags","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"clydelhui"},"content":"                existingData.getGroups(), // Do not replace groups","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"clydelhui"},"content":"                importData.getIsolatedEventList(),","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"clydelhui"},"content":"                importData.getRecurringEventList());","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"clydelhui"},"content":"    private static Person createNewImportPerson(Person importData) {","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"clydelhui"},"content":"        return new Person(importData.getName(),","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"clydelhui"},"content":"                importData.getPhone(),","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"clydelhui"},"content":"                importData.getEmail(),","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"clydelhui"},"content":"                importData.getAddress(),","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"clydelhui"},"content":"                new HashSet\u003c\u003e(),","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"clydelhui"},"content":"                new HashSet\u003c\u003e(),","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"clydelhui"},"content":"                importData.getIsolatedEventList(),","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"clydelhui"},"content":"                importData.getRecurringEventList());","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"clydelhui":115}},{"path":"src/main/java/seedu/address/logic/commands/group/GroupCreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.commands.group;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":" * Creates a group in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"public class GroupCreateCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"group_create\";","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"            + \" : Create a group in the address book. \"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"            + PREFIX_GROUP + \"GROUP NAME\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"            + PREFIX_GROUP + \"CS2103T \";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New group added: %1$s\";","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"This group already exists\";","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    private final Group toAdd;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"     * Creates a GroupCreateCommand to create a Group in the address book","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    public GroupCreateCommand(Group group) {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        toAdd \u003d group;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        if (model.hasGroup(toAdd)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        model.addGroup(toAdd);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"                || (other instanceof GroupCreateCommand // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"                \u0026\u0026 toAdd.equals(((GroupCreateCommand) other).toAdd));","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"edures888":55}},{"path":"src/main/java/seedu/address/logic/commands/group/GroupDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.commands.group;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":" * Deletes a group from the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"public class GroupDeleteCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"group_delete\";","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"            + \" : Deletes the group identified by the index number used in the displayed group list.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted group: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    public GroupDeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        List\u003cGroup\u003e lastShownList \u003d model.getFilteredGroupList();","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        Group groupToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        model.deleteGroup(groupToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, groupToDelete));","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"                || (other instanceof GroupDeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"                \u0026\u0026 targetIndex.equals(((GroupDeleteCommand) other).targetIndex));","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"edures888":52,"lyndonlim27":1}},{"path":"src/main/java/seedu/address/logic/commands/group/GroupFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.commands.group;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.GroupNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import seedu.address.model.person.MemberOfGroupPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":" * Finds and lists all groups in address book with name containing any of the argument keywords. The people who belong","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":" * to these groups are also listed.","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"public class GroupFindCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"group_find\";","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"            + \" : Finds group with names that contain any of \"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"            + \"the specified keywords (case-insensitive) \"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"            + \"and displays the people in the group as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS2101\";","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    private final GroupNameContainsKeywordsPredicate groupPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    private final MemberOfGroupPredicate memberPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"     * Creates a GroupFindCommand to find matching groups in the address book","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    public GroupFindCommand(GroupNameContainsKeywordsPredicate groupPredicate, MemberOfGroupPredicate memberPredicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        this.groupPredicate \u003d groupPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"        this.memberPredicate \u003d memberPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        model.updateFilteredGroupList(groupPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        model.updateFilteredPersonList(memberPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"                String.format(Messages.MESSAGE_GROUPS_LISTED_OVERVIEW,","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"                        model.getFilteredGroupList().size()));","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"                || (other instanceof GroupFindCommand // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"                \u0026\u0026 groupPredicate.equals(((GroupFindCommand) other).groupPredicate)","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"                \u0026\u0026 memberPredicate.equals(((GroupFindCommand) other).memberPredicate)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"edures888":54}},{"path":"src/main/java/seedu/address/logic/commands/group/GroupListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.commands.group;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GROUPS;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":" * Lists all groups in the address book to the user.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"public class GroupListCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    public static final String COMMAND_WORD \u003d \"group_list\";","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all groups\";","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        model.updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"                || (other instanceof GroupListCommand); // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"edures888":32}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.IsolatedEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.RecurringEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"                        PREFIX_GROUP);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"        Set\u003cGroup\u003e groupList \u003d ParserUtil.parseGroups(argMultimap.getAllValues(PREFIX_GROUP));","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"        IsolatedEventList isolatedEvents \u003d new IsolatedEventList();","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"        RecurringEventList recurringEvents \u003d new RecurringEventList();","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, groupList, isolatedEvents, recurringEvents);","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"lyndonlim27":5,"-":57,"clydelhui":5}},{"path":"src/main/java/seedu/address/logic/parser/AddIsolatedEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATETIME;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISOEVENT;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATETIME;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.AddIsolatedEventCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":" * Parser class for Isolated Event","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"public class AddIsolatedEventCommandParser implements Parser\u003cAddIsolatedEventCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"     * Parses the given {@code String} of arguments in the context of the AddIsolatedEventCommand","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"     * @param args the String input keyed by the user.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"     * @return AddIsolatedEventCommand object for execution.","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"    public AddIsolatedEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ISOEVENT, PREFIX_STARTDATETIME, PREFIX_ENDDATETIME);","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"        Index index;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"gmengqi"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"                    AddIsolatedEventCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ISOEVENT, PREFIX_STARTDATETIME, PREFIX_ENDDATETIME)","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"gmengqi"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"gmengqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"                    AddIsolatedEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"gmengqi"},"content":"        String eventName \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_ISOEVENT).get());","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        LocalDateTime startDate \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_STARTDATETIME).get());","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"        LocalDateTime endDate \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_ENDDATETIME).get());","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"gmengqi"},"content":"        ParserUtil.checkValidDateTime(startDate);","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent eventToAdd \u003d new IsolatedEvent(eventName, startDate, endDate);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"gmengqi"},"content":"        return new AddIsolatedEventCommand(index, eventToAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"gmengqi"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"gmengqi"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"gmengqi"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"gmengqi"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"gmengqi":62,"edures888":2}},{"path":"src/main/java/seedu/address/logic/parser/AddRecurringEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAYOFWEEK;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATETIME;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRINGEVENT;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATETIME;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.AddRecurringEventCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":" * Parser class for Recurring Event","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"public class AddRecurringEventCommandParser implements Parser\u003cAddRecurringEventCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"     * Parses the given {@code String} of arguments in the context of the AddRecurringEventCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"     * @param args the String input keyed by the user.","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"     * @return AddRecurringEventCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"    public AddRecurringEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_RECURRINGEVENT, PREFIX_DAYOFWEEK,","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"                        PREFIX_STARTDATETIME, PREFIX_ENDDATETIME);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"        Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"                    AddRecurringEventCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_RECURRINGEVENT, PREFIX_DAYOFWEEK, PREFIX_STARTDATETIME,","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"                PREFIX_ENDDATETIME) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"                    AddRecurringEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"        String eventName \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_RECURRINGEVENT).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"        DayOfWeek day \u003d ParserUtil.parseDayOfWeek(argMultimap.getValue(PREFIX_DAYOFWEEK).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"        LocalTime startTime \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_STARTDATETIME).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"        LocalTime endTime \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_ENDDATETIME).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent eventToAdd \u003d new RecurringEvent(eventName, day, startTime, endTime);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"        return new AddRecurringEventCommand(index, eventToAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Alvozyn":71}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.AddIsolatedEventCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.AddRecurringEventCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.DeleteIsolatedEventCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.DeleteRecurringEventCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.EditIsolatedEventCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.EditRecurringEventCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.FindTimeCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.group.GroupCreateCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.group.GroupDeleteCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.group.GroupFindCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.group.GroupListCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.group.GroupCreateCommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.group.GroupDeleteCommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.group.GroupFindCommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"gmengqi"},"content":"        case AddIsolatedEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"gmengqi"},"content":"            return new AddIsolatedEventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"gmengqi"},"content":"        case DeleteIsolatedEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"gmengqi"},"content":"            return new DeleteIsolatedEventParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"gmengqi"},"content":"        case EditIsolatedEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"gmengqi"},"content":"            return new EditIsolatedEventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"        case AddRecurringEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"Alvozyn"},"content":"            return new AddRecurringEventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"Alvozyn"},"content":"        case DeleteRecurringEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"Alvozyn"},"content":"            return new DeleteRecurringEventParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"Alvozyn"},"content":"        case EditRecurringEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"            return new EditRecurringEventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"edures888"},"content":"        case GroupListCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"edures888"},"content":"            return new GroupListCommand();","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"edures888"},"content":"        case GroupCreateCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"edures888"},"content":"            return new GroupCreateCommandParser().parse(arguments);","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"edures888"},"content":"        case GroupFindCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"edures888"},"content":"            return new GroupFindCommandParser().parse(arguments);","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"edures888"},"content":"        case GroupDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"edures888"},"content":"            return new GroupDeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"edures888"},"content":"        case FindTimeCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"edures888"},"content":"            return new FindTimeCommandParser().parse(arguments);","lastModifiedDate":"2023-03-25"},{"lineNumber":119,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"lyndonlim27"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"lyndonlim27"},"content":"            return new ExportCommandParser().parse(arguments);","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"clydelhui"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"clydelhui"},"content":"            return new ImportCommand();","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Alvozyn":14,"gmengqi":11,"edures888":20,"lyndonlim27":6,"-":76,"clydelhui":4}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    public static final Prefix PREFIX_RECURRINGEVENT \u003d new Prefix(\"re/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    public static final Prefix PREFIX_DAYOFWEEK \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"    public static final Prefix PREFIX_ISOEVENT \u003d new Prefix(\"ie/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"    public static final Prefix PREFIX_STARTDATETIME \u003d new Prefix(\"f/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    public static final Prefix PREFIX_ENDDATETIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"    public static final Prefix PREFIX_GROUP \u003d new Prefix(\"g/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"    public static final Prefix PREFIX_MERGE \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Alvozyn":4,"gmengqi":1,"lyndonlim27":2,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/DeleteIsolatedEventParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.DeleteIsolatedEventCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":" * Parses input arguments and creates a new DeleteIsolatedEventCommand object","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"public class DeleteIsolatedEventParser implements Parser\u003cDeleteIsolatedEventCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"    public DeleteIsolatedEventCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"        Index personIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"        Index eventIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"        String trimmedInput \u003d userInput.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"        if (trimmedInput.isBlank() || trimmedInput.length() \u003d\u003d 1) {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"                    DeleteIsolatedEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"            personIndex \u003d ParserUtil.parseIndex(String.valueOf(trimmedInput.charAt(0)));","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"            eventIndex \u003d ParserUtil.parseIndex(String.valueOf(trimmedInput.charAt(2)));","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"                    DeleteIsolatedEventCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"        return new DeleteIsolatedEventCommand(personIndex, eventIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"gmengqi":38}},{"path":"src/main/java/seedu/address/logic/parser/DeleteRecurringEventParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.DeleteRecurringEventCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":" * Parser class for Recurring Event","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"public class DeleteRecurringEventParser implements Parser\u003cDeleteRecurringEventCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    public DeleteRecurringEventCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"        Index personIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"        Index eventIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"            String[] split \u003d userInput.split(\" \", 3);","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"            if (split.length \u003c 3) {","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"                        DeleteRecurringEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"            personIndex \u003d ParserUtil.parseIndex(split[1]);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"            eventIndex \u003d ParserUtil.parseIndex(split[2]);","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"                    DeleteRecurringEventCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"        return new DeleteRecurringEventCommand(personIndex, eventIndex);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Alvozyn":39}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MERGE;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"                        PREFIX_GROUP, PREFIX_MERGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"        Boolean mergePrefixPresent \u003d argMultimap.getValue(PREFIX_MERGE).isPresent();","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"        parseGroupsForEdit(argMultimap.getAllValues(PREFIX_GROUP)).ifPresent(editPersonDescriptor::setGroups);","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"        if (mergePrefixPresent) {","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"            // If merge and tag prefix is present but input is empty","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"            if (!editPersonDescriptor.getTags().isEmpty() \u0026\u0026 editPersonDescriptor.getTags().get().isEmpty()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"lyndonlim27"},"content":"                throw new ParseException(EditCommand.MESSAGE_NO_TAG_ADDED);","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"lyndonlim27"},"content":"            // If merge and group prefix is present but input is empty","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"lyndonlim27"},"content":"            if (!editPersonDescriptor.getGroups().isEmpty() \u0026\u0026 editPersonDescriptor.getGroups().get().isEmpty()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"lyndonlim27"},"content":"                throw new ParseException(EditCommand.MESSAGE_NO_GROUP_ADDED);","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"lyndonlim27"},"content":"        return new EditCommand(index, editPersonDescriptor, mergePrefixPresent);","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"lyndonlim27"},"content":"     * Parses {@code Collection\u003cString\u003e groups} into a {@code Set\u003cGroup\u003e} if {@code groups} is non-empty.","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"lyndonlim27"},"content":"     * If {@code group} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"lyndonlim27"},"content":"     * {@code Set\u003cGroup\u003e} containing zero groups.","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"lyndonlim27"},"content":"    private Optional\u003cSet\u003cGroup\u003e\u003e parseGroupsForEdit(Collection\u003cString\u003e groups) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"lyndonlim27"},"content":"        assert groups !\u003d null;","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"lyndonlim27"},"content":"        if (groups.isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"lyndonlim27"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"lyndonlim27"},"content":"        Collection\u003cString\u003e groupSet \u003d groups.size() \u003d\u003d 1 \u0026\u0026 groups.contains(\"\") ? Collections.emptySet() : groups;","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"lyndonlim27"},"content":"        return Optional.of(ParserUtil.parseGroups(groupSet));","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"lyndonlim27":36,"-":80}},{"path":"src/main/java/seedu/address/logic/parser/EditIsolatedEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATETIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISOEVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATETIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.EditIsolatedEventCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.EditIsolatedEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":" * Parses input arguments and creates a new EditIsolatedEventCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"public class EditIsolatedEventCommandParser implements Parser\u003cEditIsolatedEventCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"     * Parses the given {@code String} of arguments in the context of the EditIsolatedEventCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"     * and returns an EditIsolatedEventCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"    public EditIsolatedEventCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_ISOEVENT, PREFIX_STARTDATETIME, PREFIX_ENDDATETIME);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"        Index personIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"        Index eventIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"            String inputWithBothIndex \u003d argMultimap.getPreamble().trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"gmengqi"},"content":"            if (inputWithBothIndex.length() \u003e 3) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"                        EditIsolatedEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"            personIndex \u003d ParserUtil.parseIndex(String.valueOf(inputWithBothIndex.charAt(0)));","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"            eventIndex \u003d ParserUtil.parseIndex(String.valueOf(inputWithBothIndex.charAt(2)));","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"gmengqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"gmengqi"},"content":"                    EditIsolatedEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"gmengqi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"gmengqi"},"content":"                    EditIsolatedEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"gmengqi"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"gmengqi"},"content":"        if (argMultimap.getValue(PREFIX_ISOEVENT).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"gmengqi"},"content":"            editEventDescriptor.setEventName(ParserUtil.parseEventName((argMultimap.getValue(PREFIX_ISOEVENT).get())));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"gmengqi"},"content":"        if (argMultimap.getValue(PREFIX_STARTDATETIME).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"            editEventDescriptor.setStartDate(","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"                    ParserUtil.parseDateTime((argMultimap.getValue(PREFIX_STARTDATETIME).get())));","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"gmengqi"},"content":"        if (argMultimap.getValue(PREFIX_ENDDATETIME).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"            editEventDescriptor.setEndDate(ParserUtil.parseDateTime((argMultimap.getValue(PREFIX_ENDDATETIME).get())));","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"gmengqi"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"gmengqi"},"content":"            throw new ParseException(EditIsolatedEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"gmengqi"},"content":"        return new EditIsolatedEventCommand(personIndex, eventIndex, editEventDescriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"gmengqi":64,"edures888":3}},{"path":"src/main/java/seedu/address/logic/parser/EditRecurringEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAYOFWEEK;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATETIME;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRINGEVENT;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATETIME;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.EditRecurringEventCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":" * Parser class for EditRecurringEventCommandParser","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"public class EditRecurringEventCommandParser implements Parser\u003cEditRecurringEventCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    public EditRecurringEventCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_RECURRINGEVENT, PREFIX_DAYOFWEEK, PREFIX_STARTDATETIME,","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"                        PREFIX_ENDDATETIME);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"        Index personIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"        Index eventIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"            String inputWithBothIndex \u003d argMultimap.getPreamble().trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"            String[] splitIndex \u003d inputWithBothIndex.split(\" \", 2);","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"            if (splitIndex.length \u003c 2) {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"                        EditRecurringEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"            personIndex \u003d ParserUtil.parseIndex(splitIndex[0]);","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"            eventIndex \u003d ParserUtil.parseIndex(splitIndex[1]);","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"                    EditRecurringEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"                    EditRecurringEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"        EditRecurringEventCommand.EditEventDescriptor editEventDescriptor \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"                new EditRecurringEventCommand.EditEventDescriptor();","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"        if (argMultimap.getValue(PREFIX_RECURRINGEVENT).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"            editEventDescriptor.setEventName(ParserUtil.parseEventName(","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"                    argMultimap.getValue(PREFIX_RECURRINGEVENT).get()));","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"        if (argMultimap.getValue(PREFIX_DAYOFWEEK).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"            editEventDescriptor.setDayOfWeek(ParserUtil.parseDayOfWeek(argMultimap.getValue(PREFIX_DAYOFWEEK).get()));","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"        if (argMultimap.getValue(PREFIX_STARTDATETIME).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"            editEventDescriptor.setStartTime(ParserUtil.parseTime(argMultimap.getValue(PREFIX_STARTDATETIME).get()));","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"        if (argMultimap.getValue(PREFIX_ENDDATETIME).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"            editEventDescriptor.setEndTime(ParserUtil.parseTime(argMultimap.getValue(PREFIX_ENDDATETIME).get()));","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"            throw new ParseException(EditRecurringEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"        return new EditRecurringEventCommand(personIndex, eventIndex, editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Alvozyn":73}},{"path":"src/main/java/seedu/address/logic/parser/ExportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":" * Parses input arguments and creates a new ExportCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"public class ExportCommandParser implements Parser\u003cExportCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"     * Parses the given {@code String} of arguments in the context of the ExportCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"     * and returns an ExportCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"    public ExportCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"            return new ExportCommand(index);","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ExportCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"lyndonlim27":28}},{"path":"src/main/java/seedu/address/logic/parser/FindTimeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATETIME;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.parser.ParserUtil.parseDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.FindTimeCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":" * Parser class for the FindTimeCommand.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"public class FindTimeCommandParser implements Parser\u003cFindTimeCommand\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTimeCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"     * and returns a FindTimeCommand object for execution.","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"     * @param arguments String representing user input","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     * @throws ParseException if {@code arguments} does not conform the expected format","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    public FindTimeCommand parse(String arguments) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        requireNonNull(arguments);","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        ArgumentMultimap argumentMultimap \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_STARTDATETIME);","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        Index index;","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTimeCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        // TODO: Refactor the following lines, including Optional","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        boolean isDateSpecified \u003d argumentMultimap.getValue(PREFIX_STARTDATETIME).isPresent();","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        LocalDate date;","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        if (isDateSpecified) {","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"            date \u003d parseDate(argumentMultimap.getValue(PREFIX_STARTDATETIME).get());","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"            date \u003d LocalDate.now();","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        return new FindTimeCommand(index, date);","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"gmengqi":3,"edures888":47}},{"path":"src/main/java/seedu/address/logic/parser/ParserHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":" * Helper class that provides utility functions for checking of command formats","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"public class ParserHelper {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"     * Checks if desired prefixes are present in map of argument tokens","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"     * @param argumentMultimap Map of argument tokens","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"     * @param prefixes Prefixes to be checked for presence","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"     * @return Boolean indicating if all desired prefixes are present","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"     * Checks the map of argument tokens if preamble (any text before the first valid prefix)","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"     * @param argumentMultimap Map of argument tokens","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"     * @return Boolean indicating if there is preamble present","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    public static boolean isPreambleEmpty(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        return argumentMultimap.getPreamble().isEmpty();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"edures888":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"Alvozyn"},"content":"     * Parses a {@code String eventName} into the correct format with no trailing space and","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"Alvozyn"},"content":"     * check if the eventName is of valid format.","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"Alvozyn"},"content":"     * @param eventName","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"Alvozyn"},"content":"     * @return a String object containing the name of the isolated/recurring event.","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"Alvozyn"},"content":"     * @throws ParseException if the given {@code eventName} is invalid.","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"Alvozyn"},"content":"    public static String parseEventName(String eventName) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"Alvozyn"},"content":"        String trimmedEventName \u003d eventName.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"Alvozyn"},"content":"        if (!Event.isValidEventName(eventName)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"Alvozyn"},"content":"            throw new ParseException(Event.MESSAGE_CONSTRAINTS_EVENTNAME);","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"Alvozyn"},"content":"        return trimmedEventName;","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"edures888"},"content":"     * Parses a {@code String dateTime} into a {@code LocalDateTime dateTime} into the correct format.","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"edures888"},"content":"     * @param dateTime of which the event start/end.","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"gmengqi"},"content":"     * @return LocalDateTime object containing the start/end date and time of the event.","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"edures888"},"content":"     * @throws ParseException if the given {@code String dateTime} is in invalid format.","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"edures888"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"edures888"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime dueDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"gmengqi"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"gmengqi"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"edures888"},"content":"            dueDate \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"gmengqi"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"gmengqi"},"content":"            throw new ParseException(IsolatedEvent.MESSAGE_CONSTRAINTS_DATE);","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"gmengqi"},"content":"        checkDateExist(dueDate, dateTime.substring(0, 2));","lastModifiedDate":"2023-04-07"},{"lineNumber":159,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":160,"author":{"gitId":"gmengqi"},"content":"        if (dueDate.getMinute() !\u003d 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"gmengqi"},"content":"            throw new ParseException(Event.MESSAGE_EVENT_NOT_HOURLY);","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"gmengqi"},"content":"        return dueDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":167,"author":{"gitId":"gmengqi"},"content":"     * Check if the start date of the event if before the current date time.","lastModifiedDate":"2023-04-09"},{"lineNumber":168,"author":{"gitId":"gmengqi"},"content":"     * @param date in which the event starts","lastModifiedDate":"2023-04-09"},{"lineNumber":169,"author":{"gitId":"gmengqi"},"content":"     * @throws ParseException to be thrown if it is before the current date time.","lastModifiedDate":"2023-04-09"},{"lineNumber":170,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":171,"author":{"gitId":"gmengqi"},"content":"    public static void checkValidDateTime(LocalDateTime date) throws ParseException {","lastModifiedDate":"2023-04-09"},{"lineNumber":172,"author":{"gitId":"gmengqi"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-04-09"},{"lineNumber":173,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-04-09"},{"lineNumber":174,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":175,"author":{"gitId":"gmengqi"},"content":"        if (date.isBefore(now)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":176,"author":{"gitId":"gmengqi"},"content":"            throw new ParseException(Messages.MESSAGE_EVENT_INVALID_DATE);","lastModifiedDate":"2023-04-09"},{"lineNumber":177,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":178,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":179,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":180,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"edures888"},"content":"     * Parses a {@code String date} into a {@code LocalDate date} into the correct format.","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"edures888"},"content":"     * @param date of which the event start/end.","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"edures888"},"content":"     * @return LocalDate object containing the start/end date of the event.","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"edures888"},"content":"     * @throws ParseException if the given {@code String date} is in invalid format.","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"edures888"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"edures888"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"edures888"},"content":"        LocalDate dueDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"edures888"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"edures888"},"content":"            dueDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"edures888"},"content":"            checkDateExist(dueDate.atStartOfDay(), date.substring(0, 2));","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"edures888"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"edures888"},"content":"            throw new ParseException(IsolatedEvent.MESSAGE_CONSTRAINTS_DATE);","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"edures888"},"content":"        return dueDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":201,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"gmengqi"},"content":"     * Check whether the day exists in the month, throw error if it does not exist.","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"gmengqi"},"content":"     * @param date to be checked","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"gmengqi"},"content":"     * @param day to be checked","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"gmengqi"},"content":"     * @throws ParseException to be thrown if there is error.","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"gmengqi"},"content":"    public static void checkDateExist(LocalDateTime date, String day) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"gmengqi"},"content":"        boolean isLeapYear \u003d isLeapYear(date.getYear());","lastModifiedDate":"2023-04-07"},{"lineNumber":209,"author":{"gitId":"gmengqi"},"content":"        boolean isFeb \u003d date.getMonth().getValue() \u003d\u003d 2;","lastModifiedDate":"2023-04-07"},{"lineNumber":210,"author":{"gitId":"gmengqi"},"content":"        int lastDay \u003d date.getMonth().maxLength();","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"gmengqi"},"content":"        if (!isLeapYear \u0026\u0026 isFeb) {","lastModifiedDate":"2023-04-07"},{"lineNumber":213,"author":{"gitId":"gmengqi"},"content":"            lastDay--;","lastModifiedDate":"2023-04-07"},{"lineNumber":214,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":215,"author":{"gitId":"gmengqi"},"content":"        if (Integer.parseInt(day) \u003e lastDay) {","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"gmengqi"},"content":"            throw new ParseException(Messages.MESSAGE_NONEXISTENT_DATE);","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":221,"author":{"gitId":"gmengqi"},"content":"     * Check if a year is a leap year","lastModifiedDate":"2023-04-07"},{"lineNumber":222,"author":{"gitId":"gmengqi"},"content":"     * @param year to be checked","lastModifiedDate":"2023-04-07"},{"lineNumber":223,"author":{"gitId":"gmengqi"},"content":"     * @return true or false","lastModifiedDate":"2023-04-07"},{"lineNumber":224,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":225,"author":{"gitId":"gmengqi"},"content":"    public static boolean isLeapYear(int year) {","lastModifiedDate":"2023-04-07"},{"lineNumber":226,"author":{"gitId":"gmengqi"},"content":"        if (year % 4 !\u003d 0) {","lastModifiedDate":"2023-04-07"},{"lineNumber":227,"author":{"gitId":"gmengqi"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":228,"author":{"gitId":"gmengqi"},"content":"        } else if (year % 100 !\u003d 0) {","lastModifiedDate":"2023-04-07"},{"lineNumber":229,"author":{"gitId":"gmengqi"},"content":"            return true;","lastModifiedDate":"2023-04-07"},{"lineNumber":230,"author":{"gitId":"gmengqi"},"content":"        } else if (year % 400 !\u003d 0) {","lastModifiedDate":"2023-04-07"},{"lineNumber":231,"author":{"gitId":"gmengqi"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":232,"author":{"gitId":"gmengqi"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":233,"author":{"gitId":"gmengqi"},"content":"            return true;","lastModifiedDate":"2023-04-07"},{"lineNumber":234,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":235,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":236,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":248,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":249,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":250,"author":{"gitId":"Alvozyn"},"content":"     * Parses a {@code String day} into a {@code DayOfWeek dayOfWeek} that is valid.","lastModifiedDate":"2023-03-12"},{"lineNumber":251,"author":{"gitId":"Alvozyn"},"content":"     * @param day of which the event takes place during the week","lastModifiedDate":"2023-03-12"},{"lineNumber":252,"author":{"gitId":"Alvozyn"},"content":"     * @return DayOfWeek object containing the day of the event that took place between Monday to Sunday","lastModifiedDate":"2023-03-12"},{"lineNumber":253,"author":{"gitId":"Alvozyn"},"content":"     * @throws ParseException if the given {@code String day} is in invalid.","lastModifiedDate":"2023-03-12"},{"lineNumber":254,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":255,"author":{"gitId":"Alvozyn"},"content":"    public static DayOfWeek parseDayOfWeek(String day) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":256,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(day);","lastModifiedDate":"2023-03-12"},{"lineNumber":257,"author":{"gitId":"Alvozyn"},"content":"        String trimmedDayOfWeek \u003d day.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":258,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":259,"author":{"gitId":"Alvozyn"},"content":"        DayOfWeek dayOfWeek;","lastModifiedDate":"2023-03-12"},{"lineNumber":260,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":261,"author":{"gitId":"Alvozyn"},"content":"            dayOfWeek \u003d DayOfWeek.valueOf(trimmedDayOfWeek.toUpperCase());","lastModifiedDate":"2023-03-12"},{"lineNumber":262,"author":{"gitId":"Alvozyn"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":263,"author":{"gitId":"Alvozyn"},"content":"            throw new ParseException(RecurringEvent.MESSAGE_CONSTRAINTS_DAYOFWEEK);","lastModifiedDate":"2023-03-12"},{"lineNumber":264,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":265,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":266,"author":{"gitId":"Alvozyn"},"content":"        return dayOfWeek;","lastModifiedDate":"2023-03-12"},{"lineNumber":267,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":268,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":269,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":270,"author":{"gitId":"Alvozyn"},"content":"     * Parses a {@code String time} into a {@Code LocalTime time} into the correct format.","lastModifiedDate":"2023-03-12"},{"lineNumber":271,"author":{"gitId":"Alvozyn"},"content":"     * @param time of which the event start/end.","lastModifiedDate":"2023-03-12"},{"lineNumber":272,"author":{"gitId":"Alvozyn"},"content":"     * @return LocalTime object containing the startt/end time of the event.","lastModifiedDate":"2023-03-12"},{"lineNumber":273,"author":{"gitId":"Alvozyn"},"content":"     * @throws ParseException if the given {@code String date} is in invalid format.","lastModifiedDate":"2023-03-12"},{"lineNumber":274,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":275,"author":{"gitId":"Alvozyn"},"content":"    public static LocalTime parseTime(String time) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":276,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-03-12"},{"lineNumber":277,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":278,"author":{"gitId":"Alvozyn"},"content":"        LocalTime dueDate;","lastModifiedDate":"2023-03-12"},{"lineNumber":279,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":280,"author":{"gitId":"Alvozyn"},"content":"            dueDate \u003d LocalTime.parse(time);","lastModifiedDate":"2023-03-12"},{"lineNumber":281,"author":{"gitId":"Alvozyn"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":282,"author":{"gitId":"Alvozyn"},"content":"            throw new ParseException(RecurringEvent.MESSAGE_CONSTRAINTS_TIME);","lastModifiedDate":"2023-03-12"},{"lineNumber":283,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":284,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":285,"author":{"gitId":"gmengqi"},"content":"        if (dueDate.getMinute() !\u003d 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":286,"author":{"gitId":"gmengqi"},"content":"            throw new ParseException(Event.MESSAGE_EVENT_NOT_HOURLY);","lastModifiedDate":"2023-03-30"},{"lineNumber":287,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":288,"author":{"gitId":"Alvozyn"},"content":"        return dueDate;","lastModifiedDate":"2023-03-12"},{"lineNumber":289,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":290,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":291,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":292,"author":{"gitId":"gmengqi"},"content":"     * Checks if the start time and the end time of the event is valid for recurring event.","lastModifiedDate":"2023-03-21"},{"lineNumber":293,"author":{"gitId":"Alvozyn"},"content":"     * @param startTime of which the event start.","lastModifiedDate":"2023-03-12"},{"lineNumber":294,"author":{"gitId":"Alvozyn"},"content":"     * @param endTime of which the event end.","lastModifiedDate":"2023-03-12"},{"lineNumber":295,"author":{"gitId":"Alvozyn"},"content":"     * @return true if start time is before the end time.","lastModifiedDate":"2023-03-12"},{"lineNumber":296,"author":{"gitId":"Alvozyn"},"content":"     * @throws ParseException if start time is after the end time.","lastModifiedDate":"2023-03-12"},{"lineNumber":297,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":298,"author":{"gitId":"Alvozyn"},"content":"    public static boolean parsePeriod(LocalTime startTime, LocalTime endTime) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":299,"author":{"gitId":"Alvozyn"},"content":"        if (startTime.isAfter(endTime) || startTime.equals(endTime)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":300,"author":{"gitId":"Alvozyn"},"content":"            throw new ParseException(RecurringEvent.MESSAGE_CONSTRAINTS_PERIOD);","lastModifiedDate":"2023-03-12"},{"lineNumber":301,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":302,"author":{"gitId":"Alvozyn"},"content":"        return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":303,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":304,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":305,"author":{"gitId":"lyndonlim27"},"content":"     * Parses a {@code String group} into a {@code Group}.","lastModifiedDate":"2023-03-11"},{"lineNumber":306,"author":{"gitId":"lyndonlim27"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-11"},{"lineNumber":307,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":308,"author":{"gitId":"lyndonlim27"},"content":"     * @throws ParseException if the given {@code group} is invalid.","lastModifiedDate":"2023-03-11"},{"lineNumber":309,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":310,"author":{"gitId":"lyndonlim27"},"content":"    public static Group parseGroup(String group) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":311,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-03-11"},{"lineNumber":312,"author":{"gitId":"lyndonlim27"},"content":"        String trimmedGroup \u003d group.trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":313,"author":{"gitId":"lyndonlim27"},"content":"        if (!Group.isValidGroupName(trimmedGroup)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":314,"author":{"gitId":"lyndonlim27"},"content":"            throw new ParseException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":315,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":316,"author":{"gitId":"lyndonlim27"},"content":"        return new Group(trimmedGroup);","lastModifiedDate":"2023-03-11"},{"lineNumber":317,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":318,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":319,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":320,"author":{"gitId":"lyndonlim27"},"content":"     * Parses {@code Collection\u003cString\u003e grous} into a {@code Set\u003cGroup\u003e}.","lastModifiedDate":"2023-03-11"},{"lineNumber":321,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":322,"author":{"gitId":"lyndonlim27"},"content":"    public static Set\u003cGroup\u003e parseGroups(Collection\u003cString\u003e groups) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":323,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(groups);","lastModifiedDate":"2023-03-11"},{"lineNumber":324,"author":{"gitId":"lyndonlim27"},"content":"        final Set\u003cGroup\u003e groupSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":325,"author":{"gitId":"lyndonlim27"},"content":"        for (String groupName : groups) {","lastModifiedDate":"2023-03-11"},{"lineNumber":326,"author":{"gitId":"lyndonlim27"},"content":"            groupSet.add(parseGroup(groupName));","lastModifiedDate":"2023-03-11"},{"lineNumber":327,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":328,"author":{"gitId":"lyndonlim27"},"content":"        return groupSet;","lastModifiedDate":"2023-03-11"},{"lineNumber":329,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Alvozyn":71,"gmengqi":79,"edures888":28,"lyndonlim27":28,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/group/GroupCreateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.parser.group;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.group.GroupCreateCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.ParserHelper;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":" * Parses input arguments and creates a new GroupCreateCommand object","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"public class GroupCreateCommandParser implements Parser\u003cGroupCreateCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"     * Parses the given {@code String} of arguments in the context of the GroupCreateCommand","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"     * and returns a GroupCreateCommand object for execution.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    public GroupCreateCommand parse(String arguments) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        requireNonNull(arguments);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        ArgumentMultimap argumentMultimap \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_GROUP);","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"        if (!ParserHelper.arePrefixesPresent(argumentMultimap, PREFIX_GROUP)","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"                || !ParserHelper.isPreambleEmpty(argumentMultimap)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        Group group \u003d ParserUtil.parseGroup(argumentMultimap.getValue(PREFIX_GROUP).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        return new GroupCreateCommand(group);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"edures888":40}},{"path":"src/main/java/seedu/address/logic/parser/group/GroupDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.parser.group;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.group.GroupDeleteCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":" * Parses input arguments and creates a new GroupDeleteCommand object","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"public class GroupDeleteCommandParser implements Parser\u003cGroupDeleteCommand\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"     * Parses the given {@code String} of arguments in the context of the GroupDeleteCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"     * and returns a GroupDeleteCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    public GroupDeleteCommand parse(String arguments) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"            Index index \u003d ParserUtil.parseIndex(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"            return new GroupDeleteCommand(index);","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"edures888":31}},{"path":"src/main/java/seedu/address/logic/parser/group/GroupFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.parser.group;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.group.GroupFindCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.GroupNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import seedu.address.model.person.MemberOfGroupPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":" * Parses input arguments and creates a new GroupFindCommand object","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"public class GroupFindCommandParser implements Parser\u003cGroupFindCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"     * Parses the given {@code String} of arguments in the context of the GroupFindCommand","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"     * and returns a GroupFindCommand object for execution.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    public GroupFindCommand parse(String arguments) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"        String trimmedArguments \u003d arguments.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"        if (trimmedArguments.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        String[] nameKeywords \u003d trimmedArguments.split(\"\\\\s+\");","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"        return new GroupFindCommand(new GroupNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)),","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"                new MemberOfGroupPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"edures888":36}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.UniqueGroupList;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"import seedu.address.model.time.ScheduleWeek;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"    private final UniqueGroupList groups;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    private final ScheduleWeek scheduleWeek;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"        groups \u003d new UniqueGroupList();","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"        scheduleWeek \u003d new ScheduleWeek();","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"        setGroups(newData.getGroupList());","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"     * Add the recurring event into the person\u0027s isolated event list","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"     * @param person in which the event is being added to","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"     * @param event that is going to be added to the person","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"Alvozyn"},"content":"    public void addRecurringEvent(Person person, RecurringEvent event) {","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"Alvozyn"},"content":"        person.addRecurringEvent(event);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"clydelhui"},"content":"        persons.setPerson(person, person);","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"clydelhui"},"content":"     * Deletes the given {@code RecurringEvent} from the given {@code Person}\u0027s {@code RecurringEventList}.","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"clydelhui"},"content":"     * @param person The {@code Person} to delete the given {@code RecurringEvent} from.","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"clydelhui"},"content":"     * @param event The given {@code RecurringEvent} to delete.","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"    public void deleteRecurringEvent(Person person, RecurringEvent event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"Alvozyn"},"content":"        person.getRecurringEventList().deleteRecurringEvent(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"clydelhui"},"content":"        persons.setPerson(person, person);","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"Alvozyn"},"content":"    public void setRecurringEvent(Person person, RecurringEvent originalEvent, RecurringEvent editedRecurringEvent) {","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"Alvozyn"},"content":"        requireNonNull(editedRecurringEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"Alvozyn"},"content":"        person.getRecurringEventList().edit(originalEvent, editedRecurringEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"clydelhui"},"content":"        persons.setPerson(person, person);","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"lyndonlim27"},"content":"     * Adds {@code group} in {@code person} group set","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"lyndonlim27"},"content":"     * {@code person} must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"lyndonlim27"},"content":"    public void addPersonInGroup(Person person, Group group) {","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"lyndonlim27"},"content":"        person.addGroup(group);","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"lyndonlim27"},"content":"     * Removes {@code group} from {@code person} group set","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"lyndonlim27"},"content":"     * {@code person and group} must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"lyndonlim27"},"content":"    public void removePersonFromGroup(Person person, Group group) {","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"lyndonlim27"},"content":"        person.removeGroup(group);","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"lyndonlim27"},"content":"     * Add {@code group}  into address book\u0027s UniqueGroupList","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"lyndonlim27"},"content":"     * {@code group} must not exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"lyndonlim27"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"lyndonlim27"},"content":"        groups.add(group);","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"lyndonlim27"},"content":"     * Remove {@code group} from address book\u0027s UniqueGroupList and every person in the group","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"lyndonlim27"},"content":"     * {@code group} must not exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"lyndonlim27"},"content":"    public void deleteGroup(Group group) {","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"lyndonlim27"},"content":"        Set\u003cPerson\u003e personSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"lyndonlim27"},"content":"        for (Person p : persons) {","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"lyndonlim27"},"content":"            if (p.getGroups().contains(group)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"lyndonlim27"},"content":"                personSet.add(p);","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"lyndonlim27"},"content":"        for (Person person: personSet) {","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"lyndonlim27"},"content":"            person.removeGroup(group);","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"lyndonlim27"},"content":"            persons.setPerson(person, person);","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"lyndonlim27"},"content":"        groups.delete(group);","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"edures888"},"content":"     * Replaces the contents of the group list with {@code groups}.","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"edures888"},"content":"     * {@code groups} must not contain duplicate groups.","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"edures888"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"edures888"},"content":"        this.groups.setGroups(groups);","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"lyndonlim27"},"content":"     * Returns true if a group with the same group name as {@code group} exists in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"lyndonlim27"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"lyndonlim27"},"content":"        return groups.contains(group);","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"Alvozyn"},"content":"    public ScheduleWeek getScheduleWeek() {","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"Alvozyn"},"content":"        return scheduleWeek;","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"edures888"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\"","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"edures888"},"content":"                + \", \" + groups.asUnmodifiableObservableList().size() + \" groups\";","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":210,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"edures888"},"content":"    public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":212,"author":{"gitId":"edures888"},"content":"        return groups.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":214,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"edures888"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"edures888"},"content":"                \u0026\u0026 groups.equals(((AddressBook) other).groups));","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":225,"author":{"gitId":"edures888"},"content":"        return Objects.hash(persons, groups);","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":227,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":228,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":229,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":230,"author":{"gitId":"gmengqi"},"content":"     * To delete the isolated events automatically whenever the app is launched.","lastModifiedDate":"2023-03-28"},{"lineNumber":231,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":232,"author":{"gitId":"gmengqi"},"content":"    public void deleteExpiredEvent() {","lastModifiedDate":"2023-03-28"},{"lineNumber":233,"author":{"gitId":"gmengqi"},"content":"        for (Person p : persons) {","lastModifiedDate":"2023-03-28"},{"lineNumber":234,"author":{"gitId":"gmengqi"},"content":"            p.removeExpiredEvent();","lastModifiedDate":"2023-03-28"},{"lineNumber":235,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":237,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":238,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-04-10"},{"lineNumber":239,"author":{"gitId":"edures888"},"content":"     * Returns current filtered schedule of the address book.","lastModifiedDate":"2023-04-10"},{"lineNumber":240,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-04-10"},{"lineNumber":241,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-04-10"},{"lineNumber":242,"author":{"gitId":"edures888"},"content":"    public ScheduleWeek getSchedule() {","lastModifiedDate":"2023-04-10"},{"lineNumber":243,"author":{"gitId":"edures888"},"content":"        return scheduleWeek;","lastModifiedDate":"2023-04-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Alvozyn":27,"gmengqi":8,"edures888":29,"lyndonlim27":56,"-":117,"clydelhui":8}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    Predicate\u003cGroup\u003e PREDICATE_SHOW_ALL_GROUPS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"edures888"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"edures888"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"lyndonlim27"},"content":"     * Adds the given person into a group.","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"lyndonlim27"},"content":"     * {@code person} must not already exist in the {@code group}","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"lyndonlim27"},"content":"    void addPersonInGroup(Person person, Group group);","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"lyndonlim27"},"content":"     * Removes the given person from a group.","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"lyndonlim27"},"content":"     * {@code person} must exist in the {@code group}","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"lyndonlim27"},"content":"    void removePersonFromGroup(Person person, Group group);","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"lyndonlim27"},"content":"     * Adds a new group","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"lyndonlim27"},"content":"     * {@code group} must not exist in the address book","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"lyndonlim27"},"content":"    void addGroup(Group group);","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"lyndonlim27"},"content":"     * Deletes a new group and removes group from every person in it","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"lyndonlim27"},"content":"     * {@code group} must exist in the address book","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"lyndonlim27"},"content":"    void deleteGroup(Group group);","lastModifiedDate":"2023-03-10"},{"lineNumber":115,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"lyndonlim27"},"content":"     * Returns true if a group with the same group name as {@code group} exists in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"lyndonlim27"},"content":"    boolean hasGroup(Group group);","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"edures888"},"content":"    void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"edures888"},"content":"    // TODO: Change type","lastModifiedDate":"2023-03-25"},{"lineNumber":126,"author":{"gitId":"edures888"},"content":"    void updateFilteredTimeSlotList(Group group, LocalDate date);","lastModifiedDate":"2023-03-25"},{"lineNumber":127,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":128,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"Alvozyn"},"content":"     * Add Recurring Event object to the person\u0027s isolated event list","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"Alvozyn"},"content":"     * @param personToEdit","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"Alvozyn"},"content":"     * @param eventToAdd","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"Alvozyn"},"content":"    void addRecurringEvent(Person personToEdit, RecurringEvent eventToAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"Alvozyn"},"content":"    void deleteRecurringEvent(Person personToEdit, RecurringEvent event);","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"Alvozyn"},"content":"    void setRecurringEvent(Person personToEdit, RecurringEvent originalEvent, RecurringEvent editedRecurringEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"gmengqi"},"content":"    void deleteExpiredEvent();","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Alvozyn":12,"gmengqi":2,"edures888":14,"lyndonlim27":23,"-":89}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEventList;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"import seedu.address.model.time.TimeMask;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    private final FilteredList\u003cGroup\u003e filteredGroups;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"        filteredGroups \u003d new FilteredList\u003c\u003e(this.addressBook.getGroupList());","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        ObservableList\u003cString\u003e emptyList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"gmengqi"},"content":"    public void deleteExpiredEvent() {","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"gmengqi"},"content":"        addressBook.deleteExpiredEvent();","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"Alvozyn"},"content":"    public void addRecurringEvent(Person person, RecurringEvent event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"Alvozyn"},"content":"        requireAllNonNull(person, event);","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"Alvozyn"},"content":"        addressBook.addRecurringEvent(person, event);","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"Alvozyn"},"content":"    public void setRecurringEvent(Person person, RecurringEvent originalEvent, RecurringEvent editedRecurringEvent) {","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"Alvozyn"},"content":"        requireAllNonNull(person, originalEvent, editedRecurringEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"Alvozyn"},"content":"        addressBook.setRecurringEvent(person, originalEvent, editedRecurringEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"Alvozyn"},"content":"    public void deleteRecurringEvent(Person person, RecurringEvent event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"Alvozyn"},"content":"        requireAllNonNull(person, event);","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"Alvozyn"},"content":"        addressBook.deleteRecurringEvent(person, event);","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"lyndonlim27"},"content":"    public void addPersonInGroup(Person person, Group group) {","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"lyndonlim27"},"content":"        requireAllNonNull(person, group);","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"lyndonlim27"},"content":"        addressBook.addPersonInGroup(person, group);","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"lyndonlim27"},"content":"    public void removePersonFromGroup(Person person, Group group) {","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"lyndonlim27"},"content":"        requireAllNonNull(person, group);","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"lyndonlim27"},"content":"        addressBook.removePersonFromGroup(person, group);","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"lyndonlim27"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"lyndonlim27"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"lyndonlim27"},"content":"    public void deleteGroup(Group group) {","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"lyndonlim27"},"content":"        addressBook.deleteGroup(group);","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"lyndonlim27"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"lyndonlim27"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"lyndonlim27"},"content":"        return addressBook.hasGroup(group);","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":195,"author":{"gitId":"edures888"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Group List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"edures888"},"content":"     * Returns an unmodifiable view of the list of {@code Group} backed by the internal list of","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"edures888"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":201,"author":{"gitId":"edures888"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":202,"author":{"gitId":"edures888"},"content":"        return filteredGroups;","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":204,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":206,"author":{"gitId":"edures888"},"content":"    public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":207,"author":{"gitId":"edures888"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":208,"author":{"gitId":"edures888"},"content":"        filteredGroups.setPredicate(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":209,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":210,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":212,"author":{"gitId":"edures888"},"content":"    public void updateFilteredTimeSlotList(Group group, LocalDate date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":213,"author":{"gitId":"edures888"},"content":"        requireAllNonNull(group, date);","lastModifiedDate":"2023-03-25"},{"lineNumber":214,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":215,"author":{"gitId":"edures888"},"content":"        List\u003cPerson\u003e persons \u003d this.addressBook.getPersonList();","lastModifiedDate":"2023-03-25"},{"lineNumber":216,"author":{"gitId":"edures888"},"content":"        TimeMask baseMask \u003d new TimeMask();","lastModifiedDate":"2023-03-25"},{"lineNumber":217,"author":{"gitId":"edures888"},"content":"        for (Person person: persons) {","lastModifiedDate":"2023-03-25"},{"lineNumber":218,"author":{"gitId":"Alvozyn"},"content":"            if (person.getGroups().contains(group)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"edures888"},"content":"                baseMask.mergeMask(person.getRecurringMask());","lastModifiedDate":"2023-03-25"},{"lineNumber":220,"author":{"gitId":"gmengqi"},"content":"                IsolatedEventList isolatedEventList \u003d person.getIsolatedEventList();","lastModifiedDate":"2023-03-28"},{"lineNumber":221,"author":{"gitId":"gmengqi"},"content":"                if (isolatedEventList \u003d\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"gmengqi"},"content":"                    continue;","lastModifiedDate":"2023-03-28"},{"lineNumber":223,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-03-25"},{"lineNumber":224,"author":{"gitId":"edures888"},"content":"                baseMask.mergeIsolatedEvents(isolatedEventList, date);","lastModifiedDate":"2023-03-30"},{"lineNumber":225,"author":{"gitId":"gmengqi"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"edures888"},"content":"        ArrayList\u003cArrayList\u003cInteger\u003e\u003e timetable \u003d TimeMask.getTimeSlotIndexes(baseMask);","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"edures888"},"content":"        addressBook.getScheduleWeek().setInternalList(timetable, date.getDayOfWeek());","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"edures888"},"content":"        logger.info(\"Timetable generation finished. Rendering expected.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":232,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Alvozyn":21,"gmengqi":10,"edures888":39,"lyndonlim27":33,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import seedu.address.model.time.ScheduleWeek;","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"     * Returns an unmodifiable view of the groups list.","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"     * This list will not contain any duplicate groups.","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    ObservableList\u003cGroup\u003e getGroupList();","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"     * Returns current filtered schedule of the address book.","lastModifiedDate":"2023-04-10"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    ScheduleWeek getSchedule();","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"edures888":14,"-":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"    Path getExportFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"lyndonlim27":1,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"wheregottime.json\");","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    private Path exportFilePath \u003d Paths.get(\"data\" , \"export.json\");","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"        setExportFilePath(newUserPrefs.getExportFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"    public Path getExportFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"        return exportFilePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"    public void setExportFilePath(Path exportFilePath) {","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(exportFilePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"        this.exportFilePath \u003d exportFilePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"lyndonlim27"},"content":"        sb.append(\"\\nExport Local data file location : \" + exportFilePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lyndonlim27":13,"-":86}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":" * Represents an event that a {@code Person} is involved in.","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"public abstract class Event {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"    public static final String VALIDATION_REGEX_EVENTNAME \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_CONSTRAINTS_EVENTNAME \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"            \"Event name should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_EVENT_NOT_HOURLY \u003d \"Event duration can only be hourly!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"    private String eventName;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"    public Event(String eventName) {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"    public String getEventName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"        return eventName;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"    public static boolean isValidEventName(String eventName) {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"        return eventName.matches(VALIDATION_REGEX_EVENTNAME);","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"     * Returns a {@code boolean} that indicates if the {@code Event} occurs between the","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"     * given period.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"     * @param startPeriod The start of the given period.","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"     * @param endPeriod The end of the given period.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"     * @return A boolean indicating if the even occurs during the given period.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"    public abstract boolean occursBetween(LocalDateTime startPeriod, LocalDateTime endPeriod);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Alvozyn":9,"gmengqi":1,"clydelhui":27}},{"path":"src/main/java/seedu/address/model/event/IsolatedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.exceptions.EventConflictException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":" * Represents an {@code Event} that happens only once.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"public class IsolatedEvent extends Event implements Comparable\u003cIsolatedEvent\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_CONSTRAINTS_EVENTNAME \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"            \"Event name should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"    public static final String MESSAGE_CONSTRAINTS_DATE \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"            \"Date should be in the format: dd/MM/yyyy HH:mm\";","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"    private String eventName;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"     * Constructor for IsolatedEvent class.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"     * @param eventName name of the isolated event added.","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"     * @param startDate in which the isolated event starts.","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"     * @param endDate   in which the isolated event ends.","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"    public IsolatedEvent(String eventName, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"        super(eventName);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"        return this.startDate;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"gmengqi"},"content":"        return this.endDate;","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"gmengqi"},"content":"    public int getStartDayValue() {","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"gmengqi"},"content":"        return startDate.getDayOfWeek().getValue();","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"gmengqi"},"content":"    public int getEndDayValue() {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"gmengqi"},"content":"        return endDate.getDayOfWeek().getValue();","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"gmengqi"},"content":"    public String getEventName() {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"gmengqi"},"content":"        return this.eventName;","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"    public int compareTo(IsolatedEvent o) { //TODO: Add implementation for compareTo","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime oStart \u003d o.getStartDate();","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime oEnd \u003d o.getEndDate();","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"gmengqi"},"content":"        if (this.startDate.isBefore(oStart) \u0026\u0026 (this.endDate.isBefore(oStart) || this.endDate.equals(oStart))) {","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"gmengqi"},"content":"            return -1;","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"gmengqi"},"content":"        } else if (this.startDate.isAfter(oStart) \u0026\u0026 (this.startDate.isAfter(oEnd) || this.startDate.equals(oEnd))) {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"gmengqi"},"content":"            return 1;","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"        return 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"clydelhui"},"content":"     * Checks if the {@code IsolatedEvent} has any conflicts with any of the {@code RecurringEvent}s in the given","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"clydelhui"},"content":"     * {@code RecurringEventList}.","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"clydelhui"},"content":"     * @param recurringEventList The {@code RecurringEventList} to check for conflicts with.","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"     * @throws EventConflictException if there is a conflict found in the given {@code RecurringEventList}.","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"clydelhui"},"content":"    public void checkConflictsRecurringEventList(RecurringEventList recurringEventList) throws EventConflictException {","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"clydelhui"},"content":"        LocalDateTime startPeriod \u003d this.getStartDate();","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"clydelhui"},"content":"        LocalDateTime endPeriod \u003d this.getEndDate();","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"clydelhui"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"clydelhui"},"content":"        for (RecurringEvent re : recurringEventList.getRecurringEvents()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"clydelhui"},"content":"            long count \u003d re.numberOfDaysBetween(startPeriod, endPeriod, re.getDayOfWeek());","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"clydelhui"},"content":"            if (count \u003d\u003d -1) {","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"clydelhui"},"content":"                continue;","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"clydelhui"},"content":"            LocalDateTime recurringEventDate \u003d startPeriod.plusDays(count);","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"clydelhui"},"content":"            LocalDateTime dummyEventStartDate \u003d LocalDateTime.of(recurringEventDate.toLocalDate(), re.getStartTime());","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"clydelhui"},"content":"            LocalDateTime dummyEventEndDate \u003d LocalDateTime.of(recurringEventDate.toLocalDate(), re.getEndTime());","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"clydelhui"},"content":"            boolean isEventBefore \u003d false;","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"clydelhui"},"content":"            boolean isEventAfter \u003d false;","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"clydelhui"},"content":"            if (!dummyEventStartDate.isAfter(startPeriod) \u0026\u0026 !dummyEventEndDate.isAfter(startPeriod)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"clydelhui"},"content":"                isEventBefore \u003d true;","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"clydelhui"},"content":"            if (!dummyEventStartDate.isBefore(endPeriod) \u0026\u0026 !dummyEventEndDate.isBefore(endPeriod)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"clydelhui"},"content":"                isEventAfter \u003d true;","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"clydelhui"},"content":"            if (!(isEventBefore || isEventAfter)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"clydelhui"},"content":"                throw new EventConflictException(\"Recurring Event List:\\n\" + index + \" \" + re);","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"clydelhui"},"content":"            index++;","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"clydelhui"},"content":"     * Returns a {@code boolean} that indicates if the {@code Event} occurs between the","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"clydelhui"},"content":"     * given period.","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"gmengqi"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"clydelhui"},"content":"     * @param startPeriod The start of the given period.","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"clydelhui"},"content":"     * @param endPeriod   The end of the given period.","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"clydelhui"},"content":"     * @return A boolean indicating if the even occurs during the given period.","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"clydelhui"},"content":"    public boolean occursBetween(LocalDateTime startPeriod, LocalDateTime endPeriod) {","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"clydelhui"},"content":"        if (startDate.isBefore(startPeriod) \u0026\u0026 endDate.isBefore(endPeriod)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"clydelhui"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"clydelhui"},"content":"        if (startDate.isAfter(endPeriod) \u0026\u0026 endDate.isAfter(endPeriod)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"clydelhui"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"gmengqi"},"content":"        return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"clydelhui"},"content":"     * Checks if the start of an {@code IsolatedEvent} is before its end.","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"clydelhui"},"content":"     * @throws EventConflictException if the start is after the end","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"clydelhui"},"content":"    public void checkValidStartEnd() throws EventConflictException {","lastModifiedDate":"2023-04-08"},{"lineNumber":137,"author":{"gitId":"gmengqi"},"content":"        if (this.startDate.isAfter(endDate) || this.startDate.equals(endDate)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"clydelhui"},"content":"            throw new EventConflictException(Messages.MESSAGE_EVENT_START_AFTER_END);","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":141,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":142,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":143,"author":{"gitId":"clydelhui"},"content":"     * Checks if the {@code IsolatedEvent} has already ended.","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"clydelhui"},"content":"     * @throws EventConflictException if the {@code IsolatedEvent} has already ended.","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"clydelhui"},"content":"    public void checkNotEnded() throws EventConflictException {","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"clydelhui"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":149,"author":{"gitId":"gmengqi"},"content":"        if (this.endDate.isBefore(now)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"clydelhui"},"content":"            throw new EventConflictException(Messages.MESSAGE_EVENT_INVALID_DATE);","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":152,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":155,"author":{"gitId":"clydelhui"},"content":"     * Checks if the start date and the end date of the event is valid for isolated event.","lastModifiedDate":"2023-04-08"},{"lineNumber":156,"author":{"gitId":"clydelhui"},"content":"     * @throws EventConflictException if start time is after the end time or the dates keyed in are before today.","lastModifiedDate":"2023-04-08"},{"lineNumber":157,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":158,"author":{"gitId":"clydelhui"},"content":"    public void checkDateTime() throws EventConflictException {","lastModifiedDate":"2023-04-08"},{"lineNumber":159,"author":{"gitId":"clydelhui"},"content":"        this.checkValidStartEnd();","lastModifiedDate":"2023-04-08"},{"lineNumber":160,"author":{"gitId":"clydelhui"},"content":"        this.checkNotEnded();","lastModifiedDate":"2023-04-08"},{"lineNumber":161,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":162,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":163,"author":{"gitId":"gmengqi"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"gmengqi"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"gmengqi"},"content":"        DateTimeFormatter newFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"gmengqi"},"content":"        String startDate \u003d this.startDate.format(newFormatter);","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"gmengqi"},"content":"        String endDate \u003d this.endDate.format(newFormatter);","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"gmengqi"},"content":"        String currEventInfo \u003d this.eventName + \" from: \" + startDate + \" to: \" + endDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"gmengqi"},"content":"        return currEventInfo;","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"gmengqi":79,"clydelhui":93}},{"path":"src/main/java/seedu/address/model/event/IsolatedEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.exceptions.EventConflictException;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":" * Represents the list of {@code IsolatedEvent} that each {@code Person} has.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"public class IsolatedEventList {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"    private final TreeSet\u003cIsolatedEvent\u003e isolatedEvents \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    public TreeSet\u003cIsolatedEvent\u003e getIsolatedEvents() {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"        return isolatedEvents;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"     * Gets the total number of event in the isolatedEvent","lastModifiedDate":"2023-04-10"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"     * @return the size of the isolatedEvents","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    public int getSize() {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"        return isolatedEvents.size();","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"     * Insert the isolated event object into the isolated event list.","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"     * @param newEvent to be inserted.","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"    public void insert(IsolatedEvent newEvent) {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"        this.isolatedEvents.add(newEvent);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"     * Check if the isolated event list contains any isolated events that conflict with the given time.","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"     * @param startDate of which event to be added starts at.","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"     * @param endDate of which event to be added ends at.","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"     * @throws EventConflictException when a conflicting event is found","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"    public void checkClashingIsolatedEvent(LocalDateTime startDate, LocalDateTime endDate)","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"            throws EventConflictException {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"gmengqi"},"content":"        Iterator\u003cIsolatedEvent\u003e it \u003d isolatedEvents.iterator();","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent currEvent;","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"gmengqi"},"content":"        while (it.hasNext()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"gmengqi"},"content":"            currEvent \u003d it.next();","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"gmengqi"},"content":"            if (currEvent.occursBetween(startDate, endDate)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"                throw new EventConflictException(\"Isolated Event: \" + index + currEvent);","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"gmengqi"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"            index++;","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"gmengqi"},"content":"     * Check to see if the edited event time period clashes with the existing isolated events in the list.","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"gmengqi"},"content":"     * @param event edited isolated event","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"gmengqi"},"content":"     * @param index index of edited event","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"gmengqi"},"content":"     * @throws EventConflictException to be thrown when it overlaps","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"gmengqi"},"content":"    public void checkOverlapping(IsolatedEvent event, int index) throws EventConflictException {","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"gmengqi"},"content":"        Iterator\u003cIsolatedEvent\u003e it \u003d isolatedEvents.iterator();","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime start \u003d event.getStartDate();","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime end \u003d event.getEndDate();","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent currEvent;","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"gmengqi"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"gmengqi"},"content":"        while (it.hasNext()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"gmengqi"},"content":"            currEvent \u003d it.next();","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"gmengqi"},"content":"            if (counter \u003d\u003d index) {","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"gmengqi"},"content":"                continue;","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"gmengqi"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"gmengqi"},"content":"            if (start.isBefore(currEvent.getEndDate()) \u0026\u0026 currEvent.getStartDate().isBefore(end)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"gmengqi"},"content":"                throw new EventConflictException(\"Isolated Event List:\\n\" + index + \". \" + currEvent);","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"gmengqi"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"gmengqi"},"content":"            counter++;","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"gmengqi"},"content":"    public boolean contain(IsolatedEvent event) {","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"gmengqi"},"content":"        return this.isolatedEvents.contains(event);","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"gmengqi"},"content":"     * Delete the isolated event from the isolated event list.","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"gmengqi"},"content":"     * @param event to be deleted.","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"gmengqi"},"content":"    public void deleteIsolatedEvent(IsolatedEvent event) {","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"gmengqi"},"content":"        isolatedEvents.remove(event);","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"gmengqi"},"content":"     * Get the isolated event in the isolated event list with the event\u0027s index.","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"gmengqi"},"content":"     * @param index of the event.","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"gmengqi"},"content":"     * @return IsolatedEventObject","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"gmengqi"},"content":"    public IsolatedEvent getIsolatedEvent(int index) {","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"gmengqi"},"content":"        Iterator\u003cIsolatedEvent\u003e it \u003d isolatedEvents.iterator();","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent event \u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"gmengqi"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"gmengqi"},"content":"        while (it.hasNext()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"gmengqi"},"content":"            event \u003d it.next();","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"gmengqi"},"content":"            if (counter \u003d\u003d index) {","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"gmengqi"},"content":"                break;","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"gmengqi"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"gmengqi"},"content":"            counter++;","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"gmengqi"},"content":"        return event;","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"gmengqi"},"content":"     * Edit the current event in the isolated event list.","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"gmengqi"},"content":"     * @param originalEvent to be edited.","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"gmengqi"},"content":"     * @param editedEvent to be edited to.","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"gmengqi"},"content":"    public void edit(IsolatedEvent originalEvent, IsolatedEvent editedEvent) {","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"gmengqi"},"content":"        if (!isolatedEvents.contains(originalEvent)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"gmengqi"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"gmengqi"},"content":"        isolatedEvents.remove(originalEvent);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"gmengqi"},"content":"        isolatedEvents.add(editedEvent);","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"clydelhui"},"content":"    public void addAll(Set\u003cIsolatedEvent\u003e isolatedEvents) {","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"clydelhui"},"content":"        this.isolatedEvents.addAll(isolatedEvents);","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"clydelhui"},"content":"    public ArrayList\u003cIsolatedEvent\u003e getList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"clydelhui"},"content":"        return new ArrayList\u003c\u003e(this.isolatedEvents);","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"clydelhui"},"content":"    public Set\u003cIsolatedEvent\u003e getSet() {","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"clydelhui"},"content":"        return new TreeSet\u003c\u003e(this.isolatedEvents);","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"clydelhui"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"clydelhui"},"content":"        StringBuilder output \u003d new StringBuilder(\"Isolated Events\\n\");","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"clydelhui"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"clydelhui"},"content":"        for (IsolatedEvent ie : isolatedEvents) {","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"clydelhui"},"content":"            output.append(count).append(\". \").append(ie.toString()).append(\"\\n\");","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"clydelhui"},"content":"            count++;","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"clydelhui"},"content":"        return output.toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Alvozyn":14,"gmengqi":92,"clydelhui":43}},{"path":"src/main/java/seedu/address/model/event/PersonEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":" * Represents the list of {@code Event} that each {@code Person} has","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"public class PersonEventList {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"    private final IsolatedEventList isolatedEventList \u003d new IsolatedEventList();","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"    private final RecurringEventList recurringEventList \u003d new RecurringEventList();","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"        return \"One-off Events\\n\" + isolatedEventList","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"                + \"\\nRecurring Events\\n\" + recurringEventList;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"clydelhui":15}},{"path":"src/main/java/seedu/address/model/event/RecurringEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.exceptions.EventConflictException;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":" * Represents an {@code Event} that occurs on a weekly basis.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"public class RecurringEvent extends Event implements Comparable\u003cRecurringEvent\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_CONSTRAINTS_TIME \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"            \"Time should be in the format: HH:mm\";","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_CONSTRAINTS_PERIOD \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"            \"The end time should not be earlier than the start time\";","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    public static final String MESSAGE_CONSTRAINTS_DAYOFWEEK \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"            \"The day of the week should be either MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY or SUNDAY\";","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"    public static final String MESSAGE_CONSTRAINTS_CLASH \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"            \"Events cannot have conflicts with other events\";","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"    private final DayOfWeek dayOfWeek;","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"     * Constructor for Recurring events","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"     * @param eventName is the name of event","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"     * @param dayOfWeek is the day when the event occurs","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"     * @param startTime is the starting time of the event","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"     * @param endTime is the ending time of the event","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"    public RecurringEvent(String eventName, DayOfWeek dayOfWeek, LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"        super(eventName);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"        this.dayOfWeek \u003d dayOfWeek;","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"     * Gets the starting time of the event","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"     * @return the startTime","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"        return startTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"     * Gets the ending time of the event","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"     * @return the endTime","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"        return endTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"     * Gets the day that the event takes place","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"     * @return the dayOfWeek","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"    public DayOfWeek getDayOfWeek() {","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"        return dayOfWeek;","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"     * Get the value for the day of the week","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"     * 0, 1, 2, 3, 4, 5, 6 stands for Monday, Tuesday, Wednesday, Thursday, Friday,","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"     * Saturday and Sunday respectively","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"     * @return the value of day","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"    public int getDayValue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"        return dayOfWeek.getValue();","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"     * Compares the day and time between recurringEvent.","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"     * @param recurringEvent2 the object to be compared.","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"     * @return -1 if the event falls before o, 1 if both event falls after o and 0 if the event","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"     *     conflicts with each other","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"    public int compareTo(RecurringEvent recurringEvent2) {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"        int oDay \u003d recurringEvent2.getDayValue();","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"        if (getDayValue() \u003e oDay) {","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"            return 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"        } else if (getDayValue() \u003c oDay) {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"            return -1;","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Alvozyn"},"content":"        LocalTime oStart \u003d recurringEvent2.getStartTime();","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"Alvozyn"},"content":"        LocalTime oEnd \u003d recurringEvent2.getEndTime();","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"        if (this.startTime.isBefore(oStart) \u0026\u0026 (this.endTime.isBefore(oStart) || this.endTime.equals(oStart))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Alvozyn"},"content":"            return -1;","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Alvozyn"},"content":"        } else if (this.startTime.isAfter(oStart) \u0026\u0026 (this.startTime.isAfter(oEnd) || this.startTime.equals(oEnd))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Alvozyn"},"content":"            return 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"clydelhui"},"content":"        return 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"clydelhui"},"content":"     * This function cross-check with the isolated event list to check for any conflicts.","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"clydelhui"},"content":"     * @param isolatedEventList is the event list to be checked with","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"clydelhui"},"content":"     * @throws seedu.address.model.event.exceptions.EventConflictException if there is a conflicted event","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"clydelhui"},"content":"    public void listConflictedEventWithIsolated(","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"clydelhui"},"content":"            IsolatedEventList isolatedEventList) throws EventConflictException {","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"clydelhui"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"clydelhui"},"content":"        for (IsolatedEvent ie : isolatedEventList.getIsolatedEvents()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"clydelhui"},"content":"            LocalDateTime startPeriod \u003d ie.getStartDate();","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"clydelhui"},"content":"            LocalDateTime endPeriod \u003d ie.getEndDate();","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"clydelhui"},"content":"            long count \u003d this.numberOfDaysBetween(startPeriod, endPeriod, this.getDayOfWeek());","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"clydelhui"},"content":"            if (count \u003d\u003d -1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"clydelhui"},"content":"                continue;","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"clydelhui"},"content":"            LocalDateTime recurringEventDate \u003d startPeriod.plusDays(count);","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"clydelhui"},"content":"            LocalDateTime dummyEventStartDate \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"clydelhui"},"content":"                    LocalDateTime.of(recurringEventDate.toLocalDate(), this.getStartTime());","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"clydelhui"},"content":"            LocalDateTime dummyEventEndDate \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"clydelhui"},"content":"                    LocalDateTime.of(recurringEventDate.toLocalDate(), this.getEndTime());","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":133,"author":{"gitId":"clydelhui"},"content":"            boolean isEventBefore \u003d false;","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"clydelhui"},"content":"            boolean isEventAfter \u003d false;","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":136,"author":{"gitId":"clydelhui"},"content":"            if (!dummyEventStartDate.isAfter(startPeriod) \u0026\u0026 !dummyEventEndDate.isAfter(startPeriod)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"clydelhui"},"content":"                isEventBefore \u003d true;","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"clydelhui"},"content":"            if (!dummyEventStartDate.isBefore(endPeriod) \u0026\u0026 !dummyEventEndDate.isBefore(endPeriod)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":141,"author":{"gitId":"clydelhui"},"content":"                isEventAfter \u003d true;","lastModifiedDate":"2023-04-07"},{"lineNumber":142,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":143,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"clydelhui"},"content":"            if (!(isEventBefore || isEventAfter)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"Alvozyn"},"content":"                throw new EventConflictException(\"Isolated Event List:\\n\" + index + \" \" + ie);","lastModifiedDate":"2023-04-10"},{"lineNumber":146,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":151,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"clydelhui"},"content":"     * Returns a {@code boolean} that indicates if the {@code Event} occurs between the","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"clydelhui"},"content":"     * given period.","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"clydelhui"},"content":"     * @param startPeriod The start of the given period.","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"clydelhui"},"content":"     * @param endPeriod The end of the given period.","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"clydelhui"},"content":"     * @return A boolean indicating if the even occurs during the given period.","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"clydelhui"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"clydelhui"},"content":"    public boolean occursBetween(LocalDateTime startPeriod, LocalDateTime endPeriod) {","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"Alvozyn"},"content":"        DayOfWeek startPeriodDay \u003d startPeriod.getDayOfWeek();","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"Alvozyn"},"content":"        boolean isDayBetweenPeriod \u003d false;","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"Alvozyn"},"content":"        long daysBetween \u003d startPeriod.until(endPeriod, ChronoUnit.DAYS);","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"Alvozyn"},"content":"        // if there are more than 7 days between the start and end period then it is guaranteed that falls","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"Alvozyn"},"content":"        // within the week","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"Alvozyn"},"content":"        if (daysBetween \u003e 7) {","lastModifiedDate":"2023-03-10"},{"lineNumber":170,"author":{"gitId":"Alvozyn"},"content":"            return true;","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"Alvozyn"},"content":"        long count \u003d 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"Alvozyn"},"content":"        DayOfWeek eventDay \u003d startPeriodDay;","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"Alvozyn"},"content":"        for (int i \u003d 0; i \u003c daysBetween; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"Alvozyn"},"content":"            if (this.dayOfWeek.equals(eventDay)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"Alvozyn"},"content":"                isDayBetweenPeriod \u003d true;","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"Alvozyn"},"content":"                break;","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"Alvozyn"},"content":"            eventDay \u003d eventDay.plus(1);","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"Alvozyn"},"content":"            count++;","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"Alvozyn"},"content":"        if (!isDayBetweenPeriod \u0026\u0026 !eventDay.equals(this.dayOfWeek)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"Alvozyn"},"content":"            //day does not fall between start and end day. E.g. FRIDAY does not fall between MONDAY and Thursday","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"Alvozyn"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"Alvozyn"},"content":"        LocalDateTime recurringEventDate \u003d startPeriod.plusDays(count);","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"Alvozyn"},"content":"        LocalDateTime dummyEventStartDate \u003d LocalDateTime.of(recurringEventDate.toLocalDate(), this.startTime);","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"Alvozyn"},"content":"        LocalDateTime dummyEventEndDate \u003d LocalDateTime.of(recurringEventDate.toLocalDate(), this.endTime);","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"Alvozyn"},"content":"        if (dummyEventStartDate.isBefore(startPeriod) || dummyEventEndDate.isAfter(endPeriod)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"Alvozyn"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"Alvozyn"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"Alvozyn"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":201,"author":{"gitId":"gmengqi"},"content":"     * Checks if the start time and the end time of the event is valid for recurring event.","lastModifiedDate":"2023-03-21"},{"lineNumber":202,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":203,"author":{"gitId":"clydelhui"},"content":"    public void checkPeriod() throws EventConflictException {","lastModifiedDate":"2023-04-07"},{"lineNumber":204,"author":{"gitId":"gmengqi"},"content":"        if (this.startTime.isAfter(this.endTime) || this.startTime.equals(this.endTime)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":205,"author":{"gitId":"clydelhui"},"content":"            throw new EventConflictException(RecurringEvent.MESSAGE_CONSTRAINTS_PERIOD);","lastModifiedDate":"2023-04-07"},{"lineNumber":206,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":207,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":208,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":209,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":210,"author":{"gitId":"Alvozyn"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"Alvozyn"},"content":"        return getEventName() + \" on \" + this.dayOfWeek.name() + \" from \" + startTime.toString() + \" to \"","lastModifiedDate":"2023-03-12"},{"lineNumber":212,"author":{"gitId":"Alvozyn"},"content":"                + endTime.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":214,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":215,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":216,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":217,"author":{"gitId":"Alvozyn"},"content":"     * To check if the day of the week falls between 2 dates","lastModifiedDate":"2023-03-22"},{"lineNumber":218,"author":{"gitId":"Alvozyn"},"content":"     * @param startPeriod represents the starting date","lastModifiedDate":"2023-03-22"},{"lineNumber":219,"author":{"gitId":"Alvozyn"},"content":"     * @param endPeriod represents the ending date","lastModifiedDate":"2023-03-22"},{"lineNumber":220,"author":{"gitId":"Alvozyn"},"content":"     * @param dayOfWeek is the day of the week","lastModifiedDate":"2023-03-22"},{"lineNumber":221,"author":{"gitId":"Alvozyn"},"content":"     * @return count which indicates how many the number of in which the day of week falls after the start period","lastModifiedDate":"2023-03-22"},{"lineNumber":222,"author":{"gitId":"Alvozyn"},"content":"     *      and -1 if it does not fall between the 2 dates","lastModifiedDate":"2023-03-22"},{"lineNumber":223,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"Alvozyn"},"content":"    public long numberOfDaysBetween(LocalDateTime startPeriod, LocalDateTime endPeriod, DayOfWeek dayOfWeek) {","lastModifiedDate":"2023-03-22"},{"lineNumber":225,"author":{"gitId":"Alvozyn"},"content":"        long daysBetween \u003d startPeriod.until(endPeriod, ChronoUnit.DAYS);","lastModifiedDate":"2023-03-22"},{"lineNumber":226,"author":{"gitId":"Alvozyn"},"content":"        DayOfWeek startPeriodDay \u003d startPeriod.getDayOfWeek();","lastModifiedDate":"2023-03-22"},{"lineNumber":227,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"Alvozyn"},"content":"        DayOfWeek eventDay \u003d startPeriodDay;","lastModifiedDate":"2023-03-22"},{"lineNumber":229,"author":{"gitId":"Alvozyn"},"content":"        long count \u003d 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":230,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":231,"author":{"gitId":"Alvozyn"},"content":"        for (int i \u003d 0; i \u003c daysBetween; i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":232,"author":{"gitId":"Alvozyn"},"content":"            if (dayOfWeek.equals(eventDay)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":233,"author":{"gitId":"Alvozyn"},"content":"                break;","lastModifiedDate":"2023-03-22"},{"lineNumber":234,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":235,"author":{"gitId":"Alvozyn"},"content":"            eventDay \u003d eventDay.plus(1);","lastModifiedDate":"2023-03-22"},{"lineNumber":236,"author":{"gitId":"Alvozyn"},"content":"            count++;","lastModifiedDate":"2023-03-22"},{"lineNumber":237,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":238,"author":{"gitId":"Alvozyn"},"content":"        if (eventDay.equals(dayOfWeek)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":239,"author":{"gitId":"Alvozyn"},"content":"            return count;","lastModifiedDate":"2023-03-22"},{"lineNumber":240,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":241,"author":{"gitId":"Alvozyn"},"content":"        return -1;","lastModifiedDate":"2023-03-22"},{"lineNumber":242,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":243,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Alvozyn":158,"gmengqi":8,"clydelhui":77}},{"path":"src/main/java/seedu/address/model/event/RecurringEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.exceptions.EventConflictException;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import seedu.address.model.time.TimeMask;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":" * Represents the list of {@code RecurringEvent} that each {@code Person} has.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"public class RecurringEventList {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"    private final TreeSet\u003cRecurringEvent\u003e recurringEvents \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"    private final TimeMask recurringMask \u003d new TimeMask();","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    public TreeSet\u003cRecurringEvent\u003e getRecurringEvents() {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        return recurringEvents;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"     * Gets the total number of event in the recurringEvents","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"     * @return the size of the recurringEvents","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    public int getSize() {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"        return recurringEvents.size();","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"     * Insert the recurring event object into the recurring event list","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"     * @param newEvent to be inserted","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"    public void insert(RecurringEvent newEvent) {","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"        this.recurringEvents.add(newEvent);","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        recurringMask.modifyOccupancy(newEvent, true);","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"     * Check if the recurring event object is in the recurring event list.","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"     * @param recurringEvent of which event to be added","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"     * @return","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"    public String checkClashingRecurringEvent(RecurringEvent recurringEvent) {","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"        Iterator\u003cRecurringEvent\u003e it \u003d recurringEvents.iterator();","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent currEvent;","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-04-10"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"        while (it.hasNext()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"            currEvent \u003d it.next();","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"            if (recurringEvent.compareTo(currEvent) \u003d\u003d 0) {","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"                return \"Event Conflict in Recurring Event List\\n\" + count + \". \" + currEvent;","lastModifiedDate":"2023-04-10"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"            count++;","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"        return null;","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"     * Check if a recurring event exist within the recurring event list","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"     * @param event to be checked if exist","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"     * @return true if there exist a same event and false if the event does exist","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"     *      in the event list","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"    public boolean contain(RecurringEvent event) {","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"        return recurringEvents.contains(event);","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"     * Get the recurring event in the recurring event list with the event\u0027s index.","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"     * @param index of the event.","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"     * @return recurringEventObject","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"    public RecurringEvent getRecurringEvent(int index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"        Iterator\u003cRecurringEvent\u003e it \u003d recurringEvents.iterator();","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent recurringEvent \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"        while (it.hasNext()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"            recurringEvent \u003d it.next();","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"            if (counter \u003d\u003d index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"            counter++;","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"        return recurringEvent;","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"     * Checks if the newly edited recurring event clashes with any preexisting recurring events","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"Alvozyn"},"content":"     * @param newlyEditedRecurringEvent the new event to replace the original event","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"Alvozyn"},"content":"     * @param original recurring event to be replaced","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"Alvozyn"},"content":"     * @throws EventConflictException","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"clydelhui"},"content":"    public void checkForClashesInRecurringEvent(RecurringEvent newlyEditedRecurringEvent,","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"Alvozyn"},"content":"                                                       RecurringEvent original) throws EventConflictException {","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"clydelhui"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"clydelhui"},"content":"            RecurringEvent curRecurringEvent \u003d this.getRecurringEvent(i);","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"Alvozyn"},"content":"            if (curRecurringEvent.equals(original)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"Alvozyn"},"content":"                continue;","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"Alvozyn"},"content":"            if (curRecurringEvent.getDayOfWeek().equals(newlyEditedRecurringEvent.getDayOfWeek())) {","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"Alvozyn"},"content":"                boolean isEventInFront \u003d curRecurringEvent.getStartTime().isBefore(newlyEditedRecurringEvent","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"Alvozyn"},"content":"                        .getStartTime())","lastModifiedDate":"2023-03-31"},{"lineNumber":115,"author":{"gitId":"Alvozyn"},"content":"                        \u0026\u0026 !curRecurringEvent.getEndTime().isAfter(newlyEditedRecurringEvent.getStartTime());","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"Alvozyn"},"content":"                boolean isEventBack \u003d curRecurringEvent.getEndTime().isAfter(newlyEditedRecurringEvent.getEndTime())","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"Alvozyn"},"content":"                        \u0026\u0026 !curRecurringEvent.getStartTime().isBefore(newlyEditedRecurringEvent.getEndTime());","lastModifiedDate":"2023-03-31"},{"lineNumber":119,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":120,"author":{"gitId":"Alvozyn"},"content":"                if (!isEventInFront \u0026\u0026 !isEventBack) {","lastModifiedDate":"2023-03-31"},{"lineNumber":121,"author":{"gitId":"Alvozyn"},"content":"                    throw new EventConflictException(curRecurringEvent.toString());","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":123,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":124,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":125,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":126,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":127,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":128,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":129,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"gmengqi"},"content":"     * Add all the recurring events into the person\u0027s recurring event list and update the recurring event list\u0027s time","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"gmengqi"},"content":"     * mask.","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"gmengqi"},"content":"     * @param recurringEvents","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"clydelhui"},"content":"    public void addAll(Set\u003cRecurringEvent\u003e recurringEvents) {","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"clydelhui"},"content":"        this.recurringEvents.addAll(recurringEvents);","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"edures888"},"content":"        for (RecurringEvent recurringEvent: recurringEvents) {","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"edures888"},"content":"            recurringMask.modifyOccupancy(recurringEvent, true);","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":139,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"clydelhui"},"content":"    public ArrayList\u003cRecurringEvent\u003e getList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"clydelhui"},"content":"        return new ArrayList\u003c\u003e(this.recurringEvents);","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"clydelhui"},"content":"    public Set\u003cRecurringEvent\u003e getSet() {","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"clydelhui"},"content":"        return new TreeSet\u003c\u003e(this.recurringEvents);","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"Alvozyn"},"content":"     * Prints out a list of all event that occur within the given time period","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"Alvozyn"},"content":"     * @param startPeriod stand for the starting date of the time period","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"Alvozyn"},"content":"     * @param endPeriod stands for the ending date of the time period","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"Alvozyn"},"content":"     * @return a string of all events that occured within the time period","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"edures888"},"content":"    public String listBetweenOccurrence(LocalDateTime startPeriod, LocalDateTime endPeriod) {","lastModifiedDate":"2023-03-25"},{"lineNumber":155,"author":{"gitId":"Alvozyn"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"Alvozyn"},"content":"        for (RecurringEvent re : recurringEvents) {","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"Alvozyn"},"content":"            if (re.occursBetween(startPeriod, endPeriod)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"Alvozyn"},"content":"                output.append(re).append(\"\\n\");","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"Alvozyn"},"content":"        return output.toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"gmengqi"},"content":"     * Delete the recurring event from the person\u0027s recurring event list and update the time mask of the recurring","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"gmengqi"},"content":"     * event list.","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"gmengqi"},"content":"     * @param event","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"Alvozyn"},"content":"    public void deleteRecurringEvent(RecurringEvent event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"Alvozyn"},"content":"        recurringEvents.remove(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"edures888"},"content":"        recurringMask.modifyOccupancy(event, false);","lastModifiedDate":"2023-03-25"},{"lineNumber":172,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"Alvozyn"},"content":"     * Edit recurring event parameters in the recurring event list","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"Alvozyn"},"content":"     * @param originalEvent to be edited","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"Alvozyn"},"content":"     * @param editedRecurringEvent to be edited to","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"Alvozyn"},"content":"    public void edit(RecurringEvent originalEvent, RecurringEvent editedRecurringEvent) {","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"Alvozyn"},"content":"        if (!recurringEvents.contains(originalEvent)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"Alvozyn"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"Alvozyn"},"content":"        recurringEvents.remove(originalEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"Alvozyn"},"content":"        recurringEvents.add(editedRecurringEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":186,"author":{"gitId":"edures888"},"content":"        recurringMask.modifyOccupancy(originalEvent, false);","lastModifiedDate":"2023-03-25"},{"lineNumber":187,"author":{"gitId":"edures888"},"content":"        recurringMask.modifyOccupancy(editedRecurringEvent, true);","lastModifiedDate":"2023-03-25"},{"lineNumber":188,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":190,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":191,"author":{"gitId":"Alvozyn"},"content":"    public String toString() {","lastModifiedDate":"2023-03-22"},{"lineNumber":192,"author":{"gitId":"lyndonlim27"},"content":"        StringBuilder output \u003d new StringBuilder(\"Recurring Events\\n\");","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"Alvozyn"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":194,"author":{"gitId":"Alvozyn"},"content":"        for (RecurringEvent re : recurringEvents) {","lastModifiedDate":"2023-03-22"},{"lineNumber":195,"author":{"gitId":"Alvozyn"},"content":"            output.append(count).append(\". \").append(re.toString()).append(\"\\n\");","lastModifiedDate":"2023-03-22"},{"lineNumber":196,"author":{"gitId":"Alvozyn"},"content":"            count++;","lastModifiedDate":"2023-03-22"},{"lineNumber":197,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"Alvozyn"},"content":"        return output.toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":199,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"edures888"},"content":"    public TimeMask getRecurringMask() {","lastModifiedDate":"2023-03-25"},{"lineNumber":203,"author":{"gitId":"edures888"},"content":"        return recurringMask;","lastModifiedDate":"2023-03-25"},{"lineNumber":204,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":205,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":206,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Alvozyn":153,"gmengqi":13,"edures888":16,"lyndonlim27":1,"clydelhui":24}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventConflictException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":" * Signals that there is a conflict of events","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"public class EventConflictException extends CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"    public EventConflictException(String eventConflictedWith) {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"        super(\"Event conflict with \" + eventConflictedWith);","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Alvozyn":12}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":" * Signals that the event is not in the isolated event list.","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"public class EventNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"    public EventNotFoundException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"        super(\"Cannot find such event\");","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"gmengqi":11}},{"path":"src/main/java/seedu/address/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.model.group;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":" * Represents a Group in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidGroupName(String)}","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"public class Group {","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Group names should be alphanumeric. Whitespaces are not allowed\";","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"    public final String groupName;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"     * Constructs a group","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"     * @param groupName A valid group name.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    public Group(String groupName) {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"        checkArgument(isValidGroupName(groupName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    public String getName() {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        return groupName;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"     * Returns true if a given string is a valid group name.","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"    public static boolean isValidGroupName(String test) {","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"     * Returns true if both groups have the same name.","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"     * This defines a weaker notion of equality between two groups.","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"    public boolean isSameGroup(Group otherGroup) {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"        if (otherGroup \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        return otherGroup !\u003d null","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"                \u0026\u0026 otherGroup.getName().equals(getName());","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"     * Returns true if both groups are the same group object or have the same group name","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"                || (other instanceof Group // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"                \u0026\u0026 groupName.equals(((Group) other).groupName)); // state check","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"        return groupName.hashCode();","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"lyndonlim27"},"content":"    public String toString() {","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"lyndonlim27"},"content":"        return \u0027[\u0027 + groupName + \u0027]\u0027;","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"edures888":19,"lyndonlim27":56}},{"path":"src/main/java/seedu/address/model/group/GroupNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.model.group;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":" * Tests that a {@code Group}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"public class GroupNameContainsKeywordsPredicate implements Predicate\u003cGroup\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    public GroupNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public boolean test(Group group) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(group.getName(), keyword));","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"                || (other instanceof GroupNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"                \u0026\u0026 keywords.equals(((GroupNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"edures888":31}},{"path":"src/main/java/seedu/address/model/group/UniqueGroupList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.model.group;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":" * A group is considered unique by comparing using {@code Group#isSameGroup(Group)}. As such, adding and updating of","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":" * groups uses Group#isSameGroup(Group) for equality so as to ensure that the group being added or updated is","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":" * unique in terms of identity in the UniqueGroupList. However, the removal of a group uses Group#equals(Object) so","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":" *","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":" *","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":" * @see Group#isSameGroup(Group)","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"public class UniqueGroupList implements Iterable\u003cGroup\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    private final ObservableList\u003cGroup\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    private final ObservableList\u003cGroup\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"     * Adds a group to the set.","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"     * The group must not already exist in the set.","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"     * @param toAdd Group to add to set","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"    public void add(Group toAdd) {","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"     * Delete the equivalent group from the set.","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"     * The group must exist in the set.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"     * @param toRemove Group to remove from set","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"    public void delete(Group toRemove) {","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"        if (!contains(toRemove)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"        internalList.remove(toRemove);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"     * Returns true if the list contains an equivalent group as the given argument.","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"    public boolean contains(Group toCheck) {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"        return internalList.stream().anyMatch(toCheck::isSameGroup);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"    public ObservableList\u003cGroup\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"    public Iterator\u003cGroup\u003e iterator() {","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"    public void setGroups(UniqueGroupList replacement) {","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"edures888"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"edures888"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"edures888"},"content":"     * Replaces the contents of this list with {@code groups}.","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"edures888"},"content":"     * {@code groups} must not contain duplicate persons.","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"edures888"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"edures888"},"content":"        requireAllNonNull(groups);","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"edures888"},"content":"        if (!groupsAreUnique(groups)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"edures888"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"edures888"},"content":"        internalList.setAll(groups);","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"edures888"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"edures888"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"edures888"},"content":"                || (other instanceof UniqueGroupList // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"edures888"},"content":"                \u0026\u0026 internalList.equals(((UniqueGroupList) other).internalList));","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"lyndonlim27"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"edures888"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"edures888"},"content":"     * Returns true if {@code groups} contains only unique groups.","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"edures888"},"content":"    private boolean groupsAreUnique(List\u003cGroup\u003e groups) {","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"edures888"},"content":"        for (int i \u003d 0; i \u003c groups.size() - 1; i++) {","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"edures888"},"content":"            for (int j \u003d i + 1; j \u003c groups.size(); j++) {","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"edures888"},"content":"                if (groups.get(i).isSameGroup(groups.get(j))) {","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"edures888"},"content":"                    return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"edures888"},"content":"        return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"edures888":79,"lyndonlim27":45}},{"path":"src/main/java/seedu/address/model/group/exceptions/DuplicateGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":" * Signals that the operation will result in duplicate Groups in the addressBook (Groups are considered duplicates","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":" * if they have the same identity).","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"public class DuplicateGroupException extends RuntimeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"    public DuplicateGroupException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"        super(\"Operation would result in duplicate groups\");","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lyndonlim27":11}},{"path":"src/main/java/seedu/address/model/group/exceptions/GroupNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":" * Signals that the operation is unable to find the specified group.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"public class GroupNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lyndonlim27":6}},{"path":"src/main/java/seedu/address/model/group/exceptions/PersonAlreadyInGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":" * Signals that the operation will result in duplicate groups in a Person (Groups are considered duplicates if they","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":" * have the same group name).","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"public class PersonAlreadyInGroupException extends RuntimeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"    public PersonAlreadyInGroupException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"        super(\"Operation would result in a person having duplicate groups\");","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lyndonlim27":11}},{"path":"src/main/java/seedu/address/model/group/exceptions/PersonNotInGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":" * Signals that the operation is unable to find the specified person in the group.","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"public class PersonNotInGroupException extends RuntimeException {}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lyndonlim27":6}},{"path":"src/main/java/seedu/address/model/person/MemberOfGroupPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"public class MemberOfGroupPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    private final List\u003cString\u003e groupKeywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    public MemberOfGroupPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"        groupKeywords \u003d keywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        return groupKeywords.stream().anyMatch(keyword -\u003e person.getGroups().stream().anyMatch(group -\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"                                StringUtil.containsWordIgnoreCase(group.getName(), keyword)));","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"                || (other instanceof MemberOfGroupPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"                \u0026\u0026 groupKeywords.equals(((MemberOfGroupPredicate) other).groupKeywords)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"edures888":31}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEventList;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEventList;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.exceptions.PersonAlreadyInGroupException;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.exceptions.PersonNotInGroupException;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"import seedu.address.model.time.TimeMask;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"    private final IsolatedEventList isolatedEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"    private final RecurringEventList recurringEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"    private Set\u003cGroup\u003e groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Set\u003cGroup\u003e groups,","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"                  IsolatedEventList isolatedEventList, RecurringEventList recurringEventList) {","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"        requireAllNonNull(name, phone, email, address, tags, groups, isolatedEventList, recurringEventList);","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"        this.groups.addAll(groups);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"        this.isolatedEventList \u003d isolatedEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"        this.recurringEventList \u003d recurringEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"     * Add a group into person","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"     * @param group Group that a person is in","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"        if (groups.contains(group)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"            throw new PersonAlreadyInGroupException();","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"        this.groups.add(group);","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"     * Remove a group from person","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"lyndonlim27"},"content":"     * @param group Group that a person does not belong in anymore","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"lyndonlim27"},"content":"    public void removeGroup(Group group) {","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"lyndonlim27"},"content":"        if (!groups.contains(group)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"lyndonlim27"},"content":"            throw new PersonNotInGroupException();","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"lyndonlim27"},"content":"        this.groups.remove(group);","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":96,"author":{"gitId":"gmengqi"},"content":"    public void addIsolatedEvent(IsolatedEvent event) {","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(event);","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"gmengqi"},"content":"    public IsolatedEventList getIsolatedEventList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"gmengqi"},"content":"        return isolatedEventList;","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"gmengqi"},"content":"     * Add the recurring event into the person\u0027s recurring event list.","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"gmengqi"},"content":"     * @param event","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"Alvozyn"},"content":"    public void addRecurringEvent(RecurringEvent event) {","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"Alvozyn"},"content":"        recurringEventList.insert(event);","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"Alvozyn"},"content":"    public RecurringEventList getRecurringEventList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"Alvozyn"},"content":"        return recurringEventList;","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"lyndonlim27"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"lyndonlim27"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"lyndonlim27"},"content":"    public Set\u003cGroup\u003e getGroups() {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"lyndonlim27"},"content":"        return Collections.unmodifiableSet(groups);","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"edures888"},"content":"    public TimeMask getRecurringMask() {","lastModifiedDate":"2023-03-25"},{"lineNumber":133,"author":{"gitId":"edures888"},"content":"        return recurringEventList.getRecurringMask();","lastModifiedDate":"2023-03-25"},{"lineNumber":134,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"gmengqi"},"content":"     * Remove the expired isolated events from the person\u0027s isolated event list.","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"gmengqi"},"content":"    public void removeExpiredEvent() {","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"gmengqi"},"content":"        int len \u003d isolatedEventList.getSize();","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"gmengqi"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"gmengqi"},"content":"            IsolatedEvent event \u003d isolatedEventList.getIsolatedEvent(i);","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"gmengqi"},"content":"            if (event.getStartDate().isBefore(now)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"gmengqi"},"content":"                isolatedEventList.deleteIsolatedEvent(event);","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"gmengqi"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":183,"author":{"gitId":"lyndonlim27"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"lyndonlim27"},"content":"                \u0026\u0026 otherPerson.getGroups().equals(getGroups());","lastModifiedDate":"2023-03-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"lyndonlim27"},"content":"        return Objects.hash(name, phone, email, address, tags, groups);","lastModifiedDate":"2023-03-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"lyndonlim27"},"content":"                .append(\"\\nPhone: \")","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":199,"author":{"gitId":"lyndonlim27"},"content":"                .append(\"\\nEmail: \")","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"lyndonlim27"},"content":"                .append(\"\\nAddress: \")","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":206,"author":{"gitId":"lyndonlim27"},"content":"            builder.append(\"\\nTags: \");","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":209,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"lyndonlim27"},"content":"        Set\u003cGroup\u003e groups \u003d getGroups();","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"lyndonlim27"},"content":"        if (!groups.isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":212,"author":{"gitId":"lyndonlim27"},"content":"            builder.append(\"\\nGroups: \");","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"lyndonlim27"},"content":"            groups.forEach(builder::append);","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"lyndonlim27"},"content":"        if (isolatedEventList.getSize() \u003e 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"lyndonlim27"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"lyndonlim27"},"content":"            builder.append(isolatedEventList);","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"lyndonlim27"},"content":"        if (recurringEventList.getSize() \u003e 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"lyndonlim27"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"lyndonlim27"},"content":"            builder.append(recurringEventList);","lastModifiedDate":"2023-03-30"},{"lineNumber":224,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":225,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Alvozyn":10,"gmengqi":30,"edures888":5,"lyndonlim27":60,"-":116,"clydelhui":7}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags should only contain alphanumeric characters and spaces\";","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lyndonlim27":2,"-":52}},{"path":"src/main/java/seedu/address/model/time/ScheduleDay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.model.time;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":" * Represents the status of each timeslots of the day.","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"public class ScheduleDay {","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"    private String day;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    private Status time0;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"    private Status time1;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"    private Status time2;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    private Status time3;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    private Status time4;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    private Status time5;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"    private Status time6;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    private Status time7;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    private Status time8;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    private Status time9;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    private Status time10;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    private Status time11;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    private Status time12;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"    private Status time13;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    private Status time14;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    private Status time15;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    private Status time16;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    private Status time17;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    private Status time18;","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    private Status time19;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"    private Status time20;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"    private Status time21;","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"    private Status time22;","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    private Status time23;","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"     * Constructor for ScheduleDay","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"     * @param time an array of status for each timeslot for the given day","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"    public ScheduleDay(String day, ArrayList\u003cStatus\u003e time) {","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"        this.time0 \u003d time.get(0);","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"        this.time1 \u003d time.get(1);","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"        this.time2 \u003d time.get(2);","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"        this.time3 \u003d time.get(3);","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"        this.time4 \u003d time.get(4);","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"        this.time5 \u003d time.get(5);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"        this.time6 \u003d time.get(6);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"        this.time7 \u003d time.get(7);","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"        this.time8 \u003d time.get(8);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"        this.time9 \u003d time.get(9);","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"        this.time10 \u003d time.get(10);","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"        this.time11 \u003d time.get(11);","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"        this.time12 \u003d time.get(12);","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"        this.time13 \u003d time.get(13);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"        this.time14 \u003d time.get(14);","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"        this.time15 \u003d time.get(15);","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"        this.time16 \u003d time.get(16);","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"        this.time17 \u003d time.get(17);","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"        this.time18 \u003d time.get(18);","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"        this.time19 \u003d time.get(19);","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"        this.time20 \u003d time.get(20);","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"        this.time21 \u003d time.get(21);","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"        this.time22 \u003d time.get(22);","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"        this.time23 \u003d time.get(23);","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"    public String getDay() {","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"        return day;","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime0() {","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"        return time0;","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime1() {","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"        return time1;","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime2() {","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"        return time2;","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime3() {","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"        return time3;","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime4() {","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"        return time4;","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime5() {","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Alvozyn"},"content":"        return time5;","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime6() {","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Alvozyn"},"content":"        return time6;","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime7() {","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"Alvozyn"},"content":"        return time7;","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime8() {","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Alvozyn"},"content":"        return time8;","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime9() {","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"Alvozyn"},"content":"        return time9;","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime10() {","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"Alvozyn"},"content":"        return time10;","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime11() {","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"Alvozyn"},"content":"        return time11;","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime12() {","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"Alvozyn"},"content":"        return time12;","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime13() {","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"Alvozyn"},"content":"        return time13;","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime14() {","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"Alvozyn"},"content":"        return time14;","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime15() {","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"Alvozyn"},"content":"        return time15;","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime16() {","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"Alvozyn"},"content":"        return time16;","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime17() {","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"Alvozyn"},"content":"        return time17;","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime18() {","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"Alvozyn"},"content":"        return time18;","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime19() {","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"Alvozyn"},"content":"        return time19;","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime20() {","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"Alvozyn"},"content":"        return time20;","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime21() {","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"Alvozyn"},"content":"        return time21;","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime22() {","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"Alvozyn"},"content":"        return time22;","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"Alvozyn"},"content":"    public Status getTime23() {","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"Alvozyn"},"content":"        return time23;","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Alvozyn":168,"edures888":1}},{"path":"src/main/java/seedu/address/model/time/ScheduleWeek.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.model.time;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static java.util.Arrays.asList;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":" * Class to generate the entire week of schedule","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"public class ScheduleWeek {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    private static final int DAYS_IN_A_WEEK \u003d 7;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    private static final ObservableList\u003cScheduleDay\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    private ArrayList\u003cArrayList\u003cInteger\u003e\u003e timetable;","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"     * Constructor for ScheduleWeek where cells will be filled with empty cells when first loaded","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    public ScheduleWeek() {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"        internalList.clear();","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"        ArrayList\u003cStatus\u003e emptyCell \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"        for (int i \u003d 0; i \u003c 24; i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"            emptyCell.add(Status.EMPTY);","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"        internalList.add(new ScheduleDay(\"Monday\", emptyCell));","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"        internalList.add(new ScheduleDay(\"Tuesday\", emptyCell));","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"        internalList.add(new ScheduleDay(\"Wednesday\", emptyCell));","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"        internalList.add(new ScheduleDay(\"Thursday\", emptyCell));","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"        internalList.add(new ScheduleDay(\"Friday\", emptyCell));","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"        internalList.add(new ScheduleDay(\"Saturday\", emptyCell));","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"        internalList.add(new ScheduleDay(\"Sunday\", emptyCell));","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"    public ArrayList\u003cArrayList\u003cInteger\u003e\u003e getTimetable() {","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        return timetable;","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"    public void setInternalList(ArrayList\u003cArrayList\u003cInteger\u003e\u003e timetable, DayOfWeek startDay) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"        internalList.clear();","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        this.timetable \u003d timetable;","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"        ArrayList\u003cString\u003e allDays \u003d new ArrayList\u003c\u003e(asList(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\",","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"                \"Saturday\", \"Sunday\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"        int zeroBasedStartIndex \u003d startDay.getValue() - 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"        for (int i \u003d 0; i \u003c DAYS_IN_A_WEEK; i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"            int currentDayIndex \u003d (zeroBasedStartIndex + i) % DAYS_IN_A_WEEK;","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"            ScheduleDay scheduleDay \u003d new ScheduleDay(allDays.get(currentDayIndex),","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"                    populateData(timetable.get(currentDayIndex)));","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"            internalList.add(scheduleDay);","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"     * Generating data for a single day. If the index matches with the index given in freeTimeSlots, this means that","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"     * the timeslot is marked as free. Otherwise, it can be assumed the timeslot is marked as busy","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"     * @param freeTimeSlots all index in which the status is free","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"     * @return a populated array of data in a single day","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"    public ArrayList\u003cStatus\u003e populateData(ArrayList\u003cInteger\u003e freeTimeSlots) {","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"        Set\u003cInteger\u003e freeSlots \u003d new HashSet\u003c\u003e(freeTimeSlots);","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"        ArrayList\u003cStatus\u003e timeSlot \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"        for (int i \u003d 0; i \u003c 24; i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"            if (freeSlots.contains(i)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"                timeSlot.add(Status.FREE);","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"                timeSlot.add(Status.BUSY);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"        return timeSlot;","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"    public ObservableList\u003cScheduleDay\u003e getInternalList() {","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"        return internalList;","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-04-10"},{"lineNumber":89,"author":{"gitId":"edures888"},"content":"     * Returns true if both ScheduleWeek have the same occupancy slots in the internal list.","lastModifiedDate":"2023-04-10"},{"lineNumber":90,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-04-10"},{"lineNumber":91,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-04-10"},{"lineNumber":92,"author":{"gitId":"edures888"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-04-10"},{"lineNumber":93,"author":{"gitId":"edures888"},"content":"        if (!(other instanceof ScheduleWeek)) {","lastModifiedDate":"2023-04-10"},{"lineNumber":94,"author":{"gitId":"edures888"},"content":"            return false;","lastModifiedDate":"2023-04-10"},{"lineNumber":95,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":96,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":97,"author":{"gitId":"edures888"},"content":"        ScheduleWeek otherSchedule \u003d (ScheduleWeek) other;","lastModifiedDate":"2023-04-10"},{"lineNumber":98,"author":{"gitId":"edures888"},"content":"        return timetable.equals(otherSchedule.getTimetable());","lastModifiedDate":"2023-04-10"},{"lineNumber":99,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":100,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":101,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Alvozyn":69,"edures888":32}},{"path":"src/main/java/seedu/address/model/time/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.model.time;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":" * An enum to represent the status of a timeslot","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"public enum Status {","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"    EMPTY, FREE, BUSY","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Alvozyn":7,"edures888":1}},{"path":"src/main/java/seedu/address/model/time/TimeMask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.model.time;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static java.time.temporal.ChronoUnit.DAYS;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEventList;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":" * Class to generate the bit masking for the events.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"public class TimeMask {","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    // One day 24 hours -\u003e 24 bits","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    // If 0.5 hour granularity is desired, required to split into two separate ints","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    private static final int WINDOW_RANGE \u003d 7;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    private static final int SLOTS_PER_DAY \u003d 24;","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    private static final int LAST_HOUR_INDEX \u003d 23;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"    private static final int LAST_DAY_INDEX \u003d 6;","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    // 0\u0027s represent free slot","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    private final int[] weeklyOccupancy;","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    public TimeMask() {","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        weeklyOccupancy \u003d new int[]{0, 0, 0, 0, 0, 0, 0};","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"    public TimeMask(int[] weeklyOccupancy) {","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"        this.weeklyOccupancy \u003d weeklyOccupancy;","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    public int getDayMask(DayOfWeek dayOfWeek) {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        return weeklyOccupancy[getZeroBasedDayIndex(dayOfWeek)];","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"    private void mergeSingleDay(DayOfWeek dayOfWeek, int dayOccupancy) {","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        int dayIndex \u003d getZeroBasedDayIndex(dayOfWeek);","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        weeklyOccupancy[dayIndex] \u003d weeklyOccupancy[dayIndex] | dayOccupancy;","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"gmengqi"},"content":"     * Compare the base time mask with a time mask and update accordingly.","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"gmengqi"},"content":"     * @param other TimeMask object","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"    public void mergeMask(TimeMask other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"            throw new RuntimeException(\"Empty time mask!\");","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"        for (int i \u003d 0; i \u003c WINDOW_RANGE; i++) {","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"            mergeSingleDay(getDayFromZeroBasedIndex(i), other.weeklyOccupancy[i]);","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"gmengqi"},"content":"     * Compare the time mask with the isolated events and update the time mask.","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"gmengqi"},"content":"     * @param isolatedEventList IsolatedEventList","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"    public void mergeIsolatedEvents(IsolatedEventList isolatedEventList, LocalDate startDate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"        LocalDate dateLimit \u003d startDate.plusDays(WINDOW_RANGE - 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"gmengqi"},"content":"        for (int i \u003d 0; i \u003c isolatedEventList.getSize(); i++) {","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"gmengqi"},"content":"            IsolatedEvent event \u003d isolatedEventList.getIsolatedEvent(i);","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"            // Stop traversing if event occurs further than a week from the start date","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"            if (event.getStartDate().toLocalDate().isAfter(dateLimit)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"                return;","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"gmengqi"},"content":"            if (startDate.isAfter(event.getEndDate().toLocalDate())) {","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"gmengqi"},"content":"                continue;","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"gmengqi"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"gmengqi"},"content":"            LocalDate start \u003d event.getStartDate().toLocalDate();","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"gmengqi"},"content":"            LocalDate end \u003d event.getEndDate().toLocalDate();","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"edures888"},"content":"            int startIndex \u003d getZeroBasedDayIndex(event.getStartDate().getDayOfWeek());","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"gmengqi"},"content":"            int startTime \u003d event.getStartDate().getHour();","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"edures888"},"content":"            // Shouldn\u0027t occupy the next slot","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"edures888"},"content":"            int endTime \u003d event.getEndDate().getHour() - 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"edures888"},"content":"            if (endTime \u003c 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"edures888"},"content":"                endTime \u003d LAST_HOUR_INDEX;","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"gmengqi"},"content":"                end \u003d end.minusDays(1);","lastModifiedDate":"2023-04-09"},{"lineNumber":87,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"gmengqi"},"content":"            if (!start.isEqual(end)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":90,"author":{"gitId":"gmengqi"},"content":"                // check if end date after date limit","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"gmengqi"},"content":"                boolean isAfterDateLimit \u003d isEndDateAfterDateLimit(end, dateLimit);","lastModifiedDate":"2023-04-09"},{"lineNumber":92,"author":{"gitId":"gmengqi"},"content":"                // get the days between the start and end/ start and date limit","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"gmengqi"},"content":"                long daysBetween \u003d getDaysBetween(start, end, dateLimit, startDate);","lastModifiedDate":"2023-04-09"},{"lineNumber":94,"author":{"gitId":"gmengqi"},"content":"                // if end date after date limit, need to change end time of event","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"gmengqi"},"content":"                int modifiedEndTime \u003d getUpdatedEndTime(endTime, isAfterDateLimit);","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"gmengqi"},"content":"                // if user indicated a start date that is after the event start date, need to change the start index","lastModifiedDate":"2023-04-09"},{"lineNumber":97,"author":{"gitId":"gmengqi"},"content":"                int modifiedStartIndex \u003d start.isBefore(startDate) ? startDate.getDayOfWeek().getValue() - 1","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"gmengqi"},"content":"                        : startIndex;","lastModifiedDate":"2023-04-09"},{"lineNumber":99,"author":{"gitId":"gmengqi"},"content":"                occupyMultipleDay(modifiedStartIndex, daysBetween, startTime, modifiedEndTime,","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"gmengqi"},"content":"                        startIndex \u003d\u003d modifiedStartIndex);","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"gmengqi"},"content":"            } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"gmengqi"},"content":"                occupySlots(startIndex, startTime, endTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"gmengqi"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"gmengqi"},"content":"    private int getUpdatedEndTime(int endTime, boolean isAfterDateLimit) {","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"gmengqi"},"content":"        if (isAfterDateLimit) {","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"gmengqi"},"content":"            return LAST_HOUR_INDEX;","lastModifiedDate":"2023-04-09"},{"lineNumber":110,"author":{"gitId":"gmengqi"},"content":"        } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"gmengqi"},"content":"            return endTime;","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"gmengqi"},"content":"    private boolean isEndDateAfterDateLimit(LocalDate endDate, LocalDate dateLimit) {","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"gmengqi"},"content":"        return endDate.isAfter(dateLimit);","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"gmengqi"},"content":"    private long getDaysBetween(LocalDate start, LocalDate end, LocalDate dateLimit, LocalDate startDate) {","lastModifiedDate":"2023-04-09"},{"lineNumber":120,"author":{"gitId":"gmengqi"},"content":"        long daysBetween;","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":122,"author":{"gitId":"gmengqi"},"content":"        if (start.isBefore(startDate)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":123,"author":{"gitId":"gmengqi"},"content":"            start \u003d startDate;","lastModifiedDate":"2023-04-09"},{"lineNumber":124,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":125,"author":{"gitId":"gmengqi"},"content":"        if (end.isAfter(dateLimit)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"gmengqi"},"content":"            daysBetween \u003d DAYS.between(start, dateLimit);","lastModifiedDate":"2023-04-08"},{"lineNumber":127,"author":{"gitId":"gmengqi"},"content":"        } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"gmengqi"},"content":"            daysBetween \u003d DAYS.between(start, end);","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"gmengqi"},"content":"        return daysBetween;","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"edures888"},"content":"    private void freeSlots(int dayIndex, int startHourIndex, int endHourIndex) {","lastModifiedDate":"2023-03-25"},{"lineNumber":134,"author":{"gitId":"edures888"},"content":"        checkValidDayIndex(dayIndex);","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"edures888"},"content":"        checkValidHourIndexes(startHourIndex, endHourIndex);","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"edures888"},"content":"        int startBits \u003d Integer.parseInt(\"1\".repeat(endHourIndex - startHourIndex + 1), 2);","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"edures888"},"content":"        int mask \u003d ~(startBits \u003c\u003c startHourIndex);","lastModifiedDate":"2023-03-25"},{"lineNumber":139,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":140,"author":{"gitId":"edures888"},"content":"        weeklyOccupancy[dayIndex] \u003d weeklyOccupancy[dayIndex] \u0026 mask;","lastModifiedDate":"2023-03-25"},{"lineNumber":141,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":142,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":143,"author":{"gitId":"edures888"},"content":"    private void occupySlots(int dayIndex, int startHourIndex, int endHourIndex) {","lastModifiedDate":"2023-03-25"},{"lineNumber":144,"author":{"gitId":"edures888"},"content":"        checkValidDayIndex(dayIndex);","lastModifiedDate":"2023-03-25"},{"lineNumber":145,"author":{"gitId":"edures888"},"content":"        checkValidHourIndexes(startHourIndex, endHourIndex);","lastModifiedDate":"2023-03-25"},{"lineNumber":146,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":147,"author":{"gitId":"edures888"},"content":"        int startBits \u003d Integer.parseInt(\"1\".repeat(endHourIndex - startHourIndex + 1), 2);","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"edures888"},"content":"        int mask \u003d startBits \u003c\u003c startHourIndex;","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"edures888"},"content":"        weeklyOccupancy[dayIndex] \u003d weeklyOccupancy[dayIndex] | mask;","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":151,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":152,"author":{"gitId":"gmengqi"},"content":"    private void occupyMultipleDay(int startDay, long diff, int startHour, int endHour, boolean isEqualStartIndex) {","lastModifiedDate":"2023-04-09"},{"lineNumber":153,"author":{"gitId":"gmengqi"},"content":"        int curr \u003d startDay;","lastModifiedDate":"2023-04-08"},{"lineNumber":154,"author":{"gitId":"gmengqi"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-04-08"},{"lineNumber":155,"author":{"gitId":"gmengqi"},"content":"        int startBits;","lastModifiedDate":"2023-04-09"},{"lineNumber":156,"author":{"gitId":"gmengqi"},"content":"        int mask;","lastModifiedDate":"2023-04-09"},{"lineNumber":157,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":158,"author":{"gitId":"gmengqi"},"content":"        // only do this if it is starDay \u003d event start date","lastModifiedDate":"2023-04-09"},{"lineNumber":159,"author":{"gitId":"gmengqi"},"content":"        if (isEqualStartIndex) {","lastModifiedDate":"2023-04-09"},{"lineNumber":160,"author":{"gitId":"gmengqi"},"content":"            // find free time slots for the start date of the event","lastModifiedDate":"2023-04-08"},{"lineNumber":161,"author":{"gitId":"gmengqi"},"content":"            startBits \u003d Integer.parseInt(\"1\".repeat(23 - startHour + 1), 2);","lastModifiedDate":"2023-04-09"},{"lineNumber":162,"author":{"gitId":"gmengqi"},"content":"            mask \u003d startBits \u003c\u003c startHour;","lastModifiedDate":"2023-04-09"},{"lineNumber":163,"author":{"gitId":"gmengqi"},"content":"            weeklyOccupancy[curr] \u003d weeklyOccupancy[curr] | mask;","lastModifiedDate":"2023-04-08"},{"lineNumber":164,"author":{"gitId":"gmengqi"},"content":"            curr \u003d curr \u003d\u003d LAST_DAY_INDEX ? 0 : curr + 1;","lastModifiedDate":"2023-04-09"},{"lineNumber":165,"author":{"gitId":"gmengqi"},"content":"        } else {","lastModifiedDate":"2023-04-09"},{"lineNumber":166,"author":{"gitId":"gmengqi"},"content":"            counter \u003d 0;","lastModifiedDate":"2023-04-09"},{"lineNumber":167,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":168,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":169,"author":{"gitId":"gmengqi"},"content":"        // filled the in between days as busy for every time slots","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"gmengqi"},"content":"        while (counter \u003c diff) {","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"gmengqi"},"content":"            startBits \u003d Integer.parseInt(\"1\".repeat(24), 2);","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"gmengqi"},"content":"            weeklyOccupancy[curr] \u003d weeklyOccupancy[curr] | startBits;","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"gmengqi"},"content":"            curr \u003d curr \u003d\u003d LAST_DAY_INDEX ? 0 : curr + 1;","lastModifiedDate":"2023-04-09"},{"lineNumber":174,"author":{"gitId":"gmengqi"},"content":"            counter \u003d counter + 1;","lastModifiedDate":"2023-04-08"},{"lineNumber":175,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":176,"author":{"gitId":"gmengqi"},"content":"        // find free time slots for the end date of the event","lastModifiedDate":"2023-04-08"},{"lineNumber":177,"author":{"gitId":"gmengqi"},"content":"        startBits \u003d Integer.parseInt(\"1\".repeat(endHour + 1), 2);","lastModifiedDate":"2023-04-08"},{"lineNumber":178,"author":{"gitId":"gmengqi"},"content":"        weeklyOccupancy[curr] \u003d weeklyOccupancy[curr] | startBits;","lastModifiedDate":"2023-04-08"},{"lineNumber":179,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":180,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":181,"author":{"gitId":"edures888"},"content":"    private void checkValidDayIndex(int dayIndex) {","lastModifiedDate":"2023-03-25"},{"lineNumber":182,"author":{"gitId":"edures888"},"content":"        if (dayIndex \u003c 0 || dayIndex \u003e WINDOW_RANGE) {","lastModifiedDate":"2023-03-25"},{"lineNumber":183,"author":{"gitId":"edures888"},"content":"            // TODO: refactor","lastModifiedDate":"2023-03-25"},{"lineNumber":184,"author":{"gitId":"edures888"},"content":"            throw new RuntimeException(\"Invalid day index!\");","lastModifiedDate":"2023-03-25"},{"lineNumber":185,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":186,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":187,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":188,"author":{"gitId":"edures888"},"content":"    private void checkValidHourIndexes(int ...hourIndexes) {","lastModifiedDate":"2023-03-25"},{"lineNumber":189,"author":{"gitId":"edures888"},"content":"        for (int hour : hourIndexes) {","lastModifiedDate":"2023-03-25"},{"lineNumber":190,"author":{"gitId":"edures888"},"content":"            if (hour \u003c 0 || hour \u003e 24) {","lastModifiedDate":"2023-03-25"},{"lineNumber":191,"author":{"gitId":"edures888"},"content":"                throw new RuntimeException(\"Invalid hour index!\");","lastModifiedDate":"2023-03-25"},{"lineNumber":192,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":193,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":194,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"gmengqi"},"content":"     * Update the bits in the TimeMask object according to the recurring event.","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"gmengqi"},"content":"     * @param recurringEvent RecurringEvent","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"gmengqi"},"content":"     * @param toOccupy boolean","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"edures888"},"content":"    public void modifyOccupancy(RecurringEvent recurringEvent, boolean toOccupy) {","lastModifiedDate":"2023-03-25"},{"lineNumber":202,"author":{"gitId":"edures888"},"content":"        int dayIndex \u003d getZeroBasedDayIndex(recurringEvent.getDayOfWeek());","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"edures888"},"content":"        int startHourIndex \u003d recurringEvent.getStartTime().getHour();","lastModifiedDate":"2023-03-25"},{"lineNumber":204,"author":{"gitId":"edures888"},"content":"        // Shouldn\u0027t occupy the next slot","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"edures888"},"content":"        int endHourIndex \u003d recurringEvent.getEndTime().getHour() - 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"edures888"},"content":"        if (endHourIndex \u003c 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"edures888"},"content":"            endHourIndex \u003d LAST_HOUR_INDEX;","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"edures888"},"content":"        if (toOccupy) {","lastModifiedDate":"2023-03-25"},{"lineNumber":212,"author":{"gitId":"edures888"},"content":"            occupySlots(dayIndex, startHourIndex, endHourIndex);","lastModifiedDate":"2023-03-25"},{"lineNumber":213,"author":{"gitId":"edures888"},"content":"        } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":214,"author":{"gitId":"edures888"},"content":"            freeSlots(dayIndex, startHourIndex, endHourIndex);","lastModifiedDate":"2023-03-25"},{"lineNumber":215,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":216,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":217,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":218,"author":{"gitId":"edures888"},"content":"    public static ArrayList\u003cArrayList\u003cInteger\u003e\u003e getTimeSlotIndexes(TimeMask mask) {","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"edures888"},"content":"        ArrayList\u003cArrayList\u003cInteger\u003e\u003e twoDimensionalSlotList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"edures888"},"content":"        for (DayOfWeek day : DayOfWeek.values()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"edures888"},"content":"            int dayMask \u003d mask.getDayMask(day);","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"edures888"},"content":"            ArrayList\u003cInteger\u003e daySlots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"edures888"},"content":"            int slots \u003d 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":224,"author":{"gitId":"edures888"},"content":"            while (slots \u003c SLOTS_PER_DAY) {","lastModifiedDate":"2023-03-25"},{"lineNumber":225,"author":{"gitId":"edures888"},"content":"                if (dayMask % 2 \u003d\u003d 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"edures888"},"content":"                    daySlots.add(slots);","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"edures888"},"content":"                }","lastModifiedDate":"2023-03-25"},{"lineNumber":228,"author":{"gitId":"edures888"},"content":"                dayMask \u003d dayMask \u003e\u003e 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"edures888"},"content":"                slots++;","lastModifiedDate":"2023-03-25"},{"lineNumber":230,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":231,"author":{"gitId":"edures888"},"content":"            twoDimensionalSlotList.add(daySlots);","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"edures888"},"content":"        return twoDimensionalSlotList;","lastModifiedDate":"2023-03-30"},{"lineNumber":234,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":235,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"edures888"},"content":"    private int getZeroBasedDayIndex(DayOfWeek day) {","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"edures888"},"content":"        return day.getValue() - 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":240,"author":{"gitId":"edures888"},"content":"    private DayOfWeek getDayFromZeroBasedIndex(int dayIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"edures888"},"content":"        return DayOfWeek.of(dayIndex + 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":242,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":243,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":244,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"gmengqi":108,"edures888":136}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.IsolatedEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.RecurringEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"                getTagSet(\"Borrowed 10 dollars\"),","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"                getGroupSet(\"CS2103\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"                    new IsolatedEventList(),","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"                    new RecurringEventList()), // groups added here will need to be added to address book","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"                getTagSet(\"Met at school event\", \"Friends with Bob\"),","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"                getGroupSet(), new IsolatedEventList(), new RecurringEventList()),","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"                getTagSet(),","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"                getGroupSet(\"CS2101\"), new IsolatedEventList(), new RecurringEventList()),","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"                getTagSet(),","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"                getGroupSet(), new IsolatedEventList(), new RecurringEventList()),","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"                getTagSet(),","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"                getGroupSet(), new IsolatedEventList(), new RecurringEventList()),","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"                getTagSet(),","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"                getGroupSet(), new IsolatedEventList(), new RecurringEventList())","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"    public static Group[] getSampleGroups() {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"        return new Group[] {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"            new Group(\"CS2101\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"            new Group(\"CS2103\")","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"        // groups will be included in samplePersons but not added to list of groups in address book","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"        for (Group sampleGroup : getSampleGroups()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"            sampleAb.addGroup(sampleGroup);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"lyndonlim27"},"content":"     * Returns a groups set containing the list of strings given.","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"lyndonlim27"},"content":"    public static Set\u003cGroup\u003e getGroupSet(String... strings) {","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"lyndonlim27"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"lyndonlim27"},"content":"                .map(Group::new)","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"lyndonlim27"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"edures888":7,"lyndonlim27":17,"-":57,"clydelhui":10}},{"path":"src/main/java/seedu/address/storage/ExportStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":" * Represents a storage for an exported person","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"public interface ExportStorage {","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"     * Returns the file path of the export data file.","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"    Path getExportFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"     * Exports {@code Person}","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"     * @param personToExport cannot be null","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"     * @throws IOException if there was any problem creating the file.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"    void exportPerson(Person personToExport) throws IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"     * @see #exportPerson(Person)","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    void exportPerson(Person personToExport, Path filePath) throws IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"lyndonlim27":32}},{"path":"src/main/java/seedu/address/storage/Importer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import seedu.address.storage.exceptions.JsonNotFoundException;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":" * A class to perform importing of AddressBook data.","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"public interface Importer {","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"    ReadOnlyAddressBook readData() throws DataConversionException, JsonNotFoundException;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"clydelhui":12}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":" * Jackson-friendly version of {@link Group}.","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"public class JsonAdaptedGroup {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"    private final String groupName;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"     * Constructs a {@code JsonAdaptedGroup} with the given {@code groupName}.","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"    public JsonAdaptedGroup(String groupName) {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"     * Converts a given {@code Group} into this class for Jackson use.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"    public JsonAdaptedGroup(Group source) {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"        groupName \u003d source.groupName;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"    @JsonValue","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"    public String getGroupName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"        return groupName;","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"     * Converts this Jackson-friendly adapted group object into the model\u0027s {@code Group} object.","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted group.","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"    public Group toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"        if (!Group.isValidGroupName(groupName)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"            throw new IllegalValueException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"        return new Group(groupName);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"lyndonlim27":43,"clydelhui":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedIsolatedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":" * Jackson-friendly version of {@link IsolatedEvent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"public class JsonAdaptedIsolatedEvent {","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"    private final String eventName;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"    private final LocalDateTime startDate;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"    private final LocalDateTime endDate;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"     * Costructs a {@code JsonAdaptedIsolatedEvent} with the given details.","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"    public JsonAdaptedIsolatedEvent(@JsonProperty(\"eventName\") String eventName,","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"                                    @JsonProperty(\"startDate\") LocalDateTime startDate,","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"                                    @JsonProperty(\"endDate\") LocalDateTime endDate) {","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"     * Converts a given {@code IsolatedEvent} into this class for Jackson use.","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"    public JsonAdaptedIsolatedEvent(IsolatedEvent isolatedEvent) {","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"        this.eventName \u003d isolatedEvent.getEventName();","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"        this.startDate \u003d isolatedEvent.getStartDate();","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"        this.endDate \u003d isolatedEvent.getEndDate();","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"    public IsolatedEvent toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"        return new IsolatedEvent(eventName, startDate, endDate);","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"clydelhui":42}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.IsolatedEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.RecurringEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.exceptions.EventConflictException;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"    private final List\u003cJsonAdaptedGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"    private final List\u003cJsonAdaptedIsolatedEvent\u003e isolatedEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"    private final List\u003cJsonAdaptedRecurringEvent\u003e recurringEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"            @JsonProperty(\"groups\") List\u003cJsonAdaptedGroup\u003e groups,","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"            @JsonProperty(\"isolatedEvents\") List\u003cJsonAdaptedIsolatedEvent\u003e isolatedEvents,","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"            @JsonProperty(\"recurringEvents\") List\u003cJsonAdaptedRecurringEvent\u003e recurringEvents) {","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"        if (groups !\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"            this.groups.addAll(groups);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"        if (isolatedEvents !\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"            this.isolatedEvents.addAll(isolatedEvents);","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"        if (recurringEvents !\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"            this.recurringEvents.addAll(recurringEvents);","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"lyndonlim27"},"content":"        groups.addAll(source.getGroups().stream()","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"lyndonlim27"},"content":"                .map(JsonAdaptedGroup::new)","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"lyndonlim27"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"clydelhui"},"content":"        isolatedEvents.addAll(source.getIsolatedEventList()","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"clydelhui"},"content":"                .getList()","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"clydelhui"},"content":"                .stream()","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"clydelhui"},"content":"                .map(JsonAdaptedIsolatedEvent::new)","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"clydelhui"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"clydelhui"},"content":"        recurringEvents.addAll(source.getRecurringEventList()","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"clydelhui"},"content":"                .getList()","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"clydelhui"},"content":"                .stream()","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"clydelhui"},"content":"                .map(JsonAdaptedRecurringEvent::new)","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"clydelhui"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"lyndonlim27"},"content":"        final List\u003cGroup\u003e personGroups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"clydelhui"},"content":"        final IsolatedEventList modelIsolatedEventList \u003d new IsolatedEventList();","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"clydelhui"},"content":"        final RecurringEventList modelRecurringEventList \u003d new RecurringEventList();","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"lyndonlim27"},"content":"        for (JsonAdaptedGroup group : groups) {","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"lyndonlim27"},"content":"            personGroups.add(group.toModelType());","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"clydelhui"},"content":"        for (JsonAdaptedIsolatedEvent isolatedEvent : isolatedEvents) {","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"clydelhui"},"content":"            IsolatedEvent modelIsolatedEvent \u003d isolatedEvent.toModelType();","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"clydelhui"},"content":"            try {","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"clydelhui"},"content":"                modelIsolatedEvent.checkValidStartEnd();","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"clydelhui"},"content":"                modelIsolatedEventList.checkClashingIsolatedEvent(modelIsolatedEvent.getStartDate(),","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"clydelhui"},"content":"                        modelIsolatedEvent.getEndDate());","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"clydelhui"},"content":"                modelIsolatedEvent.checkConflictsRecurringEventList(modelRecurringEventList);","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"clydelhui"},"content":"            } catch (EventConflictException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"clydelhui"},"content":"                throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":127,"author":{"gitId":"clydelhui"},"content":"            try {","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"clydelhui"},"content":"                modelIsolatedEvent.checkNotEnded();","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"clydelhui"},"content":"            } catch (EventConflictException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"clydelhui"},"content":"                continue;","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"clydelhui"},"content":"            modelIsolatedEventList.insert(isolatedEvent.toModelType());","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"clydelhui"},"content":"        for (JsonAdaptedRecurringEvent recurringEvent : recurringEvents) {","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"clydelhui"},"content":"            RecurringEvent modelRecurringEvent \u003d recurringEvent.toModelType();","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"clydelhui"},"content":"            try {","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"clydelhui"},"content":"                modelRecurringEvent.checkPeriod();","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"clydelhui"},"content":"                modelRecurringEvent.listConflictedEventWithIsolated(modelIsolatedEventList);","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"clydelhui"},"content":"            } catch (EventConflictException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":141,"author":{"gitId":"clydelhui"},"content":"                throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2023-04-07"},{"lineNumber":142,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":143,"author":{"gitId":"clydelhui"},"content":"            if (modelRecurringEventList.checkClashingRecurringEvent(modelRecurringEvent) !\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"clydelhui"},"content":"                throw new IllegalValueException(RecurringEvent.MESSAGE_CONSTRAINTS_CLASH);","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"clydelhui"},"content":"            modelRecurringEventList.insert(recurringEvent.toModelType());","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"lyndonlim27"},"content":"        final Set\u003cGroup\u003e modelGroups \u003d new HashSet\u003c\u003e(personGroups);","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":184,"author":{"gitId":"clydelhui"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelGroups,","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"clydelhui"},"content":"                modelIsolatedEventList, modelRecurringEventList);","lastModifiedDate":"2023-04-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lyndonlim27":14,"-":107,"clydelhui":67}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedRecurringEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":" * Jackson-friendly version of {@link RecurringEvent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"public class JsonAdaptedRecurringEvent {","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"    private final String eventName;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"    private final DayOfWeek dayOfWeek;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"     * Costructs a {@code JsonAdaptedRecurringEvent} with the given details.","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"    public JsonAdaptedRecurringEvent(@JsonProperty(\"eventName\") String eventName,","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"                                    @JsonProperty(\"dayOfWeek\") DayOfWeek dayOfWeek,","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"                                    @JsonProperty(\"startDate\") LocalTime startTime,","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"                                    @JsonProperty(\"endDate\") LocalTime endTime) {","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"        this.dayOfWeek \u003d dayOfWeek;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"     * Converts a given {@code RecurringEvent} into this class for Jackson use.","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"    public JsonAdaptedRecurringEvent(RecurringEvent recurringEvent) {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"        this.eventName \u003d recurringEvent.getEventName();","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"        this.dayOfWeek \u003d recurringEvent.getDayOfWeek();","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"        this.startTime \u003d recurringEvent.getStartTime();","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"        this.endTime \u003d recurringEvent.getEndTime();","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"    public RecurringEvent toModelType() {","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"        return new RecurringEvent(eventName, dayOfWeek, startTime, endTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"clydelhui":47}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"     * Constructs a {@code JsonAddressBookStorage} with the given {@code filePath}.","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lyndonlim27":3,"-":80}},{"path":"src/main/java/seedu/address/storage/JsonExportStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":" * A class to write Export data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"public class JsonExportStorage implements ExportStorage {","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"     * Constructs a {@code JsonExportStorage} with the given {@code filePath}.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"    public JsonExportStorage(Path filePath) {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"    public Path getFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"        return filePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"    public Path getExportFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"        return filePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"    public void exportPerson(Person personToExport) throws IOException {","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"        exportPerson(personToExport, filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"     * Similar to {@link #exportPerson(Person)}.","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"     * @param exportFilePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"    public void exportPerson(Person personToExport, Path exportFilePath) throws IOException {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(personToExport);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"        requireNonNull(exportFilePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"        FileUtil.createIfMissing(exportFilePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"        AddressBook exportAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"        exportAddressBook.addPerson(personToExport);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(exportAddressBook), exportFilePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"lyndonlim27":55}},{"path":"src/main/java/seedu/address/storage/JsonImporter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"import seedu.address.storage.exceptions.JsonNotFoundException;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":" * Implementation of an importer that reads AddressBook data from a given file.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"public class JsonImporter implements Importer {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonImporter.class);","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"    public JsonImporter(Path filePath) {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"     * Gets the AddressBook data from the given file.","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"     * @return An {@code Optional} containing a {@code ReadOnlyAddressBook}.","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"     * @throws DataConversionException When there are illegal values in the stored data.","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"    public ReadOnlyAddressBook readData() throws DataConversionException, JsonNotFoundException {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"        if (jsonAddressBook.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"            throw new JsonNotFoundException(\"No file found!\");","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"            return jsonAddressBook.get().toModelType();","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"clydelhui":49}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"@JsonRootName(value \u003d \"wheregottime\")","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"Groups list contains duplicate group(s).\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"    public static final String MESSAGE_INCONSISTENT_GROUP \u003d \"Groups list is inconsistent with persons.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    private final List\u003cJsonAdaptedGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given groups.","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"                                       @JsonProperty(\"groups\") List\u003cJsonAdaptedGroup\u003e groups) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        this.groups.addAll(groups);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        groups.addAll(source.getGroupList().stream().map(JsonAdaptedGroup::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"        for (JsonAdaptedGroup jsonAdaptedGroup : groups) {","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"            Group group \u003d jsonAdaptedGroup.toModelType();","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"            if (addressBook.hasGroup(group)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"            addressBook.addGroup(group);","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"clydelhui"},"content":"            for (Group group : person.getGroups()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"clydelhui"},"content":"                if (!addressBook.hasGroup(group)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"clydelhui"},"content":"                    throw new IllegalValueException(MESSAGE_INCONSISTENT_GROUP);","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"edures888":9,"lyndonlim27":1,"-":58,"clydelhui":13}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, ExportStorage {","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    Path getExportFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"    void exportPerson(Person personToExport) throws IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lyndonlim27":8,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"    private ExportStorage exportStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"                          ExportStorage exportStorage) {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"        this.exportStorage \u003d exportStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"    public Path getExportFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"        return exportStorage.getExportFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"lyndonlim27"},"content":"    public void exportPerson(Person personToExport) throws IOException {","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"lyndonlim27"},"content":"        exportPerson(personToExport, exportStorage.getExportFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"lyndonlim27"},"content":"    public void exportPerson(Person personToExport, Path filePath) throws IOException {","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"lyndonlim27"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"lyndonlim27"},"content":"        exportStorage.exportPerson(personToExport, filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lyndonlim27":21,"-":77}},{"path":"src/main/java/seedu/address/storage/exceptions/JsonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.storage.exceptions;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":" * Represents an exception that occurs when an AddressBook is unexpectedly empty.","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"public class JsonNotFoundException extends Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"    public JsonNotFoundException(String message) {","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"        super(message);","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"clydelhui":10}},{"path":"src/main/java/seedu/address/ui/GroupCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":" * An UI component that displays information of a {@code Group}.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"public class GroupCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    private static final String FXML \u003d \"GroupListCard.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    public final Group group;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    private Label name;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    private Label id;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     * Creates a {@code GroupCode} with the given {@code Group} and index to display.","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    public GroupCard(Group group, int displayedIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        super(FXML);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        this.group \u003d group;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        name.setText(group.getName());","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        if (!(other instanceof GroupCard)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"        // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        GroupCard card \u003d (GroupCard) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"                \u0026\u0026 group.equals(card.group);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"edures888":51}},{"path":"src/main/java/seedu/address/ui/GroupListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":" * Panel containing the list of groups.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"public class GroupListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    private static final String FXML \u003d \"GroupListPanel.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GroupListPanel.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    private ListView\u003cGroup\u003e groupListView;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     * Creates a {@code GroupListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    public GroupListPanel(ObservableList\u003cGroup\u003e groupList) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        super(FXML);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        groupListView.setItems(groupList);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        groupListView.setCellFactory(listView -\u003e new GroupListViewCell());","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Group} using a {@code GroupCard}.","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    class GroupListViewCell extends ListCell\u003cGroup\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        protected void updateItem(Group group, boolean empty) {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"            super.updateItem(group, empty);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"            if (empty || group \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"                setText(null);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"            } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"                setGraphic(new GroupCard(group, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"edures888":49}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-t09-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lyndonlim27":1,"-":100}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    private GroupListPanel groupListPanel;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"    private TimeSlotListPanel timeSlotListPanel;","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"    private WhereGotTimeTable whereGotTimeTable;","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"    private StackPane groupListPanelPlaceholder;","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"    private StackPane whereGotTimePlaceholder;","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"    @FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"    private StackPane timeSlotListPanelPlaceholder;","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"edures888"},"content":"        groupListPanel \u003d new GroupListPanel(logic.getFilteredGroupList());","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"edures888"},"content":"        groupListPanelPlaceholder.getChildren().add(groupListPanel.getRoot());","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"Alvozyn"},"content":"        whereGotTimeTable \u003d new WhereGotTimeTable();","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"Alvozyn"},"content":"        whereGotTimePlaceholder.getChildren().add(whereGotTimeTable.getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"edures888"},"content":"    public GroupListPanel getGroupListPanel() {","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"edures888"},"content":"        return groupListPanel;","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"edures888"},"content":"    public TimeSlotListPanel getTimeSlotListPanel() {","lastModifiedDate":"2023-03-25"},{"lineNumber":194,"author":{"gitId":"edures888"},"content":"        return timeSlotListPanel;","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Alvozyn":8,"edures888":19,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"    private FlowPane groups;","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"    private Label isolatedEventList;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"    private Label recurringEventList;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"                .forEach(tag -\u003e tags.getChildren().add(setLabelMaxWidth(tag.tagName)));","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"        person.getGroups().stream()","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"                .sorted(Comparator.comparing(group -\u003e group.groupName))","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"                .forEach(group -\u003e groups.getChildren().add(setLabelMaxWidth(group.groupName)));","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"        isolatedEventList.setText(person.getIsolatedEventList().toString());","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"        recurringEventList.setText(person.getRecurringEventList().toString());","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"lyndonlim27"},"content":"    private Label setLabelMaxWidth(String name) {","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"lyndonlim27"},"content":"        Label label \u003d new Label(name);","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"lyndonlim27"},"content":"        label.setMaxWidth(182);","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"lyndonlim27"},"content":"        label.setWrapText(true);","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"lyndonlim27"},"content":"        return label;","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lyndonlim27":13,"-":76,"clydelhui":7}},{"path":"src/main/java/seedu/address/ui/TimeSlotCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":" * An UI component that displays free timeslot of a {@code Person}.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"public class TimeSlotCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    private static final String FXML \u003d \"TimeSlotListCard.fxml\";","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    //TODO: Update","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    public final String timeSlot;","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    @FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    private Label timeSlotText;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"     * Creates a {@code TimeSlotCode} with the given {@code TimeSlot} and index to display.","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    public TimeSlotCard(String timeSlot, int displayedIndex) {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        super(FXML);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        this.timeSlot \u003d timeSlot;","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        timeSlotText.setText(timeSlot);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"            return true;","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        if (!(other instanceof TimeSlotCard)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"            return false;","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"        // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"        TimeSlotCard card \u003d (TimeSlotCard) other;","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"        return timeSlotText.getText().equals(card.timeSlotText.getText())","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"                \u0026\u0026 timeSlot.equals(card.timeSlot);","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"gmengqi":3,"edures888":54}},{"path":"src/main/java/seedu/address/ui/TimeSlotListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":" * Panel containing the timetable.","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"public class TimeSlotListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    private static final String FXML \u003d \"TimeSlotListPanel.fxml\";","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TimeSlotListPanel.class);","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    // TODO: Update type accordingly","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    private ListView\u003cString\u003e timeSlotListView;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     * Creates a {@code TimeSlotListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    public TimeSlotListPanel(ObservableList\u003cString\u003e slotList) {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        super(FXML);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        timeSlotListView.setItems(slotList);","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        timeSlotListView.setCellFactory(listView -\u003e new TimeSlotListViewCell());","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    class TimeSlotListViewCell extends ListCell\u003cString\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        protected void updateItem(String timeSlot, boolean empty) {","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"            super.updateItem(timeSlot, empty);","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"            if (empty || timeSlot \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"                setText(null);","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"            } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"                setGraphic(new TimeSlotCard(timeSlot, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"edures888":48}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/clock_32.png\";","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":87,"clydelhui":1}},{"path":"src/main/java/seedu/address/ui/WhereGotTimeTable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.control.TableCell;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import javafx.util.Callback;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"import seedu.address.model.time.ScheduleDay;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"import seedu.address.model.time.ScheduleWeek;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"import seedu.address.model.time.Status;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":" * An UI component that displays information of the FreeTimeSlot","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"public class WhereGotTimeTable extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"    private static final String FXML \u003d \"WhereGotTimeTable.fxml\";","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    private Callback\u003cTableColumn\u003cScheduleDay, Status\u003e, TableCell\u003cScheduleDay, Status\u003e\u003e factory \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"            conditionForColouredCell();","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    private ScheduleWeek scheduleWeek \u003d new ScheduleWeek();","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"    private TableView\u003cScheduleDay\u003e table;","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, String\u003e day;","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time0;","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time1;","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time2;","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time3;","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time4;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time5;","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time6;","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time7;","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time8;","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time9;","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time10;","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time11;","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time12;","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time13;","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time14;","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time15;","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time16;","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time17;","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time18;","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time19;","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time20;","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time21;","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time22;","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Alvozyn"},"content":"    private TableColumn\u003cScheduleDay, Status\u003e time23;","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"Alvozyn"},"content":"    private ArrayList\u003cTableColumn\u003cScheduleDay, Status\u003e\u003e allColumns;","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"    private ArrayList\u003cString\u003e columnNames;","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Alvozyn"},"content":"     * Creates a table with the given {@code ScheduleDay} to display.","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"Alvozyn"},"content":"    public WhereGotTimeTable() {","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"Alvozyn"},"content":"        super(FXML);","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"Alvozyn"},"content":"        allColumns \u003d new ArrayList\u003c\u003e(Arrays.asList(time0, time1, time2, time3, time4, time5, time6, time7, time8,","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"Alvozyn"},"content":"        time9, time10, time11, time12, time13, time14, time15, time16, time17, time18, time19, time20, time21,","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"Alvozyn"},"content":"        time22, time23));","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"Alvozyn"},"content":"        columnNames \u003d new ArrayList\u003c\u003e(Arrays.asList(\"time0\", \"time1\", \"time2\", \"time3\", \"time4\", \"time5\", \"time6\",","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"Alvozyn"},"content":"                \"time7\", \"time8\", \"time9\", \"time10\", \"time11\", \"time12\", \"time13\", \"time14\", \"time15\", \"time16\",","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"Alvozyn"},"content":"                \"time17\", \"time18\", \"time19\", \"time20\", \"time21\", \"time22\", \"time23\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"lyndonlim27"},"content":"        day.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"day\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"Alvozyn"},"content":"        day.setReorderable(false);","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"Alvozyn"},"content":"        day.setResizable(false);","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"Alvozyn"},"content":"        day.setSortable(false);","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"Alvozyn"},"content":"        for (int i \u003d 0; i \u003c allColumns.size(); i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"Alvozyn"},"content":"            allColumns.get(i).setReorderable(false);","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"Alvozyn"},"content":"            allColumns.get(i).setResizable(false);","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"Alvozyn"},"content":"            allColumns.get(i).setSortable(false);","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"Alvozyn"},"content":"        updateTable(scheduleWeek.getInternalList());","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"Alvozyn"},"content":"     * Creates a callback and edits every cells in the columns to have their own unique background colour","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"Alvozyn"},"content":"     * according to the Status.","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"Alvozyn"},"content":"    private Callback\u003cTableColumn\u003cScheduleDay, Status\u003e, TableCell\u003cScheduleDay, Status\u003e\u003e conditionForColouredCell() {","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"lyndonlim27"},"content":"        Callback\u003cTableColumn\u003cScheduleDay, Status\u003e, TableCell\u003cScheduleDay, Status\u003e\u003e factory \u003d new Callback\u003c\u003e() {","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"Alvozyn"},"content":"            @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"Alvozyn"},"content":"            public TableCell\u003cScheduleDay, Status\u003e call(TableColumn\u003cScheduleDay, Status\u003e param) {","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"Alvozyn"},"content":"                return new TableCell\u003cScheduleDay, Status\u003e() {","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"Alvozyn"},"content":"                    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"Alvozyn"},"content":"                    protected void updateItem(Status item, boolean empty) {","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"Alvozyn"},"content":"                        super.updateItem(item, empty);","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"Alvozyn"},"content":"                        if (empty || item \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"Alvozyn"},"content":"                            setText(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"lyndonlim27"},"content":"                            setStyle(\"-fx-text-fill:black;\");","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"Alvozyn"},"content":"                        } else if (item.equals(Status.FREE)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"Alvozyn"},"content":"                            setText(item.toString());","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"lyndonlim27"},"content":"                            setStyle(\"-fx-background-color: #C1E1C1;\" + \"-fx-text-fill:black;\");","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"Alvozyn"},"content":"                        } else if (item.equals(Status.BUSY)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"Alvozyn"},"content":"                            setText(item.toString());","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"lyndonlim27"},"content":"                            setStyle(\"-fx-background-color: #D88C9A;\" + \"-fx-text-fill:black;\");","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"Alvozyn"},"content":"                        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"Alvozyn"},"content":"                            setStyle(\"-fx-background-color: transparent;\");","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"Alvozyn"},"content":"                        }","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"Alvozyn"},"content":"                };","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"Alvozyn"},"content":"        };","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"Alvozyn"},"content":"        return factory;","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"Alvozyn"},"content":"     * Sets the WhereGotTimeTable with a new data","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"Alvozyn"},"content":"     * @param newData","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"Alvozyn"},"content":"    public void updateTable(ObservableList\u003cScheduleDay\u003e newData) {","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"Alvozyn"},"content":"        for (int i \u003d 0; i \u003c allColumns.size(); i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"Alvozyn"},"content":"            TableColumn\u003cScheduleDay, Status\u003e currColumn \u003d allColumns.get(i);","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"lyndonlim27"},"content":"            currColumn.setCellValueFactory(new PropertyValueFactory\u003c\u003e(columnNames.get(i)));","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"Alvozyn"},"content":"            currColumn.setCellFactory(factory);","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"Alvozyn"},"content":"        table.setFixedCellSize(25);","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"Alvozyn"},"content":"        table.prefHeightProperty().bind(Bindings.size(table.getItems()).multiply(table.getFixedCellSize()).add(30));","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"lyndonlim27"},"content":"        table.getColumns().forEach(column -\u003e column.setMinWidth(50));","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"Alvozyn"},"content":"        table.setItems(newData);","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Alvozyn":172,"edures888":3,"lyndonlim27":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#F1E3D3, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"    background-color: #F2D0A9; /* Used in the default.html file */","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":".label-sub-header {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"    -fx-base: #F1E3D3;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"    -fx-control-inner-background: #F1E3D3;","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: #F1E3D3;","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"    -fx-table-cell-border-color: #F2D0A9;","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"    -fx-table-header-border-color: #DDBA93;","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: #DDBA93;","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":77,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"    -fx-background-color: #E8AC66;","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#F1E3D3, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#F1E3D3, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#F1E3D3, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: #F2D0A9;","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: #DDBA93;","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: #E8AC66;","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"lyndonlim27"},"content":"    -fx-border-color: #E8AC66;","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":143,"author":{"gitId":"lyndonlim27"},"content":"     -fx-background-color: derive(#F1E3D3, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"lyndonlim27"},"content":"     -fx-background-color: derive(#F1E3D3, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"lyndonlim27"},"content":"     -fx-border-color: derive(#F1E3D3, 10%);","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"lyndonlim27"},"content":".pane-group-label {","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"lyndonlim27"},"content":"     -fx-background-color: derive(#F1E3D3, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"Alvozyn"},"content":".pane-person-event-label {","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#F1E3D3, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#F1E3D3, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":168,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":177,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#F1E3D3, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"lyndonlim27"},"content":"    -fx-border-color: derive(#F1E3D3, 25%);","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#F1E3D3, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"lyndonlim27"},"content":"    -fx-border-color: derive(#F1E3D3, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":199,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#F1E3D3, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#F1E3D3, 50%);","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#F1E3D3, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":217,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: #F1E3D3;","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"lyndonlim27"},"content":"  -fx-background-color: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":248,"author":{"gitId":"lyndonlim27"},"content":"  -fx-text-fill: #F1E3D3;","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"lyndonlim27"},"content":"    -fx-border-color: black, black;","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: #F1E3D3;","lastModifiedDate":"2023-03-30"},{"lineNumber":262,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: #F1E3D3;","lastModifiedDate":"2023-03-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: #F1E3D3;","lastModifiedDate":"2023-03-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#F1E3D3, 25%);","lastModifiedDate":"2023-03-30"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"lyndonlim27"},"content":"    -fx-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":296,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#E8AC66, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: derive(#F1E3D3, 50%);","lastModifiedDate":"2023-03-30"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"lyndonlim27"},"content":"    -fx-border-color: transparent transparent #DDBA93 transparent","lastModifiedDate":"2023-03-30"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: transparent #F2D0A9 transparent #F2D0A9;","lastModifiedDate":"2023-03-30"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"lyndonlim27"},"content":"    -fx-border-color: #F2D0A9 #F2D0A9 #ffffff #F2D0A9;","lastModifiedDate":"2023-03-30"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: transparent, #F2D0A9, transparent, #F2D0A9;","lastModifiedDate":"2023-03-30"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":363,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: #C0D8D3;","lastModifiedDate":"2023-03-30"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":370,"author":{"gitId":"lyndonlim27"},"content":"#groups {","lastModifiedDate":"2023-03-11"},{"lineNumber":371,"author":{"gitId":"lyndonlim27"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-11"},{"lineNumber":372,"author":{"gitId":"lyndonlim27"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-11"},{"lineNumber":373,"author":{"gitId":"Alvozyn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":374,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":375,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":376,"author":{"gitId":"lyndonlim27"},"content":"#groups .label {","lastModifiedDate":"2023-03-11"},{"lineNumber":377,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":378,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-color: #C4BBDD;","lastModifiedDate":"2023-03-30"},{"lineNumber":379,"author":{"gitId":"lyndonlim27"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-11"},{"lineNumber":380,"author":{"gitId":"lyndonlim27"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-11"},{"lineNumber":381,"author":{"gitId":"lyndonlim27"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-11"},{"lineNumber":382,"author":{"gitId":"lyndonlim27"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-11"},{"lineNumber":383,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":384,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":385,"author":{"gitId":"Alvozyn"},"content":"#table .table-view column-header-background .label {","lastModifiedDate":"2023-03-30"},{"lineNumber":386,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":387,"author":{"gitId":"Alvozyn"},"content":"    -fx-font-size: 9pt;","lastModifiedDate":"2023-03-30"},{"lineNumber":388,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":389,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":390,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":391,"author":{"gitId":"lyndonlim27"},"content":"#day {","lastModifiedDate":"2023-03-30"},{"lineNumber":392,"author":{"gitId":"lyndonlim27"},"content":"-fx-text-fill:black;","lastModifiedDate":"2023-03-30"},{"lineNumber":393,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":394,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":395,"author":{"gitId":"Alvozyn"},"content":"#groupListView {","lastModifiedDate":"2023-03-30"},{"lineNumber":396,"author":{"gitId":"Alvozyn"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":397,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":398,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":399,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Alvozyn":16,"lyndonlim27":84,"-":299}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"    -fx-background: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":".table-row-cell {","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    -fx-background: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":".table-view .column-header-background .label {","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    -fx-font-size: 9pt;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Alvozyn":11,"lyndonlim27":1,"-":18}},{"path":"src/main/resources/view/GroupListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"50\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"edures888":30,"lyndonlim27":1}},{"path":"src/main/resources/view/GroupListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    \u003cListView fx:id\u003d\"groupListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"edures888":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Where Got Time\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"    \u003cImage url\u003d\"@/images/clock_32.png\" /\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"          \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"            \u003cPane prefHeight\u003d\"16.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-group-label\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"                  \u003cLabel styleClass\u003d\"label-sub-header\" text\u003d\"Groups:\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"                        \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"            \u003c/Pane\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"        \u003cVBox fx:id\u003d\"groupList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"lyndonlim27"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"lyndonlim27"},"content":"          \u003cStackPane fx:id\u003d\"groupListPanelPlaceholder\" prefWidth\u003d\"318.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"          \u003cPane prefHeight\u003d\"16.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-group-label\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"                  \u003cLabel styleClass\u003d\"label-sub-header\" text\u003d\"Free Time Slots:\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"                          \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"          \u003c/Pane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"          \u003cStackPane fx:id\u003d\"whereGotTimePlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\" prefWidth\u003d\"700\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Alvozyn":14,"edures888":4,"lyndonlim27":25,"-":50,"clydelhui":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefWidth\u003d\"728.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"    \u003cHBox prefWidth\u003d\"1416.0\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"        \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minWidth\u003d\"182.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" minWidth\u003d\"182.0\" prefWidth\u003d\"269.0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"              \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"              \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"  wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" prefHeight\u003d\"0.0\" prefWidth\u003d\"229.0\" prefWrapLength\u003d\"300.0\" minWidth\u003d\"182.0\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"            \u003cFlowPane fx:id\u003d\"groups\" prefWrapLength\u003d\"300.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\" maxWidth\u003d\"182.0\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" wrapText\u003d\"true\" maxWidth\u003d\"182.0\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" maxWidth\u003d\"182.0\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"        \u003cVBox maxWidth\u003d\"1.7976931348623157E308\"  prefWidth\u003d\"182.0\" minWidth\u003d\"182.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"            \u003cLabel fx:id\u003d\"isolatedEventList\" text\u003d\"\\$isolatedEventList\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"        \u003cVBox maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"182.0\" minWidth\u003d\"182.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"            \u003cLabel fx:id\u003d\"recurringEventList\" text\u003d\"\\$recurringEventList\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"      \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"      \u003cGridPane.margin\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"      \u003c/GridPane.margin\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Alvozyn":2,"lyndonlim27":10,"-":19,"clydelhui":23}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lyndonlim27":1,"-":7}},{"path":"src/main/resources/view/TimeSlotListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefWidth\u003d\"728.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"\u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    \u003cHBox prefWidth\u003d\"1416.0\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"            \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"                    \u003cHBox alignment\u003d\"CENTER_LEFT\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"17.0\" prefWidth\u003d\"269.0\" \u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"                        \u003cLabel fx:id\u003d\"timeSlotText\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"                    \u003c/HBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        \u003cGridPane.margin\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        \u003c/GridPane.margin\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"        \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"edures888":35,"lyndonlim27":2}},{"path":"src/main/resources/view/TimeSlotListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"    \u003cListView fx:id\u003d\"timeSlotListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"edures888":8}},{"path":"src/main/resources/view/WhereGotTimeTable.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"\u003cStackPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"600\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"      \u003cGridPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"          \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"            \u003cTableView fx:id\u003d\"table\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"611.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"                \u003ccolumnResizePolicy\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"                    \u003cTableView fx:constant\u003d\"CONSTRAINED_RESIZE_POLICY\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"                \u003c/columnResizePolicy\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"              \u003ccolumns\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"day\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"Day\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time0\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"0:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time1\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"1:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time2\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"2:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time3\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"3:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time4\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"4:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time5\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"5:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time6\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"6:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time7\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"7:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time8\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"8:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time9\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"9:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time10\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"10:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time11\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"11:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time12\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"12:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time13\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"13:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time14\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"14:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time15\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"15:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time16\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"16:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time17\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"17:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time18\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"18:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time19\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"19:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time20\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"20:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time21\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"21:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time22\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"22:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"                  \u003cTableColumn fx:id\u003d\"time23\" prefWidth\u003d\"75.0\" styleClass\u003d\"table-row-cell:empty\" text\u003d\"23:00\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"              \u003c/columns\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"            \u003c/TableView\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Alvozyn":55}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"        assertNotNull(AppUtil.getImage(\"/images/clock_32.png\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":35,"clydelhui":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.storage.JsonExportStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"wheregottime.json\"));","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"        JsonExportStorage exportStorage \u003d new JsonExportStorage(temporaryFolder.resolve(\"export.json\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, exportStorage);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"lyndonlim27"},"content":"        JsonExportStorage exportStorage \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"lyndonlim27"},"content":"                new JsonExportStorage(temporaryFolder.resolve(\"ioExceptionExport.json\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"lyndonlim27"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, exportStorage);","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"lyndonlim27"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withGroups().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"lyndonlim27"},"content":"    public void execute_exportStorageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"lyndonlim27"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"lyndonlim27"},"content":"        Path testFolderAddressBook \u003d Path.of(\"src\", \"test\", \"data\", \"JsonSerializableAddressBook\");","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"lyndonlim27"},"content":"        Path testFolderUserPrefs \u003d Path.of(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"lyndonlim27"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"lyndonlim27"},"content":"                new JsonAddressBookStorage(testFolderAddressBook.resolve(\"typicalPersonsAddressBook.json\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"lyndonlim27"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"lyndonlim27"},"content":"                new JsonUserPrefsStorage(testFolderUserPrefs.resolve(\"TypicalUserPrefs.json\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"lyndonlim27"},"content":"        JsonExportStorage exportStorage \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"lyndonlim27"},"content":"                new JsonExportIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionExport.json\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"lyndonlim27"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, exportStorage);","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"lyndonlim27"},"content":"        model.addPerson(AMY);","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"lyndonlim27"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"lyndonlim27"},"content":"        String exportCommand \u003d ExportCommand.COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"lyndonlim27"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"lyndonlim27"},"content":"        expectedModel.addPerson(AMY);","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"lyndonlim27"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"lyndonlim27"},"content":"        assertCommandFailure(exportCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"lyndonlim27"},"content":"    public void getFilteredGroupList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"lyndonlim27"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredGroupList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":194,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":195,"author":{"gitId":"lyndonlim27"},"content":"     * A stub class to throw an {@code IOException} when the export method is called.","lastModifiedDate":"2023-04-07"},{"lineNumber":196,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":197,"author":{"gitId":"lyndonlim27"},"content":"    private static class JsonExportIoExceptionThrowingStub extends JsonExportStorage {","lastModifiedDate":"2023-04-07"},{"lineNumber":198,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":199,"author":{"gitId":"lyndonlim27"},"content":"        public JsonExportIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-04-07"},{"lineNumber":200,"author":{"gitId":"lyndonlim27"},"content":"            super(filePath);","lastModifiedDate":"2023-04-07"},{"lineNumber":201,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":202,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":203,"author":{"gitId":"lyndonlim27"},"content":"        @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":204,"author":{"gitId":"lyndonlim27"},"content":"        public void exportPerson(Person personToExport, Path exportFilePath) throws IOException {","lastModifiedDate":"2023-04-07"},{"lineNumber":205,"author":{"gitId":"lyndonlim27"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2023-04-07"},{"lineNumber":206,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":207,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lyndonlim27":48,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"    public void execute_personInvalidGroup_throwsCommandExceptionl() {","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"        Person validPerson \u003d new PersonBuilder().withGroups(\"INVALID\").build();","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_GROUP, () -\u003e addCommand.execute(model));","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"lyndonlim27"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"lyndonlim27"},"content":"        public void addPersonInGroup(Person person, Group group) {","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"lyndonlim27"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"lyndonlim27"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"lyndonlim27"},"content":"        public void removePersonFromGroup(Person person, Group group) {","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"lyndonlim27"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"lyndonlim27"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"lyndonlim27"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"lyndonlim27"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"lyndonlim27"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"lyndonlim27"},"content":"        public void deleteGroup(Group group) {","lastModifiedDate":"2023-03-10"},{"lineNumber":174,"author":{"gitId":"lyndonlim27"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"lyndonlim27"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"lyndonlim27"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"lyndonlim27"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"edures888"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":190,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"edures888"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":201,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":202,"author":{"gitId":"gmengqi"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"gmengqi"},"content":"        public void updateFilteredTimeSlotList(Group group, LocalDate date) {","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"gmengqi"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"Alvozyn"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"Alvozyn"},"content":"        public void addRecurringEvent(Person personToEdit, RecurringEvent eventToAdd) {","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"Alvozyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"Alvozyn"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"Alvozyn"},"content":"        public void deleteRecurringEvent(Person personToEdit, RecurringEvent event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"Alvozyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"Alvozyn"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"Alvozyn"},"content":"        public void setRecurringEvent(Person personToEdit, RecurringEvent originalEvent,","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"Alvozyn"},"content":"                                      RecurringEvent editedRecurringEvent) {","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"Alvozyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":223,"author":{"gitId":"gmengqi"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":224,"author":{"gitId":"gmengqi"},"content":"        public void deleteExpiredEvent() {","lastModifiedDate":"2023-03-28"},{"lineNumber":225,"author":{"gitId":"gmengqi"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Alvozyn":17,"gmengqi":11,"edures888":10,"lyndonlim27":39,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/AddIsolatedEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.THREE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.TWELVE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.TWO_O_CLOCK_VALID;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"public class AddIsolatedEventCommandTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"    private Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"    public void execute_success() throws CommandException {","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent isolatedEvent \u003d new IsolatedEvent(\"biking\", TWO_O_CLOCK_VALID, THREE_O_CLOCK_VALID);","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"        AddIsolatedEventCommand command \u003d new AddIsolatedEventCommand(Index.fromOneBased(1), isolatedEvent);","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"gmengqi"},"content":"        String expectedMessage \u003d String.format(AddIsolatedEventCommand.MESSAGE_SUCCESS, isolatedEvent) + \" to \"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"                + editedPerson.getName();","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"        assertEquals(expectedMessage, command.execute(model).getFeedbackToUser());","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"    public void execute_conflictingRecurringEventList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"        IsolatedEvent isolatedEvent \u003d new IsolatedEvent(\"Skiing\", TWELVE_O_CLOCK_VALID, THREE_O_CLOCK_VALID);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"        RecurringEvent recurringEvent \u003d new RecurringEvent(\"biking\", DayOfWeek.SATURDAY,","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"                TWELVE_O_CLOCK_VALID.toLocalTime(), TWO_O_CLOCK_VALID.toLocalTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"        model.addRecurringEvent(editedPerson, recurringEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"        AddIsolatedEventCommand command \u003d new AddIsolatedEventCommand(Index.fromOneBased(1), isolatedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"        assertThrows(CommandException.class, () -\u003ecommand.execute(model));","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Alvozyn":21,"gmengqi":36,"clydelhui":1}},{"path":"src/test/java/seedu/address/logic/commands/AddRecurringEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.THREE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.TWELVE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.TWO_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"public class AddRecurringEventCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    private Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    public void execute_success() throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent recurringEvent \u003d new RecurringEvent(\"biking\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"                TWELVE_O_CLOCK_VALID.toLocalTime(), TWO_O_CLOCK_VALID.toLocalTime());","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"        AddRecurringEventCommand command \u003d new AddRecurringEventCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"                recurringEvent);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"        String expectedMessage \u003d String.format(AddRecurringEventCommand.MESSAGE_SUCCESS, recurringEvent) + \" to \"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"                + editedPerson.getName();","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(expectedMessage, command.execute(model).getFeedbackToUser());","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"    public void execute_conflictingIsolatedEvent() {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"        IsolatedEvent isolatedEvent \u003d new IsolatedEvent(\"Skiing\", TWELVE_O_CLOCK_VALID, THREE_O_CLOCK_VALID);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"gmengqi"},"content":"        RecurringEvent recurringEvent \u003d new RecurringEvent(\"biking\", DayOfWeek.SATURDAY,","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"                TWELVE_O_CLOCK_VALID.toLocalTime(), TWO_O_CLOCK_VALID.toLocalTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"        editedPerson.getIsolatedEventList().insert(isolatedEvent);","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"        AddRecurringEventCommand command \u003d new AddRecurringEventCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"                recurringEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"        assertThrows(CommandException.class, () -\u003ecommand.execute(model));","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Alvozyn":62,"gmengqi":1,"clydelhui":2}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.GroupNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"    public static final String VALID_TAG_OWE_MONEY \u003d \"Owe money\";","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"    public static final String VALID_TAG_BORROWED_TEXTBOOK \u003d \"Borrowed Textbook\";","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"    public static final String VALID_GROUP_CS2103 \u003d \"CS2103\";","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"    public static final String VALID_GROUP_CS0000 \u003d \"CS0000\";","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"    public static final String TAG_DESC_BORROWED_TEXTBOOK \u003d \" \" + PREFIX_TAG + VALID_TAG_BORROWED_TEXTBOOK;","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"    public static final String TAG_DESC_OWE_MONEY \u003d \" \" + PREFIX_TAG + VALID_TAG_OWE_MONEY;","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"    public static final String GROUP_DESC_CS2103 \u003d \" \" + PREFIX_GROUP + VALID_GROUP_CS2103;","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"lyndonlim27"},"content":"                .withTags(VALID_TAG_BORROWED_TEXTBOOK).withGroups(VALID_GROUP_CS2103).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"lyndonlim27"},"content":"                .withTags(VALID_TAG_OWE_MONEY, VALID_TAG_BORROWED_TEXTBOOK).withGroups(VALID_GROUP_CS2103).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"lyndonlim27"},"content":"        List\u003cGroup\u003e expectedGroupFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredGroupList());","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"lyndonlim27"},"content":"        assertEquals(expectedGroupFilteredList, actualModel.getFilteredGroupList());","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"edures888"},"content":"     * Updates {@code model}\u0027s filtered list to show only the group at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"edures888"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"edures888"},"content":"    public static void showGroupAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"edures888"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredGroupList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"edures888"},"content":"        Group group \u003d model.getFilteredGroupList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"edures888"},"content":"        final String[] splitName \u003d group.getName().split(\"\\\\s+\");","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"edures888"},"content":"        model.updateFilteredGroupList(new GroupNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"edures888"},"content":"        assertEquals(1, model.getFilteredGroupList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"edures888":17,"lyndonlim27":11,"-":122}},{"path":"src/test/java/seedu/address/logic/commands/DeleteIsolatedEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleEventUtil.SKIING_ISOLATED_EVENT;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"public class DeleteIsolatedEventCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"    private Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"    public void execute_success() throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"        editedPerson.getIsolatedEventList().insert(SKIING_ISOLATED_EVENT);","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"        DeleteIsolatedEventCommand command \u003d new DeleteIsolatedEventCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"                Index.fromOneBased(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"        String expectedMessage \u003d String.format(DeleteIsolatedEventCommand.MESSAGE_SUCCESS, SKIING_ISOLATED_EVENT)","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"                + \" to \" + editedPerson.getName();","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"        assertEquals(expectedMessage, command.execute(model).getFeedbackToUser());","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"gmengqi":33,"clydelhui":1}},{"path":"src/test/java/seedu/address/logic/commands/DeleteRecurringEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleEventUtil.BIKING_RECURRING_EVENT;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"public class DeleteRecurringEventCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    private Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    public void execute_success() throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"        model.addRecurringEvent(editedPerson, BIKING_RECURRING_EVENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"        DeleteRecurringEventCommand command \u003d new DeleteRecurringEventCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"                Index.fromOneBased(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"        String expectedMessage \u003d String.format(DeleteRecurringEventCommand.MESSAGE_SUCCESS, BIKING_RECURRING_EVENT)","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"                + \" to \" + editedPerson.getName();","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(expectedMessage, command.execute(model).getFeedbackToUser());","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Alvozyn":34}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OWE_MONEY;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"                .withTags(VALID_TAG_OWE_MONEY).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_OWE_MONEY).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor(), false);","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"lyndonlim27"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), false);","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor, true);","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"lyndonlim27"},"content":"                new EditPersonDescriptorBuilder(personInList).build(), false);","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"lyndonlim27"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), false);","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"lyndonlim27"},"content":"    public void execute_invalidGroupAdded_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"lyndonlim27"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withGroups(\"INVALID\").build(), false);","lastModifiedDate":"2023-03-19"},{"lineNumber":158,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"lyndonlim27"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_GROUP);","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"lyndonlim27"},"content":"    public void execute_mergeGroups_success() throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"lyndonlim27"},"content":"        AddressBook addressBook \u003d new AddressBook(model.getAddressBook());","lastModifiedDate":"2023-03-19"},{"lineNumber":165,"author":{"gitId":"lyndonlim27"},"content":"        Model expectedModel \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":166,"author":{"gitId":"lyndonlim27"},"content":"        Person personInFilteredList \u003d expectedModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-19"},{"lineNumber":167,"author":{"gitId":"lyndonlim27"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withGroups(\"CS2040\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":168,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor, true);","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"lyndonlim27"},"content":"        Set\u003cGroup\u003e groups \u003d new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"lyndonlim27"},"content":"                addAll(personInFilteredList.getGroups());","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"lyndonlim27"},"content":"                add(new Group(\"CS2040\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"lyndonlim27"},"content":"                }};","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"lyndonlim27"},"content":"        editCommand.execute(expectedModel);","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(groups.equals(expectedModel.getFilteredPersonList().get(0).getGroups()));","lastModifiedDate":"2023-03-19"},{"lineNumber":175,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":176,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":177,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":178,"author":{"gitId":"lyndonlim27"},"content":"    public void execute_mergeTags_success() throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"lyndonlim27"},"content":"        AddressBook addressBook \u003d new AddressBook(model.getAddressBook());","lastModifiedDate":"2023-03-19"},{"lineNumber":180,"author":{"gitId":"lyndonlim27"},"content":"        Model expectedModel \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":181,"author":{"gitId":"lyndonlim27"},"content":"        Person personInFilteredList \u003d expectedModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-19"},{"lineNumber":182,"author":{"gitId":"lyndonlim27"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags(\"Classmate\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":183,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor, true);","lastModifiedDate":"2023-03-19"},{"lineNumber":184,"author":{"gitId":"lyndonlim27"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-03-19"},{"lineNumber":185,"author":{"gitId":"lyndonlim27"},"content":"                addAll(personInFilteredList.getTags());","lastModifiedDate":"2023-03-19"},{"lineNumber":186,"author":{"gitId":"lyndonlim27"},"content":"                add(new Tag(\"Classmate\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":187,"author":{"gitId":"lyndonlim27"},"content":"                }};","lastModifiedDate":"2023-03-19"},{"lineNumber":188,"author":{"gitId":"lyndonlim27"},"content":"        editCommand.execute(expectedModel);","lastModifiedDate":"2023-03-19"},{"lineNumber":189,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(tags.equals(expectedModel.getFilteredPersonList().get(0).getTags()));","lastModifiedDate":"2023-03-19"},{"lineNumber":190,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":191,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":192,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":193,"author":{"gitId":"lyndonlim27"},"content":"    public void execute_overwriteGroups_success() throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":194,"author":{"gitId":"lyndonlim27"},"content":"        AddressBook addressBook \u003d new AddressBook(model.getAddressBook());","lastModifiedDate":"2023-03-19"},{"lineNumber":195,"author":{"gitId":"lyndonlim27"},"content":"        Model expectedModel \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":196,"author":{"gitId":"lyndonlim27"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withGroups(\"CS2040\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"lyndonlim27"},"content":"        editCommand.execute(expectedModel);","lastModifiedDate":"2023-03-19"},{"lineNumber":199,"author":{"gitId":"lyndonlim27"},"content":"        Set\u003cGroup\u003e groups \u003d new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"lyndonlim27"},"content":"                add(new Group(\"CS2040\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":201,"author":{"gitId":"lyndonlim27"},"content":"                }};","lastModifiedDate":"2023-03-19"},{"lineNumber":202,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(expectedModel.getFilteredPersonList().get(0).getGroups().equals(new HashSet\u003c\u003e(groups)));","lastModifiedDate":"2023-03-19"},{"lineNumber":203,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":205,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":206,"author":{"gitId":"lyndonlim27"},"content":"    public void execute_overwriteTags_success() throws CommandException {","lastModifiedDate":"2023-03-19"},{"lineNumber":207,"author":{"gitId":"lyndonlim27"},"content":"        AddressBook addressBook \u003d new AddressBook(model.getAddressBook());","lastModifiedDate":"2023-03-19"},{"lineNumber":208,"author":{"gitId":"lyndonlim27"},"content":"        Model expectedModel \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":209,"author":{"gitId":"lyndonlim27"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags(\"Classmate\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":210,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":211,"author":{"gitId":"lyndonlim27"},"content":"        editCommand.execute(expectedModel);","lastModifiedDate":"2023-03-19"},{"lineNumber":212,"author":{"gitId":"lyndonlim27"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-03-19"},{"lineNumber":213,"author":{"gitId":"lyndonlim27"},"content":"                add(new Tag(\"Classmate\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":214,"author":{"gitId":"lyndonlim27"},"content":"                }};","lastModifiedDate":"2023-03-19"},{"lineNumber":215,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(expectedModel.getFilteredPersonList().get(0).getTags().equals(new HashSet\u003c\u003e(tags)));","lastModifiedDate":"2023-03-19"},{"lineNumber":216,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":217,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":220,"author":{"gitId":"lyndonlim27"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":224,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":237,"author":{"gitId":"lyndonlim27"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY, false)));","lastModifiedDate":"2023-03-19"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":240,"author":{"gitId":"lyndonlim27"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB, false)));","lastModifiedDate":"2023-03-19"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"lyndonlim27":85,"-":158}},{"path":"src/test/java/seedu/address/logic/commands/EditIsolatedEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.commands.EditIsolatedEventCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.FOUR_O_CLOCK_VALID;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.SIX_O_CLOCK_VALID;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.THREE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.TWO_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleEventUtil.SKIING_ISOLATED_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleEventUtil.SLEEPING_ISOLATED_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_EVENT;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.EditIsolatedEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"public class EditIsolatedEventCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"    private Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"    public void execute_success() throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"        editedPerson.getIsolatedEventList().insert(SKIING_ISOLATED_EVENT);","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptorBuilder(\"Sleep\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"        EditIsolatedEventCommand command \u003d new EditIsolatedEventCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"                INDEX_FIRST_EVENT, editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SUCCESS, SLEEPING_ISOLATED_EVENT,","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"                editedPerson.getName())","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"                + \"\\nOriginal Event: \"","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"                + SKIING_ISOLATED_EVENT + \" for \" + editedPerson.getName();","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"        assertEquals(expectedMessage, command.execute(model).getFeedbackToUser());","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"gmengqi"},"content":"    public void execute_conflictRecurringEvent() {","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"        editedPerson.getIsolatedEventList().insert(SKIING_ISOLATED_EVENT);","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"        model.addRecurringEvent(editedPerson, new RecurringEvent(\"Cycling\", FOUR_O_CLOCK_VALID.getDayOfWeek(),","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"                THREE_O_CLOCK_VALID.toLocalTime(), SIX_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptorBuilder(\"Sleep\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"                FOUR_O_CLOCK_VALID).build();","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"        EditIsolatedEventCommand command \u003d new EditIsolatedEventCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"                INDEX_FIRST_EVENT, editEventDescriptor);","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"        assertThrows(CommandException.class, () -\u003ecommand.execute(model));","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"gmengqi"},"content":"    public void execute_invalidEventIndex() throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"gmengqi"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"gmengqi"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"clydelhui"},"content":"        editedPerson.getIsolatedEventList().insert(SKIING_ISOLATED_EVENT);","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"gmengqi"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"gmengqi"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptorBuilder(\"Sleep\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"gmengqi"},"content":"                FOUR_O_CLOCK_VALID).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"gmengqi"},"content":"        EditIsolatedEventCommand command \u003d new EditIsolatedEventCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"gmengqi"},"content":"                INDEX_THIRD_EVENT, editEventDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"gmengqi"},"content":"        assertThrows(CommandException.class, () -\u003ecommand.execute(model));","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Alvozyn":24,"gmengqi":51,"clydelhui":8}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OWE_MONEY;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_OWE_MONEY).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"lyndonlim27":2,"-":56}},{"path":"src/test/java/seedu/address/logic/commands/EditRecurringEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.THREE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.TWO_O_CLOCK_VALID;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleEventUtil.BIKING_RECURRING_EVENT;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleEventUtil.GYM_ISOLATED_EVENT;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleEventUtil.SWIMMING_RECURRING_EVENT;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.exceptions.EventConflictException;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"public class EditRecurringEventCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    private Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"    public void execution_success() throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"        model.addRecurringEvent(editedPerson, BIKING_RECURRING_EVENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"        EditRecurringEventCommand.EditEventDescriptor editEventDescriptor \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"                new EditEventDescriptorBuilder(\"Jogging\", DayOfWeek.WEDNESDAY,","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"                        TWO_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime()).recurringbuild();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"        EditRecurringEventCommand editCommand \u003d new EditRecurringEventCommand(INDEX_FIRST_PERSON, INDEX_FIRST_EVENT,","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"                editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent expectedEvent \u003d new RecurringEvent(\"Jogging\", DayOfWeek.WEDNESDAY,","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"                TWO_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"        String expectedMessage \u003d String.format(\"Original Event: \" + BIKING_RECURRING_EVENT + \" for \"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"                + editedPerson.getName() + \"\\n\" + editCommand.MESSAGE_SUCCESS, expectedEvent + \" for \"","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"                + editedPerson.getName());","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(expectedMessage, editCommand.execute(model).getFeedbackToUser());","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"    public void execute_conflictIsolatedEvent() throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"        editedPerson.getIsolatedEventList().insert(GYM_ISOLATED_EVENT);","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"        model.addRecurringEvent(editedPerson, BIKING_RECURRING_EVENT);","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"        EditRecurringEventCommand.EditEventDescriptor editEventDescriptor \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"                new EditEventDescriptorBuilder(\"Jogging\", DayOfWeek.SATURDAY,","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"                        TWO_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime()).recurringbuild();","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"        EditRecurringEventCommand editCommand \u003d new EditRecurringEventCommand(INDEX_FIRST_PERSON, INDEX_FIRST_EVENT,","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"                editEventDescriptor);","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"        assertThrows(EventConflictException.class, () -\u003eeditCommand.execute(model));","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"    public void execute_recurringEvent() throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"        model.addRecurringEvent(editedPerson, BIKING_RECURRING_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"        model.addRecurringEvent(editedPerson, SWIMMING_RECURRING_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"        EditRecurringEventCommand.EditEventDescriptor editEventDescriptor \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"                new EditEventDescriptorBuilder(\"Jogging\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"                        TWO_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime()).recurringbuild();","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"        EditRecurringEventCommand editCommand \u003d new EditRecurringEventCommand(INDEX_FIRST_PERSON, INDEX_SECOND_EVENT,","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"                editEventDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Alvozyn"},"content":"        assertThrows(EventConflictException.class, () -\u003eeditCommand.execute(model));","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Alvozyn":95,"clydelhui":1}},{"path":"src/test/java/seedu/address/logic/commands/ExportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ExportCommand.","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"public class ExportCommandTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"        ModelManager expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"        Person originalPerson \u003d expectedModel.getFilteredPersonList().get(0);","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"        Person personToExport \u003d new PersonBuilder(originalPerson).withGroups().withTags().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"        ExportCommand exportCommand \u003d new ExportCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"        String expectedMessage \u003d String.format(ExportCommand.MESSAGE_EXPORT_PERSON_SUCCESS, personToExport);","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"        assertCommandSuccess(exportCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"        ExportCommand exportCommand \u003d new ExportCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"        assertCommandFailure(exportCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"        Person originalPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"        Person personToExport \u003d new PersonBuilder(originalPerson).withGroups().withTags().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"        ExportCommand exportCommand \u003d new ExportCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"        String expectedMessage \u003d String.format(ExportCommand.MESSAGE_EXPORT_PERSON_SUCCESS, personToExport);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"        assertCommandSuccess(exportCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"lyndonlim27"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"lyndonlim27"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"lyndonlim27"},"content":"        ExportCommand exportCommand \u003d new ExportCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"lyndonlim27"},"content":"        assertCommandFailure(exportCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"lyndonlim27"},"content":"    public void equals() {","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"lyndonlim27"},"content":"        ExportCommand exportFirstCommand \u003d new ExportCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"lyndonlim27"},"content":"        ExportCommand exportSecondCommand \u003d new ExportCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"lyndonlim27"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(exportFirstCommand.equals(exportFirstCommand));","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"lyndonlim27"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"lyndonlim27"},"content":"        ExportCommand exportFirstCommandCopy \u003d new ExportCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(exportFirstCommand.equals(exportFirstCommandCopy));","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"lyndonlim27"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"lyndonlim27"},"content":"        assertFalse(exportFirstCommand.equals(1));","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"lyndonlim27"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"lyndonlim27"},"content":"        assertFalse(exportFirstCommand.equals(null));","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"lyndonlim27"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"lyndonlim27"},"content":"        assertFalse(exportFirstCommand.equals(exportSecondCommand));","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"lyndonlim27":99}},{"path":"src/test/java/seedu/address/logic/commands/FindTimeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTimeCommand}.","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"public class FindTimeCommandTest {","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    public void execute_invalidGroupIndex_throwsCommandException() {","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"        Index invalidIndex \u003d Index.fromZeroBased(1000);","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"        FindTimeCommand command \u003d new FindTimeCommand(invalidIndex, null);","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"    public void execute_validGroupIndex_success() {","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"        FindTimeCommand command \u003d new FindTimeCommand(INDEX_FIRST_GROUP, date);","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"        Group group \u003d model.getFilteredGroupList().get(INDEX_FIRST_GROUP.getZeroBased());","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"        String expectedMessage \u003d String.format(FindTimeCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"        expectedModel.updateFilteredTimeSlotList(group, date);","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"edures888":2,"lyndonlim27":45}},{"path":"src/test/java/seedu/address/logic/commands/ImportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"import seedu.address.storage.Importer;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"import seedu.address.testutil.SampleEventUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"class ImportCommandTest {","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"    void execute_validImport_success() {","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"        AddressBook validImport \u003d new AddressBook();","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"        Person personToImport \u003d new PersonBuilder(TypicalPersons.ALICE).withTags().withGroups().build();","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"        validImport.addPerson(personToImport);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"        String expectedMessage \u003d String.format(ImportCommand.MESSAGE_IMPORT_PERSON_SUCCESS, TypicalPersons.ALICE);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"        ImporterStub validImporter \u003d new ImporterStub(validImport);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"        ImportCommand successfulCommand \u003d new ImportCommand(validImporter);","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"        assertCommandSuccess(successfulCommand, model, expectedMessage, model);","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"    void execute_validImportWithTagsGroups_successTagsGroupsIgnored() {","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"        AddressBook validImport \u003d new AddressBook();","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"        Person personToImport \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"                .withTags(\"SomeTag\", \"AnotherTag\")","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"                .withGroups(\"SomeGroup\", \"AnotherGroup\").build();","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"        validImport.addPerson(personToImport);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"        String expectedMessage \u003d String.format(ImportCommand.MESSAGE_IMPORT_PERSON_SUCCESS, TypicalPersons.ALICE);","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"        ImporterStub validImporter \u003d new ImporterStub(validImport);","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"        ImportCommand successfulCommand \u003d new ImportCommand(validImporter);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"        assertCommandSuccess(successfulCommand, model, expectedMessage, model);","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"    void execute_validImportUpdatesEvents_success() {","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"        AddressBook validImport \u003d new AddressBook();","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"        Set\u003cIsolatedEvent\u003e validIsolatedEventSet \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"        validIsolatedEventSet.add(SampleEventUtil.SKIING_ISOLATED_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"        validIsolatedEventSet.add(SampleEventUtil.GYM_ISOLATED_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"        Set\u003cRecurringEvent\u003e validRecurringEventSet \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"        validRecurringEventSet.add(SampleEventUtil.BIKING_RECURRING_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"clydelhui"},"content":"        Person personToImport \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"clydelhui"},"content":"                .withTags()","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"clydelhui"},"content":"                .withGroups()","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"clydelhui"},"content":"                .withIsolatedEventList(validIsolatedEventSet)","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"clydelhui"},"content":"                .withRecurringEventList(validRecurringEventSet)","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"                .build();","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"clydelhui"},"content":"        validImport.addPerson(personToImport);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"clydelhui"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"clydelhui"},"content":"                .withIsolatedEventList(validIsolatedEventSet)","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"clydelhui"},"content":"                .withRecurringEventList(validRecurringEventSet)","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"clydelhui"},"content":"                .build();","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"clydelhui"},"content":"        String expectedMessage \u003d String.format(ImportCommand.MESSAGE_IMPORT_PERSON_SUCCESS, expectedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"clydelhui"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"clydelhui"},"content":"        expectedModel.setPerson(TypicalPersons.ALICE, expectedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"clydelhui"},"content":"        ImporterStub validImporter \u003d new ImporterStub(validImport);","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"clydelhui"},"content":"        ImportCommand successfulCommand \u003d new ImportCommand(validImporter);","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"clydelhui"},"content":"        assertCommandSuccess(successfulCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"clydelhui"},"content":"    void execute_validImportUpdatesPersonalDetails_success() {","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"clydelhui"},"content":"        AddressBook validImport \u003d new AddressBook();","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"clydelhui"},"content":"        PersonBuilder personToImport \u003d new PersonBuilder(TypicalPersons.ALICE);","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"clydelhui"},"content":"        personToImport.withEmail(\"aliceMalice@chalice.org\");","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"clydelhui"},"content":"        personToImport.withTags();","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"clydelhui"},"content":"        personToImport.withGroups();","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"clydelhui"},"content":"        validImport.addPerson(personToImport.build());","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"clydelhui"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalPersons.ALICE).withEmail(\"aliceMalice@chalice.org\").build();","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"clydelhui"},"content":"        String expectedMessage \u003d String.format(ImportCommand.MESSAGE_IMPORT_PERSON_SUCCESS, expectedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"clydelhui"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"clydelhui"},"content":"        expectedModel.setPerson(TypicalPersons.ALICE, expectedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"clydelhui"},"content":"        ImporterStub validImporter \u003d new ImporterStub(validImport);","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"clydelhui"},"content":"        ImportCommand successfulCommand \u003d new ImportCommand(validImporter);","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"clydelhui"},"content":"        assertCommandSuccess(successfulCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"clydelhui"},"content":"    void execute_personDoesNotExist_successAddNewPerson() {","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"clydelhui"},"content":"        AddressBook validImport \u003d new AddressBook();","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"clydelhui"},"content":"        Person personToImport \u003d new PersonBuilder(TypicalPersons.ALICE).withName(\"Bob the Builder\").build();","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"clydelhui"},"content":"        validImport.addPerson(personToImport);","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"clydelhui"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"clydelhui"},"content":"                .withName(\"Bob the Builder\")","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"clydelhui"},"content":"                .withTags()","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"clydelhui"},"content":"                .withGroups()","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"clydelhui"},"content":"                .build();","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"clydelhui"},"content":"        String expectedMessage \u003d String.format(ImportCommand.MESSAGE_IMPORT_PERSON_SUCCESS, expectedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"clydelhui"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"clydelhui"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"clydelhui"},"content":"        ImporterStub validImporter \u003d new ImporterStub(validImport);","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"clydelhui"},"content":"        ImportCommand successfulCommand \u003d new ImportCommand(validImporter);","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"clydelhui"},"content":"        assertCommandSuccess(successfulCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"clydelhui"},"content":"    void execute_invalidImportTwoPerson_throwsCommandException() {","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"clydelhui"},"content":"        AddressBook invalidImport \u003d new AddressBook();","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"clydelhui"},"content":"        Person personToImport \u003d new PersonBuilder(TypicalPersons.ALICE).withTags().withGroups().build();","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"clydelhui"},"content":"        invalidImport.addPerson(personToImport);","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"clydelhui"},"content":"        Person secondPersonToImport \u003d new PersonBuilder(TypicalPersons.BENSON).withTags().withGroups().build();","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"clydelhui"},"content":"        invalidImport.addPerson(secondPersonToImport);","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"clydelhui"},"content":"        ImporterStub validImporter \u003d new ImporterStub(invalidImport);","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"clydelhui"},"content":"        ImportCommand unsuccessfulCommand \u003d new ImportCommand(validImporter);","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"clydelhui"},"content":"        assertCommandFailure(unsuccessfulCommand, model, Messages.MESSAGE_IMPORT_SIZE_WRONG);","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"clydelhui"},"content":"    void execute_invalidImportEmptyAddressBook_throwsCommandException() {","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"clydelhui"},"content":"        AddressBook invalidImport \u003d new AddressBook();","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"clydelhui"},"content":"        ImporterStub validImporter \u003d new ImporterStub(invalidImport);","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"clydelhui"},"content":"        ImportCommand unsuccessfulCommand \u003d new ImportCommand(validImporter);","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"clydelhui"},"content":"        assertCommandFailure(unsuccessfulCommand, model, Messages.MESSAGE_IMPORT_SIZE_WRONG);","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"clydelhui"},"content":"    private static class ImporterStub implements Importer {","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"clydelhui"},"content":"        private final ReadOnlyAddressBook readOnlyAddressBook;","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"clydelhui"},"content":"        ImporterStub(ReadOnlyAddressBook readOnlyAddressBook) {","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"clydelhui"},"content":"            this.readOnlyAddressBook \u003d readOnlyAddressBook;","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"clydelhui"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"clydelhui"},"content":"        public ReadOnlyAddressBook readData() {","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"clydelhui"},"content":"            return readOnlyAddressBook;","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"clydelhui":170}},{"path":"src/test/java/seedu/address/logic/commands/group/GroupCreateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.commands.group;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":" * Contains integration tests (interaction with the Model) for GroupListCommand.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"class GroupCreateCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GroupCreateCommand(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        GroupCreateCommandTest.ModelStubAcceptingGroupCreated modelStub \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"                new GroupCreateCommandTest.ModelStubAcceptingGroupCreated();","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        Group validGroup \u003d new Group(\"CS2103\");","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        CommandResult commandResult \u003d new GroupCreateCommand(validGroup).execute(modelStub);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        assertEquals(String.format(GroupCreateCommand.MESSAGE_SUCCESS, validGroup), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        assertEquals(Arrays.asList(validGroup), modelStub.groupsCreated);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"    public void execute_duplicateGroup_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"        Group validGroup \u003d new Group(\"CS2103\");","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"        GroupCreateCommand groupCreateCommand \u003d new GroupCreateCommand(validGroup);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"        GroupCreateCommandTest.ModelStub modelStub \u003d new GroupCreateCommandTest.ModelStubWithGroup(validGroup);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"                GroupCreateCommand.MESSAGE_DUPLICATE_GROUP, () -\u003e groupCreateCommand.execute(modelStub));","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"        Group friendsGroup \u003d new Group(\"Friends\");","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"        Group courseGroup \u003d new Group(\"CS2103\");","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"        GroupCreateCommand createFriendsGroupCommand \u003d new GroupCreateCommand(friendsGroup);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"        GroupCreateCommand createCourseGroupCommand \u003d new GroupCreateCommand(courseGroup);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"        assertTrue(createFriendsGroupCommand.equals(createFriendsGroupCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"        GroupCreateCommand createFriendsGroupCommandCopy \u003d new GroupCreateCommand(friendsGroup);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"        assertTrue(createFriendsGroupCommand.equals(createFriendsGroupCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"edures888"},"content":"        assertFalse(createFriendsGroupCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"edures888"},"content":"        assertFalse(createFriendsGroupCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"edures888"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"edures888"},"content":"        assertFalse(createFriendsGroupCommand.equals(createCourseGroupCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"edures888"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"edures888"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"edures888"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"edures888"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"edures888"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"edures888"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"edures888"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"edures888"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"edures888"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"edures888"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"edures888"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"edures888"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"edures888"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"edures888"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"edures888"},"content":"        public void addPersonInGroup(Person person, Group group) {","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"edures888"},"content":"        public void removePersonFromGroup(Person person, Group group) {","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"edures888"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"edures888"},"content":"        public void deleteGroup(Group group) {","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"edures888"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"edures888"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"edures888"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"edures888"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"edures888"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"edures888"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"gmengqi"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"gmengqi"},"content":"        public void updateFilteredTimeSlotList(Group group, LocalDate date) {","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"gmengqi"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"Alvozyn"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"Alvozyn"},"content":"        public void addRecurringEvent(Person personToEdit, RecurringEvent eventToAdd) {","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"Alvozyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"Alvozyn"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"Alvozyn"},"content":"        public void deleteRecurringEvent(Person personToEdit, RecurringEvent event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"Alvozyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"Alvozyn"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"Alvozyn"},"content":"        public void setRecurringEvent(Person personToEdit, RecurringEvent originalEvent,","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"Alvozyn"},"content":"                                      RecurringEvent editedRecurringEvent) {","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"Alvozyn"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"gmengqi"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"gmengqi"},"content":"        public void deleteExpiredEvent() {","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"gmengqi"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"gmengqi"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"edures888"},"content":"     * A Model stub that contains a single group.","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"edures888"},"content":"    private class ModelStubWithGroup extends GroupCreateCommandTest.ModelStub {","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"edures888"},"content":"        private final Group group;","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":227,"author":{"gitId":"edures888"},"content":"        ModelStubWithGroup(Group group) {","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"edures888"},"content":"            requireNonNull(group);","lastModifiedDate":"2023-03-13"},{"lineNumber":229,"author":{"gitId":"edures888"},"content":"            this.group \u003d group;","lastModifiedDate":"2023-03-13"},{"lineNumber":230,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":231,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":232,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":233,"author":{"gitId":"edures888"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2023-03-13"},{"lineNumber":234,"author":{"gitId":"edures888"},"content":"            requireNonNull(group);","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"edures888"},"content":"            return this.group.isSameGroup(group);","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":237,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"edures888"},"content":"     * A Model stub that always accept the group being added.","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"edures888"},"content":"    private class ModelStubAcceptingGroupCreated extends GroupCreateCommandTest.ModelStub {","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"edures888"},"content":"        final ArrayList\u003cGroup\u003e groupsCreated \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"edures888"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2023-03-13"},{"lineNumber":247,"author":{"gitId":"edures888"},"content":"            requireNonNull(group);","lastModifiedDate":"2023-03-13"},{"lineNumber":248,"author":{"gitId":"edures888"},"content":"            return groupsCreated.stream().anyMatch(group::isSameGroup);","lastModifiedDate":"2023-03-13"},{"lineNumber":249,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":250,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":251,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":252,"author":{"gitId":"edures888"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2023-03-13"},{"lineNumber":253,"author":{"gitId":"edures888"},"content":"            requireNonNull(group);","lastModifiedDate":"2023-03-13"},{"lineNumber":254,"author":{"gitId":"edures888"},"content":"            groupsCreated.add(group);","lastModifiedDate":"2023-03-13"},{"lineNumber":255,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":256,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":258,"author":{"gitId":"edures888"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"edures888"},"content":"            return new AddressBook();","lastModifiedDate":"2023-03-13"},{"lineNumber":260,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":261,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":262,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Alvozyn":18,"gmengqi":9,"edures888":235}},{"path":"src/test/java/seedu/address/logic/commands/group/GroupDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.commands.group;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGroupAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithEmptyGroups;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GENERIC_ITEM;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_GENERIC_ITEM;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":" * Contains integration tests (interaction with the Model) and unit tests for GroupDeleteCommand.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"class GroupDeleteCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithEmptyGroups(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        Group groupToDelete \u003d model.getFilteredGroupList().get(INDEX_FIRST_GENERIC_ITEM.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        GroupDeleteCommand deleteCommand \u003d new GroupDeleteCommand(INDEX_FIRST_GENERIC_ITEM);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        String expectedMessage \u003d String.format(GroupDeleteCommand.MESSAGE_SUCCESS, groupToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        expectedModel.deleteGroup(groupToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGroupList().size() + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"        GroupDeleteCommand groupDeleteCommand \u003d new GroupDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"        assertCommandFailure(groupDeleteCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"        showGroupAtIndex(model, INDEX_FIRST_GENERIC_ITEM);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"        Group groupToDelete \u003d model.getFilteredGroupList().get(INDEX_FIRST_GENERIC_ITEM.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"        GroupDeleteCommand groupDeleteCommand \u003d new GroupDeleteCommand(INDEX_FIRST_GENERIC_ITEM);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"        String expectedMessage \u003d String.format(GroupDeleteCommand.MESSAGE_SUCCESS, groupToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"        expectedModel.deleteGroup(groupToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"        showNoGroup(expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"        assertCommandSuccess(groupDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"        showGroupAtIndex(model, INDEX_FIRST_GENERIC_ITEM);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"        Index outOfBoundIndex \u003d Index.fromZeroBased(model.getAddressBook().getGroupList().size() - 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getGroupList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"        GroupDeleteCommand groupDeleteCommand \u003d new GroupDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"        assertCommandFailure(groupDeleteCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"edures888"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"edures888"},"content":"        GroupDeleteCommand deleteFirstCommand \u003d new GroupDeleteCommand(INDEX_FIRST_GENERIC_ITEM);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"edures888"},"content":"        GroupDeleteCommand deleteSecondCommand \u003d new GroupDeleteCommand(INDEX_SECOND_GENERIC_ITEM);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"edures888"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"edures888"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"edures888"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"edures888"},"content":"        GroupDeleteCommand deleteFirstCommandCopy \u003d new GroupDeleteCommand(INDEX_FIRST_GENERIC_ITEM);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"edures888"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"edures888"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"edures888"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"edures888"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"edures888"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"edures888"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"edures888"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"edures888"},"content":"     * Updates {@code model}\u0027s filtered list to show any group.","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"edures888"},"content":"    private void showNoGroup(Model model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"edures888"},"content":"        model.updateFilteredGroupList(p -\u003e false);","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"edures888"},"content":"        assertTrue(model.getFilteredGroupList().isEmpty());","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"edures888":108}},{"path":"src/test/java/seedu/address/logic/commands/group/GroupFindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.commands.group;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_GROUPS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import static seedu.address.testutil.TypicalGroups.CS2103_GROUP;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import static seedu.address.testutil.TypicalGroups.CS2103_MEMBER;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import static seedu.address.testutil.TypicalGroups.FRIENDS_GROUP;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithEmptyGroups;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithSingleMember;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.GroupNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"import seedu.address.model.person.MemberOfGroupPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":" * Contains integration tests (interaction with the Model) for {@code GroupFindCommand}.","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"public class GroupFindCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithEmptyGroups(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithEmptyGroups(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        List\u003cString\u003e firstList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        List\u003cString\u003e secondList \u003d Collections.singletonList(\"second\");","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        GroupNameContainsKeywordsPredicate firstGroupPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"                new GroupNameContainsKeywordsPredicate(firstList);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        MemberOfGroupPredicate firstMemberPredicate \u003d new MemberOfGroupPredicate(firstList);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"        GroupNameContainsKeywordsPredicate secondGroupPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"                new GroupNameContainsKeywordsPredicate(secondList);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        MemberOfGroupPredicate secondMemberPredicate \u003d new MemberOfGroupPredicate(secondList);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        GroupFindCommand findFirstCommand \u003d new GroupFindCommand(firstGroupPredicate, firstMemberPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"        GroupFindCommand findSecondCommand \u003d new GroupFindCommand(secondGroupPredicate, secondMemberPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"        GroupFindCommand findFirstCommandCopy \u003d new GroupFindCommand(firstGroupPredicate, firstMemberPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"        // different keyword -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"    public void execute_zeroKeywords_noGroupFound() {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GROUPS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"        String whitespaceInput \u003d \" \";","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"        GroupNameContainsKeywordsPredicate groupPredicate \u003d prepareGroupPredicate(whitespaceInput);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"        MemberOfGroupPredicate memberPredicate \u003d prepareMemberPredicate(whitespaceInput);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"        GroupFindCommand command \u003d new GroupFindCommand(groupPredicate, memberPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"        expectedModel.updateFilteredGroupList(groupPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"        expectedModel.updateFilteredPersonList(memberPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredGroupList());","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"    public void execute_multipleKeywords_multipleGroupsFound() {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GROUPS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"lyndonlim27"},"content":"        String multipleKeywords \u003d \"CS2103 Friends\";","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"edures888"},"content":"        GroupNameContainsKeywordsPredicate groupPredicate \u003d prepareGroupPredicate(multipleKeywords);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"        MemberOfGroupPredicate memberPredicate \u003d prepareMemberPredicate(multipleKeywords);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"edures888"},"content":"        GroupFindCommand command \u003d new GroupFindCommand(groupPredicate, memberPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"edures888"},"content":"        expectedModel.updateFilteredGroupList(groupPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"edures888"},"content":"        expectedModel.updateFilteredPersonList(memberPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"edures888"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"lyndonlim27"},"content":"        assertEquals(Arrays.asList(CS2103_GROUP, FRIENDS_GROUP), model.getFilteredGroupList());","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"edures888"},"content":"    public void execute_singleKeyword_singleMemberFound() {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"edures888"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBookWithSingleMember(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"edures888"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithSingleMember(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"edures888"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GROUPS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"edures888"},"content":"        String singleKeyword \u003d \"CS2103\";","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"edures888"},"content":"        GroupNameContainsKeywordsPredicate groupPredicate \u003d prepareGroupPredicate(singleKeyword);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"edures888"},"content":"        MemberOfGroupPredicate memberPredicate \u003d prepareMemberPredicate(singleKeyword);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"edures888"},"content":"        GroupFindCommand command \u003d new GroupFindCommand(groupPredicate, memberPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"edures888"},"content":"        expectedModel.updateFilteredGroupList(groupPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"edures888"},"content":"        expectedModel.updateFilteredPersonList(memberPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"edures888"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"edures888"},"content":"        assertEquals(List.of(CS2103_GROUP), model.getFilteredGroupList());","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"edures888"},"content":"        assertEquals(List.of(CS2103_MEMBER), model.getFilteredPersonList());","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"edures888"},"content":"     * Parses {@code userInput} into a {@code GroupNameContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"edures888"},"content":"    private GroupNameContainsKeywordsPredicate prepareGroupPredicate(String userInput) {","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"edures888"},"content":"        return new GroupNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"edures888"},"content":"     * Parses {@code userInput} into a {@code MemberOfGroupPredicate}.","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"edures888"},"content":"    private MemberOfGroupPredicate prepareMemberPredicate(String userInput) {","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"edures888"},"content":"        return new MemberOfGroupPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"edures888":114,"lyndonlim27":2}},{"path":"src/test/java/seedu/address/logic/commands/group/GroupListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.commands.group;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGroupAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithEmptyGroups;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GENERIC_ITEM;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":" * Contains integration tests (interaction with the Model) for GroupListCommand.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"class GroupListCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    private Model model;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        model \u003d new ModelManager(getTypicalAddressBookWithEmptyGroups(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"        assertCommandSuccess(new GroupListCommand(), model, GroupListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        showGroupAtIndex(model, INDEX_FIRST_GENERIC_ITEM);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"edures888":40}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_CS2103;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_BORROWED_TEXTBOOK;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_OWE_MONEY;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BORROWED_TEXTBOOK;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OWE_MONEY;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_BORROWED_TEXTBOOK).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_BORROWED_TEXTBOOK + GROUP_DESC_CS2103, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_BORROWED_TEXTBOOK + GROUP_DESC_CS2103, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_BORROWED_TEXTBOOK + GROUP_DESC_CS2103, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_BORROWED_TEXTBOOK + GROUP_DESC_CS2103, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_BORROWED_TEXTBOOK + GROUP_DESC_CS2103, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"lyndonlim27"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB)","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"lyndonlim27"},"content":"                .withTags(VALID_TAG_BORROWED_TEXTBOOK, VALID_TAG_OWE_MONEY)","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"lyndonlim27"},"content":"                + TAG_DESC_OWE_MONEY + TAG_DESC_BORROWED_TEXTBOOK + GROUP_DESC_CS2103,","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"lyndonlim27"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"lyndonlim27"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withGroups().build();","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"lyndonlim27"},"content":"                + TAG_DESC_OWE_MONEY + TAG_DESC_BORROWED_TEXTBOOK, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"lyndonlim27"},"content":"                + TAG_DESC_OWE_MONEY + TAG_DESC_BORROWED_TEXTBOOK, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"lyndonlim27"},"content":"                + TAG_DESC_OWE_MONEY + TAG_DESC_BORROWED_TEXTBOOK, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"lyndonlim27"},"content":"                + TAG_DESC_OWE_MONEY + TAG_DESC_BORROWED_TEXTBOOK, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"lyndonlim27"},"content":"                + INVALID_TAG_DESC + VALID_TAG_BORROWED_TEXTBOOK, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"lyndonlim27"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_OWE_MONEY + TAG_DESC_BORROWED_TEXTBOOK,","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"lyndonlim27":22,"-":122}},{"path":"src/test/java/seedu/address/logic/parser/AddRecurringEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleEventUtil.INVALID_TIME_RECURRING_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleEventUtil.MISSING_DAY_RECURRING_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleEventUtil.MISSING_INDEX_RECURRING_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.AddRecurringEventCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"public class AddRecurringEventCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"        AddRecurringEventCommandParser parser \u003d new AddRecurringEventCommandParser();","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"        String expected1 \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRecurringEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"        assertParseFailure(parser, MISSING_INDEX_RECURRING_EVENT, expected1);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        assertParseFailure(parser, MISSING_DAY_RECURRING_EVENT, expected1);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"        assertParseFailure(parser, INVALID_TIME_RECURRING_EVENT, expected1);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Alvozyn":27}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISOEVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.AddIsolatedEventCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.AddRecurringEventCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.DeleteIsolatedEventCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.EditIsolatedEventCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.commands.group.GroupCreateCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.commands.group.GroupDeleteCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.group.GroupFindCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.commands.group.GroupListCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.GroupNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"import seedu.address.model.person.MemberOfGroupPredicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"gmengqi"},"content":"    public void parseCommand_isolatedEvent() throws Exception {","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"gmengqi"},"content":"        AddIsolatedEventCommand command \u003d (AddIsolatedEventCommand) parser.parseCommand(","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"gmengqi"},"content":"                AddIsolatedEventCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"gmengqi"},"content":"                        + \"ie/biking\" + \" \" + \"f/09/03/2025 14:00\" + \" \" + \"t/09/03/2025 15:00\");","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"gmengqi"},"content":"        assertTrue(command.COMMAND_WORD \u003d\u003d \"event_create\");","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"    public void parseCommand_recurringEvent() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"        AddRecurringEventCommand command \u003d (AddRecurringEventCommand) parser.parseCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"                AddRecurringEventCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"                        + \"re/biking\" + \" \" + \"d/MONDAY\" + \" \" + \"f/14:00\" + \" \" + \"t/15:00\");","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"        assertTrue(command.COMMAND_WORD \u003d\u003d \"event_create_recur\");","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"gmengqi"},"content":"    public void parseCommand_deleteIsolatedEvent() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"gmengqi"},"content":"        DeleteIsolatedEventCommand command \u003d (DeleteIsolatedEventCommand) parser.parseCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"gmengqi"},"content":"                DeleteIsolatedEventCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"gmengqi"},"content":"                        + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"gmengqi"},"content":"        assertTrue(command.COMMAND_WORD \u003d\u003d \"ie_delete\");","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":98,"author":{"gitId":"lyndonlim27"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor, true), command);","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"gmengqi"},"content":"    public void parseCommand_editIsolatedEvent() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"gmengqi"},"content":"        EditIsolatedEventCommand command \u003d (EditIsolatedEventCommand) parser.parseCommand(","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"gmengqi"},"content":"                EditIsolatedEventCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"gmengqi"},"content":"                        + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_ISOEVENT + \"biking\");","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"gmengqi"},"content":"        assertTrue(command.COMMAND_WORD \u003d\u003d \"ie_edit\");","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"lyndonlim27"},"content":"    public void parseCommand_groupCreate() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"edures888"},"content":"        GroupCreateCommand command \u003d (GroupCreateCommand) parser.parseCommand(GroupCreateCommand.COMMAND_WORD","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"edures888"},"content":"                + \" g/2103\");","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"edures888"},"content":"        assertEquals(new GroupCreateCommand(new Group(\"2103\")), command);","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"lyndonlim27"},"content":"    public void parseCommand_groupFind() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"edures888"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"edures888"},"content":"        GroupFindCommand command \u003d (GroupFindCommand) parser.parseCommand(GroupFindCommand.COMMAND_WORD","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"edures888"},"content":"                + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"edures888"},"content":"        assertEquals(new GroupFindCommand(new GroupNameContainsKeywordsPredicate(keywords),","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"edures888"},"content":"                new MemberOfGroupPredicate(keywords)), command);","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"lyndonlim27"},"content":"    public void parseCommand_groupDelete() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"edures888"},"content":"        GroupDeleteCommand command \u003d (GroupDeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"edures888"},"content":"                GroupDeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"edures888"},"content":"        assertEquals(new GroupDeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"lyndonlim27"},"content":"    public void parseCommand_groupList() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"edures888"},"content":"        GroupListCommand command \u003d (GroupListCommand) parser.parseCommand(GroupListCommand.COMMAND_WORD);","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"edures888"},"content":"        assertEquals(new GroupListCommand(), command);","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Alvozyn":10,"gmengqi":25,"edures888":16,"lyndonlim27":21,"-":102}},{"path":"src/test/java/seedu/address/logic/parser/DeleteIsolatedEventParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDeleteEventInput.INVALID_INPUT_CONTAIN_ALPHABET;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.DeleteIsolatedEventCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"public class DeleteIsolatedEventParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"    private DeleteIsolatedEventParser parser \u003d new DeleteIsolatedEventParser();","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"                DeleteIsolatedEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"        assertParseFailure(parser, INVALID_INPUT_CONTAIN_ALPHABET, expectedMessage);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"gmengqi":22}},{"path":"src/test/java/seedu/address/logic/parser/DeleteRecurringEventParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDeleteEventInput.INVALID_INPUT_CONTAIN_ALPHABET;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.DeleteRecurringEventCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"public class DeleteRecurringEventParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"    private DeleteRecurringEventParser parser \u003d new DeleteRecurringEventParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"                DeleteRecurringEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"        assertParseFailure(parser, INVALID_INPUT_CONTAIN_ALPHABET, expectedMessage);","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Alvozyn":22}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_CS2103;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_BORROWED_TEXTBOOK;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_OWE_MONEY;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BORROWED_TEXTBOOK;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OWE_MONEY;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MERGE;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"lyndonlim27"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_BORROWED_TEXTBOOK + TAG_DESC_OWE_MONEY + TAG_EMPTY,","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"lyndonlim27"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"lyndonlim27"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_BORROWED_TEXTBOOK + TAG_EMPTY + TAG_DESC_OWE_MONEY,","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"lyndonlim27"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"lyndonlim27"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_BORROWED_TEXTBOOK + TAG_DESC_OWE_MONEY,","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"lyndonlim27"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"lyndonlim27"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_OWE_MONEY","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"lyndonlim27"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_BORROWED_TEXTBOOK;","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"lyndonlim27"},"content":"                .withTags(VALID_TAG_OWE_MONEY, VALID_TAG_BORROWED_TEXTBOOK).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"lyndonlim27"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"lyndonlim27"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"lyndonlim27"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"lyndonlim27"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_BORROWED_TEXTBOOK;","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"lyndonlim27"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_BORROWED_TEXTBOOK).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":169,"author":{"gitId":"lyndonlim27"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"lyndonlim27"},"content":"                + TAG_DESC_BORROWED_TEXTBOOK + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"lyndonlim27"},"content":"                + TAG_DESC_BORROWED_TEXTBOOK + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_OWE_MONEY;","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"lyndonlim27"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"lyndonlim27"},"content":"                .withTags(VALID_TAG_BORROWED_TEXTBOOK, VALID_TAG_OWE_MONEY)","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"lyndonlim27"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":218,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":219,"author":{"gitId":"lyndonlim27"},"content":"    public void parse_mergeNoTagInput_failure() {","lastModifiedDate":"2023-03-20"},{"lineNumber":220,"author":{"gitId":"lyndonlim27"},"content":"        assertParseFailure(parser, \"1 m/ t/\", EditCommand.MESSAGE_NO_TAG_ADDED);","lastModifiedDate":"2023-03-20"},{"lineNumber":221,"author":{"gitId":"lyndonlim27"},"content":"        assertParseFailure(parser, \"1 t/ m/\", EditCommand.MESSAGE_NO_TAG_ADDED);","lastModifiedDate":"2023-03-20"},{"lineNumber":222,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":224,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":225,"author":{"gitId":"lyndonlim27"},"content":"    public void parse_mergeNoGroupInput_failure() {","lastModifiedDate":"2023-03-20"},{"lineNumber":226,"author":{"gitId":"lyndonlim27"},"content":"        assertParseFailure(parser, \"1 m/ g/\", EditCommand.MESSAGE_NO_GROUP_ADDED);","lastModifiedDate":"2023-03-20"},{"lineNumber":227,"author":{"gitId":"lyndonlim27"},"content":"        assertParseFailure(parser, \"1 g/ m/\", EditCommand.MESSAGE_NO_GROUP_ADDED);","lastModifiedDate":"2023-03-20"},{"lineNumber":228,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":229,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":230,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":231,"author":{"gitId":"lyndonlim27"},"content":"    public void parse_mergeTag_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":232,"author":{"gitId":"lyndonlim27"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-20"},{"lineNumber":233,"author":{"gitId":"lyndonlim27"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_BORROWED_TEXTBOOK + \" \" + PREFIX_MERGE;","lastModifiedDate":"2023-03-20"},{"lineNumber":234,"author":{"gitId":"lyndonlim27"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags(\"Borrowed Textbook\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":235,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2023-03-20"},{"lineNumber":236,"author":{"gitId":"lyndonlim27"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":237,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":238,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":239,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":240,"author":{"gitId":"lyndonlim27"},"content":"    public void parse_mergeGroup_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":241,"author":{"gitId":"lyndonlim27"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-20"},{"lineNumber":242,"author":{"gitId":"lyndonlim27"},"content":"        String userInput \u003d targetIndex.getOneBased() + GROUP_DESC_CS2103 + \" \" + PREFIX_MERGE;","lastModifiedDate":"2023-03-20"},{"lineNumber":243,"author":{"gitId":"lyndonlim27"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withGroups(\"CS2103\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":244,"author":{"gitId":"lyndonlim27"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, true);","lastModifiedDate":"2023-03-20"},{"lineNumber":245,"author":{"gitId":"lyndonlim27"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":246,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"lyndonlim27":62,"-":185}},{"path":"src/test/java/seedu/address/logic/parser/EditIsolatedEventParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.commands.EditIsolatedEventCommand.MESSAGE_NOT_EDITED;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.EditIsolatedEventCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"public class EditIsolatedEventParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditIsolatedEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"    private EditIsolatedEventCommandParser parser \u003d new EditIsolatedEventCommandParser();","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"        // no field specified","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"        assertParseFailure(parser, \"1 1\", MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"        // wrong input format","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"        assertParseFailure(parser, \"1 1 2\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"gmengqi":24}},{"path":"src/test/java/seedu/address/logic/parser/EditRecurringEventParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.commands.EditRecurringEventCommand.MESSAGE_NOT_EDITED;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.EditRecurringEventCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"public class EditRecurringEventParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditRecurringEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    private EditRecurringEventCommandParser parser \u003d new EditRecurringEventCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"        // no field specified","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"        assertParseFailure(parser, \"1 1\", MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"        // wrong input format","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        assertParseFailure(parser, \"1 1 2\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Alvozyn":25}},{"path":"src/test/java/seedu/address/logic/parser/ExportCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":" * outside of the ExportCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":" * same path through the ExportCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"public class ExportCommandParserTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"    private ExportCommandParser parser \u003d new ExportCommandParser();","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    public void parse_validArgs_returnsExportCommand() {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"        assertParseSuccess(parser, \"1\", new ExportCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"                ExportCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"lyndonlim27":31}},{"path":"src/test/java/seedu/address/logic/parser/FindTimeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.commands.FindTimeCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"public class FindTimeCommandParserTest {","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"    private FindTimeCommandParser parser \u003d new FindTimeCommandParser();","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"                FindTimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"    public void parse_allFieldsPresent_success() throws ParseException, CommandException {","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"        FindTimeCommand expectedFindTimeCommand \u003d","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"                new FindTimeCommand(INDEX_FIRST_GROUP, LocalDate.now());","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"        FindTimeCommand userFindTimeCommand \u003d parser.parse(\"1\");","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"        CommandResult expectedCommandResult \u003d expectedFindTimeCommand.execute(expectedModel);","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"        CommandResult commandResult \u003d userFindTimeCommand.execute(model);","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"        assertEquals(expectedCommandResult, commandResult);","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"    public void parse_optionalFieldsPresent_success() throws ParseException, CommandException {","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"        FindTimeCommand expectedFindTimeCommand \u003d","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"                new FindTimeCommand(INDEX_FIRST_GROUP, LocalDate.now());","lastModifiedDate":"2023-04-10"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        FindTimeCommand userFindTimeCommand \u003d parser.parse(\"1 f/01/01/2023\");","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"        CommandResult expectedCommandResult \u003d expectedFindTimeCommand.execute(expectedModel);","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"        CommandResult commandResult \u003d userFindTimeCommand.execute(model);","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"        assertEquals(expectedCommandResult, commandResult);","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"edures888":10,"lyndonlim27":43}},{"path":"src/test/java/seedu/address/logic/parser/IsolatedEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleEventUtil.INVALID_DATE_FORMAT_ISOLATED_EVENT;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleEventUtil.MISSING_EVENT_NAME_ISOLATED_EVENT;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleEventUtil.MISSING_INDEX_ISOLATED_EVENT;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.AddIsolatedEventCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"public class IsolatedEventCommandParserTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"    private AddIsolatedEventCommandParser parser \u003d new AddIsolatedEventCommandParser();","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddIsolatedEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"        assertParseFailure(parser, MISSING_INDEX_ISOLATED_EVENT, expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"        assertParseFailure(parser, MISSING_EVENT_NAME_ISOLATED_EVENT, expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"        assertParseFailure(parser, INVALID_DATE_FORMAT_ISOLATED_EVENT, expectedMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"gmengqi":26}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.parser.ParserUtil.parseDateTime;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.ParserUtil.parseDayOfWeek;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.ParserUtil.parseEventName;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.ParserUtil.parsePeriod;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.ParserUtil.parseTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"gmengqi"},"content":"    public void checkDateExists_throwsParseException() {","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime date \u003d LocalDateTime.of(2024, 04, 30, 18, 00);","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"gmengqi"},"content":"        assertThrows(ParseException.class, Messages.MESSAGE_NONEXISTENT_DATE, ()","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"gmengqi"},"content":"                -\u003e ParserUtil.checkDateExist(date, String.valueOf(31)));","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":214,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":215,"author":{"gitId":"Alvozyn"},"content":"    public void parseDate_invalidTimeFormat_throwError() {","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"Alvozyn"},"content":"        assertThrows(ParseException.class, () -\u003e parseTime(\"17\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":217,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":218,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":219,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":220,"author":{"gitId":"Alvozyn"},"content":"    public void parseDate_validTime_returnLocalTime() throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":221,"author":{"gitId":"Alvozyn"},"content":"        LocalTime expected \u003d LocalTime.parse(\"14:00\");","lastModifiedDate":"2023-03-12"},{"lineNumber":222,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(expected, parseTime(\"14:00\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":223,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":224,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":225,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":226,"author":{"gitId":"gmengqi"},"content":"    public void invalidDateTime_leapYear_throwError() {","lastModifiedDate":"2023-04-07"},{"lineNumber":227,"author":{"gitId":"gmengqi"},"content":"        assertThrows(ParseException.class, () -\u003e parseDateTime(\"29/02/2025 12:00\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":228,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":229,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":230,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":231,"author":{"gitId":"gmengqi"},"content":"    public void checkLeapYear_returnTrue() {","lastModifiedDate":"2023-04-07"},{"lineNumber":232,"author":{"gitId":"gmengqi"},"content":"        assertEquals(true, ParserUtil.isLeapYear(2024));","lastModifiedDate":"2023-04-07"},{"lineNumber":233,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":234,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":235,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":236,"author":{"gitId":"gmengqi"},"content":"    public void checkLeapYear_returnFalse() {","lastModifiedDate":"2023-04-07"},{"lineNumber":237,"author":{"gitId":"gmengqi"},"content":"        assertEquals(false, ParserUtil.isLeapYear(2100));","lastModifiedDate":"2023-04-07"},{"lineNumber":238,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":239,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":240,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":241,"author":{"gitId":"gmengqi"},"content":"    public void validDateTime_leapYear() throws ParseException {","lastModifiedDate":"2023-04-07"},{"lineNumber":242,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 02, 29, 12, 00);","lastModifiedDate":"2023-04-07"},{"lineNumber":243,"author":{"gitId":"gmengqi"},"content":"        assertEquals(expectedDateTime, ParserUtil.parseDateTime(\"29/02/2024 12:00\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":244,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":245,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":246,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":247,"author":{"gitId":"gmengqi"},"content":"    public void isLeapYear() throws ParseException {","lastModifiedDate":"2023-04-08"},{"lineNumber":248,"author":{"gitId":"gmengqi"},"content":"        assertEquals(true, ParserUtil.isLeapYear(2000));","lastModifiedDate":"2023-04-08"},{"lineNumber":249,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":250,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":251,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":252,"author":{"gitId":"Alvozyn"},"content":"    public void parseDate_invalidDay_throwError() {","lastModifiedDate":"2023-03-12"},{"lineNumber":253,"author":{"gitId":"Alvozyn"},"content":"        assertThrows(ParseException.class, () -\u003e parseDayOfWeek(\"INVALID\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":254,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":255,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":256,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":257,"author":{"gitId":"Alvozyn"},"content":"    public void parseDate_validDay_returnDayOfWeek() throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":258,"author":{"gitId":"Alvozyn"},"content":"        DayOfWeek expected \u003d DayOfWeek.MONDAY;","lastModifiedDate":"2023-03-12"},{"lineNumber":259,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(expected, parseDayOfWeek(\"MONDAY\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":260,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":261,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":262,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":263,"author":{"gitId":"Alvozyn"},"content":"    public void parseDate_invalidPeriod_throwError() {","lastModifiedDate":"2023-03-12"},{"lineNumber":264,"author":{"gitId":"Alvozyn"},"content":"        LocalTime startTime \u003d LocalTime.parse(\"16:00\");","lastModifiedDate":"2023-03-12"},{"lineNumber":265,"author":{"gitId":"Alvozyn"},"content":"        LocalTime endTime \u003d LocalTime.parse(\"12:00\");","lastModifiedDate":"2023-03-12"},{"lineNumber":266,"author":{"gitId":"Alvozyn"},"content":"        assertThrows(ParseException.class, () -\u003e parsePeriod(startTime, endTime));","lastModifiedDate":"2023-03-12"},{"lineNumber":267,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":268,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":269,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":270,"author":{"gitId":"Alvozyn"},"content":"    public void parseDate_validPeriod_throwError() throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":271,"author":{"gitId":"Alvozyn"},"content":"        LocalTime startTime \u003d LocalTime.parse(\"12:00\");","lastModifiedDate":"2023-03-12"},{"lineNumber":272,"author":{"gitId":"Alvozyn"},"content":"        LocalTime endTime \u003d LocalTime.parse(\"16:00\");","lastModifiedDate":"2023-03-12"},{"lineNumber":273,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(true, parsePeriod(startTime, endTime));","lastModifiedDate":"2023-03-12"},{"lineNumber":274,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":275,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":276,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":277,"author":{"gitId":"gmengqi"},"content":"    public void parseDate_emptyDate_throwError() {","lastModifiedDate":"2023-03-10"},{"lineNumber":278,"author":{"gitId":"edures888"},"content":"        assertThrows(ParseException.class, () -\u003e parseDateTime(\"\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":279,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":280,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":281,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":282,"author":{"gitId":"gmengqi"},"content":"    public void parseDate_invalidDateFormat_throwError() {","lastModifiedDate":"2023-03-10"},{"lineNumber":283,"author":{"gitId":"edures888"},"content":"        assertThrows(ParseException.class, () -\u003e parseDateTime(\"09-03-2023 1400\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":284,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":285,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":286,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":287,"author":{"gitId":"gmengqi"},"content":"    public void parseDate_validDate_returnLocalDateTime() throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":288,"author":{"gitId":"gmengqi"},"content":"        DateTimeFormatter newFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-03-10"},{"lineNumber":289,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime expected \u003d LocalDateTime.parse(\"09/03/2023 14:00\", newFormatter);","lastModifiedDate":"2023-03-10"},{"lineNumber":290,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":291,"author":{"gitId":"edures888"},"content":"        assertEquals(expected, parseDateTime(\"09/03/2023 14:00\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":292,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":293,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":294,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":295,"author":{"gitId":"gmengqi"},"content":"    public void parseEventName_emptyEventName_throwError() {","lastModifiedDate":"2023-03-10"},{"lineNumber":296,"author":{"gitId":"gmengqi"},"content":"        assertThrows(ParseException.class, () -\u003e parseEventName(\"\"));","lastModifiedDate":"2023-03-10"},{"lineNumber":297,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":298,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":299,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":300,"author":{"gitId":"gmengqi"},"content":"    public void parseEventName_validEventName_returnTrimmed() throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":301,"author":{"gitId":"gmengqi"},"content":"        assertEquals(\"biking\", parseEventName(\"biking     \"));","lastModifiedDate":"2023-03-10"},{"lineNumber":302,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":303,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":304,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":305,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":306,"author":{"gitId":"gmengqi"},"content":"    public void parseDate_notHourlyTime() {","lastModifiedDate":"2023-03-30"},{"lineNumber":307,"author":{"gitId":"edures888"},"content":"        assertThrows(ParseException.class, () -\u003e parseDateTime(\"09-03-2023 1400\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":308,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Alvozyn":43,"gmengqi":65,"edures888":5,"-":196}},{"path":"src/test/java/seedu/address/logic/parser/group/GroupCreateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.parser.group;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_CS2103;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_CS2103;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.group.GroupCreateCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"class GroupCreateCommandParserTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    private GroupCreateCommandParser parser \u003d new GroupCreateCommandParser();","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"        Group expectedGroup \u003d new Group(VALID_GROUP_CS2103);","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GROUP_DESC_CS2103,","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"                new GroupCreateCommand(expectedGroup));","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    public void parse_missingField_failure() {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCreateCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE, expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"edures888":27,"lyndonlim27":4}},{"path":"src/test/java/seedu/address/logic/parser/group/GroupDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.parser.group;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.group.GroupDeleteCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"class GroupDeleteCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    private GroupDeleteCommandParser parser \u003d new GroupDeleteCommandParser();","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"        assertParseSuccess(parser, \"1\", new GroupDeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"                GroupDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"edures888":26}},{"path":"src/test/java/seedu/address/logic/parser/group/GroupFindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.logic.parser.group;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import seedu.address.logic.commands.group.GroupFindCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.GroupNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"import seedu.address.model.person.MemberOfGroupPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"class GroupFindCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    private GroupFindCommandParser parser \u003d new GroupFindCommandParser();","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        List\u003cString\u003e keywordList \u003d Arrays.asList(\"Friends\", \"CS2103\");","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        GroupFindCommand expectedGroupFindCommand \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"                new GroupFindCommand(new GroupNameContainsKeywordsPredicate(keywordList),","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"                        new MemberOfGroupPredicate(keywordList));","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        assertParseSuccess(parser, \"Friends CS2103\", expectedGroupFindCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        assertParseSuccess(parser, \" \\n Friends \\n \\t CS2103  \\t\", expectedGroupFindCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"edures888":39}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OWE_MONEY;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"import seedu.address.model.time.ScheduleWeek;","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_OWE_MONEY)","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"lyndonlim27"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_OWE_MONEY)","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"lyndonlim27"},"content":"    public void hasGroupInPerson_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"lyndonlim27"},"content":"        Group group \u003d new Group(\"2103T\");","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"lyndonlim27"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"lyndonlim27"},"content":"        addressBook.addPersonInGroup(aliceCopy, group);","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(aliceCopy.getGroups().contains(group));","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"lyndonlim27"},"content":"    public void doNotHaveGroupInPerson_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"lyndonlim27"},"content":"        Group group \u003d new Group(\"2103T\");","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"lyndonlim27"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"lyndonlim27"},"content":"        addressBook.addPersonInGroup(aliceCopy, group);","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"lyndonlim27"},"content":"        addressBook.removePersonFromGroup(aliceCopy, group);","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(!aliceCopy.getGroups().contains(group));","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"lyndonlim27"},"content":"    public void hasGroup_groupInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"lyndonlim27"},"content":"        Group group \u003d new Group(\"2103T\");","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"lyndonlim27"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(addressBook.hasGroup(group));","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"lyndonlim27"},"content":"    public void doNotHaveGroup_groupInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"lyndonlim27"},"content":"        Group group \u003d new Group(\"2103T\");","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"lyndonlim27"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"lyndonlim27"},"content":"        addressBook.deleteGroup(group);","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(!addressBook.hasGroup(group));","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-04-01"},{"lineNumber":121,"author":{"gitId":"lyndonlim27"},"content":"    public void deleteGroup_groupInAddressBook_returnsTrue() {","lastModifiedDate":"2023-04-01"},{"lineNumber":122,"author":{"gitId":"lyndonlim27"},"content":"        Group group \u003d new Group(\"CS2101\");","lastModifiedDate":"2023-04-01"},{"lineNumber":123,"author":{"gitId":"lyndonlim27"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2023-04-01"},{"lineNumber":124,"author":{"gitId":"lyndonlim27"},"content":"        Person person \u003d new PersonBuilder(ALICE).withGroups(\"CS2101\").build();","lastModifiedDate":"2023-04-01"},{"lineNumber":125,"author":{"gitId":"lyndonlim27"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2023-04-01"},{"lineNumber":126,"author":{"gitId":"lyndonlim27"},"content":"        addressBook.deleteGroup(group);","lastModifiedDate":"2023-04-01"},{"lineNumber":127,"author":{"gitId":"lyndonlim27"},"content":"        assertFalse(person.getGroups().contains(group));","lastModifiedDate":"2023-04-01"},{"lineNumber":128,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":129,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":130,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"edures888"},"content":"        private final ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"edures888"},"content":"        private final ScheduleWeek scheduleWeek \u003d new ScheduleWeek();","lastModifiedDate":"2023-04-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"edures888"},"content":"        public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"edures888"},"content":"            return groups;","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":154,"author":{"gitId":"edures888"},"content":"        /**","lastModifiedDate":"2023-04-10"},{"lineNumber":155,"author":{"gitId":"edures888"},"content":"         * Returns current filtered schedule of the address book.","lastModifiedDate":"2023-04-10"},{"lineNumber":156,"author":{"gitId":"edures888"},"content":"         */","lastModifiedDate":"2023-04-10"},{"lineNumber":157,"author":{"gitId":"edures888"},"content":"        @Override","lastModifiedDate":"2023-04-10"},{"lineNumber":158,"author":{"gitId":"edures888"},"content":"        public ScheduleWeek getSchedule() {","lastModifiedDate":"2023-04-10"},{"lineNumber":159,"author":{"gitId":"edures888"},"content":"            return scheduleWeek;","lastModifiedDate":"2023-04-10"},{"lineNumber":160,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"edures888":16,"lyndonlim27":47,"-":100}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_CS0000;","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_CS2103;","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BORROWED_TEXTBOOK;","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OWE_MONEY;","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"import seedu.address.model.time.ScheduleWeek;","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"import seedu.address.model.time.TimeMask;","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"import seedu.address.testutil.SampleEventUtil;","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"edures888"},"content":"    public void hasGroup_groupNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"edures888"},"content":"        Group group \u003d new Group(\"2103\");","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"edures888"},"content":"        assertFalse(modelManager.hasGroup(group));","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"edures888"},"content":"    public void hasGroup_groupInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"edures888"},"content":"        Group group \u003d new Group(\"2103\");","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"edures888"},"content":"        modelManager.addGroup(group);","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"edures888"},"content":"        assertTrue(modelManager.hasGroup(group));","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"edures888"},"content":"    public void getFilteredGroupList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"edures888"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredGroupList().remove(0));","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-04-01"},{"lineNumber":136,"author":{"gitId":"lyndonlim27"},"content":"    public void addPersonInGroup_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-04-01"},{"lineNumber":137,"author":{"gitId":"lyndonlim27"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":138,"author":{"gitId":"lyndonlim27"},"content":"                modelManager.addPersonInGroup(null, new Group(\"CS2103\")));","lastModifiedDate":"2023-04-01"},{"lineNumber":139,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":140,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":141,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-04-01"},{"lineNumber":142,"author":{"gitId":"lyndonlim27"},"content":"    public void addPersonInGroup_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2023-04-01"},{"lineNumber":143,"author":{"gitId":"lyndonlim27"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":144,"author":{"gitId":"lyndonlim27"},"content":"                modelManager.addPersonInGroup(new PersonBuilder(ALICE).build(), null));","lastModifiedDate":"2023-04-01"},{"lineNumber":145,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":146,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":147,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-04-01"},{"lineNumber":148,"author":{"gitId":"lyndonlim27"},"content":"    public void removePersonFromGroup_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2023-04-01"},{"lineNumber":149,"author":{"gitId":"lyndonlim27"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":150,"author":{"gitId":"lyndonlim27"},"content":"                modelManager.removePersonFromGroup(new PersonBuilder(ALICE).build(), null));","lastModifiedDate":"2023-04-01"},{"lineNumber":151,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":152,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":153,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-04-01"},{"lineNumber":154,"author":{"gitId":"lyndonlim27"},"content":"    public void removePersonFromGroup_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-04-01"},{"lineNumber":155,"author":{"gitId":"lyndonlim27"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":156,"author":{"gitId":"lyndonlim27"},"content":"                modelManager.removePersonFromGroup(null, new Group(\"CS2103\")));","lastModifiedDate":"2023-04-01"},{"lineNumber":157,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":158,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":159,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-04-01"},{"lineNumber":160,"author":{"gitId":"lyndonlim27"},"content":"    public void updateFilteredTimeSlotList_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2023-04-01"},{"lineNumber":161,"author":{"gitId":"lyndonlim27"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":162,"author":{"gitId":"lyndonlim27"},"content":"                modelManager.updateFilteredTimeSlotList(null, LocalDate.of(299, 1, 1)));","lastModifiedDate":"2023-04-01"},{"lineNumber":163,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":164,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":165,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-04-01"},{"lineNumber":166,"author":{"gitId":"lyndonlim27"},"content":"    public void updateFilteredTimeSlotList_nullDate_throwsNullPointerException() {","lastModifiedDate":"2023-04-01"},{"lineNumber":167,"author":{"gitId":"lyndonlim27"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":168,"author":{"gitId":"lyndonlim27"},"content":"                modelManager.updateFilteredTimeSlotList(new Group(\"CS2103\"), null));","lastModifiedDate":"2023-04-01"},{"lineNumber":169,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":170,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":171,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-04-10"},{"lineNumber":172,"author":{"gitId":"edures888"},"content":"     * Includes integration tests for scheduling features","lastModifiedDate":"2023-04-10"},{"lineNumber":173,"author":{"gitId":"edures888"},"content":"     * which involve TimeMask, the Events, the EventLists and ScheduleWeek","lastModifiedDate":"2023-04-10"},{"lineNumber":174,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-04-10"},{"lineNumber":175,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-04-10"},{"lineNumber":176,"author":{"gitId":"edures888"},"content":"    public void updateFilteredTimeSlotList_multipleEventCombinations_returnsTrue() {","lastModifiedDate":"2023-04-10"},{"lineNumber":177,"author":{"gitId":"edures888"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2023-04-10"},{"lineNumber":178,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":179,"author":{"gitId":"edures888"},"content":"        Set\u003cIsolatedEvent\u003e validIsolatedEventSet \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-04-10"},{"lineNumber":180,"author":{"gitId":"edures888"},"content":"        validIsolatedEventSet.add(SampleEventUtil.getNearFutureIsolatedEvent());","lastModifiedDate":"2023-04-10"},{"lineNumber":181,"author":{"gitId":"edures888"},"content":"        validIsolatedEventSet.add(SampleEventUtil.getFarFutureIsolatedEvent());","lastModifiedDate":"2023-04-10"},{"lineNumber":182,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":183,"author":{"gitId":"edures888"},"content":"        Set\u003cRecurringEvent\u003e validRecurringEventSet \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-04-10"},{"lineNumber":184,"author":{"gitId":"edures888"},"content":"        validRecurringEventSet.add(SampleEventUtil.HALF_DAY_RECURRING_EVENT);","lastModifiedDate":"2023-04-10"},{"lineNumber":185,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":186,"author":{"gitId":"edures888"},"content":"        // Names are abbreviations for type of Person with respect to involved Groups and Events","lastModifiedDate":"2023-04-10"},{"lineNumber":187,"author":{"gitId":"edures888"},"content":"        Person singleMemberNoEvents \u003d new PersonBuilder().withName(\"SMNE\").withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-04-10"},{"lineNumber":188,"author":{"gitId":"edures888"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-04-10"},{"lineNumber":189,"author":{"gitId":"edures888"},"content":"                .withTags(VALID_TAG_OWE_MONEY, VALID_TAG_BORROWED_TEXTBOOK)","lastModifiedDate":"2023-04-10"},{"lineNumber":190,"author":{"gitId":"edures888"},"content":"                .withGroups(VALID_GROUP_CS2103)","lastModifiedDate":"2023-04-10"},{"lineNumber":191,"author":{"gitId":"edures888"},"content":"                .build();","lastModifiedDate":"2023-04-10"},{"lineNumber":192,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":193,"author":{"gitId":"edures888"},"content":"        Person singleMemberWithMixedEvents \u003d new PersonBuilder().withName(\"SMWME\").withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-04-10"},{"lineNumber":194,"author":{"gitId":"edures888"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-04-10"},{"lineNumber":195,"author":{"gitId":"edures888"},"content":"                .withTags(VALID_TAG_OWE_MONEY, VALID_TAG_BORROWED_TEXTBOOK)","lastModifiedDate":"2023-04-10"},{"lineNumber":196,"author":{"gitId":"edures888"},"content":"                .withGroups(VALID_GROUP_CS0000)","lastModifiedDate":"2023-04-10"},{"lineNumber":197,"author":{"gitId":"edures888"},"content":"                .withIsolatedEventList(validIsolatedEventSet)","lastModifiedDate":"2023-04-10"},{"lineNumber":198,"author":{"gitId":"edures888"},"content":"                .withRecurringEventList(validRecurringEventSet)","lastModifiedDate":"2023-04-10"},{"lineNumber":199,"author":{"gitId":"edures888"},"content":"                .build();","lastModifiedDate":"2023-04-10"},{"lineNumber":200,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":201,"author":{"gitId":"edures888"},"content":"        Person firstMemberWithIsolatedEventsOnly \u003d new PersonBuilder().withName(\"FMIEO\").withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-04-10"},{"lineNumber":202,"author":{"gitId":"edures888"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-04-10"},{"lineNumber":203,"author":{"gitId":"edures888"},"content":"                .withTags(VALID_TAG_OWE_MONEY, VALID_TAG_BORROWED_TEXTBOOK)","lastModifiedDate":"2023-04-10"},{"lineNumber":204,"author":{"gitId":"edures888"},"content":"                .withGroups(VALID_GROUP_CS0000)","lastModifiedDate":"2023-04-10"},{"lineNumber":205,"author":{"gitId":"edures888"},"content":"                .withIsolatedEventList(validIsolatedEventSet)","lastModifiedDate":"2023-04-10"},{"lineNumber":206,"author":{"gitId":"edures888"},"content":"                .build();","lastModifiedDate":"2023-04-10"},{"lineNumber":207,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":208,"author":{"gitId":"edures888"},"content":"        Person secondMemberWithRecurringEventsOnly \u003d new PersonBuilder().withName(\"SMREO\").withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-04-10"},{"lineNumber":209,"author":{"gitId":"edures888"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-04-10"},{"lineNumber":210,"author":{"gitId":"edures888"},"content":"                .withTags(VALID_TAG_OWE_MONEY, VALID_TAG_BORROWED_TEXTBOOK)","lastModifiedDate":"2023-04-10"},{"lineNumber":211,"author":{"gitId":"edures888"},"content":"                .withGroups(VALID_GROUP_CS0000)","lastModifiedDate":"2023-04-10"},{"lineNumber":212,"author":{"gitId":"edures888"},"content":"                .withRecurringEventList(validRecurringEventSet)","lastModifiedDate":"2023-04-10"},{"lineNumber":213,"author":{"gitId":"edures888"},"content":"                .build();","lastModifiedDate":"2023-04-10"},{"lineNumber":214,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":215,"author":{"gitId":"edures888"},"content":"        Group cs0000 \u003d new Group(VALID_GROUP_CS0000);","lastModifiedDate":"2023-04-10"},{"lineNumber":216,"author":{"gitId":"edures888"},"content":"        Group cs2103 \u003d new Group(VALID_GROUP_CS2103);","lastModifiedDate":"2023-04-10"},{"lineNumber":217,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":218,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":219,"author":{"gitId":"edures888"},"content":"        // Force start date to be the nearest Monday after a week from now","lastModifiedDate":"2023-04-10"},{"lineNumber":220,"author":{"gitId":"edures888"},"content":"        LocalDate startDate \u003d LocalDate.now().plusWeeks(1);","lastModifiedDate":"2023-04-10"},{"lineNumber":221,"author":{"gitId":"edures888"},"content":"        startDate \u003d startDate.plusDays(7 + 1 - startDate.getDayOfWeek().getValue());","lastModifiedDate":"2023-04-10"},{"lineNumber":222,"author":{"gitId":"edures888"},"content":"        ScheduleWeek expectedSchedule \u003d new ScheduleWeek();","lastModifiedDate":"2023-04-10"},{"lineNumber":223,"author":{"gitId":"edures888"},"content":"        int fullyOccupiedDay \u003d Integer.parseInt(\"1\".repeat(24), 2);","lastModifiedDate":"2023-04-10"},{"lineNumber":224,"author":{"gitId":"edures888"},"content":"        int halfOccupiedDay \u003d Integer.parseInt(\"1\".repeat(12), 2);","lastModifiedDate":"2023-04-10"},{"lineNumber":225,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":226,"author":{"gitId":"edures888"},"content":"        // First Test Case - Occupied Monday and Tuesday, combination of Schedules of 2 Persons in same Group","lastModifiedDate":"2023-04-10"},{"lineNumber":227,"author":{"gitId":"edures888"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder()","lastModifiedDate":"2023-04-10"},{"lineNumber":228,"author":{"gitId":"edures888"},"content":"                .withGroup(cs0000)","lastModifiedDate":"2023-04-10"},{"lineNumber":229,"author":{"gitId":"edures888"},"content":"                .withGroup(cs2103)","lastModifiedDate":"2023-04-10"},{"lineNumber":230,"author":{"gitId":"edures888"},"content":"                .withPerson(firstMemberWithIsolatedEventsOnly)","lastModifiedDate":"2023-04-10"},{"lineNumber":231,"author":{"gitId":"edures888"},"content":"                .withPerson(secondMemberWithRecurringEventsOnly)","lastModifiedDate":"2023-04-10"},{"lineNumber":232,"author":{"gitId":"edures888"},"content":"                .build();","lastModifiedDate":"2023-04-10"},{"lineNumber":233,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":234,"author":{"gitId":"edures888"},"content":"        TimeMask occupiedMondayAndTuesday \u003d new TimeMask(new int[]{halfOccupiedDay, fullyOccupiedDay, 0, 0, 0, 0, 0});","lastModifiedDate":"2023-04-10"},{"lineNumber":235,"author":{"gitId":"edures888"},"content":"        modelManager.setAddressBook(addressBook);","lastModifiedDate":"2023-04-10"},{"lineNumber":236,"author":{"gitId":"edures888"},"content":"        modelManager.updateFilteredTimeSlotList(cs0000, startDate);","lastModifiedDate":"2023-04-10"},{"lineNumber":237,"author":{"gitId":"edures888"},"content":"        expectedSchedule.setInternalList(","lastModifiedDate":"2023-04-10"},{"lineNumber":238,"author":{"gitId":"edures888"},"content":"                TimeMask.getTimeSlotIndexes(occupiedMondayAndTuesday),","lastModifiedDate":"2023-04-10"},{"lineNumber":239,"author":{"gitId":"edures888"},"content":"                DayOfWeek.MONDAY);","lastModifiedDate":"2023-04-10"},{"lineNumber":240,"author":{"gitId":"edures888"},"content":"        assertEquals(modelManager.getAddressBook().getSchedule(), expectedSchedule);","lastModifiedDate":"2023-04-10"},{"lineNumber":241,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":242,"author":{"gitId":"edures888"},"content":"        // Second Test Case - Fully unoccupied Timetable","lastModifiedDate":"2023-04-10"},{"lineNumber":243,"author":{"gitId":"edures888"},"content":"        addressBook \u003d new AddressBookBuilder()","lastModifiedDate":"2023-04-10"},{"lineNumber":244,"author":{"gitId":"edures888"},"content":"                .withGroup(cs0000)","lastModifiedDate":"2023-04-10"},{"lineNumber":245,"author":{"gitId":"edures888"},"content":"                .withGroup(cs2103)","lastModifiedDate":"2023-04-10"},{"lineNumber":246,"author":{"gitId":"edures888"},"content":"                .withPerson(singleMemberNoEvents)","lastModifiedDate":"2023-04-10"},{"lineNumber":247,"author":{"gitId":"edures888"},"content":"                .withPerson(singleMemberWithMixedEvents)","lastModifiedDate":"2023-04-10"},{"lineNumber":248,"author":{"gitId":"edures888"},"content":"                .build();","lastModifiedDate":"2023-04-10"},{"lineNumber":249,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":250,"author":{"gitId":"edures888"},"content":"        // The IsolatedEvents used here are forced to occur during a Tuesday","lastModifiedDate":"2023-04-10"},{"lineNumber":251,"author":{"gitId":"edures888"},"content":"        expectedSchedule.setInternalList(","lastModifiedDate":"2023-04-10"},{"lineNumber":252,"author":{"gitId":"edures888"},"content":"                TimeMask.getTimeSlotIndexes(new TimeMask()),","lastModifiedDate":"2023-04-10"},{"lineNumber":253,"author":{"gitId":"edures888"},"content":"                DayOfWeek.MONDAY);","lastModifiedDate":"2023-04-10"},{"lineNumber":254,"author":{"gitId":"edures888"},"content":"        modelManager.setAddressBook(addressBook);","lastModifiedDate":"2023-04-10"},{"lineNumber":255,"author":{"gitId":"edures888"},"content":"        modelManager.updateFilteredTimeSlotList(cs2103, startDate);","lastModifiedDate":"2023-04-10"},{"lineNumber":256,"author":{"gitId":"edures888"},"content":"        assertEquals(modelManager.getAddressBook().getSchedule(), expectedSchedule);","lastModifiedDate":"2023-04-10"},{"lineNumber":257,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":258,"author":{"gitId":"edures888"},"content":"        // Third Test Case - Occupied Tuesday by a single member in a Group","lastModifiedDate":"2023-04-10"},{"lineNumber":259,"author":{"gitId":"edures888"},"content":"        expectedSchedule.setInternalList(","lastModifiedDate":"2023-04-10"},{"lineNumber":260,"author":{"gitId":"edures888"},"content":"                TimeMask.getTimeSlotIndexes(new TimeMask(new int[]{halfOccupiedDay, fullyOccupiedDay, 0, 0, 0, 0, 0})),","lastModifiedDate":"2023-04-10"},{"lineNumber":261,"author":{"gitId":"edures888"},"content":"                DayOfWeek.MONDAY);","lastModifiedDate":"2023-04-10"},{"lineNumber":262,"author":{"gitId":"edures888"},"content":"        modelManager.updateFilteredTimeSlotList(cs0000, startDate);","lastModifiedDate":"2023-04-10"},{"lineNumber":263,"author":{"gitId":"edures888"},"content":"        assertEquals(modelManager.getAddressBook().getSchedule(), expectedSchedule);","lastModifiedDate":"2023-04-10"},{"lineNumber":264,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":265,"author":{"gitId":"edures888"},"content":"        expectedSchedule.setInternalList(TimeMask.getTimeSlotIndexes(new TimeMask()), DayOfWeek.MONDAY);","lastModifiedDate":"2023-04-10"},{"lineNumber":266,"author":{"gitId":"edures888"},"content":"        assertNotEquals(modelManager.getAddressBook().getSchedule(), expectedSchedule);","lastModifiedDate":"2023-04-10"},{"lineNumber":267,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":268,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"edures888":134,"lyndonlim27":39,"-":132}},{"path":"src/test/java/seedu/address/model/event/IsolatedEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.THREE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.TWO_O_CLOCK_VALID;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.exceptions.EventConflictException;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"class IsolatedEventListTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"    private final IsolatedEventList isolatedEventList \u003d new IsolatedEventList();","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"    private static class IsolatedEventStub extends IsolatedEvent {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"        public IsolatedEventStub(String eventName, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"            super(eventName, startDate, endDate);","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"        public int compareTo(IsolatedEvent o) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"            return this.getEventName().compareTo(o.getEventName());","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"    void insert_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"        assertThrows(NullPointerException.class, () -\u003e isolatedEventList.insert(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"    void checkOverlapping_throwsEventConflictException() {","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Biking\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Skiing\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Canoeing\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"gmengqi"},"content":"        IsolatedEventStub event \u003d new IsolatedEventStub(\"Biking\", TWO_O_CLOCK_VALID, THREE_O_CLOCK_VALID);","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"        assertThrows(EventConflictException.class, () -\u003e isolatedEventList.checkOverlapping(event, 1));","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"gmengqi"},"content":"    void checkClashingIsolatedEvent_throwsEventConflictException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Biking\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Skiing\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Canoeing\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"gmengqi"},"content":"        IsolatedEventStub event \u003d new IsolatedEventStub(\"Biking\", TWO_O_CLOCK_VALID, THREE_O_CLOCK_VALID);","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"gmengqi"},"content":"        assertThrows(EventConflictException.class, () -\u003e isolatedEventList.checkOverlapping(event, 1));","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"    void testToString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Biking\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Skiing\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Canoeing\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"        assertEquals(\"Isolated Events\\n1. Biking from: 09/03/2024 14:00 to: 09/03/2024 15:00\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"gmengqi"},"content":"                + \"2. Canoeing from: 09/03/2024 14:00 to: 09/03/2024 15:00\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"gmengqi"},"content":"                + \"3. Skiing from: 09/03/2024 14:00 to: 09/03/2024 15:00\\n\", isolatedEventList.toString());","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"gmengqi"},"content":"    void contain() {","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Biking\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Skiing\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Canoeing\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"gmengqi"},"content":"        assertTrue(isolatedEventList.contain(new IsolatedEventStub(\"Biking\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID)));","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"gmengqi"},"content":"        assertFalse(isolatedEventList.contain(new IsolatedEventStub(\"sleep\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID)));","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"gmengqi"},"content":"    void deleteIsolatedEvent() {","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent event \u003d new IsolatedEventStub(\"Biking\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID);","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(event);","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"gmengqi"},"content":"        assertTrue(isolatedEventList.contain(event));","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.deleteIsolatedEvent(event);","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"gmengqi"},"content":"        assertFalse(isolatedEventList.contain(event));","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"gmengqi"},"content":"    void getIsolatedEvent() {","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Biking\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Skiing\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(new IsolatedEventStub(\"Canoeing\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"gmengqi"},"content":"        assertEquals(\"Biking from: 09/03/2024 14:00 to: 09/03/2024 15:00\",","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"gmengqi"},"content":"                isolatedEventList.getIsolatedEvent(0).toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"gmengqi"},"content":"        assertEquals(\"Canoeing from: 09/03/2024 14:00 to: 09/03/2024 15:00\",","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"gmengqi"},"content":"                isolatedEventList.getIsolatedEvent(1).toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"gmengqi"},"content":"        assertEquals(\"Skiing from: 09/03/2024 14:00 to: 09/03/2024 15:00\",","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"gmengqi"},"content":"                isolatedEventList.getIsolatedEvent(2).toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"gmengqi"},"content":"    void edit() {","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent event \u003d new IsolatedEventStub(\"Skiing\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.insert(event);","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent editedEvent \u003d new IsolatedEventStub(\"Canoeing\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"gmengqi"},"content":"                THREE_O_CLOCK_VALID);","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"gmengqi"},"content":"        isolatedEventList.edit(event, editedEvent);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"gmengqi"},"content":"        assertEquals(isolatedEventList.getIsolatedEvent(0).toString(), editedEvent.toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"gmengqi":99,"lyndonlim27":1,"clydelhui":28}},{"path":"src/test/java/seedu/address/model/event/IsolatedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.FOUR_O_CLOCK_VALID;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.ONE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.SIX_O_CLOCK_VALID;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.THREE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.TWO_O_CLOCK_VALID;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"class IsolatedEventTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"    void occurBetween_test() {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent event \u003d new IsolatedEvent(\"biking\", TWO_O_CLOCK_VALID, THREE_O_CLOCK_VALID);","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"        assertTrue(event.occursBetween(TWO_O_CLOCK_VALID, THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"        assertTrue(event.occursBetween(ONE_O_CLOCK_VALID, THREE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"    void notOccurBetween_test() {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent event \u003d new IsolatedEvent(\"biking\", TWO_O_CLOCK_VALID, THREE_O_CLOCK_VALID);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"        assertFalse(event.occursBetween(FOUR_O_CLOCK_VALID, SIX_O_CLOCK_VALID));","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"    void toString_test() {","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent event \u003d new IsolatedEvent(\"biking\", TWO_O_CLOCK_VALID, THREE_O_CLOCK_VALID);","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"        assertEquals(\"biking from: 09/03/2024 14:00 to: 09/03/2024 15:00\", event.toString());","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"gmengqi":37}},{"path":"src/test/java/seedu/address/model/event/RecurringEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.FIVE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.FOUR_O_CLOCK_VALID;","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.MONDAY_SIX_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.NINE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.ONE_O_CLOCK_VALID;","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.THREE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.THURSDAY_TWELVE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.TWELVE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.TWO_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"class RecurringEventListTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"    private final RecurringEventList recurringEventList \u003d new RecurringEventList();","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"    private class RecurringEventStub extends RecurringEvent {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"        public RecurringEventStub(String eventName, DayOfWeek day, LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"            super(eventName, day, startTime, endTime);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"        public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"            return this.getEventName();","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"        public int compareTo(RecurringEvent recurringEvent2) {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"            return super.compareTo(recurringEvent2);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"    void insert_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"        assertThrows(NullPointerException.class, () -\u003e recurringEventList.insert(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"    void contain() {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"        recurringEventList.insert(new RecurringEventListTest.RecurringEventStub(\"Biking\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"                TWO_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"        recurringEventList.insert(new RecurringEventListTest.RecurringEventStub(\"Skiing\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"                TWO_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"        recurringEventList.insert(new RecurringEventListTest.RecurringEventStub(\"Canoeing\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"                TWO_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"        assertFalse(recurringEventList.contain(new RecurringEventListTest.RecurringEventStub(\"Biking\",","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"                DayOfWeek.WEDNESDAY, TWO_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime())));","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"        assertTrue(recurringEventList.contain(new RecurringEventListTest.RecurringEventStub(\"Canoeing\",","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"                DayOfWeek.MONDAY, TWO_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime())));","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"    void testToString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"        recurringEventList.insert(new RecurringEventStub(\"Biking\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"                TWO_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"        recurringEventList.insert(new RecurringEventStub(\"Skiing\", DayOfWeek.SATURDAY,","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"                NINE_O_CLOCK_VALID.toLocalTime(), TWELVE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"        recurringEventList.insert(new RecurringEventStub(\"Canoeing\", DayOfWeek.WEDNESDAY,","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"                TWELVE_O_CLOCK_VALID.toLocalTime(), FIVE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"        recurringEventList.insert(new RecurringEventStub(\"Invalid\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"                TWELVE_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"lyndonlim27"},"content":"        assertEquals(\"Recurring Events\\n1. Biking\\n\" + \"2. Canoeing\\n\" + \"3. Skiing\\n\", recurringEventList.toString());","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"    void testListBetweenOcurrence() {","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"        recurringEventList.insert(new RecurringEventStub(\"Biking\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"                TWO_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"        recurringEventList.insert(new RecurringEventStub(\"Skiing\", DayOfWeek.SATURDAY,","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"                NINE_O_CLOCK_VALID.toLocalTime(), TWELVE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"        recurringEventList.insert(new RecurringEventStub(\"Canoeing\", DayOfWeek.WEDNESDAY,","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"                TWELVE_O_CLOCK_VALID.toLocalTime(), FIVE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Alvozyn"},"content":"        recurringEventList.insert(new RecurringEventStub(\"Invalid\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"Alvozyn"},"content":"                TWELVE_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Alvozyn"},"content":"        LocalDateTime startPeriod \u003d MONDAY_SIX_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"        LocalDateTime endPeriod \u003d THURSDAY_TWELVE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(\"Biking\\n\" + \"Canoeing\\n\",","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"edures888"},"content":"                recurringEventList.listBetweenOccurrence(startPeriod, endPeriod));","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-04-10"},{"lineNumber":103,"author":{"gitId":"edures888"},"content":"    void testInsert() {","lastModifiedDate":"2023-04-10"},{"lineNumber":104,"author":{"gitId":"edures888"},"content":"        recurringEventList.insert(new RecurringEventStub(\"Biking\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-04-10"},{"lineNumber":105,"author":{"gitId":"edures888"},"content":"                TWO_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-04-10"},{"lineNumber":106,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":107,"author":{"gitId":"edures888"},"content":"        recurringEventList.insert(new RecurringEventStub(\"Skiing\", DayOfWeek.SATURDAY,","lastModifiedDate":"2023-04-10"},{"lineNumber":108,"author":{"gitId":"edures888"},"content":"                NINE_O_CLOCK_VALID.toLocalTime(), TWELVE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-04-10"},{"lineNumber":109,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":110,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":111,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":112,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-04-10"},{"lineNumber":113,"author":{"gitId":"Alvozyn"},"content":"    void testcheckClashingRecurringEvent() {","lastModifiedDate":"2023-04-10"},{"lineNumber":114,"author":{"gitId":"Alvozyn"},"content":"        recurringEventList.insert(new RecurringEventStub(\"Biking\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-04-10"},{"lineNumber":115,"author":{"gitId":"Alvozyn"},"content":"                TWO_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-04-10"},{"lineNumber":116,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":117,"author":{"gitId":"Alvozyn"},"content":"        String expected \u003d recurringEventList.checkClashingRecurringEvent(new RecurringEventStub(\"Swimming\",","lastModifiedDate":"2023-04-10"},{"lineNumber":118,"author":{"gitId":"Alvozyn"},"content":"                DayOfWeek.MONDAY, ONE_O_CLOCK_VALID.toLocalTime(), FOUR_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-04-10"},{"lineNumber":119,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":120,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(\"Event Conflict in Recurring Event List\\n\" + \"1. Biking\", expected);","lastModifiedDate":"2023-04-10"},{"lineNumber":121,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":122,"author":{"gitId":"Alvozyn"},"content":"        expected \u003d recurringEventList.checkClashingRecurringEvent(new RecurringEventStub(\"Swimming\",","lastModifiedDate":"2023-04-10"},{"lineNumber":123,"author":{"gitId":"Alvozyn"},"content":"                DayOfWeek.MONDAY, THREE_O_CLOCK_VALID.toLocalTime(), FOUR_O_CLOCK_VALID.toLocalTime()));","lastModifiedDate":"2023-04-10"},{"lineNumber":124,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":125,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(null, expected);","lastModifiedDate":"2023-04-10"},{"lineNumber":126,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":127,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":128,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":129,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Alvozyn":85,"edures888":13,"lyndonlim27":1,"clydelhui":30}},{"path":"src/test/java/seedu/address/model/event/RecurringEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.FOUR_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.MONDAY_SIX_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.THREE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.THURSDAY_TWELVE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.TWELVE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.TWO_O_CLOCK_VALID;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"public class RecurringEventTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    void occurBetween_test() {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent event \u003d new RecurringEvent(\"Biking\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"                TWELVE_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime());","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"        assertTrue(event.occursBetween(MONDAY_SIX_O_CLOCK_VALID, THURSDAY_TWELVE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    void notOccurBetween_test() {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent event \u003d new RecurringEvent(\"Skiing\", DayOfWeek.SATURDAY,","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"                TWO_O_CLOCK_VALID.toLocalTime(), FOUR_O_CLOCK_VALID.toLocalTime());","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"        assertFalse(event.occursBetween(MONDAY_SIX_O_CLOCK_VALID, THURSDAY_TWELVE_O_CLOCK_VALID));","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"    void toString_test() {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent event1 \u003d new RecurringEvent(\"Biking\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"                TWELVE_O_CLOCK_VALID.toLocalTime(), THREE_O_CLOCK_VALID.toLocalTime());","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent event2 \u003d new RecurringEvent(\"Skiing\", DayOfWeek.SATURDAY,","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"                TWO_O_CLOCK_VALID.toLocalTime(), FOUR_O_CLOCK_VALID.toLocalTime());","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"        String expected1 \u003d \"Biking on MONDAY from 12:00 to 15:00\";","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"        String expected2 \u003d \"Skiing on SATURDAY from 14:00 to 16:00\";","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(expected1, event1.toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(expected2, event2.toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Alvozyn":48}},{"path":"src/test/java/seedu/address/model/group/GroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.model.group;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"public class GroupTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"    private final Group group1 \u003d new Group(\"2103T\");","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"    private final Group group2 \u003d new Group(\"2101\");","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"    private final Group group1Duplicate \u003d new Group(\"2103T\");","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"    public void equals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"        assertFalse(group1.equals(group2));","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"        assertTrue(group1.equals(group1Duplicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"    public void validName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(Group.isValidGroupName(\"2103T\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"        assertFalse(Group.isValidGroupName(\"2103T*\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"    public void isSameGroup() {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        assertTrue(group1.isSameGroup(group1));","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        assertTrue(group1.isSameGroup(group1Duplicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        assertFalse(group1.isSameGroup(group2));","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"    public void output() {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"        Group group1 \u003d new Group(\"2103T\");","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(group1.toString().equals(\"[2103T]\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"        assertFalse(group1.toString().equals(\"[2101]\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"edures888":14,"lyndonlim27":25}},{"path":"src/test/java/seedu/address/model/group/UniqueGroupListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.model.group;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"public class UniqueGroupListTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    private final UniqueGroupList emptyGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    private final Group group \u003d new Group(\"2103T\");","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"    private final Group groupWithSameName \u003d new Group(\"2103T\");","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    private final Group anotherGroup \u003d new Group(\"2101\");","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    public void addGroupToList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"        UniqueGroupList ugl \u003d new UniqueGroupList();","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        assertFalse(ugl.contains(group));","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        ugl.add(group);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        assertTrue(ugl.contains(group));","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        assertTrue(ugl.contains(groupWithSameName));","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        assertThrows(NullPointerException.class, () -\u003e ugl.add(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e ugl.add(group));","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"    public void removeGroupFromList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"        UniqueGroupList ugl \u003d new UniqueGroupList();","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        ugl.add(group);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"        ugl.delete(group);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"        assertFalse(ugl.contains(group));","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        assertThrows(NullPointerException.class, () -\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"            ugl.delete(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"        });","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"        assertThrows(GroupNotFoundException.class, () -\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"            ugl.delete(group);","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"        });","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"    public void add_duplicateGroup_throwsDuplicateGroupException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"        UniqueGroupList ugl \u003d new UniqueGroupList();","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"        ugl.add(group);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e ugl.add(groupWithSameName));","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"        UniqueGroupList startUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"        expectedUniqueGroupList.add(group);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"        startUniqueGroupList.setGroups(expectedUniqueGroupList);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"        assertEquals(expectedUniqueGroupList, startUniqueGroupList);","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"    public void setGroups_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"        UniqueGroupList startUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"        startUniqueGroupList.add(group);","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"        List\u003cGroup\u003e groupList \u003d Collections.singletonList(anotherGroup);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"        startUniqueGroupList.setGroups(groupList);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"        expectedUniqueGroupList.add(anotherGroup);","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"        assertEquals(expectedUniqueGroupList, startUniqueGroupList);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"edures888"},"content":"    public void setGroups_listWithDuplicateGroups_throwsDuplicateGroupException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"edures888"},"content":"        List\u003cGroup\u003e listWithDuplicateGroups \u003d Arrays.asList(group, groupWithSameName);","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e emptyGroupList.setGroups(listWithDuplicateGroups));","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"edures888"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"edures888"},"content":"        UniqueGroupList ugl \u003d new UniqueGroupList();","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"edures888"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"edures888"},"content":"                -\u003e ugl.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"edures888":60,"lyndonlim27":27}},{"path":"src/test/java/seedu/address/model/person/MemberOfGroupPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"class MemberOfGroupPredicateTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"edures888"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"        MemberOfGroupPredicate firstPredicate \u003d new MemberOfGroupPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"        MemberOfGroupPredicate secondPredicate \u003d new MemberOfGroupPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"        MemberOfGroupPredicate firstPredicateCopy \u003d new MemberOfGroupPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        // different group -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"edures888"},"content":"        Group firstGroup \u003d new Group(\"CS2103\");","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"        Group secondGroup \u003d new Group(\"Friends\");","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"        Person personWithOneGroup \u003d new PersonBuilder().withName(\"First\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"edures888"},"content":"        personWithOneGroup.addGroup(firstGroup);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"edures888"},"content":"        Person personWithTwoGroups \u003d new PersonBuilder().withName(\"Second\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"edures888"},"content":"        personWithTwoGroups.addGroup(firstGroup);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"edures888"},"content":"        personWithTwoGroups.addGroup(secondGroup);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"edures888"},"content":"        // One keyword","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"edures888"},"content":"        MemberOfGroupPredicate predicate \u003d new MemberOfGroupPredicate(Collections.singletonList(\"CS2103\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"edures888"},"content":"        assertTrue(predicate.test(personWithOneGroup));","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"edures888"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"edures888"},"content":"        predicate \u003d new MemberOfGroupPredicate(Arrays.asList(\"Friends\", \"CS2103\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"edures888"},"content":"        assertTrue(predicate.test(personWithTwoGroups));","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"        predicate \u003d new MemberOfGroupPredicate(Arrays.asList(\"Friends\", \"CS2103\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"        assertTrue(predicate.test(personWithOneGroup));","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"        predicate \u003d new MemberOfGroupPredicate(Arrays.asList(\"friends\", \"cs2103\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"        assertTrue(predicate.test(personWithTwoGroups));","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"        Group firstGroup \u003d new Group(\"CS2103\");","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"        Person personWithOneGroup \u003d new PersonBuilder().withName(\"First\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"        personWithOneGroup.addGroup(firstGroup);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"edures888"},"content":"        MemberOfGroupPredicate predicate \u003d new MemberOfGroupPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"edures888"},"content":"        assertFalse(predicate.test(personWithOneGroup));","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"edures888"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"edures888"},"content":"        predicate \u003d new MemberOfGroupPredicate(Arrays.asList(\"NonMatching\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"edures888"},"content":"        assertFalse(predicate.test(personWithOneGroup));","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"edures888":83}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OWE_MONEY;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.exceptions.PersonAlreadyInGroupException;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.exceptions.PersonNotInGroupException;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_OWE_MONEY).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"lyndonlim27"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_OWE_MONEY).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"Alvozyn"},"content":"    public void addRecurringEvent() {","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"Alvozyn"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"Alvozyn"},"content":"        DayOfWeek dayOfWeek \u003d DayOfWeek.MONDAY;","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"Alvozyn"},"content":"        LocalTime start \u003d LocalTime.parse(\"12:00\");","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"Alvozyn"},"content":"        LocalTime end \u003d LocalTime.parse(\"15:00\");","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"Alvozyn"},"content":"        RecurringEvent recurringEvent \u003d new RecurringEvent(\"biking\", dayOfWeek, start, end);","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"Alvozyn"},"content":"        person.addRecurringEvent(recurringEvent);","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"Alvozyn"},"content":"        assertTrue(person.getRecurringEventList().contain(recurringEvent));","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"gmengqi"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"gmengqi"},"content":"    public void addIsolatedEvent() {","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"gmengqi"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":120,"author":{"gitId":"gmengqi"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(\"09/03/2023 14:00\", formatter);","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"gmengqi"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(\"09/03/2023 15:00\", formatter);","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"gmengqi"},"content":"        IsolatedEvent isolatedEvent \u003d new IsolatedEvent(\"biking\", start, end);","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"gmengqi"},"content":"        person.addIsolatedEvent(isolatedEvent);","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"gmengqi"},"content":"        assertTrue(person.getIsolatedEventList().contain(isolatedEvent));","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"lyndonlim27"},"content":"    public void add_remove_group() {","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"lyndonlim27"},"content":"        Person editedCarl \u003d new PersonBuilder(CARL).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"lyndonlim27"},"content":"        Group group \u003d new Group(\"2103T\");","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"lyndonlim27"},"content":"        editedCarl.addGroup(group);","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(editedCarl.getGroups().contains(group));","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"lyndonlim27"},"content":"        Assertions.assertThrows(PersonAlreadyInGroupException.class, () -\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"lyndonlim27"},"content":"            editedCarl.addGroup(group);","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"lyndonlim27"},"content":"        });","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"lyndonlim27"},"content":"        editedCarl.removeGroup(group);","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"lyndonlim27"},"content":"        assertTrue(!editedCarl.getGroups().contains(group));","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"lyndonlim27"},"content":"        Assertions.assertThrows(PersonNotInGroupException.class, () -\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"lyndonlim27"},"content":"            editedCarl.removeGroup(group);","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"lyndonlim27"},"content":"        });","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Alvozyn":17,"gmengqi":16,"lyndonlim27":23,"-":88}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OWE_MONEY;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_OWE_MONEY)","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"lyndonlim27"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_OWE_MONEY)","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"lyndonlim27":3,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"    private static final String INVALID_GROUP \u003d \"#2103T\";","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"    private static final List\u003cJsonAdaptedGroup\u003e VALID_GROUPS \u003d BENSON.getGroups().stream()","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"            .map(JsonAdaptedGroup::new)","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"    private static final List\u003cJsonAdaptedIsolatedEvent\u003e VALID_ISOLATED_EVENT_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"    private static final List\u003cJsonAdaptedRecurringEvent\u003e VALID_RECURRING_EVENT_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"                        VALID_GROUPS, VALID_ISOLATED_EVENT_LIST, VALID_RECURRING_EVENT_LIST);","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"                VALID_GROUPS, VALID_ISOLATED_EVENT_LIST, VALID_RECURRING_EVENT_LIST);","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"                        VALID_GROUPS, VALID_ISOLATED_EVENT_LIST, VALID_RECURRING_EVENT_LIST);","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"clydelhui"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"clydelhui"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"clydelhui"},"content":"                VALID_GROUPS, VALID_ISOLATED_EVENT_LIST, VALID_RECURRING_EVENT_LIST);","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"clydelhui"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"clydelhui"},"content":"                        VALID_GROUPS, VALID_ISOLATED_EVENT_LIST, VALID_RECURRING_EVENT_LIST);","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"clydelhui"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"clydelhui"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"clydelhui"},"content":"                VALID_GROUPS, VALID_ISOLATED_EVENT_LIST, VALID_RECURRING_EVENT_LIST);","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"clydelhui"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"clydelhui"},"content":"                        VALID_GROUPS, VALID_ISOLATED_EVENT_LIST, VALID_RECURRING_EVENT_LIST);","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"clydelhui"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"clydelhui"},"content":"                VALID_TAGS,","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"clydelhui"},"content":"                VALID_GROUPS, VALID_ISOLATED_EVENT_LIST, VALID_RECURRING_EVENT_LIST);","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"clydelhui"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags,","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"clydelhui"},"content":"                        VALID_GROUPS, VALID_ISOLATED_EVENT_LIST, VALID_RECURRING_EVENT_LIST);","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"lyndonlim27"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"lyndonlim27"},"content":"    public void toModelType_invalidGroups_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"lyndonlim27"},"content":"        List\u003cJsonAdaptedGroup\u003e invalidGroups \u003d new ArrayList\u003c\u003e(VALID_GROUPS);","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"lyndonlim27"},"content":"        invalidGroups.add(new JsonAdaptedGroup(INVALID_GROUP));","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"lyndonlim27"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"clydelhui"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"clydelhui"},"content":"                        invalidGroups, VALID_ISOLATED_EVENT_LIST, VALID_RECURRING_EVENT_LIST);","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lyndonlim27":12,"-":101,"clydelhui":26}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"            Exception {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"                .readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"                \"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lyndonlim27":6,"-":107}},{"path":"src/test/java/seedu/address/storage/JsonExportStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"public class JsonExportStorageTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonExportStorageTest\");","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"    public void exportPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"        assertThrows(NullPointerException.class, () -\u003e exportPerson(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"     * Saves {@code personToExport} at the specified {@code filePath}.","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"    private void exportPerson(Person personToExport, String filePath) {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"            new JsonExportStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"                    .exportPerson(personToExport, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"                : null;","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"        assertThrows(NullPointerException.class, () -\u003e exportPerson(","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"                new PersonBuilder(ALICE).build(), null));","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"lyndonlim27":48}},{"path":"src/test/java/seedu/address/storage/JsonImporterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clydelhui"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"clydelhui"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import seedu.address.storage.exceptions.JsonNotFoundException;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"class JsonImporterTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"clydelhui"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Path.of(\"src\", \"test\", \"data\", \"JsonImporterTest\");","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"clydelhui"},"content":"    void readData_validData_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"clydelhui"},"content":"        Path validData \u003d TEST_DATA_FOLDER.resolve(\"validImport.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"clydelhui"},"content":"        JsonImporter successImporter \u003d new JsonImporter(validData);","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"clydelhui"},"content":"            successImporter.readData();","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"clydelhui"},"content":"        } catch (DataConversionException | JsonNotFoundException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"clydelhui"},"content":"            throw new AssertionError(\"readData should run successfully\");","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"clydelhui"},"content":"    void readData_validDataWithTagsGroups_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"clydelhui"},"content":"        Path validDataTagGroup \u003d TEST_DATA_FOLDER.resolve(\"validImportWithTagsGroups.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"clydelhui"},"content":"        JsonImporter successImporterTagGroup \u003d new JsonImporter(validDataTagGroup);","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"clydelhui"},"content":"            successImporterTagGroup.readData();","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"clydelhui"},"content":"        } catch (DataConversionException | JsonNotFoundException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"clydelhui"},"content":"            throw new AssertionError(\"readData should run successfully\");","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"clydelhui"},"content":"    void readData_invalidFilePath_throwsEmptyAddressBookException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"clydelhui"},"content":"        Path invalidPath \u003d TEST_DATA_FOLDER.resolve(\"fileDoesNotExist.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"clydelhui"},"content":"        JsonImporter invalidImporter \u003d new JsonImporter(invalidPath);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"clydelhui"},"content":"            invalidImporter.readData();","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"clydelhui"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"clydelhui"},"content":"            throw new AssertionError(\"readData should not throw DataConversionException.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"clydelhui"},"content":"        } catch (JsonNotFoundException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"clydelhui"},"content":"            return;","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"        throw new AssertionError(\"readData did not throw an Exception\");","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"clydelhui"},"content":"    void readData_invalidDataEmpty_throwsDataConversionException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"clydelhui"},"content":"        Path emptyData \u003d TEST_DATA_FOLDER.resolve(\"invalidImportEmpty.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"clydelhui"},"content":"        JsonImporter emptyImporter \u003d new JsonImporter(emptyData);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"clydelhui"},"content":"            emptyImporter.readData();","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"clydelhui"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"clydelhui"},"content":"            return;","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"clydelhui"},"content":"        } catch (JsonNotFoundException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"            throw new AssertionError(\"readData should not throw DataConversionException\");","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"clydelhui"},"content":"        throw new AssertionError(\"readData should not run successfully\");","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"clydelhui"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"clydelhui"},"content":"    void readData_invalidDataIncorrectFormat_throwsDataConversionException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"clydelhui"},"content":"        Path invalidData \u003d TEST_DATA_FOLDER.resolve(\"invalidImportIncorrectFormat.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"clydelhui"},"content":"        JsonImporter invalidImporter \u003d new JsonImporter(invalidData);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"clydelhui"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"clydelhui"},"content":"            invalidImporter.readData();","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"clydelhui"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"clydelhui"},"content":"            return;","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"clydelhui"},"content":"        } catch (JsonNotFoundException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"clydelhui"},"content":"            throw new AssertionError(\"readData should not throw JsonNotFoundException\");","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"clydelhui"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"clydelhui"},"content":"        throw new AssertionError(\"readData should not run successfully\");","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"clydelhui"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"clydelhui":82}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    private static final Path DUPLICATE_GROUPS_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateGroupsAddressBook.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"    public void toModelType_duplicateGroups_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_GROUPS_FILE,","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_GROUP,","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lyndonlim27":9,"-":47}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"lyndonlim27"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"wheregottime.json\"));","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"lyndonlim27":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"        JsonExportStorage exportStorage \u003d new JsonExportStorage(getTempFilePath(\"ex\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, exportStorage);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lyndonlim27":2,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"     * Adds a new {@code Group} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"    public AddressBookBuilder withGroup(Group group) {","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"        return this;","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"edures888":9,"-":34}},{"path":"src/test/java/seedu/address/testutil/EditEventDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import seedu.address.logic.commands.EditIsolatedEventCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.logic.commands.EditRecurringEventCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"public class EditEventDescriptorBuilder {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"    private EditIsolatedEventCommand.EditEventDescriptor descriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    private EditRecurringEventCommand.EditEventDescriptor recurringDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"     * Event builder for recurring events","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"    public EditEventDescriptorBuilder() {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"        descriptor \u003d new EditIsolatedEventCommand.EditEventDescriptor();","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        recurringDescriptor \u003d new EditRecurringEventCommand.EditEventDescriptor();","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"     * Event builder for isolated events","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"    public EditEventDescriptorBuilder(EditIsolatedEventCommand.EditEventDescriptor descriptor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"        this.descriptor \u003d new EditIsolatedEventCommand.EditEventDescriptor(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"    public EditEventDescriptorBuilder(EditRecurringEventCommand.EditEventDescriptor descriptor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"        this.recurringDescriptor \u003d new EditRecurringEventCommand.EditEventDescriptor(descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"gmengqi"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"gmengqi"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"gmengqi"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"gmengqi"},"content":"    public EditEventDescriptorBuilder(String eventName, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"gmengqi"},"content":"        descriptor \u003d new EditIsolatedEventCommand.EditEventDescriptor();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"gmengqi"},"content":"        descriptor.setEventName(eventName);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"gmengqi"},"content":"        descriptor.setEndDate(endDate);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"gmengqi"},"content":"        descriptor.setStartDate(startDate);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"     * eturns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details for recurring list","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"     * @param eventName","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"     * @param dayOfWeek","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"     * @param startTime","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"     * @param endTime","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"    public EditEventDescriptorBuilder(String eventName, DayOfWeek dayOfWeek, LocalTime startTime,","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"                                      LocalTime endTime) {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"        recurringDescriptor \u003d new EditRecurringEventCommand.EditEventDescriptor();","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"        recurringDescriptor.setEventName(eventName);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"        recurringDescriptor.setDayOfWeek(dayOfWeek);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"        recurringDescriptor.setStartTime(startTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"        recurringDescriptor.setEndTime(endTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"gmengqi"},"content":"    public EditIsolatedEventCommand.EditEventDescriptor build() {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"gmengqi"},"content":"        return descriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"gmengqi"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"    public EditRecurringEventCommand.EditEventDescriptor recurringbuild() {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"        return recurringDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Alvozyn":36,"gmengqi":35}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"        descriptor.setGroups(person.getGroups());","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"lyndonlim27"},"content":"     * Parses the {@code groups} into a {@code Set\u003cGroup\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"lyndonlim27"},"content":"     * that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"lyndonlim27"},"content":"    public EditPersonDescriptorBuilder withGroups(String... groups) {","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"lyndonlim27"},"content":"        Set\u003cGroup\u003e groupSet \u003d Stream.of(groups).map(Group::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"lyndonlim27"},"content":"        descriptor.setGroups(groupSet);","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"lyndonlim27"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"lyndonlim27":11,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"clydelhui"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.IsolatedEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"clydelhui"},"content":"import seedu.address.model.event.RecurringEventList;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"    private Set\u003cGroup\u003e groups;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"clydelhui"},"content":"    private Set\u003cIsolatedEvent\u003e isolatedEvents;","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"clydelhui"},"content":"    private Set\u003cRecurringEvent\u003e recurringEvents;","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"        groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"clydelhui"},"content":"        isolatedEvents \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"clydelhui"},"content":"        recurringEvents \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"        groups \u003d new HashSet\u003c\u003e(personToCopy.getGroups());","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"clydelhui"},"content":"        isolatedEvents \u003d new TreeSet\u003c\u003e(personToCopy.getIsolatedEventList().getSet());","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"clydelhui"},"content":"        recurringEvents \u003d new TreeSet\u003c\u003e(personToCopy.getRecurringEventList().getSet());","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"lyndonlim27"},"content":"     * Parses the {@code groups} into a {@code Set\u003cGroup\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"lyndonlim27"},"content":"    public PersonBuilder withGroups(String ... groups) {","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"lyndonlim27"},"content":"        this.groups \u003d SampleDataUtil.getGroupSet(groups);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"lyndonlim27"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"clydelhui"},"content":"     * Sets the {@code IsolatedEventList} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"clydelhui"},"content":"    public PersonBuilder withIsolatedEventList(Set\u003cIsolatedEvent\u003e isolatedEvents) {","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"clydelhui"},"content":"        this.isolatedEvents \u003d isolatedEvents;","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"clydelhui"},"content":"        return this;","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"clydelhui"},"content":"     * Sets the {@code RecurringEventList} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"clydelhui"},"content":"    public PersonBuilder withRecurringEventList(Set\u003cRecurringEvent\u003e recurringEvents) {","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"clydelhui"},"content":"        this.recurringEvents \u003d recurringEvents;","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"clydelhui"},"content":"        return this;","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"clydelhui"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"clydelhui"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"clydelhui"},"content":"     * Builds a person with the data entered into the {@code PersonBuilder}","lastModifiedDate":"2023-04-07"},{"lineNumber":133,"author":{"gitId":"clydelhui"},"content":"     * @return A {@code Person} that has the details stored in the {@code PersonBuilder}.","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"clydelhui"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":136,"author":{"gitId":"clydelhui"},"content":"        IsolatedEventList isolatedEventList \u003d new IsolatedEventList();","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"clydelhui"},"content":"        RecurringEventList recurringEventList \u003d new RecurringEventList();","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"clydelhui"},"content":"        isolatedEventList.addAll(isolatedEvents);","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"clydelhui"},"content":"        recurringEventList.addAll(recurringEvents);","lastModifiedDate":"2023-04-07"},{"lineNumber":141,"author":{"gitId":"clydelhui"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":142,"author":{"gitId":"clydelhui"},"content":"        return new Person(name, phone, email, address, tags, groups, isolatedEventList, recurringEventList);","lastModifiedDate":"2023-04-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"lyndonlim27":12,"-":95,"clydelhui":38}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"        if (descriptor.getGroups().isPresent()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"            sb.append(\" \");","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"            Set\u003cGroup\u003e groups \u003d descriptor.getGroups().get();","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"            if (groups.isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"                sb.append(PREFIX_GROUP);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"            } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"lyndonlim27"},"content":"                groups.forEach(s -\u003e sb.append(PREFIX_GROUP).append(s.groupName).append(\" \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"lyndonlim27":13,"-":62}},{"path":"src/test/java/seedu/address/testutil/SampleDateTimeUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":" * A utility class containing a list of {@code LocalDateTime} objects to be used in tests.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"public class SampleDateTimeUtil {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"    private static final DateTimeFormatter newFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"    public static final LocalDateTime NINE_O_CLOCK_VALID \u003d LocalDateTime.parse(\"09/03/2024 09:00\", newFormatter);","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"    public static final LocalDateTime TWELVE_O_CLOCK_VALID \u003d LocalDateTime.parse(\"09/03/2024 12:00\", newFormatter);","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"gmengqi"},"content":"    public static final LocalDateTime ONE_O_CLOCK_VALID \u003d LocalDateTime.parse(\"09/03/2024 13:00\", newFormatter);","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"gmengqi"},"content":"    public static final LocalDateTime TWO_O_CLOCK_VALID \u003d LocalDateTime.parse(\"09/03/2024 14:00\", newFormatter);","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"gmengqi"},"content":"    public static final LocalDateTime THREE_O_CLOCK_VALID \u003d LocalDateTime.parse(\"09/03/2024 15:00\", newFormatter);","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"gmengqi"},"content":"    public static final LocalDateTime FOUR_O_CLOCK_VALID \u003d LocalDateTime.parse(\"09/03/2024 16:00\", newFormatter);","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"    public static final LocalDateTime FIVE_O_CLOCK_VALID \u003d LocalDateTime.parse(\"09/03/2024 17:00\", newFormatter);","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"gmengqi"},"content":"    public static final LocalDateTime SIX_O_CLOCK_VALID \u003d LocalDateTime.parse(\"09/03/2024 18:00\", newFormatter);","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    public static final LocalDateTime MONDAY_SIX_O_CLOCK_VALID \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"            LocalDateTime.parse(\"06/03/2023 06:00\", newFormatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"    public static final LocalDateTime THURSDAY_TWELVE_O_CLOCK_VALID \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"            LocalDateTime.parse(\"09/03/2023 12:00\", newFormatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Alvozyn":8,"gmengqi":20}},{"path":"src/test/java/seedu/address/testutil/SampleDeleteEventInput.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":" * A utility class containing a list of {@code String } objects of user inputs for ie_delete to be used in tests.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"gmengqi"},"content":"public class SampleDeleteEventInput {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"    public static final String INVALID_INPUT_CONTAIN_ALPHABET \u003d \"1\" + \"HI\";","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"gmengqi"},"content":"    public static final String WRONG_INPUT_FORMAT \u003d \"1\" + \"1\";","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"gmengqi":12}},{"path":"src/test/java/seedu/address/testutil/SampleEventUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gmengqi"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAYOFWEEK;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATETIME;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ISOEVENT;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRINGEVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATETIME;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.FIVE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.FOUR_O_CLOCK_VALID;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.SIX_O_CLOCK_VALID;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.THREE_O_CLOCK_VALID;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"gmengqi"},"content":"import static seedu.address.testutil.SampleDateTimeUtil.TWO_O_CLOCK_VALID;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-04-10"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"gmengqi"},"content":"import seedu.address.model.event.IsolatedEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"gmengqi"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"gmengqi"},"content":" * A utility class containing a list of {@code String } objects of user inputs for event_create to be used in tests.","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"gmengqi"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"gmengqi"},"content":"public class SampleEventUtil {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"gmengqi"},"content":"    public static final String BIKING_ISOLATED_EVENT \u003d \"1\" + PREFIX_ISOEVENT + \"biking\" + PREFIX_STARTDATETIME","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"gmengqi"},"content":"            + \"09/03/2023 14:00\" + PREFIX_ENDDATETIME + \"09/03/2023 15:00\";","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"gmengqi"},"content":"    public static final String MISSING_INDEX_ISOLATED_EVENT \u003d PREFIX_ISOEVENT + \"biking\" + PREFIX_STARTDATETIME","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"gmengqi"},"content":"            + \"09/03/2023 14:00\" + PREFIX_ENDDATETIME + \"09/03/2023 15:00\";","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"gmengqi"},"content":"    public static final String MISSING_EVENT_NAME_ISOLATED_EVENT \u003d \"1\" + PREFIX_ISOEVENT + PREFIX_STARTDATETIME","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"gmengqi"},"content":"            + \"09/03/2023 14:00\" + PREFIX_ENDDATETIME + \"09/03/2023 15:00\";","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"gmengqi"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"gmengqi"},"content":"    public static final String INVALID_DATE_FORMAT_ISOLATED_EVENT \u003d \"1\" + PREFIX_ISOEVENT + \"biking\"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"gmengqi"},"content":"            + PREFIX_STARTDATETIME + \"09-03-2023 14:00\" + PREFIX_ENDDATETIME + \"09/03/2023 15:00\";","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"    public static final IsolatedEvent SKIING_ISOLATED_EVENT \u003d new IsolatedEvent(\"Skiing\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"            THREE_O_CLOCK_VALID);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"    public static final IsolatedEvent SLEEPING_ISOLATED_EVENT \u003d new IsolatedEvent(\"Sleep\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"            THREE_O_CLOCK_VALID);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"    public static final IsolatedEvent GYM_ISOLATED_EVENT \u003d new IsolatedEvent(\"Gym\", TWO_O_CLOCK_VALID,","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"            FOUR_O_CLOCK_VALID);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"    public static final String MISSING_INDEX_RECURRING_EVENT \u003d PREFIX_RECURRINGEVENT + \"biking\" + PREFIX_DAYOFWEEK","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"            + \"MONDAY\" + PREFIX_STARTDATETIME + \"18:00\" + PREFIX_ENDDATETIME + \"20:00\";","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"    public static final String MISSING_DAY_RECURRING_EVENT \u003d PREFIX_RECURRINGEVENT + \"biking\" + PREFIX_STARTDATETIME","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"            + \"18:00\" + PREFIX_ENDDATETIME + \"20:00\";","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"    public static final String INVALID_TIME_RECURRING_EVENT \u003d PREFIX_RECURRINGEVENT + \"biking\" + PREFIX_DAYOFWEEK","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"            + \"MONDAY\" + PREFIX_STARTDATETIME + \"18:00\" + PREFIX_ENDDATETIME + \"20\";","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"    public static final RecurringEvent BIKING_RECURRING_EVENT \u003d new RecurringEvent(\"biking\", DayOfWeek.MONDAY,","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"            TWO_O_CLOCK_VALID.toLocalTime(), FOUR_O_CLOCK_VALID.toLocalTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"    public static final RecurringEvent SWIMMING_RECURRING_EVENT \u003d new RecurringEvent(\"swimming\",","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"            DayOfWeek.MONDAY, FOUR_O_CLOCK_VALID.toLocalTime(), FIVE_O_CLOCK_VALID.toLocalTime());","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"    public static final RecurringEvent JOGGING_RECURRING_EVENT \u003d new RecurringEvent(\"jogging\",","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"            DayOfWeek.MONDAY, FOUR_O_CLOCK_VALID.toLocalTime(), SIX_O_CLOCK_VALID.toLocalTime());","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"edures888"},"content":"    public static final RecurringEvent HALF_DAY_RECURRING_EVENT \u003d new RecurringEvent(\"Half Day Event\",","lastModifiedDate":"2023-04-10"},{"lineNumber":61,"author":{"gitId":"edures888"},"content":"            DayOfWeek.MONDAY, LocalTime.MIN, LocalTime.NOON);","lastModifiedDate":"2023-04-10"},{"lineNumber":62,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":63,"author":{"gitId":"edures888"},"content":"    public static IsolatedEvent getNearFutureIsolatedEvent() {","lastModifiedDate":"2023-04-10"},{"lineNumber":64,"author":{"gitId":"edures888"},"content":"        LocalDate nearDate \u003d LocalDate.now().plusWeeks(1);","lastModifiedDate":"2023-04-10"},{"lineNumber":65,"author":{"gitId":"edures888"},"content":"        // Force date to be a Tuesday","lastModifiedDate":"2023-04-10"},{"lineNumber":66,"author":{"gitId":"edures888"},"content":"        nearDate \u003d nearDate.plusDays(7 + 2 - nearDate.getDayOfWeek().getValue());","lastModifiedDate":"2023-04-10"},{"lineNumber":67,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":68,"author":{"gitId":"edures888"},"content":"        return new IsolatedEvent(\"Near Event\", nearDate.atTime(0, 0),","lastModifiedDate":"2023-04-10"},{"lineNumber":69,"author":{"gitId":"edures888"},"content":"                nearDate.plusDays(1).atTime(0, 0));","lastModifiedDate":"2023-04-10"},{"lineNumber":70,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":71,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":72,"author":{"gitId":"edures888"},"content":"    public static IsolatedEvent getFarFutureIsolatedEvent() {","lastModifiedDate":"2023-04-10"},{"lineNumber":73,"author":{"gitId":"edures888"},"content":"        LocalDate farDate \u003d LocalDate.now().plusWeeks(4);","lastModifiedDate":"2023-04-10"},{"lineNumber":74,"author":{"gitId":"edures888"},"content":"        // Force date to be a Tuesday","lastModifiedDate":"2023-04-10"},{"lineNumber":75,"author":{"gitId":"edures888"},"content":"        farDate \u003d farDate.plusDays(7 + 2 - farDate.getDayOfWeek().getValue());","lastModifiedDate":"2023-04-10"},{"lineNumber":76,"author":{"gitId":"edures888"},"content":"        return new IsolatedEvent(\"Near Event\", farDate.atTime(0, 0),","lastModifiedDate":"2023-04-10"},{"lineNumber":77,"author":{"gitId":"edures888"},"content":"                farDate.atTime(23, 0));","lastModifiedDate":"2023-04-10"},{"lineNumber":78,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":79,"author":{"gitId":"gmengqi"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Alvozyn":31,"gmengqi":27,"edures888":21}},{"path":"src/test/java/seedu/address/testutil/TypicalGroups.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"edures888"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"edures888"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"edures888"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"edures888"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"edures888"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"edures888"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"edures888"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"edures888"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":" * A utility class containing a list of {@code Group} objects to be used in tests.","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"edures888"},"content":"public class TypicalGroups {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"edures888"},"content":"    public static final Group FRIENDS_GROUP \u003d new Group(\"Friends\");","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"edures888"},"content":"    public static final Group CS2103_GROUP \u003d new Group(\"CS2103\");","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"    public static final Group CS2101_GROUP \u003d new Group(\"CS2101\");","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    public static final Group CS2040_GROUP \u003d new Group(\"CS2040\");","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"edures888"},"content":"    public static final Person CS2103_MEMBER \u003d new PersonBuilder().withGroups(\"CS2103\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"edures888"},"content":"    private TypicalGroups() {} // prevents instantiation","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"edures888"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"edures888"},"content":"     * Returns an {@code AddressBook} with all the typical groups.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"edures888"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"edures888"},"content":"    public static AddressBook getTypicalAddressBookWithEmptyGroups() {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"edures888"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"edures888"},"content":"        for (Group group : getTypicalGroups()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"edures888"},"content":"            ab.addGroup(group);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"edures888"},"content":"        return ab;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"edures888"},"content":"    public static AddressBook getTypicalAddressBookWithSingleMember() {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"edures888"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"edures888"},"content":"        for (Group group : getTypicalGroups()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"edures888"},"content":"            ab.addGroup(group);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"edures888"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"edures888"},"content":"        ab.addPerson(CS2103_MEMBER);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"edures888"},"content":"        return ab;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"edures888"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"edures888"},"content":"    public static List\u003cGroup\u003e getTypicalGroups() {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CS2040_GROUP, CS2101_GROUP, CS2103_GROUP, FRIENDS_GROUP));","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"edures888"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"edures888"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"edures888":43,"lyndonlim27":3}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"edures888"},"content":"    public static final Index INDEX_FIRST_GENERIC_ITEM \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"edures888"},"content":"    public static final Index INDEX_SECOND_GENERIC_ITEM \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    public static final Index INDEX_THIRD_EVENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"    public static final Index INDEX_FIRST_GROUP \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    public static final Index INDEX_SECOND_GROUP \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"    public static final Index INDEX_THIRD_GROUP \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Alvozyn":4,"edures888":2,"lyndonlim27":3,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_CS2103;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BORROWED_TEXTBOOK;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OWE_MONEY;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"            .withTags(\"Borrowed textbook\")","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"            .withGroups(\"CS2101\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"            .withTags(\"Owes money\", \"Waiting for reply\")","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"            .withGroups(\"CS2103\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withGroups(\"CS2103\" , \"CS2101\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"Borrowed Pen\").withGroups(\"CS2040\")","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"            .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_BORROWED_TEXTBOOK)","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"            .withGroups(VALID_GROUP_CS2103).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"            .withTags(VALID_TAG_OWE_MONEY, VALID_TAG_BORROWED_TEXTBOOK)","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"            .withGroups(VALID_GROUP_CS2103).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":79,"author":{"gitId":"lyndonlim27"},"content":"        for (Group group : TypicalGroups.getTypicalGroups()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"lyndonlim27"},"content":"            ab.addGroup(group);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"lyndonlim27":21,"-":67}}]
