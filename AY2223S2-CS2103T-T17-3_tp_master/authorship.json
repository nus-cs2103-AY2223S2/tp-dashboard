[{"path":"docs/team/0x787af25e.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"0x787af25e"},"content":"# Gong Chen Jun\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"0x787af25e"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"0x787af25e"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"0x787af25e"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"0x787af25e"},"content":"-   **New Feature**: to be added soon","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"0x787af25e"},"content":"-   **New Feature**: to be added soon","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"0x787af25e"},"content":"    ","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"0x787af25e"},"content":"-   **Code contributed**:  to be added soon","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"0x787af25e"},"content":"    ","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"0x787af25e"},"content":"-   **Project management**: to be added soon","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"0x787af25e"},"content":"-   **Enhancements to existing features**:","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"0x787af25e"},"content":"    -   Expanded the help command","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"0x787af25e"},"content":"  ","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"0x787af25e"},"content":"-   **Documentation**: to be added soon","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"0x787af25e":16}},{"path":"src/main/java/seedu/address/commons/util/CsvUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"public class CsvUtil {","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CsvUtil.class);","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"     * Returns the csv data from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid csv file.","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    public static Optional\u003cString\u003e readCsvFile(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"            logger.info(\"Csv file \" + filePath + \" not found\");","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"        String csvData;","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"            csvData \u003d FileUtil.readFromFile(filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"            logger.warning(\"Error reading from csvFile file \" + filePath + \": \" + e);","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"        return Optional.of(csvData);","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"     * Saves a csv String representation to the specified file.","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"     * @param csvFile cannot be null","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"     * @param toWrite cannot be null","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"    public static void saveCsvFile(Path csvFile, String toWrite) throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"        requireNonNull(csvFile);","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"        requireNonNull(toWrite);","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"        FileUtil.writeToFile(csvFile, toWrite);","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"     * Converts a String into a csv-friendly String.","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"     * @param str String to be converted.","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"winsonheng"},"content":"     * @return The csv-friendly String.","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"winsonheng"},"content":"    public static String toCsvField(String str) {","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"winsonheng"},"content":"        str \u003d str.replaceAll(\"\\\"\", \"\\\"\\\"\");","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"winsonheng"},"content":"        if (str.contains(\",\")) {","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"winsonheng"},"content":"            str \u003d \"\\\"\" + str + \"\\\"\";","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"winsonheng"},"content":"        return str;","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"winsonheng":75}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import java.io.File;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import javax.swing.JFileChooser;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import javax.swing.filechooser.FileFilter;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"import javax.swing.filechooser.FileNameExtensionFilter;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"winsonheng"},"content":"     * Returns the file from a JFileChooser that includes the extension from the file filter.","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"winsonheng"},"content":"     * @param fileChooser The JFileChoose used.","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"winsonheng"},"content":"     * @return The file with the given extension.","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"winsonheng"},"content":"    public static File getSelectedFileWithExtension(JFileChooser fileChooser) {","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"winsonheng"},"content":"        File file \u003d fileChooser.getSelectedFile();","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"winsonheng"},"content":"        FileFilter fileFilter \u003d fileChooser.getFileFilter();","lastModifiedDate":"2023-02-25"},{"lineNumber":95,"author":{"gitId":"winsonheng"},"content":"        if (fileFilter instanceof FileNameExtensionFilter) {","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"winsonheng"},"content":"            String[] extensions \u003d ((FileNameExtensionFilter) fileFilter).getExtensions();","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"winsonheng"},"content":"            String fileName \u003d file.getName().toLowerCase();","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"winsonheng"},"content":"            for (String ext : extensions) {","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"winsonheng"},"content":"                if (fileName.endsWith(\u0027.\u0027 + ext.toLowerCase())) {","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"winsonheng"},"content":"                    return file;","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"winsonheng"},"content":"                }","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"winsonheng"},"content":"            file \u003d new File(file.toString() + \u0027.\u0027 + extensions[0]);","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":105,"author":{"gitId":"winsonheng"},"content":"        return file;","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"winsonheng":25,"-":83}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import java.io.File;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import javax.swing.JFileChooser;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import javax.swing.JFrame;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import javax.swing.JOptionPane;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import javax.swing.filechooser.FileNameExtensionFilter;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"import seedu.address.storage.CsvAddressBookStorage;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":" * Exports to a csv file at a location specified by the user.","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exports data into a csv file at \"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"            + \"a location of your choice.\";","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"    private static final String FILE_EXTENSION \u003d \"csv\";","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"        JFrame parentComponent \u003d new JFrame();","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"        JFileChooser fileChooser \u003d new JFileChooser();","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"        FileNameExtensionFilter filter \u003d new FileNameExtensionFilter(\"CSV Files\", \"csv\");","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"        fileChooser.setFileFilter(filter);","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        int returnVal \u003d fileChooser.showOpenDialog(parentComponent);","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"        if (returnVal \u003d\u003d JFileChooser.APPROVE_OPTION) {","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"            File fileToSave \u003d FileUtil.getSelectedFileWithExtension(fileChooser);","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"            try {","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"                AddressBookStorage addressBookStorage \u003d new CsvAddressBookStorage(fileToSave.toPath());","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"                addressBookStorage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"                JOptionPane.showMessageDialog(null, \"Exported to \" + fileToSave);","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"                JOptionPane.showMessageDialog(null, e);","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"        return new CommandResult(\"Exported to file\");","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"            return true;","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"        if (!(other instanceof ExportCommand)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"            return false;","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"        ExportCommand e \u003d (ExportCommand) other;","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"        return true;","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"winsonheng":60}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"winsonheng"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"winsonheng"},"content":"            return new ExportCommand();","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"winsonheng":4,"-":76}},{"path":"src/main/java/seedu/address/storage/CsvAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.util.CsvUtil;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":" * Csv-friendly version of {@link Person}.","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"class CsvAdaptedPerson {","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"    private final String name;","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    private final String phone;","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    private final String email;","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    private final String address;","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    private final List\u003cCsvAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"     * Constructs a {@code CsvAdaptedPerson} with the given person details.","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"    public CsvAdaptedPerson(String str) {","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"        String[] tokens \u003d str.split(\",\");","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"        this.name \u003d tokens[0];","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"        this.phone \u003d tokens[1];","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"        this.email \u003d tokens[2];","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"        this.address \u003d tokens[3];","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        for (int i \u003d 4; i \u003c tokens.length; ++i) {","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"            this.tagged.add(new CsvAdaptedTag(tokens[i]));","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"    public CsvAdaptedPerson(Person source) {","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"        name \u003d CsvUtil.toCsvField(source.getName().fullName);","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"        phone \u003d CsvUtil.toCsvField(source.getPhone().value);","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"        email \u003d CsvUtil.toCsvField(source.getEmail().value);","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"        address \u003d CsvUtil.toCsvField(source.getAddress().value);","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"                .map(CsvAdaptedTag::new)","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"     * Converts this Csv-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"winsonheng"},"content":"        for (CsvAdaptedTag tag : tagged) {","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"winsonheng"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"winsonheng"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"winsonheng"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"winsonheng"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"winsonheng"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"winsonheng"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"winsonheng"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"winsonheng"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"winsonheng"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"winsonheng"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"winsonheng"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2023-02-25"},{"lineNumber":95,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"winsonheng"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"winsonheng"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"winsonheng"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"winsonheng"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":105,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"winsonheng"},"content":"        return String.join(\",\", name, phone, email, address,","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"winsonheng"},"content":"                String.join(\",\", tagged.stream()","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"winsonheng"},"content":"                        .\u003cString\u003emap(tag -\u003e tag.toString()).collect(Collectors.toList())));","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":111,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":112,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"winsonheng":112}},{"path":"src/main/java/seedu/address/storage/CsvAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.util.CsvUtil;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"class CsvAdaptedTag {","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"    private final String tagName;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"     * Constructs a {@code CsvAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"    public CsvAdaptedTag(String tagName) {","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        this.tagName \u003d CsvUtil.toCsvField(tagName);","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"     * Converts a given {@code Tag} into this class for CSV use.","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    public CsvAdaptedTag(Tag source) {","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"    public String getTagName() {","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"        return tagName;","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"     * Converts this CSV-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"        return new Tag(tagName);","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"        return getTagName();","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"winsonheng":50}},{"path":"src/main/java/seedu/address/storage/CsvAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.util.CsvUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":" * A class to access or store AddressBook data stored as a csv file on the hard disk.","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"public class CsvAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    private Path filePath;","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"    public CsvAddressBookStorage(Path filePath) {","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"        return filePath;","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        // To be completed in a later version","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"        return Optional.empty();","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"        // To be completed in a later version","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        return Optional.empty();","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"        CsvUtil.saveCsvFile(filePath, new CsvSerializableAddressBook(addressBook).toString());","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"winsonheng":55}},{"path":"src/main/java/seedu/address/storage/CsvSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":" * An Immutable AddressBook that is serializable to CSV format.","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"class CsvSerializableAddressBook {","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    private static final String CSV_HEADERS \u003d \"Name,Phone,Email,Address,Tags\\n\";","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"    private final List\u003cCsvAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"     * Constructs a {@code CsvSerializableAddressBook} with the given persons.","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    public CsvSerializableAddressBook(List\u003cCsvAdaptedPerson\u003e persons) {","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Csv use.","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"     * @param source future changes to this will not affect the created {@code CsvSerializableAddressBook}.","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"    public CsvSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"        persons.addAll(source.getPersonList().stream().map(CsvAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"        for (CsvAdaptedPerson csvAdaptedPerson : persons) {","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"            Person person \u003d csvAdaptedPerson.toModelType();","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"        return addressBook;","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"        return CSV_HEADERS + String.join(\"\\n\", persons.stream()","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"                .\u003cString\u003emap(person -\u003e person.toString()).collect(Collectors.toList()));","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"winsonheng":62}}]
